(function() {
    "use strict";

    function e(e) {
        return "function" == typeof e || "object" == typeof e && null !== e
    }

    function t(e) {
        return "function" == typeof e
    }

    function r(e) {
        G = e
    }

    function n(e) {
        Y = e
    }

    function i() {
        return function() {
            process.nextTick(l)
        }
    }

    function o() {
        return function() {
            j(l)
        }
    }

    function a() {
        var e = 0,
            t = new Z(l),
            r = document.createTextNode("");
        return t.observe(r, {
                characterData: !0
            }),
            function() {
                r.data = e = ++e % 2
            }
    }

    function s() {
        var e = new MessageChannel;
        return e.port1.onmessage = l,
            function() {
                e.port2.postMessage(0)
            }
    }

    function u() {
        return function() {
            setTimeout(l, 1)
        }
    }

    function l() {
        for (var e = 0; X > e; e += 2) {
            var t = ee[e],
                r = ee[e + 1];
            t(r), ee[e] = void 0, ee[e + 1] = void 0
        }
        X = 0
    }

    function c() {
        try {
            var e = require,
                t = e("vertx");
            return j = t.runOnLoop || t.runOnContext, o()
        } catch (r) {
            return u()
        }
    }

    function h(e, t) {
        var r = this,
            n = new this.constructor(d);
        void 0 === n[ne] && I(n);
        var i = r._state;
        if (i) {
            var o = arguments[i - 1];
            Y(function() {
                P(i, n, o, r._result)
            })
        } else S(r, n, e, t);
        return n
    }

    function p(e) {
        var t = this;
        if (e && "object" == typeof e && e.constructor === t) return e;
        var r = new t(d);
        return _(r, e), r
    }

    function d() {}

    function f() {
        return new TypeError("You cannot resolve a promise with itself")
    }

    function m() {
        return new TypeError("A promises callback cannot return that same promise.")
    }

    function v(e) {
        try {
            return e.then
        } catch (t) {
            return se.error = t, se
        }
    }

    function g(e, t, r, n) {
        try {
            e.call(t, r, n)
        } catch (i) {
            return i
        }
    }

    function y(e, t, r) {
        Y(function(e) {
            var n = !1,
                i = g(r, t, function(r) {
                    n || (n = !0, t !== r ? _(e, r) : C(e, r))
                }, function(t) {
                    n || (n = !0, E(e, t))
                }, "Settle: " + (e._label || " unknown promise"));
            !n && i && (n = !0, E(e, i))
        }, e)
    }

    function b(e, t) {
        t._state === oe ? C(e, t._result) : t._state === ae ? E(e, t._result) : S(t, void 0, function(t) {
            _(e, t)
        }, function(t) {
            E(e, t)
        })
    }

    function x(e, r, n) {
        r.constructor === e.constructor && n === te && constructor.resolve === re ? b(e, r) : n === se ? E(e, se.error) : void 0 === n ? C(e, r) : t(n) ? y(e, r, n) : C(e, r)
    }

    function _(t, r) {
        t === r ? E(t, f()) : e(r) ? x(t, r, v(r)) : C(t, r)
    }

    function w(e) {
        e._onerror && e._onerror(e._result), T(e)
    }

    function C(e, t) {
        e._state === ie && (e._result = t, e._state = oe, 0 !== e._subscribers.length && Y(T, e))
    }

    function E(e, t) {
        e._state === ie && (e._state = ae, e._result = t, Y(w, e))
    }

    function S(e, t, r, n) {
        var i = e._subscribers,
            o = i.length;
        e._onerror = null, i[o] = t, i[o + oe] = r, i[o + ae] = n, 0 === o && e._state && Y(T, e)
    }

    function T(e) {
        var t = e._subscribers,
            r = e._state;
        if (0 !== t.length) {
            for (var n, i, o = e._result, a = 0; a < t.length; a += 3) n = t[a], i = t[a + r], n ? P(r, n, i, o) : i(o);
            e._subscribers.length = 0
        }
    }

    function M() {
        this.error = null
    }

    function A(e, t) {
        try {
            return e(t)
        } catch (r) {
            return ue.error = r, ue
        }
    }

    function P(e, r, n, i) {
        var o, a, s, u, l = t(n);
        if (l) {
            if (o = A(n, i), o === ue ? (u = !0, a = o.error, o = null) : s = !0, r === o) return void E(r, m())
        } else o = i, s = !0;
        r._state !== ie || (l && s ? _(r, o) : u ? E(r, a) : e === oe ? C(r, o) : e === ae && E(r, o))
    }

    function R(e, t) {
        try {
            t(function(t) {
                _(e, t)
            }, function(t) {
                E(e, t)
            })
        } catch (r) {
            E(e, r)
        }
    }

    function k() {
        return le++
    }

    function I(e) {
        e[ne] = le++, e._state = void 0, e._result = void 0, e._subscribers = []
    }

    function D(e) {
        return new fe(this, e).promise
    }

    function B(e) {
        var t = this;
        return new t(W(e) ? function(r, n) {
            for (var i = e.length, o = 0; i > o; o++) t.resolve(e[o]).then(r, n)
        } : function(e, t) {
            t(new TypeError("You must pass an array to race."))
        })
    }

    function L(e) {
        var t = this,
            r = new t(d);
        return E(r, e), r
    }

    function V() {
        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
    }

    function N() {
        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
    }

    function O(e) {
        this[ne] = k(), this._result = this._state = void 0, this._subscribers = [], d !== e && ("function" != typeof e && V(), this instanceof O ? R(this, e) : N())
    }

    function F(e, t) {
        this._instanceConstructor = e, this.promise = new e(d), this.promise[ne] || I(this.promise), Array.isArray(t) ? (this._input = t, this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? C(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && C(this.promise, this._result))) : E(this.promise, U())
    }

    function U() {
        return new Error("Array Methods must be provided an Array")
    }

    function z() {
        var e;
        if ("undefined" != typeof global) e = global;
        else if ("undefined" != typeof self) e = self;
        else try {
            e = Function("return this")()
        } catch (t) {
            throw new Error("polyfill failed because global object is unavailable in this environment")
        }
        var r = e.Promise;
        (!r || "[object Promise]" !== Object.prototype.toString.call(r.resolve()) || r.cast) && (e.Promise = de)
    }
    var H;
    H = Array.isArray ? Array.isArray : function(e) {
        return "[object Array]" === Object.prototype.toString.call(e)
    };
    var j, G, q, W = H,
        X = 0,
        Y = function(e, t) {
            ee[X] = e, ee[X + 1] = t, X += 2, 2 === X && (G ? G(l) : q())
        },
        K = "undefined" != typeof window ? window : void 0,
        Q = K || {},
        Z = Q.MutationObserver || Q.WebKitMutationObserver,
        $ = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process),
        J = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
        ee = new Array(1e3);
    q = $ ? i() : Z ? a() : J ? s() : void 0 === K && "function" == typeof require ? c() : u();
    var te = h,
        re = p,
        ne = Math.random().toString(36).substring(16),
        ie = void 0,
        oe = 1,
        ae = 2,
        se = new M,
        ue = new M,
        le = 0,
        ce = D,
        he = B,
        pe = L,
        de = O;
    O.all = ce, O.race = he, O.resolve = re, O.reject = pe, O._setScheduler = r, O._setAsap = n, O._asap = Y, O.prototype = {
        constructor: O,
        then: te,
        "catch": function(e) {
            return this.then(null, e)
        }
    };
    var fe = F;
    F.prototype._enumerate = function() {
        for (var e = this.length, t = this._input, r = 0; this._state === ie && e > r; r++) this._eachEntry(t[r], r)
    }, F.prototype._eachEntry = function(e, t) {
        var r = this._instanceConstructor,
            n = r.resolve;
        if (n === re) {
            var i = v(e);
            if (i === te && e._state !== ie) this._settledAt(e._state, t, e._result);
            else if ("function" != typeof i) this._remaining--, this._result[t] = e;
            else if (r === de) {
                var o = new r(d);
                x(o, e, i), this._willSettleAt(o, t)
            } else this._willSettleAt(new r(function(t) {
                t(e)
            }), t)
        } else this._willSettleAt(n(e), t)
    }, F.prototype._settledAt = function(e, t, r) {
        var n = this.promise;
        n._state === ie && (this._remaining--, e === ae ? E(n, r) : this._result[t] = r), 0 === this._remaining && C(n, this._result)
    }, F.prototype._willSettleAt = function(e, t) {
        var r = this;
        S(e, void 0, function(e) {
            r._settledAt(oe, t, e)
        }, function(e) {
            r._settledAt(ae, t, e)
        })
    };
    var me = z,
        ve = {
            Promise: de,
            polyfill: me
        };
    "function" == typeof define && define.amd ? define(function() {
        return ve
    }) : "undefined" != typeof module && module.exports ? module.exports = ve : "undefined" != typeof this && (this.ES6Promise = ve), me()
}).call(this);
var __LiteMol_Plugin = function() {
    "use strict";
    var e;
    ! function() {
        var t = {},
            r = {};
        ! function(e) {
            if ("object" == typeof t && "undefined" != typeof r) r.exports = e();
            else if ("function" == typeof define && define.amd) define([], e);
            else {
                var n;
                n = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, n.React = e()
            }
        }(function() {
            return function e(t, r, n) {
                function i(a, s) {
                    if (!r[a]) {
                        if (!t[a]) {
                            var u = !1;
                            if (!s && u) return u(a, !0);
                            if (o) return o(a, !0);
                            var l = new Error("Cannot find module '" + a + "'");
                            throw l.code = "MODULE_NOT_FOUND", l
                        }
                        var c = r[a] = {
                            exports: {}
                        };
                        t[a][0].call(c.exports, function(e) {
                            var r = t[a][1][e];
                            return i(r ? r : e)
                        }, c, c.exports, e, t, r, n)
                    }
                    return r[a].exports
                }
                for (var o = !1, a = 0; a < n.length; a++) i(n[a]);
                return i
            }({
                1: [function(e, t, r) {
                    var n = e(38),
                        i = e(148),
                        o = {
                            focusDOMComponent: function() {
                                i(n.getNodeFromInstance(this))
                            }
                        };
                    t.exports = o
                }, {
                    148: 148,
                    38: 38
                }],
                2: [function(e, t, r) {
                    function n() {
                        var e = window.opera;
                        return "object" == typeof e && "function" == typeof e.version && parseInt(e.version(), 10) <= 12
                    }

                    function i(e) {
                        return (e.ctrlKey || e.altKey || e.metaKey) && !(e.ctrlKey && e.altKey)
                    }

                    function o(e) {
                        switch (e) {
                            case A.topCompositionStart:
                                return P.compositionStart;
                            case A.topCompositionEnd:
                                return P.compositionEnd;
                            case A.topCompositionUpdate:
                                return P.compositionUpdate
                        }
                    }

                    function a(e, t) {
                        return e === A.topKeyDown && t.keyCode === _
                    }

                    function s(e, t) {
                        switch (e) {
                            case A.topKeyUp:
                                return -1 !== x.indexOf(t.keyCode);
                            case A.topKeyDown:
                                return t.keyCode !== _;
                            case A.topKeyPress:
                            case A.topMouseDown:
                            case A.topBlur:
                                return !0;
                            default:
                                return !1
                        }
                    }

                    function u(e) {
                        var t = e.detail;
                        return "object" == typeof t && "data" in t ? t.data : null
                    }

                    function l(e, t, r, n) {
                        var i, l;
                        if (w ? i = o(e) : k ? s(e, r) && (i = P.compositionEnd) : a(e, r) && (i = P.compositionStart), !i) return null;
                        S && (k || i !== P.compositionStart ? i === P.compositionEnd && k && (l = k.getData()) : k = v.getPooled(n));
                        var c = g.getPooled(i, t, r, n);
                        if (l) c.data = l;
                        else {
                            var h = u(r);
                            null !== h && (c.data = h)
                        }
                        return f.accumulateTwoPhaseDispatches(c), c
                    }

                    function c(e, t) {
                        switch (e) {
                            case A.topCompositionEnd:
                                return u(t);
                            case A.topKeyPress:
                                var r = t.which;
                                return r !== T ? null : (R = !0, M);
                            case A.topTextInput:
                                var n = t.data;
                                return n === M && R ? null : n;
                            default:
                                return null
                        }
                    }

                    function h(e, t) {
                        if (k) {
                            if (e === A.topCompositionEnd || s(e, t)) {
                                var r = k.getData();
                                return v.release(k), k = null, r
                            }
                            return null
                        }
                        switch (e) {
                            case A.topPaste:
                                return null;
                            case A.topKeyPress:
                                return t.which && !i(t) ? String.fromCharCode(t.which) : null;
                            case A.topCompositionEnd:
                                return S ? null : t.data;
                            default:
                                return null
                        }
                    }

                    function p(e, t, r, n) {
                        var i;
                        if (i = E ? c(e, r) : h(e, r), !i) return null;
                        var o = y.getPooled(P.beforeInput, t, r, n);
                        return o.data = i, f.accumulateTwoPhaseDispatches(o), o
                    }
                    var d = e(15),
                        f = e(19),
                        m = e(140),
                        v = e(20),
                        g = e(97),
                        y = e(101),
                        b = e(158),
                        x = [9, 13, 27, 32],
                        _ = 229,
                        w = m.canUseDOM && "CompositionEvent" in window,
                        C = null;
                    m.canUseDOM && "documentMode" in document && (C = document.documentMode);
                    var E = m.canUseDOM && "TextEvent" in window && !C && !n(),
                        S = m.canUseDOM && (!w || C && C > 8 && 11 >= C),
                        T = 32,
                        M = String.fromCharCode(T),
                        A = d.topLevelTypes,
                        P = {
                            beforeInput: {
                                phasedRegistrationNames: {
                                    bubbled: b({
                                        onBeforeInput: null
                                    }),
                                    captured: b({
                                        onBeforeInputCapture: null
                                    })
                                },
                                dependencies: [A.topCompositionEnd, A.topKeyPress, A.topTextInput, A.topPaste]
                            },
                            compositionEnd: {
                                phasedRegistrationNames: {
                                    bubbled: b({
                                        onCompositionEnd: null
                                    }),
                                    captured: b({
                                        onCompositionEndCapture: null
                                    })
                                },
                                dependencies: [A.topBlur, A.topCompositionEnd, A.topKeyDown, A.topKeyPress, A.topKeyUp, A.topMouseDown]
                            },
                            compositionStart: {
                                phasedRegistrationNames: {
                                    bubbled: b({
                                        onCompositionStart: null
                                    }),
                                    captured: b({
                                        onCompositionStartCapture: null
                                    })
                                },
                                dependencies: [A.topBlur, A.topCompositionStart, A.topKeyDown, A.topKeyPress, A.topKeyUp, A.topMouseDown]
                            },
                            compositionUpdate: {
                                phasedRegistrationNames: {
                                    bubbled: b({
                                        onCompositionUpdate: null
                                    }),
                                    captured: b({
                                        onCompositionUpdateCapture: null
                                    })
                                },
                                dependencies: [A.topBlur, A.topCompositionUpdate, A.topKeyDown, A.topKeyPress, A.topKeyUp, A.topMouseDown]
                            }
                        },
                        R = !1,
                        k = null,
                        I = {
                            eventTypes: P,
                            extractEvents: function(e, t, r, n) {
                                return [l(e, t, r, n), p(e, t, r, n)]
                            }
                        };
                    t.exports = I
                }, {
                    101: 101,
                    140: 140,
                    15: 15,
                    158: 158,
                    19: 19,
                    20: 20,
                    97: 97
                }],
                3: [function(e, t, r) {
                    function n(e, t) {
                        return e + t.charAt(0).toUpperCase() + t.substring(1)
                    }
                    var i = {
                            animationIterationCount: !0,
                            borderImageOutset: !0,
                            borderImageSlice: !0,
                            borderImageWidth: !0,
                            boxFlex: !0,
                            boxFlexGroup: !0,
                            boxOrdinalGroup: !0,
                            columnCount: !0,
                            flex: !0,
                            flexGrow: !0,
                            flexPositive: !0,
                            flexShrink: !0,
                            flexNegative: !0,
                            flexOrder: !0,
                            gridRow: !0,
                            gridColumn: !0,
                            fontWeight: !0,
                            lineClamp: !0,
                            lineHeight: !0,
                            opacity: !0,
                            order: !0,
                            orphans: !0,
                            tabSize: !0,
                            widows: !0,
                            zIndex: !0,
                            zoom: !0,
                            fillOpacity: !0,
                            floodOpacity: !0,
                            stopOpacity: !0,
                            strokeDasharray: !0,
                            strokeDashoffset: !0,
                            strokeMiterlimit: !0,
                            strokeOpacity: !0,
                            strokeWidth: !0
                        },
                        o = ["Webkit", "ms", "Moz", "O"];
                    Object.keys(i).forEach(function(e) {
                        o.forEach(function(t) {
                            i[n(t, e)] = i[e]
                        })
                    });
                    var a = {
                            background: {
                                backgroundAttachment: !0,
                                backgroundColor: !0,
                                backgroundImage: !0,
                                backgroundPositionX: !0,
                                backgroundPositionY: !0,
                                backgroundRepeat: !0
                            },
                            backgroundPosition: {
                                backgroundPositionX: !0,
                                backgroundPositionY: !0
                            },
                            border: {
                                borderWidth: !0,
                                borderStyle: !0,
                                borderColor: !0
                            },
                            borderBottom: {
                                borderBottomWidth: !0,
                                borderBottomStyle: !0,
                                borderBottomColor: !0
                            },
                            borderLeft: {
                                borderLeftWidth: !0,
                                borderLeftStyle: !0,
                                borderLeftColor: !0
                            },
                            borderRight: {
                                borderRightWidth: !0,
                                borderRightStyle: !0,
                                borderRightColor: !0
                            },
                            borderTop: {
                                borderTopWidth: !0,
                                borderTopStyle: !0,
                                borderTopColor: !0
                            },
                            font: {
                                fontStyle: !0,
                                fontVariant: !0,
                                fontWeight: !0,
                                fontSize: !0,
                                lineHeight: !0,
                                fontFamily: !0
                            },
                            outline: {
                                outlineWidth: !0,
                                outlineStyle: !0,
                                outlineColor: !0
                            }
                        },
                        s = {
                            isUnitlessNumber: i,
                            shorthandPropertyExpansions: a
                        };
                    t.exports = s
                }, {}],
                4: [function(e, t, r) {
                    var n = e(3),
                        i = e(140),
                        o = e(78),
                        a = (e(142), e(114)),
                        s = e(153),
                        u = e(160),
                        l = (e(162), u(function(e) {
                            return s(e)
                        })),
                        c = !1,
                        h = "cssFloat";
                    if (i.canUseDOM) {
                        var p = document.createElement("div").style;
                        try {
                            p.font = ""
                        } catch (d) {
                            c = !0
                        }
                        void 0 === document.documentElement.style.cssFloat && (h = "styleFloat")
                    }
                    var f = {
                        createMarkupForStyles: function(e, t) {
                            var r = "";
                            for (var n in e)
                                if (e.hasOwnProperty(n)) {
                                    var i = e[n];
                                    null != i && (r += l(n) + ":", r += a(n, i, t) + ";")
                                }
                            return r || null
                        },
                        setValueForStyles: function(e, t, r) {
                            var i = e.style;
                            for (var o in t)
                                if (t.hasOwnProperty(o)) {
                                    var s = a(o, t[o], r);
                                    if ("float" !== o && "cssFloat" !== o || (o = h), s) i[o] = s;
                                    else {
                                        var u = c && n.shorthandPropertyExpansions[o];
                                        if (u)
                                            for (var l in u) i[l] = "";
                                        else i[o] = ""
                                    }
                                }
                        }
                    };
                    o.measureMethods(f, "CSSPropertyOperations", {
                        setValueForStyles: "setValueForStyles"
                    }), t.exports = f
                }, {
                    114: 114,
                    140: 140,
                    142: 142,
                    153: 153,
                    160: 160,
                    162: 162,
                    3: 3,
                    78: 78
                }],
                5: [function(e, t, r) {
                    function n() {
                        this._callbacks = null, this._contexts = null
                    }
                    var i = e(163),
                        o = e(23),
                        a = e(154);
                    i(n.prototype, {
                        enqueue: function(e, t) {
                            this._callbacks = this._callbacks || [], this._contexts = this._contexts || [], this._callbacks.push(e), this._contexts.push(t)
                        },
                        notifyAll: function() {
                            var e = this._callbacks,
                                t = this._contexts;
                            if (e) {
                                e.length !== t.length ? a(!1) : void 0, this._callbacks = null, this._contexts = null;
                                for (var r = 0; r < e.length; r++) e[r].call(t[r]);
                                e.length = 0, t.length = 0
                            }
                        },
                        checkpoint: function() {
                            return this._callbacks ? this._callbacks.length : 0
                        },
                        rollback: function(e) {
                            this._callbacks && (this._callbacks.length = e, this._contexts.length = e)
                        },
                        reset: function() {
                            this._callbacks = null, this._contexts = null
                        },
                        destructor: function() {
                            this.reset()
                        }
                    }), o.addPoolingTo(n), t.exports = n
                }, {
                    154: 154,
                    163: 163,
                    23: 23
                }],
                6: [function(e, t, r) {
                    function n(e) {
                        var t = e.nodeName && e.nodeName.toLowerCase();
                        return "select" === t || "input" === t && "file" === e.type
                    }

                    function i(e) {
                        var t = E.getPooled(R.change, I, e, S(e));
                        x.accumulateTwoPhaseDispatches(t), C.batchedUpdates(o, t)
                    }

                    function o(e) {
                        b.enqueueEvents(e), b.processEventQueue(!1)
                    }

                    function a(e, t) {
                        k = e, I = t, k.attachEvent("onchange", i)
                    }

                    function s() {
                        k && (k.detachEvent("onchange", i), k = null, I = null)
                    }

                    function u(e, t) {
                        return e === P.topChange ? t : void 0
                    }

                    function l(e, t, r) {
                        e === P.topFocus ? (s(), a(t, r)) : e === P.topBlur && s()
                    }

                    function c(e, t) {
                        k = e, I = t, D = e.value, B = Object.getOwnPropertyDescriptor(e.constructor.prototype, "value"), Object.defineProperty(k, "value", N), k.attachEvent ? k.attachEvent("onpropertychange", p) : k.addEventListener("propertychange", p, !1)
                    }

                    function h() {
                        k && (delete k.value, k.detachEvent ? k.detachEvent("onpropertychange", p) : k.removeEventListener("propertychange", p, !1), k = null, I = null, D = null, B = null)
                    }

                    function p(e) {
                        if ("value" === e.propertyName) {
                            var t = e.srcElement.value;
                            t !== D && (D = t, i(e))
                        }
                    }

                    function d(e, t) {
                        return e === P.topInput ? t : void 0
                    }

                    function f(e, t, r) {
                        e === P.topFocus ? (h(), c(t, r)) : e === P.topBlur && h()
                    }

                    function m(e, t) {
                        return e !== P.topSelectionChange && e !== P.topKeyUp && e !== P.topKeyDown || !k || k.value === D ? void 0 : (D = k.value, I)
                    }

                    function v(e) {
                        return e.nodeName && "input" === e.nodeName.toLowerCase() && ("checkbox" === e.type || "radio" === e.type)
                    }

                    function g(e, t) {
                        return e === P.topClick ? t : void 0
                    }
                    var y = e(15),
                        b = e(16),
                        x = e(19),
                        _ = e(140),
                        w = e(38),
                        C = e(90),
                        E = e(99),
                        S = e(122),
                        T = e(129),
                        M = e(130),
                        A = e(158),
                        P = y.topLevelTypes,
                        R = {
                            change: {
                                phasedRegistrationNames: {
                                    bubbled: A({
                                        onChange: null
                                    }),
                                    captured: A({
                                        onChangeCapture: null
                                    })
                                },
                                dependencies: [P.topBlur, P.topChange, P.topClick, P.topFocus, P.topInput, P.topKeyDown, P.topKeyUp, P.topSelectionChange]
                            }
                        },
                        k = null,
                        I = null,
                        D = null,
                        B = null,
                        L = !1;
                    _.canUseDOM && (L = T("change") && (!("documentMode" in document) || document.documentMode > 8));
                    var V = !1;
                    _.canUseDOM && (V = T("input") && (!("documentMode" in document) || document.documentMode > 11));
                    var N = {
                            get: function() {
                                return B.get.call(this)
                            },
                            set: function(e) {
                                D = "" + e, B.set.call(this, e)
                            }
                        },
                        O = {
                            eventTypes: R,
                            extractEvents: function(e, t, r, i) {
                                var o, a, s = t ? w.getNodeFromInstance(t) : window;
                                if (n(s) ? L ? o = u : a = l : M(s) ? V ? o = d : (o = m, a = f) : v(s) && (o = g), o) {
                                    var c = o(e, t);
                                    if (c) {
                                        var h = E.getPooled(R.change, c, r, i);
                                        return h.type = "change", x.accumulateTwoPhaseDispatches(h), h
                                    }
                                }
                                a && a(e, s, t)
                            }
                        };
                    t.exports = O
                }, {
                    122: 122,
                    129: 129,
                    130: 130,
                    140: 140,
                    15: 15,
                    158: 158,
                    16: 16,
                    19: 19,
                    38: 38,
                    90: 90,
                    99: 99
                }],
                7: [function(e, t, r) {
                    function n(e, t) {
                        return Array.isArray(t) && (t = t[1]), t ? t.nextSibling : e.firstChild
                    }

                    function i(e, t, r) {
                        c.insertTreeBefore(e, t, r)
                    }

                    function o(e, t, r) {
                        Array.isArray(t) ? s(e, t[0], t[1], r) : g(e, t, r)
                    }

                    function a(e, t) {
                        if (Array.isArray(t)) {
                            var r = t[1];
                            t = t[0], u(e, t, r), e.removeChild(r)
                        }
                        e.removeChild(t)
                    }

                    function s(e, t, r, n) {
                        for (var i = t;;) {
                            var o = i.nextSibling;
                            if (g(e, i, n), i === r) break;
                            i = o
                        }
                    }

                    function u(e, t, r) {
                        for (;;) {
                            var n = t.nextSibling;
                            if (n === r) break;
                            e.removeChild(n)
                        }
                    }

                    function l(e, t, r) {
                        var n = e.parentNode,
                            i = e.nextSibling;
                        i === t ? r && g(n, document.createTextNode(r), i) : r ? (v(i, r), u(n, i, t)) : u(n, e, t)
                    }
                    var c = e(8),
                        h = e(12),
                        p = e(73),
                        d = e(78),
                        f = e(113),
                        m = e(134),
                        v = e(135),
                        g = f(function(e, t, r) {
                            e.insertBefore(t, r)
                        }),
                        y = {
                            dangerouslyReplaceNodeWithMarkup: h.dangerouslyReplaceNodeWithMarkup,
                            replaceDelimitedText: l,
                            processUpdates: function(e, t) {
                                for (var r = 0; r < t.length; r++) {
                                    var s = t[r];
                                    switch (s.type) {
                                        case p.INSERT_MARKUP:
                                            i(e, s.content, n(e, s.afterNode));
                                            break;
                                        case p.MOVE_EXISTING:
                                            o(e, s.fromNode, n(e, s.afterNode));
                                            break;
                                        case p.SET_MARKUP:
                                            m(e, s.content);
                                            break;
                                        case p.TEXT_CONTENT:
                                            v(e, s.content);
                                            break;
                                        case p.REMOVE_NODE:
                                            a(e, s.fromNode)
                                    }
                                }
                            }
                        };
                    d.measureMethods(y, "DOMChildrenOperations", {
                        replaceDelimitedText: "replaceDelimitedText"
                    }), t.exports = y
                }, {
                    113: 113,
                    12: 12,
                    134: 134,
                    135: 135,
                    73: 73,
                    78: 78,
                    8: 8
                }],
                8: [function(e, t, r) {
                    function n(e) {
                        if (h) {
                            var t = e.node,
                                r = e.children;
                            if (r.length)
                                for (var n = 0; n < r.length; n++) p(t, r[n], null);
                            else null != e.html ? t.innerHTML = e.html : null != e.text && c(t, e.text)
                        }
                    }

                    function i(e, t) {
                        e.parentNode.replaceChild(t.node, e), n(t)
                    }

                    function o(e, t) {
                        h ? e.children.push(t) : e.node.appendChild(t.node)
                    }

                    function a(e, t) {
                        h ? e.html = t : e.node.innerHTML = t
                    }

                    function s(e, t) {
                        h ? e.text = t : c(e.node, t)
                    }

                    function u(e) {
                        return {
                            node: e,
                            children: [],
                            html: null,
                            text: null
                        }
                    }
                    var l = e(113),
                        c = e(135),
                        h = "undefined" != typeof document && "number" == typeof document.documentMode || "undefined" != typeof navigator && "string" == typeof navigator.userAgent && /\bEdge\/\d/.test(navigator.userAgent),
                        p = l(function(e, t, r) {
                            11 === t.node.nodeType ? (n(t), e.insertBefore(t.node, r)) : (e.insertBefore(t.node, r), n(t))
                        });
                    u.insertTreeBefore = p, u.replaceChildWithTree = i, u.queueChild = o, u.queueHTML = a, u.queueText = s, t.exports = u
                }, {
                    113: 113,
                    135: 135
                }],
                9: [function(e, t, r) {
                    var n = {
                        html: "http://www.w3.org/1999/xhtml",
                        mathml: "http://www.w3.org/1998/Math/MathML",
                        svg: "http://www.w3.org/2000/svg"
                    };
                    t.exports = n
                }, {}],
                10: [function(e, t, r) {
                    function n(e, t) {
                        return (e & t) === t
                    }
                    var i = e(154),
                        o = {
                            MUST_USE_PROPERTY: 1,
                            HAS_SIDE_EFFECTS: 2,
                            HAS_BOOLEAN_VALUE: 4,
                            HAS_NUMERIC_VALUE: 8,
                            HAS_POSITIVE_NUMERIC_VALUE: 24,
                            HAS_OVERLOADED_BOOLEAN_VALUE: 32,
                            injectDOMPropertyConfig: function(e) {
                                var t = o,
                                    r = e.Properties || {},
                                    a = e.DOMAttributeNamespaces || {},
                                    u = e.DOMAttributeNames || {},
                                    l = e.DOMPropertyNames || {},
                                    c = e.DOMMutationMethods || {};
                                e.isCustomAttribute && s._isCustomAttributeFunctions.push(e.isCustomAttribute);
                                for (var h in r) {
                                    s.properties.hasOwnProperty(h) ? i(!1) : void 0;
                                    var p = h.toLowerCase(),
                                        d = r[h],
                                        f = {
                                            attributeName: p,
                                            attributeNamespace: null,
                                            propertyName: h,
                                            mutationMethod: null,
                                            mustUseProperty: n(d, t.MUST_USE_PROPERTY),
                                            hasSideEffects: n(d, t.HAS_SIDE_EFFECTS),
                                            hasBooleanValue: n(d, t.HAS_BOOLEAN_VALUE),
                                            hasNumericValue: n(d, t.HAS_NUMERIC_VALUE),
                                            hasPositiveNumericValue: n(d, t.HAS_POSITIVE_NUMERIC_VALUE),
                                            hasOverloadedBooleanValue: n(d, t.HAS_OVERLOADED_BOOLEAN_VALUE)
                                        };
                                    if (!f.mustUseProperty && f.hasSideEffects ? i(!1) : void 0, f.hasBooleanValue + f.hasNumericValue + f.hasOverloadedBooleanValue <= 1 ? void 0 : i(!1), u.hasOwnProperty(h)) {
                                        var m = u[h];
                                        f.attributeName = m
                                    }
                                    a.hasOwnProperty(h) && (f.attributeNamespace = a[h]), l.hasOwnProperty(h) && (f.propertyName = l[h]), c.hasOwnProperty(h) && (f.mutationMethod = c[h]), s.properties[h] = f
                                }
                            }
                        },
                        a = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",
                        s = {
                            ID_ATTRIBUTE_NAME: "data-reactid",
                            ROOT_ATTRIBUTE_NAME: "data-reactroot",
                            ATTRIBUTE_NAME_START_CHAR: a,
                            ATTRIBUTE_NAME_CHAR: a + "\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040",
                            properties: {},
                            getPossibleStandardName: null,
                            _isCustomAttributeFunctions: [],
                            isCustomAttribute: function(e) {
                                for (var t = 0; t < s._isCustomAttributeFunctions.length; t++) {
                                    var r = s._isCustomAttributeFunctions[t];
                                    if (r(e)) return !0
                                }
                                return !1
                            },
                            injection: o
                        };
                    t.exports = s
                }, {
                    154: 154
                }],
                11: [function(e, t, r) {
                    function n(e) {
                        return c.hasOwnProperty(e) ? !0 : l.hasOwnProperty(e) ? !1 : u.test(e) ? (c[e] = !0, !0) : (l[e] = !0, !1)
                    }

                    function i(e, t) {
                        return null == t || e.hasBooleanValue && !t || e.hasNumericValue && isNaN(t) || e.hasPositiveNumericValue && 1 > t || e.hasOverloadedBooleanValue && t === !1
                    }
                    var o = e(10),
                        a = (e(46), e(78)),
                        s = e(132),
                        u = (e(162), new RegExp("^[" + o.ATTRIBUTE_NAME_START_CHAR + "][" + o.ATTRIBUTE_NAME_CHAR + "]*$")),
                        l = {},
                        c = {},
                        h = {
                            createMarkupForID: function(e) {
                                return o.ID_ATTRIBUTE_NAME + "=" + s(e)
                            },
                            setAttributeForID: function(e, t) {
                                e.setAttribute(o.ID_ATTRIBUTE_NAME, t)
                            },
                            createMarkupForRoot: function() {
                                return o.ROOT_ATTRIBUTE_NAME + '=""'
                            },
                            setAttributeForRoot: function(e) {
                                e.setAttribute(o.ROOT_ATTRIBUTE_NAME, "")
                            },
                            createMarkupForProperty: function(e, t) {
                                var r = o.properties.hasOwnProperty(e) ? o.properties[e] : null;
                                if (r) {
                                    if (i(r, t)) return "";
                                    var n = r.attributeName;
                                    return r.hasBooleanValue || r.hasOverloadedBooleanValue && t === !0 ? n + '=""' : n + "=" + s(t)
                                }
                                return o.isCustomAttribute(e) ? null == t ? "" : e + "=" + s(t) : null
                            },
                            createMarkupForCustomAttribute: function(e, t) {
                                return n(e) && null != t ? e + "=" + s(t) : ""
                            },
                            setValueForProperty: function(e, t, r) {
                                var n = o.properties.hasOwnProperty(t) ? o.properties[t] : null;
                                if (n) {
                                    var a = n.mutationMethod;
                                    if (a) a(e, r);
                                    else if (i(n, r)) this.deleteValueForProperty(e, t);
                                    else if (n.mustUseProperty) {
                                        var s = n.propertyName;
                                        n.hasSideEffects && "" + e[s] == "" + r || (e[s] = r)
                                    } else {
                                        var u = n.attributeName,
                                            l = n.attributeNamespace;
                                        l ? e.setAttributeNS(l, u, "" + r) : n.hasBooleanValue || n.hasOverloadedBooleanValue && r === !0 ? e.setAttribute(u, "") : e.setAttribute(u, "" + r)
                                    }
                                } else o.isCustomAttribute(t) && h.setValueForAttribute(e, t, r)
                            },
                            setValueForAttribute: function(e, t, r) {
                                n(t) && (null == r ? e.removeAttribute(t) : e.setAttribute(t, "" + r))
                            },
                            deleteValueForProperty: function(e, t) {
                                var r = o.properties.hasOwnProperty(t) ? o.properties[t] : null;
                                if (r) {
                                    var n = r.mutationMethod;
                                    if (n) n(e, void 0);
                                    else if (r.mustUseProperty) {
                                        var i = r.propertyName;
                                        r.hasBooleanValue ? e[i] = !1 : r.hasSideEffects && "" + e[i] == "" || (e[i] = "")
                                    } else e.removeAttribute(r.attributeName)
                                } else o.isCustomAttribute(t) && e.removeAttribute(t)
                            }
                        };
                    a.measureMethods(h, "DOMPropertyOperations", {
                        setValueForProperty: "setValueForProperty",
                        setValueForAttribute: "setValueForAttribute",
                        deleteValueForProperty: "deleteValueForProperty"
                    }), t.exports = h
                }, {
                    10: 10,
                    132: 132,
                    162: 162,
                    46: 46,
                    78: 78
                }],
                12: [function(e, t, r) {
                    function n(e) {
                        return e.substring(1, e.indexOf(" "))
                    }
                    var i = e(8),
                        o = e(140),
                        a = e(145),
                        s = e(146),
                        u = e(150),
                        l = e(154),
                        c = /^(<[^ \/>]+)/,
                        h = "data-danger-index",
                        p = {
                            dangerouslyRenderMarkup: function(e) {
                                o.canUseDOM ? void 0 : l(!1);
                                for (var t, r = {}, i = 0; i < e.length; i++) e[i] ? void 0 : l(!1), t = n(e[i]), t = u(t) ? t : "*", r[t] = r[t] || [], r[t][i] = e[i];
                                var p = [],
                                    d = 0;
                                for (t in r)
                                    if (r.hasOwnProperty(t)) {
                                        var f, m = r[t];
                                        for (f in m)
                                            if (m.hasOwnProperty(f)) {
                                                var v = m[f];
                                                m[f] = v.replace(c, "$1 " + h + '="' + f + '" ')
                                            }
                                        for (var g = a(m.join(""), s), y = 0; y < g.length; ++y) {
                                            var b = g[y];
                                            b.hasAttribute && b.hasAttribute(h) && (f = +b.getAttribute(h), b.removeAttribute(h), p.hasOwnProperty(f) ? l(!1) : void 0, p[f] = b, d += 1)
                                        }
                                    }
                                return d !== p.length ? l(!1) : void 0, p.length !== e.length ? l(!1) : void 0, p
                            },
                            dangerouslyReplaceNodeWithMarkup: function(e, t) {
                                if (o.canUseDOM ? void 0 : l(!1), t ? void 0 : l(!1), "HTML" === e.nodeName ? l(!1) : void 0, "string" == typeof t) {
                                    var r = a(t, s)[0];
                                    e.parentNode.replaceChild(r, e)
                                } else i.replaceChildWithTree(e, t)
                            }
                        };
                    t.exports = p
                }, {
                    140: 140,
                    145: 145,
                    146: 146,
                    150: 150,
                    154: 154,
                    8: 8
                }],
                13: [function(e, t, r) {
                    var n = e(158),
                        i = [n({
                            ResponderEventPlugin: null
                        }), n({
                            SimpleEventPlugin: null
                        }), n({
                            TapEventPlugin: null
                        }), n({
                            EnterLeaveEventPlugin: null
                        }), n({
                            ChangeEventPlugin: null
                        }), n({
                            SelectEventPlugin: null
                        }), n({
                            BeforeInputEventPlugin: null
                        })];
                    t.exports = i
                }, {
                    158: 158
                }],
                14: [function(e, t, r) {
                    var n = e(15),
                        i = e(19),
                        o = e(38),
                        a = e(103),
                        s = e(158),
                        u = n.topLevelTypes,
                        l = {
                            mouseEnter: {
                                registrationName: s({
                                    onMouseEnter: null
                                }),
                                dependencies: [u.topMouseOut, u.topMouseOver]
                            },
                            mouseLeave: {
                                registrationName: s({
                                    onMouseLeave: null
                                }),
                                dependencies: [u.topMouseOut, u.topMouseOver]
                            }
                        },
                        c = {
                            eventTypes: l,
                            extractEvents: function(e, t, r, n) {
                                if (e === u.topMouseOver && (r.relatedTarget || r.fromElement)) return null;
                                if (e !== u.topMouseOut && e !== u.topMouseOver) return null;
                                var s;
                                if (n.window === n) s = n;
                                else {
                                    var c = n.ownerDocument;
                                    s = c ? c.defaultView || c.parentWindow : window
                                }
                                var h, p;
                                if (e === u.topMouseOut) {
                                    h = t;
                                    var d = r.relatedTarget || r.toElement;
                                    p = d ? o.getClosestInstanceFromNode(d) : null
                                } else h = null, p = t;
                                if (h === p) return null;
                                var f = null == h ? s : o.getNodeFromInstance(h),
                                    m = null == p ? s : o.getNodeFromInstance(p),
                                    v = a.getPooled(l.mouseLeave, h, r, n);
                                v.type = "mouseleave", v.target = f, v.relatedTarget = m;
                                var g = a.getPooled(l.mouseEnter, p, r, n);
                                return g.type = "mouseenter", g.target = m, g.relatedTarget = f, i.accumulateEnterLeaveDispatches(v, g, h, p), [v, g]
                            }
                        };
                    t.exports = c
                }, {
                    103: 103,
                    15: 15,
                    158: 158,
                    19: 19,
                    38: 38
                }],
                15: [function(e, t, r) {
                    var n = e(157),
                        i = n({
                            bubbled: null,
                            captured: null
                        }),
                        o = n({
                            topAbort: null,
                            topAnimationEnd: null,
                            topAnimationIteration: null,
                            topAnimationStart: null,
                            topBlur: null,
                            topCanPlay: null,
                            topCanPlayThrough: null,
                            topChange: null,
                            topClick: null,
                            topCompositionEnd: null,
                            topCompositionStart: null,
                            topCompositionUpdate: null,
                            topContextMenu: null,
                            topCopy: null,
                            topCut: null,
                            topDoubleClick: null,
                            topDrag: null,
                            topDragEnd: null,
                            topDragEnter: null,
                            topDragExit: null,
                            topDragLeave: null,
                            topDragOver: null,
                            topDragStart: null,
                            topDrop: null,
                            topDurationChange: null,
                            topEmptied: null,
                            topEncrypted: null,
                            topEnded: null,
                            topError: null,
                            topFocus: null,
                            topInput: null,
                            topInvalid: null,
                            topKeyDown: null,
                            topKeyPress: null,
                            topKeyUp: null,
                            topLoad: null,
                            topLoadedData: null,
                            topLoadedMetadata: null,
                            topLoadStart: null,
                            topMouseDown: null,
                            topMouseMove: null,
                            topMouseOut: null,
                            topMouseOver: null,
                            topMouseUp: null,
                            topPaste: null,
                            topPause: null,
                            topPlay: null,
                            topPlaying: null,
                            topProgress: null,
                            topRateChange: null,
                            topReset: null,
                            topScroll: null,
                            topSeeked: null,
                            topSeeking: null,
                            topSelectionChange: null,
                            topStalled: null,
                            topSubmit: null,
                            topSuspend: null,
                            topTextInput: null,
                            topTimeUpdate: null,
                            topTouchCancel: null,
                            topTouchEnd: null,
                            topTouchMove: null,
                            topTouchStart: null,
                            topTransitionEnd: null,
                            topVolumeChange: null,
                            topWaiting: null,
                            topWheel: null
                        }),
                        a = {
                            topLevelTypes: o,
                            PropagationPhases: i
                        };
                    t.exports = a
                }, {
                    157: 157
                }],
                16: [function(e, t, r) {
                    var n = e(17),
                        i = e(18),
                        o = e(61),
                        a = e(110),
                        s = e(118),
                        u = e(154),
                        l = {},
                        c = null,
                        h = function(e, t) {
                            e && (i.executeDispatchesInOrder(e, t), e.isPersistent() || e.constructor.release(e))
                        },
                        p = function(e) {
                            return h(e, !0)
                        },
                        d = function(e) {
                            return h(e, !1)
                        },
                        f = {
                            injection: {
                                injectEventPluginOrder: n.injectEventPluginOrder,
                                injectEventPluginsByName: n.injectEventPluginsByName
                            },
                            putListener: function(e, t, r) {
                                "function" != typeof r ? u(!1) : void 0;
                                var i = l[t] || (l[t] = {});
                                i[e._rootNodeID] = r;
                                var o = n.registrationNameModules[t];
                                o && o.didPutListener && o.didPutListener(e, t, r)
                            },
                            getListener: function(e, t) {
                                var r = l[t];
                                return r && r[e._rootNodeID]
                            },
                            deleteListener: function(e, t) {
                                var r = n.registrationNameModules[t];
                                r && r.willDeleteListener && r.willDeleteListener(e, t);
                                var i = l[t];
                                i && delete i[e._rootNodeID]
                            },
                            deleteAllListeners: function(e) {
                                for (var t in l)
                                    if (l[t][e._rootNodeID]) {
                                        var r = n.registrationNameModules[t];
                                        r && r.willDeleteListener && r.willDeleteListener(e, t), delete l[t][e._rootNodeID]
                                    }
                            },
                            extractEvents: function(e, t, r, i) {
                                for (var o, s = n.plugins, u = 0; u < s.length; u++) {
                                    var l = s[u];
                                    if (l) {
                                        var c = l.extractEvents(e, t, r, i);
                                        c && (o = a(o, c))
                                    }
                                }
                                return o
                            },
                            enqueueEvents: function(e) {
                                e && (c = a(c, e))
                            },
                            processEventQueue: function(e) {
                                var t = c;
                                c = null, e ? s(t, p) : s(t, d), c ? u(!1) : void 0, o.rethrowCaughtError()
                            },
                            __purge: function() {
                                l = {}
                            },
                            __getListenerBank: function() {
                                return l
                            }
                        };
                    t.exports = f
                }, {
                    110: 110,
                    118: 118,
                    154: 154,
                    17: 17,
                    18: 18,
                    61: 61
                }],
                17: [function(e, t, r) {
                    function n() {
                        if (s)
                            for (var e in u) {
                                var t = u[e],
                                    r = s.indexOf(e);
                                if (r > -1 ? void 0 : a(!1), !l.plugins[r]) {
                                    t.extractEvents ? void 0 : a(!1), l.plugins[r] = t;
                                    var n = t.eventTypes;
                                    for (var o in n) i(n[o], t, o) ? void 0 : a(!1)
                                }
                            }
                    }

                    function i(e, t, r) {
                        l.eventNameDispatchConfigs.hasOwnProperty(r) ? a(!1) : void 0, l.eventNameDispatchConfigs[r] = e;
                        var n = e.phasedRegistrationNames;
                        if (n) {
                            for (var i in n)
                                if (n.hasOwnProperty(i)) {
                                    var s = n[i];
                                    o(s, t, r)
                                }
                            return !0
                        }
                        return e.registrationName ? (o(e.registrationName, t, r), !0) : !1
                    }

                    function o(e, t, r) {
                        l.registrationNameModules[e] ? a(!1) : void 0, l.registrationNameModules[e] = t, l.registrationNameDependencies[e] = t.eventTypes[r].dependencies
                    }
                    var a = e(154),
                        s = null,
                        u = {},
                        l = {
                            plugins: [],
                            eventNameDispatchConfigs: {},
                            registrationNameModules: {},
                            registrationNameDependencies: {},
                            possibleRegistrationNames: null,
                            injectEventPluginOrder: function(e) {
                                s ? a(!1) : void 0, s = Array.prototype.slice.call(e), n()
                            },
                            injectEventPluginsByName: function(e) {
                                var t = !1;
                                for (var r in e)
                                    if (e.hasOwnProperty(r)) {
                                        var i = e[r];
                                        u.hasOwnProperty(r) && u[r] === i || (u[r] ? a(!1) : void 0, u[r] = i, t = !0)
                                    }
                                t && n()
                            },
                            getPluginModuleForEvent: function(e) {
                                var t = e.dispatchConfig;
                                if (t.registrationName) return l.registrationNameModules[t.registrationName] || null;
                                for (var r in t.phasedRegistrationNames)
                                    if (t.phasedRegistrationNames.hasOwnProperty(r)) {
                                        var n = l.registrationNameModules[t.phasedRegistrationNames[r]];
                                        if (n) return n
                                    }
                                return null
                            },
                            _resetEventPlugins: function() {
                                s = null;
                                for (var e in u) u.hasOwnProperty(e) && delete u[e];
                                l.plugins.length = 0;
                                var t = l.eventNameDispatchConfigs;
                                for (var r in t) t.hasOwnProperty(r) && delete t[r];
                                var n = l.registrationNameModules;
                                for (var i in n) n.hasOwnProperty(i) && delete n[i]
                            }
                        };
                    t.exports = l
                }, {
                    154: 154
                }],
                18: [function(e, t, r) {
                    function n(e) {
                        return e === y.topMouseUp || e === y.topTouchEnd || e === y.topTouchCancel
                    }

                    function i(e) {
                        return e === y.topMouseMove || e === y.topTouchMove
                    }

                    function o(e) {
                        return e === y.topMouseDown || e === y.topTouchStart
                    }

                    function a(e, t, r, n) {
                        var i = e.type || "unknown-event";
                        e.currentTarget = b.getNodeFromInstance(n), t ? m.invokeGuardedCallbackWithCatch(i, r, e) : m.invokeGuardedCallback(i, r, e), e.currentTarget = null
                    }

                    function s(e, t) {
                        var r = e._dispatchListeners,
                            n = e._dispatchInstances;
                        if (Array.isArray(r))
                            for (var i = 0; i < r.length && !e.isPropagationStopped(); i++) a(e, t, r[i], n[i]);
                        else r && a(e, t, r, n);
                        e._dispatchListeners = null, e._dispatchInstances = null
                    }

                    function u(e) {
                        var t = e._dispatchListeners,
                            r = e._dispatchInstances;
                        if (Array.isArray(t)) {
                            for (var n = 0; n < t.length && !e.isPropagationStopped(); n++)
                                if (t[n](e, r[n])) return r[n]
                        } else if (t && t(e, r)) return r;
                        return null
                    }

                    function l(e) {
                        var t = u(e);
                        return e._dispatchInstances = null, e._dispatchListeners = null, t
                    }

                    function c(e) {
                        var t = e._dispatchListeners,
                            r = e._dispatchInstances;
                        Array.isArray(t) ? v(!1) : void 0, e.currentTarget = b.getNodeFromInstance(r);
                        var n = t ? t(e) : null;
                        return e.currentTarget = null, e._dispatchListeners = null, e._dispatchInstances = null, n
                    }

                    function h(e) {
                        return !!e._dispatchListeners
                    }
                    var p, d, f = e(15),
                        m = e(61),
                        v = e(154),
                        g = (e(162), {
                            injectComponentTree: function(e) {
                                p = e
                            },
                            injectTreeTraversal: function(e) {
                                d = e
                            }
                        }),
                        y = f.topLevelTypes,
                        b = {
                            isEndish: n,
                            isMoveish: i,
                            isStartish: o,
                            executeDirectDispatch: c,
                            executeDispatchesInOrder: s,
                            executeDispatchesInOrderStopAtTrue: l,
                            hasDispatches: h,
                            getInstanceFromNode: function(e) {
                                return p.getInstanceFromNode(e)
                            },
                            getNodeFromInstance: function(e) {
                                return p.getNodeFromInstance(e)
                            },
                            isAncestor: function(e, t) {
                                return d.isAncestor(e, t)
                            },
                            getLowestCommonAncestor: function(e, t) {
                                return d.getLowestCommonAncestor(e, t)
                            },
                            getParentInstance: function(e) {
                                return d.getParentInstance(e)
                            },
                            traverseTwoPhase: function(e, t, r) {
                                return d.traverseTwoPhase(e, t, r)
                            },
                            traverseEnterLeave: function(e, t, r, n, i) {
                                return d.traverseEnterLeave(e, t, r, n, i)
                            },
                            injection: g
                        };
                    t.exports = b
                }, {
                    15: 15,
                    154: 154,
                    162: 162,
                    61: 61
                }],
                19: [function(e, t, r) {
                    function n(e, t, r) {
                        var n = t.dispatchConfig.phasedRegistrationNames[r];
                        return b(e, n)
                    }

                    function i(e, t, r) {
                        var i = t ? y.bubbled : y.captured,
                            o = n(e, r, i);
                        o && (r._dispatchListeners = v(r._dispatchListeners, o), r._dispatchInstances = v(r._dispatchInstances, e))
                    }

                    function o(e) {
                        e && e.dispatchConfig.phasedRegistrationNames && m.traverseTwoPhase(e._targetInst, i, e)
                    }

                    function a(e) {
                        if (e && e.dispatchConfig.phasedRegistrationNames) {
                            var t = e._targetInst,
                                r = t ? m.getParentInstance(t) : null;
                            m.traverseTwoPhase(r, i, e)
                        }
                    }

                    function s(e, t, r) {
                        if (r && r.dispatchConfig.registrationName) {
                            var n = r.dispatchConfig.registrationName,
                                i = b(e, n);
                            i && (r._dispatchListeners = v(r._dispatchListeners, i), r._dispatchInstances = v(r._dispatchInstances, e))
                        }
                    }

                    function u(e) {
                        e && e.dispatchConfig.registrationName && s(e._targetInst, null, e)
                    }

                    function l(e) {
                        g(e, o)
                    }

                    function c(e) {
                        g(e, a)
                    }

                    function h(e, t, r, n) {
                        m.traverseEnterLeave(r, n, s, e, t)
                    }

                    function p(e) {
                        g(e, u)
                    }
                    var d = e(15),
                        f = e(16),
                        m = e(18),
                        v = e(110),
                        g = e(118),
                        y = (e(162), d.PropagationPhases),
                        b = f.getListener,
                        x = {
                            accumulateTwoPhaseDispatches: l,
                            accumulateTwoPhaseDispatchesSkipTarget: c,
                            accumulateDirectDispatches: p,
                            accumulateEnterLeaveDispatches: h
                        };
                    t.exports = x
                }, {
                    110: 110,
                    118: 118,
                    15: 15,
                    16: 16,
                    162: 162,
                    18: 18
                }],
                20: [function(e, t, r) {
                    function n(e) {
                        this._root = e, this._startText = this.getText(), this._fallbackText = null
                    }
                    var i = e(163),
                        o = e(23),
                        a = e(126);
                    i(n.prototype, {
                        destructor: function() {
                            this._root = null, this._startText = null, this._fallbackText = null
                        },
                        getText: function() {
                            return "value" in this._root ? this._root.value : this._root[a()]
                        },
                        getData: function() {
                            if (this._fallbackText) return this._fallbackText;
                            var e, t, r = this._startText,
                                n = r.length,
                                i = this.getText(),
                                o = i.length;
                            for (e = 0; n > e && r[e] === i[e]; e++);
                            var a = n - e;
                            for (t = 1; a >= t && r[n - t] === i[o - t]; t++);
                            var s = t > 1 ? 1 - t : void 0;
                            return this._fallbackText = i.slice(e, s), this._fallbackText
                        }
                    }), o.addPoolingTo(n), t.exports = n
                }, {
                    126: 126,
                    163: 163,
                    23: 23
                }],
                21: [function(e, t, r) {
                    var n = e(10),
                        i = n.injection.MUST_USE_PROPERTY,
                        o = n.injection.HAS_BOOLEAN_VALUE,
                        a = n.injection.HAS_SIDE_EFFECTS,
                        s = n.injection.HAS_NUMERIC_VALUE,
                        u = n.injection.HAS_POSITIVE_NUMERIC_VALUE,
                        l = n.injection.HAS_OVERLOADED_BOOLEAN_VALUE,
                        c = {
                            isCustomAttribute: RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + n.ATTRIBUTE_NAME_CHAR + "]*$")),
                            Properties: {
                                accept: 0,
                                acceptCharset: 0,
                                accessKey: 0,
                                action: 0,
                                allowFullScreen: o,
                                allowTransparency: 0,
                                alt: 0,
                                async: o,
                                autoComplete: 0,
                                autoPlay: o,
                                capture: o,
                                cellPadding: 0,
                                cellSpacing: 0,
                                charSet: 0,
                                challenge: 0,
                                checked: i | o,
                                cite: 0,
                                classID: 0,
                                className: 0,
                                cols: u,
                                colSpan: 0,
                                content: 0,
                                contentEditable: 0,
                                contextMenu: 0,
                                controls: o,
                                coords: 0,
                                crossOrigin: 0,
                                data: 0,
                                dateTime: 0,
                                "default": o,
                                defer: o,
                                dir: 0,
                                disabled: o,
                                download: l,
                                draggable: 0,
                                encType: 0,
                                form: 0,
                                formAction: 0,
                                formEncType: 0,
                                formMethod: 0,
                                formNoValidate: o,
                                formTarget: 0,
                                frameBorder: 0,
                                headers: 0,
                                height: 0,
                                hidden: o,
                                high: 0,
                                href: 0,
                                hrefLang: 0,
                                htmlFor: 0,
                                httpEquiv: 0,
                                icon: 0,
                                id: 0,
                                inputMode: 0,
                                integrity: 0,
                                is: 0,
                                keyParams: 0,
                                keyType: 0,
                                kind: 0,
                                label: 0,
                                lang: 0,
                                list: 0,
                                loop: o,
                                low: 0,
                                manifest: 0,
                                marginHeight: 0,
                                marginWidth: 0,
                                max: 0,
                                maxLength: 0,
                                media: 0,
                                mediaGroup: 0,
                                method: 0,
                                min: 0,
                                minLength: 0,
                                multiple: i | o,
                                muted: i | o,
                                name: 0,
                                nonce: 0,
                                noValidate: o,
                                open: o,
                                optimum: 0,
                                pattern: 0,
                                placeholder: 0,
                                poster: 0,
                                preload: 0,
                                profile: 0,
                                radioGroup: 0,
                                readOnly: o,
                                rel: 0,
                                required: o,
                                reversed: o,
                                role: 0,
                                rows: u,
                                rowSpan: s,
                                sandbox: 0,
                                scope: 0,
                                scoped: o,
                                scrolling: 0,
                                seamless: o,
                                selected: i | o,
                                shape: 0,
                                size: u,
                                sizes: 0,
                                span: u,
                                spellCheck: 0,
                                src: 0,
                                srcDoc: 0,
                                srcLang: 0,
                                srcSet: 0,
                                start: s,
                                step: 0,
                                style: 0,
                                summary: 0,
                                tabIndex: 0,
                                target: 0,
                                title: 0,
                                type: 0,
                                useMap: 0,
                                value: i | a,
                                width: 0,
                                wmode: 0,
                                wrap: 0,
                                about: 0,
                                datatype: 0,
                                inlist: 0,
                                prefix: 0,
                                property: 0,
                                resource: 0,
                                "typeof": 0,
                                vocab: 0,
                                autoCapitalize: 0,
                                autoCorrect: 0,
                                autoSave: 0,
                                color: 0,
                                itemProp: 0,
                                itemScope: o,
                                itemType: 0,
                                itemID: 0,
                                itemRef: 0,
                                results: 0,
                                security: 0,
                                unselectable: 0
                            },
                            DOMAttributeNames: {
                                acceptCharset: "accept-charset",
                                className: "class",
                                htmlFor: "for",
                                httpEquiv: "http-equiv"
                            },
                            DOMPropertyNames: {}
                        };
                    t.exports = c
                }, {
                    10: 10
                }],
                22: [function(e, t, r) {
                    function n(e) {
                        null != e.checkedLink && null != e.valueLink ? l(!1) : void 0
                    }

                    function i(e) {
                        n(e), null != e.value || null != e.onChange ? l(!1) : void 0
                    }

                    function o(e) {
                        n(e), null != e.checked || null != e.onChange ? l(!1) : void 0
                    }

                    function a(e) {
                        if (e) {
                            var t = e.getName();
                            if (t) return " Check the render method of `" + t + "`."
                        }
                        return ""
                    }
                    var s = e(81),
                        u = e(80),
                        l = e(154),
                        c = (e(162), {
                            button: !0,
                            checkbox: !0,
                            image: !0,
                            hidden: !0,
                            radio: !0,
                            reset: !0,
                            submit: !0
                        }),
                        h = {
                            value: function(e, t, r) {
                                return !e[t] || c[e.type] || e.onChange || e.readOnly || e.disabled ? null : new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")
                            },
                            checked: function(e, t, r) {
                                return !e[t] || e.onChange || e.readOnly || e.disabled ? null : new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")
                            },
                            onChange: s.func
                        },
                        p = {},
                        d = {
                            checkPropTypes: function(e, t, r) {
                                for (var n in h) {
                                    if (h.hasOwnProperty(n)) var i = h[n](t, n, e, u.prop);
                                    i instanceof Error && !(i.message in p) && (p[i.message] = !0, a(r))
                                }
                            },
                            getValue: function(e) {
                                return e.valueLink ? (i(e), e.valueLink.value) : e.value
                            },
                            getChecked: function(e) {
                                return e.checkedLink ? (o(e), e.checkedLink.value) : e.checked
                            },
                            executeOnChange: function(e, t) {
                                return e.valueLink ? (i(e), e.valueLink.requestChange(t.target.value)) : e.checkedLink ? (o(e), e.checkedLink.requestChange(t.target.checked)) : e.onChange ? e.onChange.call(void 0, t) : void 0
                            }
                        };
                    t.exports = d
                }, {
                    154: 154,
                    162: 162,
                    80: 80,
                    81: 81
                }],
                23: [function(e, t, r) {
                    var n = e(154),
                        i = function(e) {
                            var t = this;
                            if (t.instancePool.length) {
                                var r = t.instancePool.pop();
                                return t.call(r, e), r
                            }
                            return new t(e)
                        },
                        o = function(e, t) {
                            var r = this;
                            if (r.instancePool.length) {
                                var n = r.instancePool.pop();
                                return r.call(n, e, t), n
                            }
                            return new r(e, t)
                        },
                        a = function(e, t, r) {
                            var n = this;
                            if (n.instancePool.length) {
                                var i = n.instancePool.pop();
                                return n.call(i, e, t, r), i
                            }
                            return new n(e, t, r)
                        },
                        s = function(e, t, r, n) {
                            var i = this;
                            if (i.instancePool.length) {
                                var o = i.instancePool.pop();
                                return i.call(o, e, t, r, n), o
                            }
                            return new i(e, t, r, n)
                        },
                        u = function(e, t, r, n, i) {
                            var o = this;
                            if (o.instancePool.length) {
                                var a = o.instancePool.pop();
                                return o.call(a, e, t, r, n, i), a
                            }
                            return new o(e, t, r, n, i)
                        },
                        l = function(e) {
                            var t = this;
                            e instanceof t ? void 0 : n(!1), e.destructor(), t.instancePool.length < t.poolSize && t.instancePool.push(e)
                        },
                        c = 10,
                        h = i,
                        p = function(e, t) {
                            var r = e;
                            return r.instancePool = [], r.getPooled = t || h, r.poolSize || (r.poolSize = c), r.release = l, r
                        },
                        d = {
                            addPoolingTo: p,
                            oneArgumentPooler: i,
                            twoArgumentPooler: o,
                            threeArgumentPooler: a,
                            fourArgumentPooler: s,
                            fiveArgumentPooler: u
                        };
                    t.exports = d
                }, {
                    154: 154
                }],
                24: [function(e, t, r) {
                    var n = e(163),
                        i = e(27),
                        o = e(29),
                        a = e(28),
                        s = e(42),
                        u = e(58),
                        l = (e(59), e(81)),
                        c = e(91),
                        h = e(131),
                        p = (e(162), u.createElement),
                        d = u.createFactory,
                        f = u.cloneElement,
                        m = n,
                        v = {
                            Children: {
                                map: i.map,
                                forEach: i.forEach,
                                count: i.count,
                                toArray: i.toArray,
                                only: h
                            },
                            Component: o,
                            createElement: p,
                            cloneElement: f,
                            isValidElement: u.isValidElement,
                            PropTypes: l,
                            createClass: a.createClass,
                            createFactory: d,
                            createMixin: function(e) {
                                return e
                            },
                            DOM: s,
                            version: c,
                            __spread: m
                        };
                    t.exports = v
                }, {
                    131: 131,
                    162: 162,
                    163: 163,
                    27: 27,
                    28: 28,
                    29: 29,
                    42: 42,
                    58: 58,
                    59: 59,
                    81: 81,
                    91: 91
                }],
                25: [function(e, t, r) {
                    function n(e) {
                        return Object.prototype.hasOwnProperty.call(e, v) || (e[v] = f++, p[e[v]] = {}), p[e[v]]
                    }
                    var i, o = e(163),
                        a = e(15),
                        s = e(17),
                        u = e(62),
                        l = e(109),
                        c = e(127),
                        h = e(129),
                        p = {},
                        d = !1,
                        f = 0,
                        m = {
                            topAbort: "abort",
                            topAnimationEnd: c("animationend") || "animationend",
                            topAnimationIteration: c("animationiteration") || "animationiteration",
                            topAnimationStart: c("animationstart") || "animationstart",
                            topBlur: "blur",
                            topCanPlay: "canplay",
                            topCanPlayThrough: "canplaythrough",
                            topChange: "change",
                            topClick: "click",
                            topCompositionEnd: "compositionend",
                            topCompositionStart: "compositionstart",
                            topCompositionUpdate: "compositionupdate",
                            topContextMenu: "contextmenu",
                            topCopy: "copy",
                            topCut: "cut",
                            topDoubleClick: "dblclick",
                            topDrag: "drag",
                            topDragEnd: "dragend",
                            topDragEnter: "dragenter",
                            topDragExit: "dragexit",
                            topDragLeave: "dragleave",
                            topDragOver: "dragover",
                            topDragStart: "dragstart",
                            topDrop: "drop",
                            topDurationChange: "durationchange",
                            topEmptied: "emptied",
                            topEncrypted: "encrypted",
                            topEnded: "ended",
                            topError: "error",
                            topFocus: "focus",
                            topInput: "input",
                            topKeyDown: "keydown",
                            topKeyPress: "keypress",
                            topKeyUp: "keyup",
                            topLoadedData: "loadeddata",
                            topLoadedMetadata: "loadedmetadata",
                            topLoadStart: "loadstart",
                            topMouseDown: "mousedown",
                            topMouseMove: "mousemove",
                            topMouseOut: "mouseout",
                            topMouseOver: "mouseover",
                            topMouseUp: "mouseup",
                            topPaste: "paste",
                            topPause: "pause",
                            topPlay: "play",
                            topPlaying: "playing",
                            topProgress: "progress",
                            topRateChange: "ratechange",
                            topScroll: "scroll",
                            topSeeked: "seeked",
                            topSeeking: "seeking",
                            topSelectionChange: "selectionchange",
                            topStalled: "stalled",
                            topSuspend: "suspend",
                            topTextInput: "textInput",
                            topTimeUpdate: "timeupdate",
                            topTouchCancel: "touchcancel",
                            topTouchEnd: "touchend",
                            topTouchMove: "touchmove",
                            topTouchStart: "touchstart",
                            topTransitionEnd: c("transitionend") || "transitionend",
                            topVolumeChange: "volumechange",
                            topWaiting: "waiting",
                            topWheel: "wheel"
                        },
                        v = "_reactListenersID" + String(Math.random()).slice(2),
                        g = o({}, u, {
                            ReactEventListener: null,
                            injection: {
                                injectReactEventListener: function(e) {
                                    e.setHandleTopLevel(g.handleTopLevel), g.ReactEventListener = e
                                }
                            },
                            setEnabled: function(e) {
                                g.ReactEventListener && g.ReactEventListener.setEnabled(e)
                            },
                            isEnabled: function() {
                                return !(!g.ReactEventListener || !g.ReactEventListener.isEnabled())
                            },
                            listenTo: function(e, t) {
                                for (var r = t, i = n(r), o = s.registrationNameDependencies[e], u = a.topLevelTypes, l = 0; l < o.length; l++) {
                                    var c = o[l];
                                    i.hasOwnProperty(c) && i[c] || (c === u.topWheel ? h("wheel") ? g.ReactEventListener.trapBubbledEvent(u.topWheel, "wheel", r) : h("mousewheel") ? g.ReactEventListener.trapBubbledEvent(u.topWheel, "mousewheel", r) : g.ReactEventListener.trapBubbledEvent(u.topWheel, "DOMMouseScroll", r) : c === u.topScroll ? h("scroll", !0) ? g.ReactEventListener.trapCapturedEvent(u.topScroll, "scroll", r) : g.ReactEventListener.trapBubbledEvent(u.topScroll, "scroll", g.ReactEventListener.WINDOW_HANDLE) : c === u.topFocus || c === u.topBlur ? (h("focus", !0) ? (g.ReactEventListener.trapCapturedEvent(u.topFocus, "focus", r), g.ReactEventListener.trapCapturedEvent(u.topBlur, "blur", r)) : h("focusin") && (g.ReactEventListener.trapBubbledEvent(u.topFocus, "focusin", r), g.ReactEventListener.trapBubbledEvent(u.topBlur, "focusout", r)), i[u.topBlur] = !0, i[u.topFocus] = !0) : m.hasOwnProperty(c) && g.ReactEventListener.trapBubbledEvent(c, m[c], r), i[c] = !0)
                                }
                            },
                            trapBubbledEvent: function(e, t, r) {
                                return g.ReactEventListener.trapBubbledEvent(e, t, r)
                            },
                            trapCapturedEvent: function(e, t, r) {
                                return g.ReactEventListener.trapCapturedEvent(e, t, r)
                            },
                            ensureScrollValueMonitoring: function() {
                                if (void 0 === i && (i = document.createEvent && "pageX" in document.createEvent("MouseEvent")), !i && !d) {
                                    var e = l.refreshScrollValues;
                                    g.ReactEventListener.monitorScrollValue(e), d = !0
                                }
                            }
                        });
                    t.exports = g
                }, {
                    109: 109,
                    127: 127,
                    129: 129,
                    15: 15,
                    163: 163,
                    17: 17,
                    62: 62
                }],
                26: [function(e, t, r) {
                    function n(e, t, r) {
                        var n = void 0 === e[r];
                        null != t && n && (e[r] = o(t))
                    }
                    var i = e(83),
                        o = e(128),
                        a = e(136),
                        s = e(137),
                        u = (e(162), {
                            instantiateChildren: function(e, t, r) {
                                if (null == e) return null;
                                var i = {};
                                return s(e, n, i), i
                            },
                            updateChildren: function(e, t, r, n, s) {
                                if (t || e) {
                                    var u, l;
                                    for (u in t)
                                        if (t.hasOwnProperty(u)) {
                                            l = e && e[u];
                                            var c = l && l._currentElement,
                                                h = t[u];
                                            if (null != l && a(c, h)) i.receiveComponent(l, h, n, s), t[u] = l;
                                            else {
                                                l && (r[u] = i.getNativeNode(l), i.unmountComponent(l, !1));
                                                var p = o(h);
                                                t[u] = p
                                            }
                                        }
                                    for (u in e) !e.hasOwnProperty(u) || t && t.hasOwnProperty(u) || (l = e[u], r[u] = i.getNativeNode(l), i.unmountComponent(l, !1))
                                }
                            },
                            unmountChildren: function(e, t) {
                                for (var r in e)
                                    if (e.hasOwnProperty(r)) {
                                        var n = e[r];
                                        i.unmountComponent(n, t)
                                    }
                            }
                        });
                    t.exports = u
                }, {
                    128: 128,
                    136: 136,
                    137: 137,
                    162: 162,
                    83: 83
                }],
                27: [function(e, t, r) {
                    function n(e) {
                        return ("" + e).replace(x, "$&/")
                    }

                    function i(e, t) {
                        this.func = e, this.context = t, this.count = 0
                    }

                    function o(e, t, r) {
                        var n = e.func,
                            i = e.context;
                        n.call(i, t, e.count++)
                    }

                    function a(e, t, r) {
                        if (null == e) return e;
                        var n = i.getPooled(t, r);
                        g(e, o, n), i.release(n)
                    }

                    function s(e, t, r, n) {
                        this.result = e, this.keyPrefix = t, this.func = r, this.context = n, this.count = 0
                    }

                    function u(e, t, r) {
                        var i = e.result,
                            o = e.keyPrefix,
                            a = e.func,
                            s = e.context,
                            u = a.call(s, t, e.count++);
                        Array.isArray(u) ? l(u, i, r, v.thatReturnsArgument) : null != u && (m.isValidElement(u) && (u = m.cloneAndReplaceKey(u, o + (!u.key || t && t.key === u.key ? "" : n(u.key) + "/") + r)), i.push(u))
                    }

                    function l(e, t, r, i, o) {
                        var a = "";
                        null != r && (a = n(r) + "/");
                        var l = s.getPooled(t, a, i, o);
                        g(e, u, l), s.release(l)
                    }

                    function c(e, t, r) {
                        if (null == e) return e;
                        var n = [];
                        return l(e, n, null, t, r), n
                    }

                    function h(e, t, r) {
                        return null
                    }

                    function p(e, t) {
                        return g(e, h, null)
                    }

                    function d(e) {
                        var t = [];
                        return l(e, t, null, v.thatReturnsArgument), t
                    }
                    var f = e(23),
                        m = e(58),
                        v = e(146),
                        g = e(137),
                        y = f.twoArgumentPooler,
                        b = f.fourArgumentPooler,
                        x = /\/+/g;
                    i.prototype.destructor = function() {
                        this.func = null, this.context = null, this.count = 0
                    }, f.addPoolingTo(i, y), s.prototype.destructor = function() {
                        this.result = null, this.keyPrefix = null, this.func = null, this.context = null, this.count = 0
                    }, f.addPoolingTo(s, b);
                    var _ = {
                        forEach: a,
                        map: c,
                        mapIntoWithKeyPrefixInternal: l,
                        count: p,
                        toArray: d
                    };
                    t.exports = _
                }, {
                    137: 137,
                    146: 146,
                    23: 23,
                    58: 58
                }],
                28: [function(e, t, r) {
                    function n(e, t) {
                        var r = w.hasOwnProperty(t) ? w[t] : null;
                        E.hasOwnProperty(t) && (r !== x.OVERRIDE_BASE ? v(!1) : void 0), e && (r !== x.DEFINE_MANY && r !== x.DEFINE_MANY_MERGED ? v(!1) : void 0)
                    }

                    function i(e, t) {
                        if (t) {
                            "function" == typeof t ? v(!1) : void 0, d.isValidElement(t) ? v(!1) : void 0;
                            var r = e.prototype,
                                i = r.__reactAutoBindPairs;
                            t.hasOwnProperty(b) && C.mixins(e, t.mixins);
                            for (var o in t)
                                if (t.hasOwnProperty(o) && o !== b) {
                                    var a = t[o],
                                        l = r.hasOwnProperty(o);
                                    if (n(l, o), C.hasOwnProperty(o)) C[o](e, a);
                                    else {
                                        var c = w.hasOwnProperty(o),
                                            h = "function" == typeof a,
                                            p = h && !c && !l && t.autobind !== !1;
                                        if (p) i.push(o, a), r[o] = a;
                                        else if (l) {
                                            var f = w[o];
                                            !c || f !== x.DEFINE_MANY_MERGED && f !== x.DEFINE_MANY ? v(!1) : void 0, f === x.DEFINE_MANY_MERGED ? r[o] = s(r[o], a) : f === x.DEFINE_MANY && (r[o] = u(r[o], a))
                                        } else r[o] = a
                                    }
                                }
                        }
                    }

                    function o(e, t) {
                        if (t)
                            for (var r in t) {
                                var n = t[r];
                                if (t.hasOwnProperty(r)) {
                                    var i = r in C;
                                    i ? v(!1) : void 0;
                                    var o = r in e;
                                    o ? v(!1) : void 0, e[r] = n
                                }
                            }
                    }

                    function a(e, t) {
                        e && t && "object" == typeof e && "object" == typeof t ? void 0 : v(!1);
                        for (var r in t) t.hasOwnProperty(r) && (void 0 !== e[r] ? v(!1) : void 0, e[r] = t[r]);
                        return e
                    }

                    function s(e, t) {
                        return function() {
                            var r = e.apply(this, arguments),
                                n = t.apply(this, arguments);
                            if (null == r) return n;
                            if (null == n) return r;
                            var i = {};
                            return a(i, r), a(i, n), i
                        }
                    }

                    function u(e, t) {
                        return function() {
                            e.apply(this, arguments), t.apply(this, arguments)
                        }
                    }

                    function l(e, t) {
                        var r = t.bind(e);
                        return r
                    }

                    function c(e) {
                        for (var t = e.__reactAutoBindPairs, r = 0; r < t.length; r += 2) {
                            var n = t[r],
                                i = t[r + 1];
                            e[n] = l(e, i)
                        }
                    }
                    var h = e(163),
                        p = e(29),
                        d = e(58),
                        f = (e(80), e(79), e(76)),
                        m = e(147),
                        v = e(154),
                        g = e(157),
                        y = e(158),
                        b = (e(162), y({
                            mixins: null
                        })),
                        x = g({
                            DEFINE_ONCE: null,
                            DEFINE_MANY: null,
                            OVERRIDE_BASE: null,
                            DEFINE_MANY_MERGED: null
                        }),
                        _ = [],
                        w = {
                            mixins: x.DEFINE_MANY,
                            statics: x.DEFINE_MANY,
                            propTypes: x.DEFINE_MANY,
                            contextTypes: x.DEFINE_MANY,
                            childContextTypes: x.DEFINE_MANY,
                            getDefaultProps: x.DEFINE_MANY_MERGED,
                            getInitialState: x.DEFINE_MANY_MERGED,
                            getChildContext: x.DEFINE_MANY_MERGED,
                            render: x.DEFINE_ONCE,
                            componentWillMount: x.DEFINE_MANY,
                            componentDidMount: x.DEFINE_MANY,
                            componentWillReceiveProps: x.DEFINE_MANY,
                            shouldComponentUpdate: x.DEFINE_ONCE,
                            componentWillUpdate: x.DEFINE_MANY,
                            componentDidUpdate: x.DEFINE_MANY,
                            componentWillUnmount: x.DEFINE_MANY,
                            updateComponent: x.OVERRIDE_BASE
                        },
                        C = {
                            displayName: function(e, t) {
                                e.displayName = t
                            },
                            mixins: function(e, t) {
                                if (t)
                                    for (var r = 0; r < t.length; r++) i(e, t[r])
                            },
                            childContextTypes: function(e, t) {
                                e.childContextTypes = h({}, e.childContextTypes, t)
                            },
                            contextTypes: function(e, t) {
                                e.contextTypes = h({}, e.contextTypes, t)
                            },
                            getDefaultProps: function(e, t) {
                                e.getDefaultProps ? e.getDefaultProps = s(e.getDefaultProps, t) : e.getDefaultProps = t
                            },
                            propTypes: function(e, t) {
                                e.propTypes = h({}, e.propTypes, t)
                            },
                            statics: function(e, t) {
                                o(e, t)
                            },
                            autobind: function() {}
                        },
                        E = {
                            replaceState: function(e, t) {
                                this.updater.enqueueReplaceState(this, e), t && this.updater.enqueueCallback(this, t, "replaceState")
                            },
                            isMounted: function() {
                                return this.updater.isMounted(this)
                            }
                        },
                        S = function() {};
                    h(S.prototype, p.prototype, E);
                    var T = {
                        createClass: function(e) {
                            var t = function(e, t, r) {
                                this.__reactAutoBindPairs.length && c(this), this.props = e, this.context = t, this.refs = m, this.updater = r || f, this.state = null;
                                var n = this.getInitialState ? this.getInitialState() : null;
                                "object" != typeof n || Array.isArray(n) ? v(!1) : void 0, this.state = n
                            };
                            t.prototype = new S, t.prototype.constructor = t, t.prototype.__reactAutoBindPairs = [], _.forEach(i.bind(null, t)), i(t, e), t.getDefaultProps && (t.defaultProps = t.getDefaultProps()), t.prototype.render ? void 0 : v(!1);
                            for (var r in w) t.prototype[r] || (t.prototype[r] = null);
                            return t
                        },
                        injection: {
                            injectMixin: function(e) {
                                _.push(e)
                            }
                        }
                    };
                    t.exports = T
                }, {
                    147: 147,
                    154: 154,
                    157: 157,
                    158: 158,
                    162: 162,
                    163: 163,
                    29: 29,
                    58: 58,
                    76: 76,
                    79: 79,
                    80: 80
                }],
                29: [function(e, t, r) {
                    function n(e, t, r) {
                        this.props = e, this.context = t, this.refs = o, this.updater = r || i
                    }
                    var i = e(76),
                        o = (e(68), e(112), e(147)),
                        a = e(154);
                    e(162), n.prototype.isReactComponent = {}, n.prototype.setState = function(e, t) {
                        "object" != typeof e && "function" != typeof e && null != e ? a(!1) : void 0, this.updater.enqueueSetState(this, e), t && this.updater.enqueueCallback(this, t, "setState")
                    }, n.prototype.forceUpdate = function(e) {
                        this.updater.enqueueForceUpdate(this), e && this.updater.enqueueCallback(this, e, "forceUpdate")
                    }, t.exports = n
                }, {
                    112: 112,
                    147: 147,
                    154: 154,
                    162: 162,
                    68: 68,
                    76: 76
                }],
                30: [function(e, t, r) {
                    var n = e(7),
                        i = e(44),
                        o = e(78),
                        a = {
                            processChildrenUpdates: i.dangerouslyProcessChildrenUpdates,
                            replaceNodeWithMarkup: n.dangerouslyReplaceNodeWithMarkup,
                            unmountIDFromEnvironment: function(e) {}
                        };
                    o.measureMethods(a, "ReactComponentBrowserEnvironment", {
                        replaceNodeWithMarkup: "replaceNodeWithMarkup"
                    }), t.exports = a
                }, {
                    44: 44,
                    7: 7,
                    78: 78
                }],
                31: [function(e, t, r) {
                    var n = e(154),
                        i = !1,
                        o = {
                            unmountIDFromEnvironment: null,
                            replaceNodeWithMarkup: null,
                            processChildrenUpdates: null,
                            injection: {
                                injectEnvironment: function(e) {
                                    i ? n(!1) : void 0, o.unmountIDFromEnvironment = e.unmountIDFromEnvironment, o.replaceNodeWithMarkup = e.replaceNodeWithMarkup, o.processChildrenUpdates = e.processChildrenUpdates, i = !0
                                }
                            }
                        };
                    t.exports = o
                }, {
                    154: 154
                }],
                32: [function(e, t, r) {
                    function n(e) {
                        var t = e._currentElement._owner || null;
                        if (t) {
                            var r = t.getName();
                            if (r) return " Check the render method of `" + r + "`."
                        }
                        return ""
                    }

                    function i(e) {}

                    function o(e, t) {}
                    var a = e(163),
                        s = e(31),
                        u = e(33),
                        l = e(58),
                        c = e(61),
                        h = e(67),
                        p = (e(68), e(75)),
                        d = e(78),
                        f = e(80),
                        m = (e(79), e(83)),
                        v = e(89),
                        g = e(147),
                        y = e(154),
                        b = e(136);
                    e(162), i.prototype.render = function() {
                        var e = h.get(this)._currentElement.type,
                            t = e(this.props, this.context, this.updater);
                        return o(e, t), t
                    };
                    var x = 1,
                        _ = {
                            construct: function(e) {
                                this._currentElement = e, this._rootNodeID = null, this._instance = null, this._nativeParent = null, this._nativeContainerInfo = null, this._pendingElement = null, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._renderedNodeType = null, this._renderedComponent = null, this._context = null, this._mountOrder = 0, this._topLevelWrapper = null, this._pendingCallbacks = null
                            },
                            mountComponent: function(e, t, r, n) {
                                this._context = n, this._mountOrder = x++, this._nativeParent = t, this._nativeContainerInfo = r;
                                var a, s, u = this._processProps(this._currentElement.props),
                                    c = this._processContext(n),
                                    p = this._currentElement.type;
                                p.prototype && p.prototype.isReactComponent ? a = new p(u, c, v) : (a = p(u, c, v), null != a && null != a.render || (s = a, o(p, s), null === a || a === !1 || l.isValidElement(a) ? void 0 : y(!1), a = new i(p))), a.props = u, a.context = c, a.refs = g, a.updater = v, this._instance = a, h.set(a, this);
                                var d = a.state;
                                void 0 === d && (a.state = d = null), "object" != typeof d || Array.isArray(d) ? y(!1) : void 0, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1;
                                var f;
                                return f = a.unstable_handleError ? this.performInitialMountWithErrorHandling(s, t, r, e, n) : this.performInitialMount(s, t, r, e, n), a.componentDidMount && e.getReactMountReady().enqueue(a.componentDidMount, a), f
                            },
                            performInitialMountWithErrorHandling: function(e, t, r, n, i) {
                                var o, a = n.checkpoint();
                                try {
                                    o = this.performInitialMount(e, t, r, n, i)
                                } catch (s) {
                                    n.rollback(a), this._instance.unstable_handleError(s), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), a = n.checkpoint(), this._renderedComponent.unmountComponent(!0), n.rollback(a), o = this.performInitialMount(e, t, r, n, i)
                                }
                                return o
                            },
                            performInitialMount: function(e, t, r, n, i) {
                                var o = this._instance;
                                o.componentWillMount && (o.componentWillMount(), this._pendingStateQueue && (o.state = this._processPendingState(o.props, o.context))), void 0 === e && (e = this._renderValidatedComponent()), this._renderedNodeType = p.getType(e), this._renderedComponent = this._instantiateReactComponent(e);
                                var a = m.mountComponent(this._renderedComponent, n, t, r, this._processChildContext(i));
                                return a
                            },
                            getNativeNode: function() {
                                return m.getNativeNode(this._renderedComponent)
                            },
                            unmountComponent: function(e) {
                                if (this._renderedComponent) {
                                    var t = this._instance;
                                    if (t.componentWillUnmount)
                                        if (e) {
                                            var r = this.getName() + ".componentWillUnmount()";
                                            c.invokeGuardedCallback(r, t.componentWillUnmount.bind(t))
                                        } else t.componentWillUnmount();
                                    this._renderedComponent && (m.unmountComponent(this._renderedComponent, e), this._renderedNodeType = null, this._renderedComponent = null, this._instance = null), this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._pendingCallbacks = null, this._pendingElement = null, this._context = null, this._rootNodeID = null, this._topLevelWrapper = null, h.remove(t)
                                }
                            },
                            _maskContext: function(e) {
                                var t = this._currentElement.type,
                                    r = t.contextTypes;
                                if (!r) return g;
                                var n = {};
                                for (var i in r) n[i] = e[i];
                                return n
                            },
                            _processContext: function(e) {
                                var t = this._maskContext(e);
                                return t
                            },
                            _processChildContext: function(e) {
                                var t = this._currentElement.type,
                                    r = this._instance,
                                    n = r.getChildContext && r.getChildContext();
                                if (n) {
                                    "object" != typeof t.childContextTypes ? y(!1) : void 0;
                                    for (var i in n) i in t.childContextTypes ? void 0 : y(!1);
                                    return a({}, e, n)
                                }
                                return e
                            },
                            _processProps: function(e) {
                                return e
                            },
                            _checkPropTypes: function(e, t, r) {
                                var i = this.getName();
                                for (var o in e)
                                    if (e.hasOwnProperty(o)) {
                                        var a;
                                        try {
                                            "function" != typeof e[o] ? y(!1) : void 0, a = e[o](t, o, i, r)
                                        } catch (s) {
                                            a = s
                                        }
                                        a instanceof Error && (n(this), r === f.prop)
                                    }
                            },
                            receiveComponent: function(e, t, r) {
                                var n = this._currentElement,
                                    i = this._context;
                                this._pendingElement = null, this.updateComponent(t, n, e, i, r)
                            },
                            performUpdateIfNecessary: function(e) {
                                null != this._pendingElement && m.receiveComponent(this, this._pendingElement, e, this._context), (null !== this._pendingStateQueue || this._pendingForceUpdate) && this.updateComponent(e, this._currentElement, this._currentElement, this._context, this._context)
                            },
                            updateComponent: function(e, t, r, n, i) {
                                var o, a, s = this._instance,
                                    u = !1;
                                this._context === i ? o = s.context : (o = this._processContext(i), u = !0), t === r ? a = r.props : (a = this._processProps(r.props), u = !0), u && s.componentWillReceiveProps && s.componentWillReceiveProps(a, o);
                                var l = this._processPendingState(a, o),
                                    c = this._pendingForceUpdate || !s.shouldComponentUpdate || s.shouldComponentUpdate(a, l, o);
                                c ? (this._pendingForceUpdate = !1, this._performComponentUpdate(r, a, l, o, e, i)) : (this._currentElement = r, this._context = i, s.props = a, s.state = l, s.context = o)
                            },
                            _processPendingState: function(e, t) {
                                var r = this._instance,
                                    n = this._pendingStateQueue,
                                    i = this._pendingReplaceState;
                                if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !n) return r.state;
                                if (i && 1 === n.length) return n[0];
                                for (var o = a({}, i ? n[0] : r.state), s = i ? 1 : 0; s < n.length; s++) {
                                    var u = n[s];
                                    a(o, "function" == typeof u ? u.call(r, o, e, t) : u)
                                }
                                return o
                            },
                            _performComponentUpdate: function(e, t, r, n, i, o) {
                                var a, s, u, l = this._instance,
                                    c = Boolean(l.componentDidUpdate);
                                c && (a = l.props, s = l.state, u = l.context), l.componentWillUpdate && l.componentWillUpdate(t, r, n), this._currentElement = e, this._context = o, l.props = t, l.state = r, l.context = n, this._updateRenderedComponent(i, o), c && i.getReactMountReady().enqueue(l.componentDidUpdate.bind(l, a, s, u), l)
                            },
                            _updateRenderedComponent: function(e, t) {
                                var r = this._renderedComponent,
                                    n = r._currentElement,
                                    i = this._renderValidatedComponent();
                                if (b(n, i)) m.receiveComponent(r, i, e, this._processChildContext(t));
                                else {
                                    var o = m.getNativeNode(r);
                                    m.unmountComponent(r, !1), this._renderedNodeType = p.getType(i), this._renderedComponent = this._instantiateReactComponent(i);
                                    var a = m.mountComponent(this._renderedComponent, e, this._nativeParent, this._nativeContainerInfo, this._processChildContext(t));
                                    this._replaceNodeWithMarkup(o, a)
                                }
                            },
                            _replaceNodeWithMarkup: function(e, t) {
                                s.replaceNodeWithMarkup(e, t)
                            },
                            _renderValidatedComponentWithoutOwnerOrContext: function() {
                                var e = this._instance,
                                    t = e.render();
                                return t
                            },
                            _renderValidatedComponent: function() {
                                var e;
                                u.current = this;
                                try {
                                    e = this._renderValidatedComponentWithoutOwnerOrContext()
                                } finally {
                                    u.current = null
                                }
                                return null === e || e === !1 || l.isValidElement(e) ? void 0 : y(!1), e
                            },
                            attachRef: function(e, t) {
                                var r = this.getPublicInstance();
                                null == r ? y(!1) : void 0;
                                var n = t.getPublicInstance(),
                                    i = r.refs === g ? r.refs = {} : r.refs;
                                i[e] = n
                            },
                            detachRef: function(e) {
                                var t = this.getPublicInstance().refs;
                                delete t[e]
                            },
                            getName: function() {
                                var e = this._currentElement.type,
                                    t = this._instance && this._instance.constructor;
                                return e.displayName || t && t.displayName || e.name || t && t.name || null
                            },
                            getPublicInstance: function() {
                                var e = this._instance;
                                return e instanceof i ? null : e
                            },
                            _instantiateReactComponent: null
                        };
                    d.measureMethods(_, "ReactCompositeComponent", {
                        mountComponent: "mountComponent",
                        updateComponent: "updateComponent",
                        _renderValidatedComponent: "_renderValidatedComponent"
                    });
                    var w = {
                        Mixin: _
                    };
                    t.exports = w
                }, {
                    136: 136,
                    147: 147,
                    154: 154,
                    162: 162,
                    163: 163,
                    31: 31,
                    33: 33,
                    58: 58,
                    61: 61,
                    67: 67,
                    68: 68,
                    75: 75,
                    78: 78,
                    79: 79,
                    80: 80,
                    83: 83,
                    89: 89
                }],
                33: [function(e, t, r) {
                    var n = {
                        current: null
                    };
                    t.exports = n
                }, {}],
                34: [function(e, t, r) {
                    var n = e(38),
                        i = e(57),
                        o = e(71),
                        a = e(78),
                        s = e(83),
                        u = e(90),
                        l = e(91),
                        c = e(116),
                        h = e(124),
                        p = e(133);
                    e(162), i.inject();
                    var d = a.measure("React", "render", o.render),
                        f = {
                            findDOMNode: c,
                            render: d,
                            unmountComponentAtNode: o.unmountComponentAtNode,
                            version: l,
                            unstable_batchedUpdates: u.batchedUpdates,
                            unstable_renderSubtreeIntoContainer: p
                        };
                    "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
                        ComponentTree: {
                            getClosestInstanceFromNode: n.getClosestInstanceFromNode,
                            getNodeFromInstance: function(e) {
                                return e._renderedComponent && (e = h(e)), e ? n.getNodeFromInstance(e) : null
                            }
                        },
                        Mount: o,
                        Reconciler: s
                    }), t.exports = f
                }, {
                    116: 116,
                    124: 124,
                    133: 133,
                    162: 162,
                    38: 38,
                    57: 57,
                    71: 71,
                    78: 78,
                    83: 83,
                    90: 90,
                    91: 91
                }],
                35: [function(e, t, r) {
                    var n = {
                            onClick: !0,
                            onDoubleClick: !0,
                            onMouseDown: !0,
                            onMouseMove: !0,
                            onMouseUp: !0,
                            onClickCapture: !0,
                            onDoubleClickCapture: !0,
                            onMouseDownCapture: !0,
                            onMouseMoveCapture: !0,
                            onMouseUpCapture: !0
                        },
                        i = {
                            getNativeProps: function(e, t) {
                                if (!t.disabled) return t;
                                var r = {};
                                for (var i in t) t.hasOwnProperty(i) && !n[i] && (r[i] = t[i]);
                                return r
                            }
                        };
                    t.exports = i
                }, {}],
                36: [function(e, t, r) {
                    function n(e, t) {
                        t && (Y[e._tag] && (null != t.children || null != t.dangerouslySetInnerHTML ? B(!1) : void 0), null != t.dangerouslySetInnerHTML && (null != t.children ? B(!1) : void 0, "object" == typeof t.dangerouslySetInnerHTML && j in t.dangerouslySetInnerHTML ? void 0 : B(!1)), null != t.style && "object" != typeof t.style ? B(!1) : void 0)
                    }

                    function i(e, t, r, n) {
                        var i = e._nativeContainerInfo,
                            a = i._ownerDocument;
                        a && (F(t, a), n.getReactMountReady().enqueue(o, {
                            inst: e,
                            registrationName: t,
                            listener: r
                        }))
                    }

                    function o() {
                        var e = this;
                        x.putListener(e.inst, e.registrationName, e.listener)
                    }

                    function a() {
                        var e = this;
                        A.postMountWrapper(e)
                    }

                    function s() {
                        var e = this;
                        e._rootNodeID ? void 0 : B(!1);
                        var t = O(e);
                        switch (t ? void 0 : B(!1), e._tag) {
                            case "iframe":
                            case "object":
                                e._wrapperState.listeners = [w.trapBubbledEvent(b.topLevelTypes.topLoad, "load", t)];
                                break;
                            case "video":
                            case "audio":
                                e._wrapperState.listeners = [];
                                for (var r in q) q.hasOwnProperty(r) && e._wrapperState.listeners.push(w.trapBubbledEvent(b.topLevelTypes[r], q[r], t));
                                break;
                            case "img":
                                e._wrapperState.listeners = [w.trapBubbledEvent(b.topLevelTypes.topError, "error", t), w.trapBubbledEvent(b.topLevelTypes.topLoad, "load", t)];
                                break;
                            case "form":
                                e._wrapperState.listeners = [w.trapBubbledEvent(b.topLevelTypes.topReset, "reset", t), w.trapBubbledEvent(b.topLevelTypes.topSubmit, "submit", t)];
                                break;
                            case "input":
                            case "select":
                            case "textarea":
                                e._wrapperState.listeners = [w.trapBubbledEvent(b.topLevelTypes.topInvalid, "invalid", t)]
                        }
                    }

                    function u() {
                        P.postUpdateWrapper(this)
                    }

                    function l(e) {
                        Z.call(Q, e) || (K.test(e) ? void 0 : B(!1), Q[e] = !0)
                    }

                    function c(e, t) {
                        return e.indexOf("-") >= 0 || null != t.is
                    }

                    function h(e) {
                        var t = e.type;
                        l(t), this._currentElement = e, this._tag = t.toLowerCase(), this._namespaceURI = null, this._renderedChildren = null, this._previousStyle = null, this._previousStyleCopy = null, this._nativeNode = null, this._nativeParent = null, this._rootNodeID = null, this._domID = null, this._nativeContainerInfo = null, this._wrapperState = null, this._topLevelWrapper = null, this._flags = 0
                    }
                    var p = e(163),
                        d = e(1),
                        f = e(4),
                        m = e(8),
                        v = e(9),
                        g = e(10),
                        y = e(11),
                        b = e(15),
                        x = e(16),
                        _ = e(17),
                        w = e(25),
                        C = e(30),
                        E = e(35),
                        S = e(37),
                        T = e(38),
                        M = e(45),
                        A = e(47),
                        P = e(48),
                        R = e(52),
                        k = e(72),
                        I = e(78),
                        D = e(115),
                        B = e(154),
                        L = (e(129), e(158)),
                        V = (e(161), e(138), e(162), S),
                        N = x.deleteListener,
                        O = T.getNodeFromInstance,
                        F = w.listenTo,
                        U = _.registrationNameModules,
                        z = {
                            string: !0,
                            number: !0
                        },
                        H = L({
                            style: null
                        }),
                        j = L({
                            __html: null
                        }),
                        G = {
                            children: null,
                            dangerouslySetInnerHTML: null,
                            suppressContentEditableWarning: null
                        },
                        q = {
                            topAbort: "abort",
                            topCanPlay: "canplay",
                            topCanPlayThrough: "canplaythrough",
                            topDurationChange: "durationchange",
                            topEmptied: "emptied",
                            topEncrypted: "encrypted",
                            topEnded: "ended",
                            topError: "error",
                            topLoadedData: "loadeddata",
                            topLoadedMetadata: "loadedmetadata",
                            topLoadStart: "loadstart",
                            topPause: "pause",
                            topPlay: "play",
                            topPlaying: "playing",
                            topProgress: "progress",
                            topRateChange: "ratechange",
                            topSeeked: "seeked",
                            topSeeking: "seeking",
                            topStalled: "stalled",
                            topSuspend: "suspend",
                            topTimeUpdate: "timeupdate",
                            topVolumeChange: "volumechange",
                            topWaiting: "waiting"
                        },
                        W = {
                            area: !0,
                            base: !0,
                            br: !0,
                            col: !0,
                            embed: !0,
                            hr: !0,
                            img: !0,
                            input: !0,
                            keygen: !0,
                            link: !0,
                            meta: !0,
                            param: !0,
                            source: !0,
                            track: !0,
                            wbr: !0
                        },
                        X = {
                            listing: !0,
                            pre: !0,
                            textarea: !0
                        },
                        Y = p({
                            menuitem: !0
                        }, W),
                        K = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
                        Q = {},
                        Z = {}.hasOwnProperty,
                        $ = 1;
                    h.displayName = "ReactDOMComponent", h.Mixin = {
                        mountComponent: function(e, t, r, i) {
                            this._rootNodeID = $++, this._domID = r._idCounter++, this._nativeParent = t, this._nativeContainerInfo = r;
                            var o = this._currentElement.props;
                            switch (this._tag) {
                                case "iframe":
                                case "object":
                                case "img":
                                case "form":
                                case "video":
                                case "audio":
                                    this._wrapperState = {
                                        listeners: null
                                    }, e.getReactMountReady().enqueue(s, this);
                                    break;
                                case "button":
                                    o = E.getNativeProps(this, o, t);
                                    break;
                                case "input":
                                    M.mountWrapper(this, o, t), o = M.getNativeProps(this, o), e.getReactMountReady().enqueue(s, this);
                                    break;
                                case "option":
                                    A.mountWrapper(this, o, t), o = A.getNativeProps(this, o);
                                    break;
                                case "select":
                                    P.mountWrapper(this, o, t), o = P.getNativeProps(this, o), e.getReactMountReady().enqueue(s, this);
                                    break;
                                case "textarea":
                                    R.mountWrapper(this, o, t), o = R.getNativeProps(this, o), e.getReactMountReady().enqueue(s, this)
                            }
                            n(this, o);
                            var u, l;
                            null != t ? (u = t._namespaceURI, l = t._tag) : r._tag && (u = r._namespaceURI, l = r._tag), (null == u || u === v.svg && "foreignobject" === l) && (u = v.html), u === v.html && ("svg" === this._tag ? u = v.svg : "math" === this._tag && (u = v.mathml)), this._namespaceURI = u;
                            var c;
                            if (e.useCreateElement) {
                                var h, p = r._ownerDocument;
                                if (u === v.html)
                                    if ("script" === this._tag) {
                                        var f = p.createElement("div"),
                                            g = this._currentElement.type;
                                        f.innerHTML = "<" + g + "></" + g + ">", h = f.removeChild(f.firstChild)
                                    } else h = p.createElement(this._currentElement.type);
                                else h = p.createElementNS(u, this._currentElement.type);
                                T.precacheNode(this, h), this._flags |= V.hasCachedChildNodes, this._nativeParent || y.setAttributeForRoot(h), this._updateDOMProperties(null, o, e);
                                var b = m(h);
                                this._createInitialChildren(e, o, i, b), c = b
                            } else {
                                var x = this._createOpenTagMarkupAndPutListeners(e, o),
                                    _ = this._createContentMarkup(e, o, i);
                                c = !_ && W[this._tag] ? x + "/>" : x + ">" + _ + "</" + this._currentElement.type + ">"
                            }
                            switch (this._tag) {
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    o.autoFocus && e.getReactMountReady().enqueue(d.focusDOMComponent, this);
                                    break;
                                case "option":
                                    e.getReactMountReady().enqueue(a, this)
                            }
                            return c
                        },
                        _createOpenTagMarkupAndPutListeners: function(e, t) {
                            var r = "<" + this._currentElement.type;
                            for (var n in t)
                                if (t.hasOwnProperty(n)) {
                                    var o = t[n];
                                    if (null != o)
                                        if (U.hasOwnProperty(n)) o && i(this, n, o, e);
                                        else {
                                            n === H && (o && (o = this._previousStyleCopy = p({}, t.style)), o = f.createMarkupForStyles(o, this));
                                            var a = null;
                                            null != this._tag && c(this._tag, t) ? G.hasOwnProperty(n) || (a = y.createMarkupForCustomAttribute(n, o)) : a = y.createMarkupForProperty(n, o), a && (r += " " + a)
                                        }
                                }
                            return e.renderToStaticMarkup ? r : (this._nativeParent || (r += " " + y.createMarkupForRoot()), r += " " + y.createMarkupForID(this._domID))
                        },
                        _createContentMarkup: function(e, t, r) {
                            var n = "",
                                i = t.dangerouslySetInnerHTML;
                            if (null != i) null != i.__html && (n = i.__html);
                            else {
                                var o = z[typeof t.children] ? t.children : null,
                                    a = null != o ? null : t.children;
                                if (null != o) n = D(o);
                                else if (null != a) {
                                    var s = this.mountChildren(a, e, r);
                                    n = s.join("")
                                }
                            }
                            return X[this._tag] && "\n" === n.charAt(0) ? "\n" + n : n
                        },
                        _createInitialChildren: function(e, t, r, n) {
                            var i = t.dangerouslySetInnerHTML;
                            if (null != i) null != i.__html && m.queueHTML(n, i.__html);
                            else {
                                var o = z[typeof t.children] ? t.children : null,
                                    a = null != o ? null : t.children;
                                if (null != o) m.queueText(n, o);
                                else if (null != a)
                                    for (var s = this.mountChildren(a, e, r), u = 0; u < s.length; u++) m.queueChild(n, s[u])
                            }
                        },
                        receiveComponent: function(e, t, r) {
                            var n = this._currentElement;
                            this._currentElement = e, this.updateComponent(t, n, e, r)
                        },
                        updateComponent: function(e, t, r, i) {
                            var o = t.props,
                                a = this._currentElement.props;
                            switch (this._tag) {
                                case "button":
                                    o = E.getNativeProps(this, o), a = E.getNativeProps(this, a);
                                    break;
                                case "input":
                                    M.updateWrapper(this), o = M.getNativeProps(this, o), a = M.getNativeProps(this, a);
                                    break;
                                case "option":
                                    o = A.getNativeProps(this, o), a = A.getNativeProps(this, a);
                                    break;
                                case "select":
                                    o = P.getNativeProps(this, o), a = P.getNativeProps(this, a);
                                    break;
                                case "textarea":
                                    R.updateWrapper(this), o = R.getNativeProps(this, o), a = R.getNativeProps(this, a)
                            }
                            n(this, a), this._updateDOMProperties(o, a, e), this._updateDOMChildren(o, a, e, i), "select" === this._tag && e.getReactMountReady().enqueue(u, this)
                        },
                        _updateDOMProperties: function(e, t, r) {
                            var n, o, a;
                            for (n in e)
                                if (!t.hasOwnProperty(n) && e.hasOwnProperty(n) && null != e[n])
                                    if (n === H) {
                                        var s = this._previousStyleCopy;
                                        for (o in s) s.hasOwnProperty(o) && (a = a || {}, a[o] = "");
                                        this._previousStyleCopy = null
                                    } else U.hasOwnProperty(n) ? e[n] && N(this, n) : (g.properties[n] || g.isCustomAttribute(n)) && y.deleteValueForProperty(O(this), n);
                            for (n in t) {
                                var u = t[n],
                                    l = n === H ? this._previousStyleCopy : null != e ? e[n] : void 0;
                                if (t.hasOwnProperty(n) && u !== l && (null != u || null != l))
                                    if (n === H)
                                        if (u ? u = this._previousStyleCopy = p({}, u) : this._previousStyleCopy = null, l) {
                                            for (o in l) !l.hasOwnProperty(o) || u && u.hasOwnProperty(o) || (a = a || {}, a[o] = "");
                                            for (o in u) u.hasOwnProperty(o) && l[o] !== u[o] && (a = a || {}, a[o] = u[o])
                                        } else a = u;
                                else if (U.hasOwnProperty(n)) u ? i(this, n, u, r) : l && N(this, n);
                                else if (c(this._tag, t)) G.hasOwnProperty(n) || y.setValueForAttribute(O(this), n, u);
                                else if (g.properties[n] || g.isCustomAttribute(n)) {
                                    var h = O(this);
                                    null != u ? y.setValueForProperty(h, n, u) : y.deleteValueForProperty(h, n)
                                }
                            }
                            a && f.setValueForStyles(O(this), a, this)
                        },
                        _updateDOMChildren: function(e, t, r, n) {
                            var i = z[typeof e.children] ? e.children : null,
                                o = z[typeof t.children] ? t.children : null,
                                a = e.dangerouslySetInnerHTML && e.dangerouslySetInnerHTML.__html,
                                s = t.dangerouslySetInnerHTML && t.dangerouslySetInnerHTML.__html,
                                u = null != i ? null : e.children,
                                l = null != o ? null : t.children,
                                c = null != i || null != a,
                                h = null != o || null != s;
                            null != u && null == l ? this.updateChildren(null, r, n) : c && !h && this.updateTextContent(""), null != o ? i !== o && this.updateTextContent("" + o) : null != s ? a !== s && this.updateMarkup("" + s) : null != l && this.updateChildren(l, r, n)
                        },
                        getNativeNode: function() {
                            return O(this)
                        },
                        unmountComponent: function(e) {
                            switch (this._tag) {
                                case "iframe":
                                case "object":
                                case "img":
                                case "form":
                                case "video":
                                case "audio":
                                    var t = this._wrapperState.listeners;
                                    if (t)
                                        for (var r = 0; r < t.length; r++) t[r].remove();
                                    break;
                                case "html":
                                case "head":
                                case "body":
                                    B(!1)
                            }
                            this.unmountChildren(e), T.uncacheNode(this), x.deleteAllListeners(this), C.unmountIDFromEnvironment(this._rootNodeID), this._rootNodeID = null, this._domID = null, this._wrapperState = null
                        },
                        getPublicInstance: function() {
                            return O(this)
                        }
                    }, I.measureMethods(h.Mixin, "ReactDOMComponent", {
                        mountComponent: "mountComponent",
                        receiveComponent: "receiveComponent"
                    }), p(h.prototype, h.Mixin, k.Mixin), t.exports = h
                }, {
                    1: 1,
                    10: 10,
                    11: 11,
                    115: 115,
                    129: 129,
                    138: 138,
                    15: 15,
                    154: 154,
                    158: 158,
                    16: 16,
                    161: 161,
                    162: 162,
                    163: 163,
                    17: 17,
                    25: 25,
                    30: 30,
                    35: 35,
                    37: 37,
                    38: 38,
                    4: 4,
                    45: 45,
                    47: 47,
                    48: 48,
                    52: 52,
                    72: 72,
                    78: 78,
                    8: 8,
                    9: 9
                }],
                37: [function(e, t, r) {
                    var n = {
                        hasCachedChildNodes: 1
                    };
                    t.exports = n
                }, {}],
                38: [function(e, t, r) {
                    function n(e) {
                        for (var t; t = e._renderedComponent;) e = t;
                        return e
                    }

                    function i(e, t) {
                        var r = n(e);
                        r._nativeNode = t, t[m] = r
                    }

                    function o(e) {
                        var t = e._nativeNode;
                        t && (delete t[m], e._nativeNode = null)
                    }

                    function a(e, t) {
                        if (!(e._flags & f.hasCachedChildNodes)) {
                            var r = e._renderedChildren,
                                o = t.firstChild;
                            e: for (var a in r)
                                if (r.hasOwnProperty(a)) {
                                    var s = r[a],
                                        u = n(s)._domID;
                                    if (null != u) {
                                        for (; null !== o; o = o.nextSibling)
                                            if (1 === o.nodeType && o.getAttribute(d) === String(u) || 8 === o.nodeType && o.nodeValue === " react-text: " + u + " " || 8 === o.nodeType && o.nodeValue === " react-empty: " + u + " ") {
                                                i(s, o);
                                                continue e
                                            }
                                        p(!1)
                                    }
                                }
                            e._flags |= f.hasCachedChildNodes
                        }
                    }

                    function s(e) {
                        if (e[m]) return e[m];
                        for (var t = []; !e[m];) {
                            if (t.push(e), !e.parentNode) return null;
                            e = e.parentNode
                        }
                        for (var r, n; e && (n = e[m]); e = t.pop()) r = n, t.length && a(n, e);
                        return r
                    }

                    function u(e) {
                        var t = s(e);
                        return null != t && t._nativeNode === e ? t : null
                    }

                    function l(e) {
                        if (void 0 === e._nativeNode ? p(!1) : void 0, e._nativeNode) return e._nativeNode;
                        for (var t = []; !e._nativeNode;) t.push(e), e._nativeParent ? void 0 : p(!1), e = e._nativeParent;
                        for (; t.length; e = t.pop()) a(e, e._nativeNode);
                        return e._nativeNode
                    }
                    var c = e(10),
                        h = e(37),
                        p = e(154),
                        d = c.ID_ATTRIBUTE_NAME,
                        f = h,
                        m = "__reactInternalInstance$" + Math.random().toString(36).slice(2),
                        v = {
                            getClosestInstanceFromNode: s,
                            getInstanceFromNode: u,
                            getNodeFromInstance: l,
                            precacheChildNodes: a,
                            precacheNode: i,
                            uncacheNode: o
                        };
                    t.exports = v
                }, {
                    10: 10,
                    154: 154,
                    37: 37
                }],
                39: [function(e, t, r) {
                    function n(e, t) {
                        var r = {
                            _topLevelWrapper: e,
                            _idCounter: 1,
                            _ownerDocument: t ? t.nodeType === i ? t : t.ownerDocument : null,
                            _tag: t ? t.nodeName.toLowerCase() : null,
                            _namespaceURI: t ? t.namespaceURI : null
                        };
                        return r
                    }
                    var i = (e(138), 9);
                    t.exports = n
                }, {
                    138: 138
                }],
                40: [function(e, t, r) {
                    function n(e, t, r, n, i, o) {}
                    var i = e(54),
                        o = (e(162), []),
                        a = {
                            addDevtool: function(e) {
                                o.push(e)
                            },
                            removeDevtool: function(e) {
                                for (var t = 0; t < o.length; t++) o[t] === e && (o.splice(t, 1), t--)
                            },
                            onCreateMarkupForProperty: function(e, t) {
                                n("onCreateMarkupForProperty", e, t)
                            },
                            onSetValueForProperty: function(e, t, r) {
                                n("onSetValueForProperty", e, t, r)
                            },
                            onDeleteValueForProperty: function(e, t) {
                                n("onDeleteValueForProperty", e, t)
                            }
                        };
                    a.addDevtool(i), t.exports = a
                }, {
                    162: 162,
                    54: 54
                }],
                41: [function(e, t, r) {
                    var n = e(163),
                        i = e(8),
                        o = e(38),
                        a = function(e) {
                            this._currentElement = null, this._nativeNode = null, this._nativeParent = null, this._nativeContainerInfo = null, this._domID = null
                        };
                    n(a.prototype, {
                        mountComponent: function(e, t, r, n) {
                            var a = r._idCounter++;
                            this._domID = a, this._nativeParent = t, this._nativeContainerInfo = r;
                            var s = " react-empty: " + this._domID + " ";
                            if (e.useCreateElement) {
                                var u = r._ownerDocument,
                                    l = u.createComment(s);
                                return o.precacheNode(this, l), i(l)
                            }
                            return e.renderToStaticMarkup ? "" : "<!--" + s + "-->"
                        },
                        receiveComponent: function() {},
                        getNativeNode: function() {
                            return o.getNodeFromInstance(this)
                        },
                        unmountComponent: function() {
                            o.uncacheNode(this)
                        }
                    }), t.exports = a
                }, {
                    163: 163,
                    38: 38,
                    8: 8
                }],
                42: [function(e, t, r) {
                    function n(e) {
                        return i.createFactory(e)
                    }
                    var i = e(58),
                        o = (e(59), e(159)),
                        a = o({
                            a: "a",
                            abbr: "abbr",
                            address: "address",
                            area: "area",
                            article: "article",
                            aside: "aside",
                            audio: "audio",
                            b: "b",
                            base: "base",
                            bdi: "bdi",
                            bdo: "bdo",
                            big: "big",
                            blockquote: "blockquote",
                            body: "body",
                            br: "br",
                            button: "button",
                            canvas: "canvas",
                            caption: "caption",
                            cite: "cite",
                            code: "code",
                            col: "col",
                            colgroup: "colgroup",
                            data: "data",
                            datalist: "datalist",
                            dd: "dd",
                            del: "del",
                            details: "details",
                            dfn: "dfn",
                            dialog: "dialog",
                            div: "div",
                            dl: "dl",
                            dt: "dt",
                            em: "em",
                            embed: "embed",
                            fieldset: "fieldset",
                            figcaption: "figcaption",
                            figure: "figure",
                            footer: "footer",
                            form: "form",
                            h1: "h1",
                            h2: "h2",
                            h3: "h3",
                            h4: "h4",
                            h5: "h5",
                            h6: "h6",
                            head: "head",
                            header: "header",
                            hgroup: "hgroup",
                            hr: "hr",
                            html: "html",
                            i: "i",
                            iframe: "iframe",
                            img: "img",
                            input: "input",
                            ins: "ins",
                            kbd: "kbd",
                            keygen: "keygen",
                            label: "label",
                            legend: "legend",
                            li: "li",
                            link: "link",
                            main: "main",
                            map: "map",
                            mark: "mark",
                            menu: "menu",
                            menuitem: "menuitem",
                            meta: "meta",
                            meter: "meter",
                            nav: "nav",
                            noscript: "noscript",
                            object: "object",
                            ol: "ol",
                            optgroup: "optgroup",
                            option: "option",
                            output: "output",
                            p: "p",
                            param: "param",
                            picture: "picture",
                            pre: "pre",
                            progress: "progress",
                            q: "q",
                            rp: "rp",
                            rt: "rt",
                            ruby: "ruby",
                            s: "s",
                            samp: "samp",
                            script: "script",
                            section: "section",
                            select: "select",
                            small: "small",
                            source: "source",
                            span: "span",
                            strong: "strong",
                            style: "style",
                            sub: "sub",
                            summary: "summary",
                            sup: "sup",
                            table: "table",
                            tbody: "tbody",
                            td: "td",
                            textarea: "textarea",
                            tfoot: "tfoot",
                            th: "th",
                            thead: "thead",
                            time: "time",
                            title: "title",
                            tr: "tr",
                            track: "track",
                            u: "u",
                            ul: "ul",
                            "var": "var",
                            video: "video",
                            wbr: "wbr",
                            circle: "circle",
                            clipPath: "clipPath",
                            defs: "defs",
                            ellipse: "ellipse",
                            g: "g",
                            image: "image",
                            line: "line",
                            linearGradient: "linearGradient",
                            mask: "mask",
                            path: "path",
                            pattern: "pattern",
                            polygon: "polygon",
                            polyline: "polyline",
                            radialGradient: "radialGradient",
                            rect: "rect",
                            stop: "stop",
                            svg: "svg",
                            text: "text",
                            tspan: "tspan"
                        }, n);
                    t.exports = a
                }, {
                    159: 159,
                    58: 58,
                    59: 59
                }],
                43: [function(e, t, r) {
                    var n = {
                        useCreateElement: !0
                    };
                    t.exports = n
                }, {}],
                44: [function(e, t, r) {
                    var n = e(7),
                        i = e(38),
                        o = e(78),
                        a = {
                            dangerouslyProcessChildrenUpdates: function(e, t) {
                                var r = i.getNodeFromInstance(e);
                                n.processUpdates(r, t)
                            }
                        };
                    o.measureMethods(a, "ReactDOMIDOperations", {
                        dangerouslyProcessChildrenUpdates: "dangerouslyProcessChildrenUpdates"
                    }), t.exports = a
                }, {
                    38: 38,
                    7: 7,
                    78: 78
                }],
                45: [function(e, t, r) {
                    function n() {
                        this._rootNodeID && h.updateWrapper(this)
                    }

                    function i(e) {
                        var t = this._currentElement.props,
                            r = s.executeOnChange(t, e);
                        l.asap(n, this);
                        var i = t.name;
                        if ("radio" === t.type && null != i) {
                            for (var o = u.getNodeFromInstance(this), a = o; a.parentNode;) a = a.parentNode;
                            for (var h = a.querySelectorAll("input[name=" + JSON.stringify("" + i) + '][type="radio"]'), p = 0; p < h.length; p++) {
                                var d = h[p];
                                if (d !== o && d.form === o.form) {
                                    var f = u.getInstanceFromNode(d);
                                    f ? void 0 : c(!1), l.asap(n, f)
                                }
                            }
                        }
                        return r
                    }
                    var o = e(163),
                        a = e(11),
                        s = e(22),
                        u = e(38),
                        l = e(90),
                        c = e(154),
                        h = (e(162), {
                            getNativeProps: function(e, t) {
                                var r = s.getValue(t),
                                    n = s.getChecked(t),
                                    i = o({
                                        type: void 0
                                    }, t, {
                                        defaultChecked: void 0,
                                        defaultValue: void 0,
                                        value: null != r ? r : e._wrapperState.initialValue,
                                        checked: null != n ? n : e._wrapperState.initialChecked,
                                        onChange: e._wrapperState.onChange
                                    });
                                return i
                            },
                            mountWrapper: function(e, t) {
                                var r = t.defaultValue;
                                e._wrapperState = {
                                    initialChecked: t.defaultChecked || !1,
                                    initialValue: null != r ? r : null,
                                    listeners: null,
                                    onChange: i.bind(e)
                                }
                            },
                            updateWrapper: function(e) {
                                var t = e._currentElement.props,
                                    r = t.checked;
                                null != r && a.setValueForProperty(u.getNodeFromInstance(e), "checked", r || !1);
                                var n = s.getValue(t);
                                null != n && a.setValueForProperty(u.getNodeFromInstance(e), "value", "" + n)
                            }
                        });
                    t.exports = h
                }, {
                    11: 11,
                    154: 154,
                    162: 162,
                    163: 163,
                    22: 22,
                    38: 38,
                    90: 90
                }],
                46: [function(e, t, r) {
                    var n = e(40);
                    t.exports = {
                        debugTool: n
                    }
                }, {
                    40: 40
                }],
                47: [function(e, t, r) {
                    var n = e(163),
                        i = e(27),
                        o = e(38),
                        a = e(48),
                        s = (e(162), {
                            mountWrapper: function(e, t, r) {
                                var n = null;
                                null != r && "select" === r._tag && (n = a.getSelectValueContext(r));
                                var i = null;
                                if (null != n)
                                    if (i = !1, Array.isArray(n)) {
                                        for (var o = 0; o < n.length; o++)
                                            if ("" + n[o] == "" + t.value) {
                                                i = !0;
                                                break
                                            }
                                    } else i = "" + n == "" + t.value;
                                e._wrapperState = {
                                    selected: i
                                }
                            },
                            postMountWrapper: function(e) {
                                var t = e._currentElement.props;
                                if (null != t.value) {
                                    var r = o.getNodeFromInstance(e);
                                    r.setAttribute("value", t.value)
                                }
                            },
                            getNativeProps: function(e, t) {
                                var r = n({
                                    selected: void 0,
                                    children: void 0
                                }, t);
                                null != e._wrapperState.selected && (r.selected = e._wrapperState.selected);
                                var o = "";
                                return i.forEach(t.children, function(e) {
                                    null != e && ("string" != typeof e && "number" != typeof e || (o += e))
                                }), o && (r.children = o), r
                            }
                        });
                    t.exports = s
                }, {
                    162: 162,
                    163: 163,
                    27: 27,
                    38: 38,
                    48: 48
                }],
                48: [function(e, t, r) {
                    function n() {
                        if (this._rootNodeID && this._wrapperState.pendingUpdate) {
                            this._wrapperState.pendingUpdate = !1;
                            var e = this._currentElement.props,
                                t = s.getValue(e);
                            null != t && i(this, Boolean(e.multiple), t)
                        }
                    }

                    function i(e, t, r) {
                        var n, i, o = u.getNodeFromInstance(e).options;
                        if (t) {
                            for (n = {}, i = 0; i < r.length; i++) n["" + r[i]] = !0;
                            for (i = 0; i < o.length; i++) {
                                var a = n.hasOwnProperty(o[i].value);
                                o[i].selected !== a && (o[i].selected = a)
                            }
                        } else {
                            for (n = "" + r, i = 0; i < o.length; i++)
                                if (o[i].value === n) return void(o[i].selected = !0);
                            o.length && (o[0].selected = !0)
                        }
                    }

                    function o(e) {
                        var t = this._currentElement.props,
                            r = s.executeOnChange(t, e);
                        return this._rootNodeID && (this._wrapperState.pendingUpdate = !0), l.asap(n, this), r
                    }
                    var a = e(163),
                        s = e(22),
                        u = e(38),
                        l = e(90),
                        c = (e(162), !1),
                        h = {
                            getNativeProps: function(e, t) {
                                return a({}, t, {
                                    onChange: e._wrapperState.onChange,
                                    value: void 0
                                })
                            },
                            mountWrapper: function(e, t) {
                                var r = s.getValue(t);
                                e._wrapperState = {
                                    pendingUpdate: !1,
                                    initialValue: null != r ? r : t.defaultValue,
                                    listeners: null,
                                    onChange: o.bind(e),
                                    wasMultiple: Boolean(t.multiple)
                                }, void 0 === t.value || void 0 === t.defaultValue || c || (c = !0)
                            },
                            getSelectValueContext: function(e) {
                                return e._wrapperState.initialValue
                            },
                            postUpdateWrapper: function(e) {
                                var t = e._currentElement.props;
                                e._wrapperState.initialValue = void 0;
                                var r = e._wrapperState.wasMultiple;
                                e._wrapperState.wasMultiple = Boolean(t.multiple);
                                var n = s.getValue(t);
                                null != n ? (e._wrapperState.pendingUpdate = !1, i(e, Boolean(t.multiple), n)) : r !== Boolean(t.multiple) && (null != t.defaultValue ? i(e, Boolean(t.multiple), t.defaultValue) : i(e, Boolean(t.multiple), t.multiple ? [] : ""))
                            }
                        };
                    t.exports = h
                }, {
                    162: 162,
                    163: 163,
                    22: 22,
                    38: 38,
                    90: 90
                }],
                49: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return e === r && t === n
                    }

                    function i(e) {
                        var t = document.selection,
                            r = t.createRange(),
                            n = r.text.length,
                            i = r.duplicate();
                        i.moveToElementText(e), i.setEndPoint("EndToStart", r);
                        var o = i.text.length,
                            a = o + n;
                        return {
                            start: o,
                            end: a
                        }
                    }

                    function o(e) {
                        var t = window.getSelection && window.getSelection();
                        if (!t || 0 === t.rangeCount) return null;
                        var r = t.anchorNode,
                            i = t.anchorOffset,
                            o = t.focusNode,
                            a = t.focusOffset,
                            s = t.getRangeAt(0);
                        try {
                            s.startContainer.nodeType, s.endContainer.nodeType
                        } catch (u) {
                            return null
                        }
                        var l = n(t.anchorNode, t.anchorOffset, t.focusNode, t.focusOffset),
                            c = l ? 0 : s.toString().length,
                            h = s.cloneRange();
                        h.selectNodeContents(e), h.setEnd(s.startContainer, s.startOffset);
                        var p = n(h.startContainer, h.startOffset, h.endContainer, h.endOffset),
                            d = p ? 0 : h.toString().length,
                            f = d + c,
                            m = document.createRange();
                        m.setStart(r, i), m.setEnd(o, a);
                        var v = m.collapsed;
                        return {
                            start: v ? f : d,
                            end: v ? d : f
                        }
                    }

                    function a(e, t) {
                        var r, n, i = document.selection.createRange().duplicate();
                        void 0 === t.end ? (r = t.start, n = r) : t.start > t.end ? (r = t.end, n = t.start) : (r = t.start, n = t.end), i.moveToElementText(e), i.moveStart("character", r), i.setEndPoint("EndToStart", i), i.moveEnd("character", n - r), i.select()
                    }

                    function s(e, t) {
                        if (window.getSelection) {
                            var r = window.getSelection(),
                                n = e[c()].length,
                                i = Math.min(t.start, n),
                                o = void 0 === t.end ? i : Math.min(t.end, n);
                            if (!r.extend && i > o) {
                                var a = o;
                                o = i, i = a
                            }
                            var s = l(e, i),
                                u = l(e, o);
                            if (s && u) {
                                var h = document.createRange();
                                h.setStart(s.node, s.offset), r.removeAllRanges(), i > o ? (r.addRange(h), r.extend(u.node, u.offset)) : (h.setEnd(u.node, u.offset), r.addRange(h))
                            }
                        }
                    }
                    var u = e(140),
                        l = e(125),
                        c = e(126),
                        h = u.canUseDOM && "selection" in document && !("getSelection" in window),
                        p = {
                            getOffsets: h ? i : o,
                            setOffsets: h ? a : s
                        };
                    t.exports = p
                }, {
                    125: 125,
                    126: 126,
                    140: 140
                }],
                50: [function(e, t, r) {
                    var n = e(57),
                        i = e(86),
                        o = e(91);
                    n.inject();
                    var a = {
                        renderToString: i.renderToString,
                        renderToStaticMarkup: i.renderToStaticMarkup,
                        version: o
                    };
                    t.exports = a
                }, {
                    57: 57,
                    86: 86,
                    91: 91
                }],
                51: [function(e, t, r) {
                    var n = e(163),
                        i = e(7),
                        o = e(8),
                        a = e(38),
                        s = e(78),
                        u = e(115),
                        l = e(154),
                        c = (e(138), function(e) {
                            this._currentElement = e, this._stringText = "" + e, this._nativeNode = null, this._nativeParent = null, this._domID = null, this._mountIndex = 0, this._closingComment = null, this._commentNodes = null
                        });
                    n(c.prototype, {
                        mountComponent: function(e, t, r, n) {
                            var i = r._idCounter++,
                                s = " react-text: " + i + " ",
                                l = " /react-text ";
                            if (this._domID = i, this._nativeParent = t, e.useCreateElement) {
                                var c = r._ownerDocument,
                                    h = c.createComment(s),
                                    p = c.createComment(l),
                                    d = o(c.createDocumentFragment());
                                return o.queueChild(d, o(h)), this._stringText && o.queueChild(d, o(c.createTextNode(this._stringText))), o.queueChild(d, o(p)), a.precacheNode(this, h), this._closingComment = p, d
                            }
                            var f = u(this._stringText);
                            return e.renderToStaticMarkup ? f : "<!--" + s + "-->" + f + "<!--" + l + "-->"
                        },
                        receiveComponent: function(e, t) {
                            if (e !== this._currentElement) {
                                this._currentElement = e;
                                var r = "" + e;
                                if (r !== this._stringText) {
                                    this._stringText = r;
                                    var n = this.getNativeNode();
                                    i.replaceDelimitedText(n[0], n[1], r)
                                }
                            }
                        },
                        getNativeNode: function() {
                            var e = this._commentNodes;
                            if (e) return e;
                            if (!this._closingComment)
                                for (var t = a.getNodeFromInstance(this), r = t.nextSibling;;) {
                                    if (null == r ? l(!1) : void 0, 8 === r.nodeType && " /react-text " === r.nodeValue) {
                                        this._closingComment = r;
                                        break
                                    }
                                    r = r.nextSibling
                                }
                            return e = [this._nativeNode, this._closingComment], this._commentNodes = e, e
                        },
                        unmountComponent: function() {
                            this._closingComment = null, this._commentNodes = null, a.uncacheNode(this)
                        }
                    }), s.measureMethods(c.prototype, "ReactDOMTextComponent", {
                        mountComponent: "mountComponent",
                        receiveComponent: "receiveComponent"
                    }), t.exports = c
                }, {
                    115: 115,
                    138: 138,
                    154: 154,
                    163: 163,
                    38: 38,
                    7: 7,
                    78: 78,
                    8: 8
                }],
                52: [function(e, t, r) {
                    function n() {
                        this._rootNodeID && h.updateWrapper(this)
                    }

                    function i(e) {
                        var t = this._currentElement.props,
                            r = s.executeOnChange(t, e);
                        return l.asap(n, this), r
                    }
                    var o = e(163),
                        a = e(11),
                        s = e(22),
                        u = e(38),
                        l = e(90),
                        c = e(154),
                        h = (e(162), {
                            getNativeProps: function(e, t) {
                                null != t.dangerouslySetInnerHTML ? c(!1) : void 0;
                                var r = o({}, t, {
                                    defaultValue: void 0,
                                    value: void 0,
                                    children: e._wrapperState.initialValue,
                                    onChange: e._wrapperState.onChange
                                });
                                return r
                            },
                            mountWrapper: function(e, t) {
                                var r = t.defaultValue,
                                    n = t.children;
                                null != n && (null != r ? c(!1) : void 0, Array.isArray(n) && (n.length <= 1 ? void 0 : c(!1), n = n[0]), r = "" + n), null == r && (r = "");
                                var o = s.getValue(t);
                                e._wrapperState = {
                                    initialValue: "" + (null != o ? o : r),
                                    listeners: null,
                                    onChange: i.bind(e)
                                }
                            },
                            updateWrapper: function(e) {
                                var t = e._currentElement.props,
                                    r = s.getValue(t);
                                null != r && a.setValueForProperty(u.getNodeFromInstance(e), "value", "" + r)
                            }
                        });
                    t.exports = h
                }, {
                    11: 11,
                    154: 154,
                    162: 162,
                    163: 163,
                    22: 22,
                    38: 38,
                    90: 90
                }],
                53: [function(e, t, r) {
                    function n(e, t) {
                        "_nativeNode" in e ? void 0 : u(!1), "_nativeNode" in t ? void 0 : u(!1);
                        for (var r = 0, n = e; n; n = n._nativeParent) r++;
                        for (var i = 0, o = t; o; o = o._nativeParent) i++;
                        for (; r - i > 0;) e = e._nativeParent, r--;
                        for (; i - r > 0;) t = t._nativeParent, i--;
                        for (var a = r; a--;) {
                            if (e === t) return e;
                            e = e._nativeParent, t = t._nativeParent
                        }
                        return null
                    }

                    function i(e, t) {
                        "_nativeNode" in e ? void 0 : u(!1), "_nativeNode" in t ? void 0 : u(!1);
                        for (; t;) {
                            if (t === e) return !0;
                            t = t._nativeParent
                        }
                        return !1
                    }

                    function o(e) {
                        return "_nativeNode" in e ? void 0 : u(!1), e._nativeParent
                    }

                    function a(e, t, r) {
                        for (var n = []; e;) n.push(e), e = e._nativeParent;
                        var i;
                        for (i = n.length; i-- > 0;) t(n[i], !1, r);
                        for (i = 0; i < n.length; i++) t(n[i], !0, r)
                    }

                    function s(e, t, r, i, o) {
                        for (var a = e && t ? n(e, t) : null, s = []; e && e !== a;) s.push(e), e = e._nativeParent;
                        for (var u = []; t && t !== a;) u.push(t), t = t._nativeParent;
                        var l;
                        for (l = 0; l < s.length; l++) r(s[l], !0, i);
                        for (l = u.length; l-- > 0;) r(u[l], !1, o)
                    }
                    var u = e(154);
                    t.exports = {
                        isAncestor: i,
                        getLowestCommonAncestor: n,
                        getParentInstance: o,
                        traverseTwoPhase: a,
                        traverseEnterLeave: s
                    }
                }, {
                    154: 154
                }],
                54: [function(e, t, r) {
                    var n, i = (e(10), e(17), e(162), {
                        onCreateMarkupForProperty: function(e, t) {
                            n(e)
                        },
                        onSetValueForProperty: function(e, t, r) {
                            n(t)
                        },
                        onDeleteValueForProperty: function(e, t) {
                            n(t)
                        }
                    });
                    t.exports = i
                }, {
                    10: 10,
                    162: 162,
                    17: 17
                }],
                55: [function(e, t, r) {
                    function n(e, t, r, n, i, o) {}
                    var i = e(69),
                        o = (e(162), []),
                        a = {
                            addDevtool: function(e) {
                                o.push(e)
                            },
                            removeDevtool: function(e) {
                                for (var t = 0; t < o.length; t++) o[t] === e && (o.splice(t, 1), t--)
                            },
                            onBeginProcessingChildContext: function() {
                                n("onBeginProcessingChildContext")
                            },
                            onEndProcessingChildContext: function() {
                                n("onEndProcessingChildContext")
                            },
                            onSetState: function() {
                                n("onSetState")
                            },
                            onMountRootComponent: function(e) {
                                n("onMountRootComponent", e)
                            },
                            onMountComponent: function(e) {
                                n("onMountComponent", e)
                            },
                            onUpdateComponent: function(e) {
                                n("onUpdateComponent", e)
                            },
                            onUnmountComponent: function(e) {
                                n("onUnmountComponent", e)
                            }
                        };
                    a.addDevtool(i), t.exports = a
                }, {
                    162: 162,
                    69: 69
                }],
                56: [function(e, t, r) {
                    function n() {
                        this.reinitializeTransaction()
                    }
                    var i = e(163),
                        o = e(90),
                        a = e(108),
                        s = e(146),
                        u = {
                            initialize: s,
                            close: function() {
                                p.isBatchingUpdates = !1
                            }
                        },
                        l = {
                            initialize: s,
                            close: o.flushBatchedUpdates.bind(o)
                        },
                        c = [l, u];
                    i(n.prototype, a.Mixin, {
                        getTransactionWrappers: function() {
                            return c
                        }
                    });
                    var h = new n,
                        p = {
                            isBatchingUpdates: !1,
                            batchedUpdates: function(e, t, r, n, i, o) {
                                var a = p.isBatchingUpdates;
                                p.isBatchingUpdates = !0, a ? e(t, r, n, i, o) : h.perform(e, null, t, r, n, i, o)
                            }
                        };
                    t.exports = p
                }, {
                    108: 108,
                    146: 146,
                    163: 163,
                    90: 90
                }],
                57: [function(e, t, r) {
                    function n() {
                        w || (w = !0, g.EventEmitter.injectReactEventListener(v), g.EventPluginHub.injectEventPluginOrder(a), g.EventPluginUtils.injectComponentTree(h), g.EventPluginUtils.injectTreeTraversal(d), g.EventPluginHub.injectEventPluginsByName({
                            SimpleEventPlugin: _,
                            EnterLeaveEventPlugin: s,
                            ChangeEventPlugin: o,
                            SelectEventPlugin: x,
                            BeforeInputEventPlugin: i
                        }), g.NativeComponent.injectGenericComponentClass(c), g.NativeComponent.injectTextComponentClass(f), g.DOMProperty.injectDOMPropertyConfig(u), g.DOMProperty.injectDOMPropertyConfig(b), g.EmptyComponent.injectEmptyComponentFactory(function(e) {
                            return new p(e)
                        }), g.Updates.injectReconcileTransaction(y), g.Updates.injectBatchingStrategy(m), g.Component.injectEnvironment(l))
                    }
                    var i = e(2),
                        o = e(6),
                        a = e(13),
                        s = e(14),
                        u = (e(140), e(21)),
                        l = e(30),
                        c = e(36),
                        h = e(38),
                        p = e(41),
                        d = e(53),
                        f = e(51),
                        m = e(56),
                        v = e(63),
                        g = e(65),
                        y = e(82),
                        b = e(92),
                        x = e(93),
                        _ = e(94),
                        w = !1;
                    t.exports = {
                        inject: n
                    }
                }, {
                    13: 13,
                    14: 14,
                    140: 140,
                    2: 2,
                    21: 21,
                    30: 30,
                    36: 36,
                    38: 38,
                    41: 41,
                    51: 51,
                    53: 53,
                    56: 56,
                    6: 6,
                    63: 63,
                    65: 65,
                    82: 82,
                    92: 92,
                    93: 93,
                    94: 94
                }],
                58: [function(e, t, r) {
                    var n = e(163),
                        i = e(33),
                        o = (e(162), e(112), "function" == typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103),
                        a = {
                            key: !0,
                            ref: !0,
                            __self: !0,
                            __source: !0
                        },
                        s = function(e, t, r, n, i, a, s) {
                            var u = {
                                $$typeof: o,
                                type: e,
                                key: t,
                                ref: r,
                                props: s,
                                _owner: a
                            };
                            return u
                        };
                    s.createElement = function(e, t, r) {
                        var n, o = {},
                            u = null,
                            l = null,
                            c = null,
                            h = null;
                        if (null != t) {
                            l = void 0 === t.ref ? null : t.ref, u = void 0 === t.key ? null : "" + t.key, c = void 0 === t.__self ? null : t.__self, h = void 0 === t.__source ? null : t.__source;
                            for (n in t) t.hasOwnProperty(n) && !a.hasOwnProperty(n) && (o[n] = t[n])
                        }
                        var p = arguments.length - 2;
                        if (1 === p) o.children = r;
                        else if (p > 1) {
                            for (var d = Array(p), f = 0; p > f; f++) d[f] = arguments[f + 2];
                            o.children = d
                        }
                        if (e && e.defaultProps) {
                            var m = e.defaultProps;
                            for (n in m) void 0 === o[n] && (o[n] = m[n])
                        }
                        return s(e, u, l, c, h, i.current, o)
                    }, s.createFactory = function(e) {
                        var t = s.createElement.bind(null, e);
                        return t.type = e, t
                    }, s.cloneAndReplaceKey = function(e, t) {
                        var r = s(e.type, t, e.ref, e._self, e._source, e._owner, e.props);
                        return r
                    }, s.cloneElement = function(e, t, r) {
                        var o, u = n({}, e.props),
                            l = e.key,
                            c = e.ref,
                            h = e._self,
                            p = e._source,
                            d = e._owner;
                        if (null != t) {
                            void 0 !== t.ref && (c = t.ref, d = i.current), void 0 !== t.key && (l = "" + t.key);
                            var f;
                            e.type && e.type.defaultProps && (f = e.type.defaultProps);
                            for (o in t) t.hasOwnProperty(o) && !a.hasOwnProperty(o) && (void 0 === t[o] && void 0 !== f ? u[o] = f[o] : u[o] = t[o])
                        }
                        var m = arguments.length - 2;
                        if (1 === m) u.children = r;
                        else if (m > 1) {
                            for (var v = Array(m), g = 0; m > g; g++) v[g] = arguments[g + 2];
                            u.children = v
                        }
                        return s(e.type, l, c, h, p, d, u)
                    }, s.isValidElement = function(e) {
                        return "object" == typeof e && null !== e && e.$$typeof === o
                    }, t.exports = s
                }, {
                    112: 112,
                    162: 162,
                    163: 163,
                    33: 33
                }],
                59: [function(e, t, r) {
                    function n() {
                        if (h.current) {
                            var e = h.current.getName();
                            if (e) return " Check the render method of `" + e + "`."
                        }
                        return ""
                    }

                    function i(e, t) {
                        e._store && !e._store.validated && null == e.key && (e._store.validated = !0, o("uniqueKey", e, t))
                    }

                    function o(e, t, r) {
                        var i = n();
                        if (!i) {
                            var o = "string" == typeof r ? r : r.displayName || r.name;
                            o && (i = " Check the top-level render call using <" + o + ">.")
                        }
                        var a = f[e] || (f[e] = {});
                        if (a[i]) return null;
                        a[i] = !0;
                        var s = {
                            parentOrOwner: i,
                            url: " See https://fb.me/react-warning-keys for more information.",
                            childOwner: null
                        };
                        return t && t._owner && t._owner !== h.current && (s.childOwner = " It was passed a child from " + t._owner.getName() + "."), s
                    }

                    function a(e, t) {
                        if ("object" == typeof e)
                            if (Array.isArray(e))
                                for (var r = 0; r < e.length; r++) {
                                    var n = e[r];
                                    l.isValidElement(n) && i(n, t)
                                } else if (l.isValidElement(e)) e._store && (e._store.validated = !0);
                                else if (e) {
                            var o = p(e);
                            if (o && o !== e.entries)
                                for (var a, s = o.call(e); !(a = s.next()).done;) l.isValidElement(a.value) && i(a.value, t)
                        }
                    }

                    function s(e, t, r, i) {
                        for (var o in t)
                            if (t.hasOwnProperty(o)) {
                                var a;
                                try {
                                    "function" != typeof t[o] ? d(!1) : void 0, a = t[o](r, o, e, i)
                                } catch (s) {
                                    a = s
                                }
                                a instanceof Error && !(a.message in m) && (m[a.message] = !0, n())
                            }
                    }

                    function u(e) {
                        var t = e.type;
                        if ("function" == typeof t) {
                            var r = t.displayName || t.name;
                            t.propTypes && s(r, t.propTypes, e.props, c.prop), "function" == typeof t.getDefaultProps
                        }
                    }
                    var l = e(58),
                        c = e(80),
                        h = (e(79), e(33)),
                        p = (e(112), e(123)),
                        d = e(154),
                        f = (e(162), {}),
                        m = {},
                        v = {
                            createElement: function(e, t, r) {
                                var n = "string" == typeof e || "function" == typeof e,
                                    i = l.createElement.apply(this, arguments);
                                if (null == i) return i;
                                if (n)
                                    for (var o = 2; o < arguments.length; o++) a(arguments[o], e);
                                return u(i), i
                            },
                            createFactory: function(e) {
                                var t = v.createElement.bind(null, e);
                                return t.type = e, t
                            },
                            cloneElement: function(e, t, r) {
                                for (var n = l.cloneElement.apply(this, arguments), i = 2; i < arguments.length; i++) a(arguments[i], n.type);
                                return u(n), n
                            }
                        };
                    t.exports = v
                }, {
                    112: 112,
                    123: 123,
                    154: 154,
                    162: 162,
                    33: 33,
                    58: 58,
                    79: 79,
                    80: 80
                }],
                60: [function(e, t, r) {
                    var n, i = {
                            injectEmptyComponentFactory: function(e) {
                                n = e
                            }
                        },
                        o = {
                            create: function(e) {
                                return n(e)
                            }
                        };
                    o.injection = i, t.exports = o
                }, {}],
                61: [function(e, t, r) {
                    function n(e, t, r, n) {
                        try {
                            return t(r, n)
                        } catch (o) {
                            return void(null === i && (i = o))
                        }
                    }
                    var i = null,
                        o = {
                            invokeGuardedCallback: n,
                            invokeGuardedCallbackWithCatch: n,
                            rethrowCaughtError: function() {
                                if (i) {
                                    var e = i;
                                    throw i = null, e
                                }
                            }
                        };
                    t.exports = o
                }, {}],
                62: [function(e, t, r) {
                    function n(e) {
                        i.enqueueEvents(e), i.processEventQueue(!1)
                    }
                    var i = e(16),
                        o = {
                            handleTopLevel: function(e, t, r, o) {
                                var a = i.extractEvents(e, t, r, o);
                                n(a)
                            }
                        };
                    t.exports = o
                }, {
                    16: 16
                }],
                63: [function(e, t, r) {
                    function n(e) {
                        for (; e._nativeParent;) e = e._nativeParent;
                        var t = h.getNodeFromInstance(e),
                            r = t.parentNode;
                        return h.getClosestInstanceFromNode(r)
                    }

                    function i(e, t) {
                        this.topLevelType = e, this.nativeEvent = t, this.ancestors = []
                    }

                    function o(e) {
                        var t = d(e.nativeEvent),
                            r = h.getClosestInstanceFromNode(t),
                            i = r;
                        do e.ancestors.push(i), i = i && n(i); while (i);
                        for (var o = 0; o < e.ancestors.length; o++) r = e.ancestors[o], m._handleTopLevel(e.topLevelType, r, e.nativeEvent, d(e.nativeEvent))
                    }

                    function a(e) {
                        var t = f(window);
                        e(t)
                    }
                    var s = e(163),
                        u = e(139),
                        l = e(140),
                        c = e(23),
                        h = e(38),
                        p = e(90),
                        d = e(122),
                        f = e(151);
                    s(i.prototype, {
                        destructor: function() {
                            this.topLevelType = null, this.nativeEvent = null, this.ancestors.length = 0
                        }
                    }), c.addPoolingTo(i, c.twoArgumentPooler);
                    var m = {
                        _enabled: !0,
                        _handleTopLevel: null,
                        WINDOW_HANDLE: l.canUseDOM ? window : null,
                        setHandleTopLevel: function(e) {
                            m._handleTopLevel = e
                        },
                        setEnabled: function(e) {
                            m._enabled = !!e
                        },
                        isEnabled: function() {
                            return m._enabled
                        },
                        trapBubbledEvent: function(e, t, r) {
                            var n = r;
                            return n ? u.listen(n, t, m.dispatchEvent.bind(null, e)) : null
                        },
                        trapCapturedEvent: function(e, t, r) {
                            var n = r;
                            return n ? u.capture(n, t, m.dispatchEvent.bind(null, e)) : null
                        },
                        monitorScrollValue: function(e) {
                            var t = a.bind(null, e);
                            u.listen(window, "scroll", t)
                        },
                        dispatchEvent: function(e, t) {
                            if (m._enabled) {
                                var r = i.getPooled(e, t);
                                try {
                                    p.batchedUpdates(o, r)
                                } finally {
                                    i.release(r)
                                }
                            }
                        }
                    };
                    t.exports = m
                }, {
                    122: 122,
                    139: 139,
                    140: 140,
                    151: 151,
                    163: 163,
                    23: 23,
                    38: 38,
                    90: 90
                }],
                64: [function(e, t, r) {
                    var n = {
                        logTopLevelRenders: !1
                    };
                    t.exports = n
                }, {}],
                65: [function(e, t, r) {
                    var n = e(10),
                        i = e(16),
                        o = e(18),
                        a = e(31),
                        s = e(28),
                        u = e(60),
                        l = e(25),
                        c = e(74),
                        h = e(78),
                        p = e(90),
                        d = {
                            Component: a.injection,
                            Class: s.injection,
                            DOMProperty: n.injection,
                            EmptyComponent: u.injection,
                            EventPluginHub: i.injection,
                            EventPluginUtils: o.injection,
                            EventEmitter: l.injection,
                            NativeComponent: c.injection,
                            Perf: h.injection,
                            Updates: p.injection
                        };
                    t.exports = d
                }, {
                    10: 10,
                    16: 16,
                    18: 18,
                    25: 25,
                    28: 28,
                    31: 31,
                    60: 60,
                    74: 74,
                    78: 78,
                    90: 90
                }],
                66: [function(e, t, r) {
                    function n(e) {
                        return o(document.documentElement, e)
                    }
                    var i = e(49),
                        o = e(143),
                        a = e(148),
                        s = e(149),
                        u = {
                            hasSelectionCapabilities: function(e) {
                                var t = e && e.nodeName && e.nodeName.toLowerCase();
                                return t && ("input" === t && "text" === e.type || "textarea" === t || "true" === e.contentEditable)
                            },
                            getSelectionInformation: function() {
                                var e = s();
                                return {
                                    focusedElem: e,
                                    selectionRange: u.hasSelectionCapabilities(e) ? u.getSelection(e) : null
                                }
                            },
                            restoreSelection: function(e) {
                                var t = s(),
                                    r = e.focusedElem,
                                    i = e.selectionRange;
                                t !== r && n(r) && (u.hasSelectionCapabilities(r) && u.setSelection(r, i), a(r))
                            },
                            getSelection: function(e) {
                                var t;
                                if ("selectionStart" in e) t = {
                                    start: e.selectionStart,
                                    end: e.selectionEnd
                                };
                                else if (document.selection && e.nodeName && "input" === e.nodeName.toLowerCase()) {
                                    var r = document.selection.createRange();
                                    r.parentElement() === e && (t = {
                                        start: -r.moveStart("character", -e.value.length),
                                        end: -r.moveEnd("character", -e.value.length)
                                    })
                                } else t = i.getOffsets(e);
                                return t || {
                                    start: 0,
                                    end: 0
                                }
                            },
                            setSelection: function(e, t) {
                                var r = t.start,
                                    n = t.end;
                                if (void 0 === n && (n = r), "selectionStart" in e) e.selectionStart = r, e.selectionEnd = Math.min(n, e.value.length);
                                else if (document.selection && e.nodeName && "input" === e.nodeName.toLowerCase()) {
                                    var o = e.createTextRange();
                                    o.collapse(!0), o.moveStart("character", r), o.moveEnd("character", n - r), o.select()
                                } else i.setOffsets(e, t)
                            }
                        };
                    t.exports = u
                }, {
                    143: 143,
                    148: 148,
                    149: 149,
                    49: 49
                }],
                67: [function(e, t, r) {
                    var n = {
                        remove: function(e) {
                            e._reactInternalInstance = void 0
                        },
                        get: function(e) {
                            return e._reactInternalInstance
                        },
                        has: function(e) {
                            return void 0 !== e._reactInternalInstance
                        },
                        set: function(e, t) {
                            e._reactInternalInstance = t
                        }
                    };
                    t.exports = n
                }, {}],
                68: [function(e, t, r) {
                    var n = e(55);
                    t.exports = {
                        debugTool: n
                    }
                }, {
                    55: 55
                }],
                69: [function(e, t, r) {
                    var n, i, o = (e(162), {
                        onBeginProcessingChildContext: function() {
                            n = !0
                        },
                        onEndProcessingChildContext: function() {
                            n = !1
                        },
                        onSetState: function() {
                            i()
                        }
                    });
                    t.exports = o
                }, {
                    162: 162
                }],
                70: [function(e, t, r) {
                    var n = e(111),
                        i = /\/?>/,
                        o = /^<\!\-\-/,
                        a = {
                            CHECKSUM_ATTR_NAME: "data-react-checksum",
                            addChecksumToMarkup: function(e) {
                                var t = n(e);
                                return o.test(e) ? e : e.replace(i, " " + a.CHECKSUM_ATTR_NAME + '="' + t + '"$&')
                            },
                            canReuseMarkup: function(e, t) {
                                var r = t.getAttribute(a.CHECKSUM_ATTR_NAME);
                                r = r && parseInt(r, 10);
                                var i = n(e);
                                return i === r
                            }
                        };
                    t.exports = a
                }, {
                    111: 111
                }],
                71: [function(e, t, r) {
                    function n(e, t) {
                        for (var r = Math.min(e.length, t.length), n = 0; r > n; n++)
                            if (e.charAt(n) !== t.charAt(n)) return n;
                        return e.length === t.length ? -1 : r
                    }

                    function i(e) {
                        return e ? e.nodeType === D ? e.documentElement : e.firstChild : null
                    }

                    function o(e) {
                        return e.getAttribute && e.getAttribute(R) || ""
                    }

                    function a(e, t, r, n, i) {
                        var o;
                        if (b.logTopLevelRenders) {
                            var a = e._currentElement.props,
                                s = a.type;
                            o = "React mount: " + ("string" == typeof s ? s : s.displayName || s.name), console.time(o)
                        }
                        var u = w.mountComponent(e, r, null, v(e, t), i);
                        o && console.timeEnd(o), e._renderedComponent._topLevelWrapper = e, O._mountImageIntoNode(u, t, e, n, r)
                    }

                    function s(e, t, r, n) {
                        var i = E.ReactReconcileTransaction.getPooled(!r && g.useCreateElement);
                        i.perform(a, null, e, t, i, r, n), E.ReactReconcileTransaction.release(i)
                    }

                    function u(e, t, r) {
                        for (w.unmountComponent(e, r), t.nodeType === D && (t = t.documentElement); t.lastChild;) t.removeChild(t.lastChild)
                    }

                    function l(e) {
                        var t = i(e);
                        if (t) {
                            var r = m.getInstanceFromNode(t);
                            return !(!r || !r._nativeParent)
                        }
                    }

                    function c(e) {
                        var t = i(e),
                            r = t && m.getInstanceFromNode(t);
                        return r && !r._nativeParent ? r : null
                    }

                    function h(e) {
                        var t = c(e);
                        return t ? t._nativeContainerInfo._topLevelWrapper : null
                    }
                    var p = e(8),
                        d = e(10),
                        f = e(25),
                        m = (e(33), e(38)),
                        v = e(39),
                        g = e(43),
                        y = e(58),
                        b = e(64),
                        x = (e(68), e(70)),
                        _ = e(78),
                        w = e(83),
                        C = e(89),
                        E = e(90),
                        S = e(147),
                        T = e(128),
                        M = e(154),
                        A = e(134),
                        P = e(136),
                        R = (e(162), d.ID_ATTRIBUTE_NAME),
                        k = d.ROOT_ATTRIBUTE_NAME,
                        I = 1,
                        D = 9,
                        B = 11,
                        L = {},
                        V = 1,
                        N = function() {
                            this.rootID = V++
                        };
                    N.prototype.isReactComponent = {}, N.prototype.render = function() {
                        return this.props
                    };
                    var O = {
                        TopLevelWrapper: N,
                        _instancesByReactRootID: L,
                        scrollMonitor: function(e, t) {
                            t()
                        },
                        _updateRootComponent: function(e, t, r, n) {
                            return O.scrollMonitor(r, function() {
                                C.enqueueElementInternal(e, t), n && C.enqueueCallbackInternal(e, n)
                            }), e
                        },
                        _renderNewRootComponent: function(e, t, r, n) {
                            !t || t.nodeType !== I && t.nodeType !== D && t.nodeType !== B ? M(!1) : void 0, f.ensureScrollValueMonitoring();
                            var i = T(e);
                            E.batchedUpdates(s, i, t, r, n);
                            var o = i._instance.rootID;
                            return L[o] = i, i
                        },
                        renderSubtreeIntoContainer: function(e, t, r, n) {
                            return null == e || null == e._reactInternalInstance ? M(!1) : void 0, O._renderSubtreeIntoContainer(e, t, r, n)
                        },
                        _renderSubtreeIntoContainer: function(e, t, r, n) {
                            C.validateCallback(n, "ReactDOM.render"), y.isValidElement(t) ? void 0 : M(!1);
                            var a = y(N, null, null, null, null, null, t),
                                s = h(r);
                            if (s) {
                                var u = s._currentElement,
                                    c = u.props;
                                if (P(c, t)) {
                                    var p = s._renderedComponent.getPublicInstance(),
                                        d = n && function() {
                                            n.call(p)
                                        };
                                    return O._updateRootComponent(s, a, r, d), p
                                }
                                O.unmountComponentAtNode(r)
                            }
                            var f = i(r),
                                m = f && !!o(f),
                                v = l(r),
                                g = m && !s && !v,
                                b = O._renderNewRootComponent(a, r, g, null != e ? e._reactInternalInstance._processChildContext(e._reactInternalInstance._context) : S)._renderedComponent.getPublicInstance();
                            return n && n.call(b), b
                        },
                        render: function(e, t, r) {
                            return O._renderSubtreeIntoContainer(null, e, t, r)
                        },
                        unmountComponentAtNode: function(e) {
                            !e || e.nodeType !== I && e.nodeType !== D && e.nodeType !== B ? M(!1) : void 0;
                            var t = h(e);
                            return t ? (delete L[t._instance.rootID], E.batchedUpdates(u, t, e, !1), !0) : (l(e), 1 === e.nodeType && e.hasAttribute(k), !1)
                        },
                        _mountImageIntoNode: function(e, t, r, o, a) {
                            if (!t || t.nodeType !== I && t.nodeType !== D && t.nodeType !== B ? M(!1) : void 0, o) {
                                var s = i(t);
                                if (x.canReuseMarkup(e, s)) return void m.precacheNode(r, s);
                                var u = s.getAttribute(x.CHECKSUM_ATTR_NAME);
                                s.removeAttribute(x.CHECKSUM_ATTR_NAME);
                                var l = s.outerHTML;
                                s.setAttribute(x.CHECKSUM_ATTR_NAME, u);
                                var c = e,
                                    h = n(c, l);
                                " (client) " + c.substring(h - 20, h + 20) + "\n (server) " + l.substring(h - 20, h + 20), t.nodeType === D ? M(!1) : void 0
                            }
                            if (t.nodeType === D ? M(!1) : void 0, a.useCreateElement) {
                                for (; t.lastChild;) t.removeChild(t.lastChild);
                                p.insertTreeBefore(t, e, null)
                            } else A(t, e), m.precacheNode(r, t.firstChild)
                        }
                    };
                    _.measureMethods(O, "ReactMount", {
                        _renderNewRootComponent: "_renderNewRootComponent",
                        _mountImageIntoNode: "_mountImageIntoNode"
                    }), t.exports = O
                }, {
                    10: 10,
                    128: 128,
                    134: 134,
                    136: 136,
                    147: 147,
                    154: 154,
                    162: 162,
                    25: 25,
                    33: 33,
                    38: 38,
                    39: 39,
                    43: 43,
                    58: 58,
                    64: 64,
                    68: 68,
                    70: 70,
                    78: 78,
                    8: 8,
                    83: 83,
                    89: 89,
                    90: 90
                }],
                72: [function(e, t, r) {
                    function n(e, t, r) {
                        return {
                            type: h.INSERT_MARKUP,
                            content: e,
                            fromIndex: null,
                            fromNode: null,
                            toIndex: r,
                            afterNode: t
                        }
                    }

                    function i(e, t, r) {
                        return {
                            type: h.MOVE_EXISTING,
                            content: null,
                            fromIndex: e._mountIndex,
                            fromNode: p.getNativeNode(e),
                            toIndex: r,
                            afterNode: t
                        }
                    }

                    function o(e, t) {
                        return {
                            type: h.REMOVE_NODE,
                            content: null,
                            fromIndex: e._mountIndex,
                            fromNode: t,
                            toIndex: null,
                            afterNode: null
                        }
                    }

                    function a(e) {
                        return {
                            type: h.SET_MARKUP,
                            content: e,
                            fromIndex: null,
                            fromNode: null,
                            toIndex: null,
                            afterNode: null
                        }
                    }

                    function s(e) {
                        return {
                            type: h.TEXT_CONTENT,
                            content: e,
                            fromIndex: null,
                            fromNode: null,
                            toIndex: null,
                            afterNode: null
                        }
                    }

                    function u(e, t) {
                        return t && (e = e || [], e.push(t)), e
                    }

                    function l(e, t) {
                        c.processChildrenUpdates(e, t)
                    }
                    var c = e(31),
                        h = e(73),
                        p = (e(33), e(83)),
                        d = e(26),
                        f = e(117),
                        m = e(154),
                        v = {
                            Mixin: {
                                _reconcilerInstantiateChildren: function(e, t, r) {
                                    return d.instantiateChildren(e, t, r)
                                },
                                _reconcilerUpdateChildren: function(e, t, r, n, i) {
                                    var o;
                                    return o = f(t), d.updateChildren(e, o, r, n, i), o
                                },
                                mountChildren: function(e, t, r) {
                                    var n = this._reconcilerInstantiateChildren(e, t, r);
                                    this._renderedChildren = n;
                                    var i = [],
                                        o = 0;
                                    for (var a in n)
                                        if (n.hasOwnProperty(a)) {
                                            var s = n[a],
                                                u = p.mountComponent(s, t, this, this._nativeContainerInfo, r);
                                            s._mountIndex = o++, i.push(u)
                                        }
                                    return i
                                },
                                updateTextContent: function(e) {
                                    var t = this._renderedChildren;
                                    d.unmountChildren(t, !1);
                                    for (var r in t) t.hasOwnProperty(r) && m(!1);
                                    var n = [s(e)];
                                    l(this, n)
                                },
                                updateMarkup: function(e) {
                                    var t = this._renderedChildren;
                                    d.unmountChildren(t, !1);
                                    for (var r in t) t.hasOwnProperty(r) && m(!1);
                                    var n = [a(e)];
                                    l(this, n)
                                },
                                updateChildren: function(e, t, r) {
                                    this._updateChildren(e, t, r)
                                },
                                _updateChildren: function(e, t, r) {
                                    var n = this._renderedChildren,
                                        i = {},
                                        o = this._reconcilerUpdateChildren(n, e, i, t, r);
                                    if (o || n) {
                                        var a, s = null,
                                            c = 0,
                                            h = 0,
                                            d = null;
                                        for (a in o)
                                            if (o.hasOwnProperty(a)) {
                                                var f = n && n[a],
                                                    m = o[a];
                                                f === m ? (s = u(s, this.moveChild(f, d, h, c)), c = Math.max(f._mountIndex, c), f._mountIndex = h) : (f && (c = Math.max(f._mountIndex, c)), s = u(s, this._mountChildAtIndex(m, d, h, t, r))), h++, d = p.getNativeNode(m)
                                            }
                                        for (a in i) i.hasOwnProperty(a) && (s = u(s, this._unmountChild(n[a], i[a])));
                                        s && l(this, s), this._renderedChildren = o
                                    }
                                },
                                unmountChildren: function(e) {
                                    var t = this._renderedChildren;
                                    d.unmountChildren(t, e), this._renderedChildren = null
                                },
                                moveChild: function(e, t, r, n) {
                                    return e._mountIndex < n ? i(e, t, r) : void 0
                                },
                                createChild: function(e, t, r) {
                                    return n(r, t, e._mountIndex)
                                },
                                removeChild: function(e, t) {
                                    return o(e, t)
                                },
                                _mountChildAtIndex: function(e, t, r, n, i) {
                                    var o = p.mountComponent(e, n, this, this._nativeContainerInfo, i);
                                    return e._mountIndex = r, this.createChild(e, t, o)
                                },
                                _unmountChild: function(e, t) {
                                    var r = this.removeChild(e, t);
                                    return e._mountIndex = null, r
                                }
                            }
                        };
                    t.exports = v
                }, {
                    117: 117,
                    154: 154,
                    26: 26,
                    31: 31,
                    33: 33,
                    73: 73,
                    83: 83
                }],
                73: [function(e, t, r) {
                    var n = e(157),
                        i = n({
                            INSERT_MARKUP: null,
                            MOVE_EXISTING: null,
                            REMOVE_NODE: null,
                            SET_MARKUP: null,
                            TEXT_CONTENT: null
                        });
                    t.exports = i
                }, {
                    157: 157
                }],
                74: [function(e, t, r) {
                    function n(e) {
                        if ("function" == typeof e.type) return e.type;
                        var t = e.type,
                            r = h[t];
                        return null == r && (h[t] = r = l(t)), r
                    }

                    function i(e) {
                        return c ? void 0 : u(!1), new c(e)
                    }

                    function o(e) {
                        return new p(e)
                    }

                    function a(e) {
                        return e instanceof p
                    }
                    var s = e(163),
                        u = e(154),
                        l = null,
                        c = null,
                        h = {},
                        p = null,
                        d = {
                            injectGenericComponentClass: function(e) {
                                c = e
                            },
                            injectTextComponentClass: function(e) {
                                p = e
                            },
                            injectComponentClasses: function(e) {
                                s(h, e)
                            }
                        },
                        f = {
                            getComponentClassForElement: n,
                            createInternalComponent: i,
                            createInstanceForText: o,
                            isTextComponent: a,
                            injection: d
                        };
                    t.exports = f
                }, {
                    154: 154,
                    163: 163
                }],
                75: [function(e, t, r) {
                    var n = e(58),
                        i = e(154),
                        o = {
                            NATIVE: 0,
                            COMPOSITE: 1,
                            EMPTY: 2,
                            getType: function(e) {
                                return null === e || e === !1 ? o.EMPTY : n.isValidElement(e) ? "function" == typeof e.type ? o.COMPOSITE : o.NATIVE : void i(!1)
                            }
                        };
                    t.exports = o
                }, {
                    154: 154,
                    58: 58
                }],
                76: [function(e, t, r) {
                    function n(e, t) {}
                    var i = (e(162), {
                        isMounted: function(e) {
                            return !1
                        },
                        enqueueCallback: function(e, t) {},
                        enqueueForceUpdate: function(e) {
                            n(e, "forceUpdate")
                        },
                        enqueueReplaceState: function(e, t) {
                            n(e, "replaceState")
                        },
                        enqueueSetState: function(e, t) {
                            n(e, "setState")
                        }
                    });
                    t.exports = i
                }, {
                    162: 162
                }],
                77: [function(e, t, r) {
                    var n = e(154),
                        i = {
                            isValidOwner: function(e) {
                                return !(!e || "function" != typeof e.attachRef || "function" != typeof e.detachRef)
                            },
                            addComponentAsRefTo: function(e, t, r) {
                                i.isValidOwner(r) ? void 0 : n(!1), r.attachRef(t, e)
                            },
                            removeComponentAsRefFrom: function(e, t, r) {
                                i.isValidOwner(r) ? void 0 : n(!1);
                                var o = r.getPublicInstance();
                                o && o.refs[t] === e.getPublicInstance() && r.detachRef(t)
                            }
                        };
                    t.exports = i
                }, {
                    154: 154
                }],
                78: [function(e, t, r) {
                    function n(e, t, r) {
                        return r
                    }
                    var i = {
                        enableMeasure: !1,
                        storedMeasure: n,
                        measureMethods: function(e, t, r) {},
                        measure: function(e, t, r) {
                            return r
                        },
                        injection: {
                            injectMeasure: function(e) {
                                i.storedMeasure = e
                            }
                        }
                    };
                    t.exports = i
                }, {}],
                79: [function(e, t, r) {
                    var n = {};
                    t.exports = n
                }, {}],
                80: [function(e, t, r) {
                    var n = e(157),
                        i = n({
                            prop: null,
                            context: null,
                            childContext: null
                        });
                    t.exports = i
                }, {
                    157: 157
                }],
                81: [function(e, t, r) {
                    function n(e, t) {
                        return e === t ? 0 !== e || 1 / e === 1 / t : e !== e && t !== t
                    }

                    function i(e) {
                        function t(t, r, n, i, o, a) {
                            if (i = i || C, a = a || n, null == r[n]) {
                                var s = x[o];
                                return t ? new Error("Required " + s + " `" + a + "` was not specified in " + ("`" + i + "`.")) : null
                            }
                            return e(r, n, i, o, a)
                        }
                        var r = t.bind(null, !1);
                        return r.isRequired = t.bind(null, !0), r
                    }

                    function o(e) {
                        function t(t, r, n, i, o) {
                            var a = t[r],
                                s = v(a);
                            if (s !== e) {
                                var u = x[i],
                                    l = g(a);
                                return new Error("Invalid " + u + " `" + o + "` of type " + ("`" + l + "` supplied to `" + n + "`, expected ") + ("`" + e + "`."))
                            }
                            return null
                        }
                        return i(t)
                    }

                    function a() {
                        return i(_.thatReturns(null))
                    }

                    function s(e) {
                        function t(t, r, n, i, o) {
                            if ("function" != typeof e) return new Error("Property `" + o + "` of component `" + n + "` has invalid PropType notation inside arrayOf.");
                            var a = t[r];
                            if (!Array.isArray(a)) {
                                var s = x[i],
                                    u = v(a);
                                return new Error("Invalid " + s + " `" + o + "` of type " + ("`" + u + "` supplied to `" + n + "`, expected an array."))
                            }
                            for (var l = 0; l < a.length; l++) {
                                var c = e(a, l, n, i, o + "[" + l + "]");
                                if (c instanceof Error) return c
                            }
                            return null
                        }
                        return i(t)
                    }

                    function u() {
                        function e(e, t, r, n, i) {
                            if (!b.isValidElement(e[t])) {
                                var o = x[n];
                                return new Error("Invalid " + o + " `" + i + "` supplied to " + ("`" + r + "`, expected a single ReactElement."))
                            }
                            return null
                        }
                        return i(e)
                    }

                    function l(e) {
                        function t(t, r, n, i, o) {
                            if (!(t[r] instanceof e)) {
                                var a = x[i],
                                    s = e.name || C,
                                    u = y(t[r]);
                                return new Error("Invalid " + a + " `" + o + "` of type " + ("`" + u + "` supplied to `" + n + "`, expected ") + ("instance of `" + s + "`."))
                            }
                            return null
                        }
                        return i(t)
                    }

                    function c(e) {
                        function t(t, r, i, o, a) {
                            for (var s = t[r], u = 0; u < e.length; u++)
                                if (n(s, e[u])) return null;
                            var l = x[o],
                                c = JSON.stringify(e);
                            return new Error("Invalid " + l + " `" + a + "` of value `" + s + "` " + ("supplied to `" + i + "`, expected one of " + c + "."))
                        }
                        return i(Array.isArray(e) ? t : function() {
                            return new Error("Invalid argument supplied to oneOf, expected an instance of array.")
                        })
                    }

                    function h(e) {
                        function t(t, r, n, i, o) {
                            if ("function" != typeof e) return new Error("Property `" + o + "` of component `" + n + "` has invalid PropType notation inside objectOf.");
                            var a = t[r],
                                s = v(a);
                            if ("object" !== s) {
                                var u = x[i];
                                return new Error("Invalid " + u + " `" + o + "` of type " + ("`" + s + "` supplied to `" + n + "`, expected an object."))
                            }
                            for (var l in a)
                                if (a.hasOwnProperty(l)) {
                                    var c = e(a, l, n, i, o + "." + l);
                                    if (c instanceof Error) return c
                                }
                            return null
                        }
                        return i(t)
                    }

                    function p(e) {
                        function t(t, r, n, i, o) {
                            for (var a = 0; a < e.length; a++) {
                                var s = e[a];
                                if (null == s(t, r, n, i, o)) return null
                            }
                            var u = x[i];
                            return new Error("Invalid " + u + " `" + o + "` supplied to " + ("`" + n + "`."))
                        }
                        return i(Array.isArray(e) ? t : function() {
                            return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")
                        })
                    }

                    function d() {
                        function e(e, t, r, n, i) {
                            if (!m(e[t])) {
                                var o = x[n];
                                return new Error("Invalid " + o + " `" + i + "` supplied to " + ("`" + r + "`, expected a ReactNode."))
                            }
                            return null
                        }
                        return i(e)
                    }

                    function f(e) {
                        function t(t, r, n, i, o) {
                            var a = t[r],
                                s = v(a);
                            if ("object" !== s) {
                                var u = x[i];
                                return new Error("Invalid " + u + " `" + o + "` of type `" + s + "` " + ("supplied to `" + n + "`, expected `object`."))
                            }
                            for (var l in e) {
                                var c = e[l];
                                if (c) {
                                    var h = c(a, l, n, i, o + "." + l);
                                    if (h) return h
                                }
                            }
                            return null
                        }
                        return i(t)
                    }

                    function m(e) {
                        switch (typeof e) {
                            case "number":
                            case "string":
                            case "undefined":
                                return !0;
                            case "boolean":
                                return !e;
                            case "object":
                                if (Array.isArray(e)) return e.every(m);
                                if (null === e || b.isValidElement(e)) return !0;
                                var t = w(e);
                                if (!t) return !1;
                                var r, n = t.call(e);
                                if (t !== e.entries) {
                                    for (; !(r = n.next()).done;)
                                        if (!m(r.value)) return !1
                                } else
                                    for (; !(r = n.next()).done;) {
                                        var i = r.value;
                                        if (i && !m(i[1])) return !1
                                    }
                                return !0;
                            default:
                                return !1
                        }
                    }

                    function v(e) {
                        var t = typeof e;
                        return Array.isArray(e) ? "array" : e instanceof RegExp ? "object" : t
                    }

                    function g(e) {
                        var t = v(e);
                        if ("object" === t) {
                            if (e instanceof Date) return "date";
                            if (e instanceof RegExp) return "regexp"
                        }
                        return t
                    }

                    function y(e) {
                        return e.constructor && e.constructor.name ? e.constructor.name : C
                    }
                    var b = e(58),
                        x = e(79),
                        _ = e(146),
                        w = e(123),
                        C = "<<anonymous>>",
                        E = {
                            array: o("array"),
                            bool: o("boolean"),
                            func: o("function"),
                            number: o("number"),
                            object: o("object"),
                            string: o("string"),
                            any: a(),
                            arrayOf: s,
                            element: u(),
                            instanceOf: l,
                            node: d(),
                            objectOf: h,
                            oneOf: c,
                            oneOfType: p,
                            shape: f
                        };
                    t.exports = E
                }, {
                    123: 123,
                    146: 146,
                    58: 58,
                    79: 79
                }],
                82: [function(e, t, r) {
                    function n(e) {
                        this.reinitializeTransaction(), this.renderToStaticMarkup = !1, this.reactMountReady = o.getPooled(null), this.useCreateElement = e
                    }
                    var i = e(163),
                        o = e(5),
                        a = e(23),
                        s = e(25),
                        u = e(66),
                        l = e(108),
                        c = {
                            initialize: u.getSelectionInformation,
                            close: u.restoreSelection
                        },
                        h = {
                            initialize: function() {
                                var e = s.isEnabled();
                                return s.setEnabled(!1), e
                            },
                            close: function(e) {
                                s.setEnabled(e)
                            }
                        },
                        p = {
                            initialize: function() {
                                this.reactMountReady.reset()
                            },
                            close: function() {
                                this.reactMountReady.notifyAll()
                            }
                        },
                        d = [c, h, p],
                        f = {
                            getTransactionWrappers: function() {
                                return d
                            },
                            getReactMountReady: function() {
                                return this.reactMountReady
                            },
                            checkpoint: function() {
                                return this.reactMountReady.checkpoint()
                            },
                            rollback: function(e) {
                                this.reactMountReady.rollback(e)
                            },
                            destructor: function() {
                                o.release(this.reactMountReady), this.reactMountReady = null
                            }
                        };
                    i(n.prototype, l.Mixin, f), a.addPoolingTo(n), t.exports = n
                }, {
                    108: 108,
                    163: 163,
                    23: 23,
                    25: 25,
                    5: 5,
                    66: 66
                }],
                83: [function(e, t, r) {
                    function n() {
                        i.attachRefs(this, this._currentElement)
                    }
                    var i = e(84),
                        o = (e(68), {
                            mountComponent: function(e, t, r, i, o) {
                                var a = e.mountComponent(t, r, i, o);
                                return e._currentElement && null != e._currentElement.ref && t.getReactMountReady().enqueue(n, e), a
                            },
                            getNativeNode: function(e) {
                                return e.getNativeNode()
                            },
                            unmountComponent: function(e, t) {
                                i.detachRefs(e, e._currentElement), e.unmountComponent(t)
                            },
                            receiveComponent: function(e, t, r, o) {
                                var a = e._currentElement;
                                if (t !== a || o !== e._context) {
                                    var s = i.shouldUpdateRefs(a, t);
                                    s && i.detachRefs(e, a), e.receiveComponent(t, r, o), s && e._currentElement && null != e._currentElement.ref && r.getReactMountReady().enqueue(n, e)
                                }
                            },
                            performUpdateIfNecessary: function(e, t) {
                                e.performUpdateIfNecessary(t)
                            }
                        });
                    t.exports = o
                }, {
                    68: 68,
                    84: 84
                }],
                84: [function(e, t, r) {
                    function n(e, t, r) {
                        "function" == typeof e ? e(t.getPublicInstance()) : o.addComponentAsRefTo(t, e, r)
                    }

                    function i(e, t, r) {
                        "function" == typeof e ? e(null) : o.removeComponentAsRefFrom(t, e, r)
                    }
                    var o = e(77),
                        a = {};
                    a.attachRefs = function(e, t) {
                        if (null !== t && t !== !1) {
                            var r = t.ref;
                            null != r && n(r, e, t._owner)
                        }
                    }, a.shouldUpdateRefs = function(e, t) {
                        var r = null === e || e === !1,
                            n = null === t || t === !1;
                        return r || n || t._owner !== e._owner || t.ref !== e.ref
                    }, a.detachRefs = function(e, t) {
                        if (null !== t && t !== !1) {
                            var r = t.ref;
                            null != r && i(r, e, t._owner)
                        }
                    }, t.exports = a
                }, {
                    77: 77
                }],
                85: [function(e, t, r) {
                    var n = {
                        isBatchingUpdates: !1,
                        batchedUpdates: function(e) {}
                    };
                    t.exports = n
                }, {}],
                86: [function(e, t, r) {
                    function n(e, t) {
                        var r;
                        try {
                            return p.injection.injectBatchingStrategy(c), r = h.getPooled(t), r.perform(function() {
                                var n = f(e),
                                    i = n.mountComponent(r, null, a(), d);
                                return t || (i = l.addChecksumToMarkup(i)), i
                            }, null)
                        } finally {
                            h.release(r), p.injection.injectBatchingStrategy(s)
                        }
                    }

                    function i(e) {
                        return u.isValidElement(e) ? void 0 : m(!1), n(e, !1)
                    }

                    function o(e) {
                        return u.isValidElement(e) ? void 0 : m(!1), n(e, !0)
                    }
                    var a = e(39),
                        s = e(56),
                        u = e(58),
                        l = e(70),
                        c = e(85),
                        h = e(87),
                        p = e(90),
                        d = e(147),
                        f = e(128),
                        m = e(154);
                    t.exports = {
                        renderToString: i,
                        renderToStaticMarkup: o
                    }
                }, {
                    128: 128,
                    147: 147,
                    154: 154,
                    39: 39,
                    56: 56,
                    58: 58,
                    70: 70,
                    85: 85,
                    87: 87,
                    90: 90
                }],
                87: [function(e, t, r) {
                    function n(e) {
                        this.reinitializeTransaction(), this.renderToStaticMarkup = e, this.useCreateElement = !1
                    }
                    var i = e(163),
                        o = e(23),
                        a = e(108),
                        s = [],
                        u = {
                            enqueue: function() {}
                        },
                        l = {
                            getTransactionWrappers: function() {
                                return s
                            },
                            getReactMountReady: function() {
                                return u
                            },
                            destructor: function() {}
                        };
                    i(n.prototype, a.Mixin, l), o.addPoolingTo(n), t.exports = n
                }, {
                    108: 108,
                    163: 163,
                    23: 23
                }],
                88: [function(e, t, r) {
                    var n = e(163),
                        i = e(34),
                        o = e(50),
                        a = e(24),
                        s = n({
                            __SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: i,
                            __SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: o
                        }, a);
                    t.exports = s
                }, {
                    163: 163,
                    24: 24,
                    34: 34,
                    50: 50
                }],
                89: [function(e, t, r) {
                    function n(e) {
                        a.enqueueUpdate(e)
                    }

                    function i(e, t) {
                        var r = o.get(e);
                        return r ? r : null
                    }
                    var o = (e(33), e(67)),
                        a = e(90),
                        s = e(154),
                        u = (e(162), {
                            isMounted: function(e) {
                                var t = o.get(e);
                                return t ? !!t._renderedComponent : !1
                            },
                            enqueueCallback: function(e, t, r) {
                                u.validateCallback(t, r);
                                var o = i(e);
                                return o ? (o._pendingCallbacks ? o._pendingCallbacks.push(t) : o._pendingCallbacks = [t], void n(o)) : null
                            },
                            enqueueCallbackInternal: function(e, t) {
                                e._pendingCallbacks ? e._pendingCallbacks.push(t) : e._pendingCallbacks = [t], n(e)
                            },
                            enqueueForceUpdate: function(e) {
                                var t = i(e, "forceUpdate");
                                t && (t._pendingForceUpdate = !0, n(t))
                            },
                            enqueueReplaceState: function(e, t) {
                                var r = i(e, "replaceState");
                                r && (r._pendingStateQueue = [t], r._pendingReplaceState = !0, n(r))
                            },
                            enqueueSetState: function(e, t) {
                                var r = i(e, "setState");
                                if (r) {
                                    var o = r._pendingStateQueue || (r._pendingStateQueue = []);
                                    o.push(t), n(r)
                                }
                            },
                            enqueueElementInternal: function(e, t) {
                                e._pendingElement = t, n(e)
                            },
                            validateCallback: function(e, t) {
                                e && "function" != typeof e ? s(!1) : void 0
                            }
                        });
                    t.exports = u
                }, {
                    154: 154,
                    162: 162,
                    33: 33,
                    67: 67,
                    90: 90
                }],
                90: [function(e, t, r) {
                    function n() {
                        M.ReactReconcileTransaction && _ ? void 0 : g(!1)
                    }

                    function i() {
                        this.reinitializeTransaction(), this.dirtyComponentsLength = null, this.callbackQueue = h.getPooled(), this.reconcileTransaction = M.ReactReconcileTransaction.getPooled(!0)
                    }

                    function o(e, t, r, i, o, a) {
                        n(), _.batchedUpdates(e, t, r, i, o, a)
                    }

                    function a(e, t) {
                        return e._mountOrder - t._mountOrder
                    }

                    function s(e) {
                        var t = e.dirtyComponentsLength;
                        t !== y.length ? g(!1) : void 0, y.sort(a);
                        for (var r = 0; t > r; r++) {
                            var n = y[r],
                                i = n._pendingCallbacks;
                            n._pendingCallbacks = null;
                            var o;
                            if (d.logTopLevelRenders) {
                                var s = n;
                                n._currentElement.props === n._renderedComponent._currentElement && (s = n._renderedComponent), o = "React update: " + s.getName(), console.time(o)
                            }
                            if (m.performUpdateIfNecessary(n, e.reconcileTransaction), o && console.timeEnd(o), i)
                                for (var u = 0; u < i.length; u++) e.callbackQueue.enqueue(i[u], n.getPublicInstance())
                        }
                    }

                    function u(e) {
                        return n(), _.isBatchingUpdates ? void y.push(e) : void _.batchedUpdates(u, e)
                    }

                    function l(e, t) {
                        _.isBatchingUpdates ? void 0 : g(!1), b.enqueue(e, t), x = !0
                    }
                    var c = e(163),
                        h = e(5),
                        p = e(23),
                        d = e(64),
                        f = e(78),
                        m = e(83),
                        v = e(108),
                        g = e(154),
                        y = [],
                        b = h.getPooled(),
                        x = !1,
                        _ = null,
                        w = {
                            initialize: function() {
                                this.dirtyComponentsLength = y.length
                            },
                            close: function() {
                                this.dirtyComponentsLength !== y.length ? (y.splice(0, this.dirtyComponentsLength), S()) : y.length = 0
                            }
                        },
                        C = {
                            initialize: function() {
                                this.callbackQueue.reset()
                            },
                            close: function() {
                                this.callbackQueue.notifyAll()
                            }
                        },
                        E = [w, C];
                    c(i.prototype, v.Mixin, {
                        getTransactionWrappers: function() {
                            return E
                        },
                        destructor: function() {
                            this.dirtyComponentsLength = null, h.release(this.callbackQueue), this.callbackQueue = null, M.ReactReconcileTransaction.release(this.reconcileTransaction), this.reconcileTransaction = null
                        },
                        perform: function(e, t, r) {
                            return v.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, e, t, r)
                        }
                    }), p.addPoolingTo(i);
                    var S = function() {
                        for (; y.length || x;) {
                            if (y.length) {
                                var e = i.getPooled();
                                e.perform(s, null, e), i.release(e)
                            }
                            if (x) {
                                x = !1;
                                var t = b;
                                b = h.getPooled(), t.notifyAll(), h.release(t)
                            }
                        }
                    };
                    S = f.measure("ReactUpdates", "flushBatchedUpdates", S);
                    var T = {
                            injectReconcileTransaction: function(e) {
                                e ? void 0 : g(!1), M.ReactReconcileTransaction = e
                            },
                            injectBatchingStrategy: function(e) {
                                e ? void 0 : g(!1), "function" != typeof e.batchedUpdates ? g(!1) : void 0, "boolean" != typeof e.isBatchingUpdates ? g(!1) : void 0, _ = e
                            }
                        },
                        M = {
                            ReactReconcileTransaction: null,
                            batchedUpdates: o,
                            enqueueUpdate: u,
                            flushBatchedUpdates: S,
                            injection: T,
                            asap: l
                        };
                    t.exports = M
                }, {
                    108: 108,
                    154: 154,
                    163: 163,
                    23: 23,
                    5: 5,
                    64: 64,
                    78: 78,
                    83: 83
                }],
                91: [function(e, t, r) {
                    t.exports = "15.0.1"
                }, {}],
                92: [function(e, t, r) {
                    var n = {
                            xlink: "http://www.w3.org/1999/xlink",
                            xml: "http://www.w3.org/XML/1998/namespace"
                        },
                        i = {
                            accentHeight: "accent-height",
                            accumulate: 0,
                            additive: 0,
                            alignmentBaseline: "alignment-baseline",
                            allowReorder: "allowReorder",
                            alphabetic: 0,
                            amplitude: 0,
                            arabicForm: "arabic-form",
                            ascent: 0,
                            attributeName: "attributeName",
                            attributeType: "attributeType",
                            autoReverse: "autoReverse",
                            azimuth: 0,
                            baseFrequency: "baseFrequency",
                            baseProfile: "baseProfile",
                            baselineShift: "baseline-shift",
                            bbox: 0,
                            begin: 0,
                            bias: 0,
                            by: 0,
                            calcMode: "calcMode",
                            capHeight: "cap-height",
                            clip: 0,
                            clipPath: "clip-path",
                            clipRule: "clip-rule",
                            clipPathUnits: "clipPathUnits",
                            colorInterpolation: "color-interpolation",
                            colorInterpolationFilters: "color-interpolation-filters",
                            colorProfile: "color-profile",
                            colorRendering: "color-rendering",
                            contentScriptType: "contentScriptType",
                            contentStyleType: "contentStyleType",
                            cursor: 0,
                            cx: 0,
                            cy: 0,
                            d: 0,
                            decelerate: 0,
                            descent: 0,
                            diffuseConstant: "diffuseConstant",
                            direction: 0,
                            display: 0,
                            divisor: 0,
                            dominantBaseline: "dominant-baseline",
                            dur: 0,
                            dx: 0,
                            dy: 0,
                            edgeMode: "edgeMode",
                            elevation: 0,
                            enableBackground: "enable-background",
                            end: 0,
                            exponent: 0,
                            externalResourcesRequired: "externalResourcesRequired",
                            fill: 0,
                            fillOpacity: "fill-opacity",
                            fillRule: "fill-rule",
                            filter: 0,
                            filterRes: "filterRes",
                            filterUnits: "filterUnits",
                            floodColor: "flood-color",
                            floodOpacity: "flood-opacity",
                            focusable: 0,
                            fontFamily: "font-family",
                            fontSize: "font-size",
                            fontSizeAdjust: "font-size-adjust",
                            fontStretch: "font-stretch",
                            fontStyle: "font-style",
                            fontVariant: "font-variant",
                            fontWeight: "font-weight",
                            format: 0,
                            from: 0,
                            fx: 0,
                            fy: 0,
                            g1: 0,
                            g2: 0,
                            glyphName: "glyph-name",
                            glyphOrientationHorizontal: "glyph-orientation-horizontal",
                            glyphOrientationVertical: "glyph-orientation-vertical",
                            glyphRef: "glyphRef",
                            gradientTransform: "gradientTransform",
                            gradientUnits: "gradientUnits",
                            hanging: 0,
                            horizAdvX: "horiz-adv-x",
                            horizOriginX: "horiz-origin-x",
                            ideographic: 0,
                            imageRendering: "image-rendering",
                            "in": 0,
                            in2: 0,
                            intercept: 0,
                            k: 0,
                            k1: 0,
                            k2: 0,
                            k3: 0,
                            k4: 0,
                            kernelMatrix: "kernelMatrix",
                            kernelUnitLength: "kernelUnitLength",
                            kerning: 0,
                            keyPoints: "keyPoints",
                            keySplines: "keySplines",
                            keyTimes: "keyTimes",
                            lengthAdjust: "lengthAdjust",
                            letterSpacing: "letter-spacing",
                            lightingColor: "lighting-color",
                            limitingConeAngle: "limitingConeAngle",
                            local: 0,
                            markerEnd: "marker-end",
                            markerMid: "marker-mid",
                            markerStart: "marker-start",
                            markerHeight: "markerHeight",
                            markerUnits: "markerUnits",
                            markerWidth: "markerWidth",
                            mask: 0,
                            maskContentUnits: "maskContentUnits",
                            maskUnits: "maskUnits",
                            mathematical: 0,
                            mode: 0,
                            numOctaves: "numOctaves",
                            offset: 0,
                            opacity: 0,
                            operator: 0,
                            order: 0,
                            orient: 0,
                            orientation: 0,
                            origin: 0,
                            overflow: 0,
                            overlinePosition: "overline-position",
                            overlineThickness: "overline-thickness",
                            paintOrder: "paint-order",
                            panose1: "panose-1",
                            pathLength: "pathLength",
                            patternContentUnits: "patternContentUnits",
                            patternTransform: "patternTransform",
                            patternUnits: "patternUnits",
                            pointerEvents: "pointer-events",
                            points: 0,
                            pointsAtX: "pointsAtX",
                            pointsAtY: "pointsAtY",
                            pointsAtZ: "pointsAtZ",
                            preserveAlpha: "preserveAlpha",
                            preserveAspectRatio: "preserveAspectRatio",
                            primitiveUnits: "primitiveUnits",
                            r: 0,
                            radius: 0,
                            refX: "refX",
                            refY: "refY",
                            renderingIntent: "rendering-intent",
                            repeatCount: "repeatCount",
                            repeatDur: "repeatDur",
                            requiredExtensions: "requiredExtensions",
                            requiredFeatures: "requiredFeatures",
                            restart: 0,
                            result: 0,
                            rotate: 0,
                            rx: 0,
                            ry: 0,
                            scale: 0,
                            seed: 0,
                            shapeRendering: "shape-rendering",
                            slope: 0,
                            spacing: 0,
                            specularConstant: "specularConstant",
                            specularExponent: "specularExponent",
                            speed: 0,
                            spreadMethod: "spreadMethod",
                            startOffset: "startOffset",
                            stdDeviation: "stdDeviation",
                            stemh: 0,
                            stemv: 0,
                            stitchTiles: "stitchTiles",
                            stopColor: "stop-color",
                            stopOpacity: "stop-opacity",
                            strikethroughPosition: "strikethrough-position",
                            strikethroughThickness: "strikethrough-thickness",
                            string: 0,
                            stroke: 0,
                            strokeDasharray: "stroke-dasharray",
                            strokeDashoffset: "stroke-dashoffset",
                            strokeLinecap: "stroke-linecap",
                            strokeLinejoin: "stroke-linejoin",
                            strokeMiterlimit: "stroke-miterlimit",
                            strokeOpacity: "stroke-opacity",
                            strokeWidth: "stroke-width",
                            surfaceScale: "surfaceScale",
                            systemLanguage: "systemLanguage",
                            tableValues: "tableValues",
                            targetX: "targetX",
                            targetY: "targetY",
                            textAnchor: "text-anchor",
                            textDecoration: "text-decoration",
                            textRendering: "text-rendering",
                            textLength: "textLength",
                            to: 0,
                            transform: 0,
                            u1: 0,
                            u2: 0,
                            underlinePosition: "underline-position",
                            underlineThickness: "underline-thickness",
                            unicode: 0,
                            unicodeBidi: "unicode-bidi",
                            unicodeRange: "unicode-range",
                            unitsPerEm: "units-per-em",
                            vAlphabetic: "v-alphabetic",
                            vHanging: "v-hanging",
                            vIdeographic: "v-ideographic",
                            vMathematical: "v-mathematical",
                            values: 0,
                            vectorEffect: "vector-effect",
                            version: 0,
                            vertAdvY: "vert-adv-y",
                            vertOriginX: "vert-origin-x",
                            vertOriginY: "vert-origin-y",
                            viewBox: "viewBox",
                            viewTarget: "viewTarget",
                            visibility: 0,
                            widths: 0,
                            wordSpacing: "word-spacing",
                            writingMode: "writing-mode",
                            x: 0,
                            xHeight: "x-height",
                            x1: 0,
                            x2: 0,
                            xChannelSelector: "xChannelSelector",
                            xlinkActuate: "xlink:actuate",
                            xlinkArcrole: "xlink:arcrole",
                            xlinkHref: "xlink:href",
                            xlinkRole: "xlink:role",
                            xlinkShow: "xlink:show",
                            xlinkTitle: "xlink:title",
                            xlinkType: "xlink:type",
                            xmlBase: "xml:base",
                            xmlLang: "xml:lang",
                            xmlSpace: "xml:space",
                            y: 0,
                            y1: 0,
                            y2: 0,
                            yChannelSelector: "yChannelSelector",
                            z: 0,
                            zoomAndPan: "zoomAndPan"
                        },
                        o = {
                            Properties: {},
                            DOMAttributeNamespaces: {
                                xlinkActuate: n.xlink,
                                xlinkArcrole: n.xlink,
                                xlinkHref: n.xlink,
                                xlinkRole: n.xlink,
                                xlinkShow: n.xlink,
                                xlinkTitle: n.xlink,
                                xlinkType: n.xlink,
                                xmlBase: n.xml,
                                xmlLang: n.xml,
                                xmlSpace: n.xml
                            },
                            DOMAttributeNames: {}
                        };
                    Object.keys(i).map(function(e) {
                        o.Properties[e] = 0, i[e] && (o.DOMAttributeNames[e] = i[e])
                    }), t.exports = o
                }, {}],
                93: [function(e, t, r) {
                    function n(e) {
                        if ("selectionStart" in e && l.hasSelectionCapabilities(e)) return {
                            start: e.selectionStart,
                            end: e.selectionEnd
                        };
                        if (window.getSelection) {
                            var t = window.getSelection();
                            return {
                                anchorNode: t.anchorNode,
                                anchorOffset: t.anchorOffset,
                                focusNode: t.focusNode,
                                focusOffset: t.focusOffset
                            }
                        }
                        if (document.selection) {
                            var r = document.selection.createRange();
                            return {
                                parentElement: r.parentElement(),
                                text: r.text,
                                top: r.boundingTop,
                                left: r.boundingLeft
                            }
                        }
                    }

                    function i(e, t) {
                        if (_ || null == y || y !== h()) return null;
                        var r = n(y);
                        if (!x || !f(x, r)) {
                            x = r;
                            var i = c.getPooled(g.select, b, e, t);
                            return i.type = "select", i.target = y, a.accumulateTwoPhaseDispatches(i), i
                        }
                        return null
                    }
                    var o = e(15),
                        a = e(19),
                        s = e(140),
                        u = e(38),
                        l = e(66),
                        c = e(99),
                        h = e(149),
                        p = e(130),
                        d = e(158),
                        f = e(161),
                        m = o.topLevelTypes,
                        v = s.canUseDOM && "documentMode" in document && document.documentMode <= 11,
                        g = {
                            select: {
                                phasedRegistrationNames: {
                                    bubbled: d({
                                        onSelect: null
                                    }),
                                    captured: d({
                                        onSelectCapture: null
                                    })
                                },
                                dependencies: [m.topBlur, m.topContextMenu, m.topFocus, m.topKeyDown, m.topMouseDown, m.topMouseUp, m.topSelectionChange]
                            }
                        },
                        y = null,
                        b = null,
                        x = null,
                        _ = !1,
                        w = !1,
                        C = d({
                            onSelect: null
                        }),
                        E = {
                            eventTypes: g,
                            extractEvents: function(e, t, r, n) {
                                if (!w) return null;
                                var o = t ? u.getNodeFromInstance(t) : window;
                                switch (e) {
                                    case m.topFocus:
                                        (p(o) || "true" === o.contentEditable) && (y = o, b = t, x = null);
                                        break;
                                    case m.topBlur:
                                        y = null, b = null, x = null;
                                        break;
                                    case m.topMouseDown:
                                        _ = !0;
                                        break;
                                    case m.topContextMenu:
                                    case m.topMouseUp:
                                        return _ = !1, i(r, n);
                                    case m.topSelectionChange:
                                        if (v) break;
                                    case m.topKeyDown:
                                    case m.topKeyUp:
                                        return i(r, n)
                                }
                                return null
                            },
                            didPutListener: function(e, t, r) {
                                t === C && (w = !0)
                            }
                        };
                    t.exports = E
                }, {
                    130: 130,
                    140: 140,
                    149: 149,
                    15: 15,
                    158: 158,
                    161: 161,
                    19: 19,
                    38: 38,
                    66: 66,
                    99: 99
                }],
                94: [function(e, t, r) {
                    var n = e(15),
                        i = e(139),
                        o = e(19),
                        a = e(38),
                        s = e(95),
                        u = e(96),
                        l = e(99),
                        c = e(100),
                        h = e(102),
                        p = e(103),
                        d = e(98),
                        f = e(104),
                        m = e(105),
                        v = e(106),
                        g = e(107),
                        y = e(146),
                        b = e(119),
                        x = e(154),
                        _ = e(158),
                        w = n.topLevelTypes,
                        C = {
                            abort: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onAbort: !0
                                    }),
                                    captured: _({
                                        onAbortCapture: !0
                                    })
                                }
                            },
                            animationEnd: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onAnimationEnd: !0
                                    }),
                                    captured: _({
                                        onAnimationEndCapture: !0
                                    })
                                }
                            },
                            animationIteration: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onAnimationIteration: !0
                                    }),
                                    captured: _({
                                        onAnimationIterationCapture: !0
                                    })
                                }
                            },
                            animationStart: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onAnimationStart: !0
                                    }),
                                    captured: _({
                                        onAnimationStartCapture: !0
                                    })
                                }
                            },
                            blur: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onBlur: !0
                                    }),
                                    captured: _({
                                        onBlurCapture: !0
                                    })
                                }
                            },
                            canPlay: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onCanPlay: !0
                                    }),
                                    captured: _({
                                        onCanPlayCapture: !0
                                    })
                                }
                            },
                            canPlayThrough: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onCanPlayThrough: !0
                                    }),
                                    captured: _({
                                        onCanPlayThroughCapture: !0
                                    })
                                }
                            },
                            click: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onClick: !0
                                    }),
                                    captured: _({
                                        onClickCapture: !0
                                    })
                                }
                            },
                            contextMenu: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onContextMenu: !0
                                    }),
                                    captured: _({
                                        onContextMenuCapture: !0
                                    })
                                }
                            },
                            copy: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onCopy: !0
                                    }),
                                    captured: _({
                                        onCopyCapture: !0
                                    })
                                }
                            },
                            cut: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onCut: !0
                                    }),
                                    captured: _({
                                        onCutCapture: !0
                                    })
                                }
                            },
                            doubleClick: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDoubleClick: !0
                                    }),
                                    captured: _({
                                        onDoubleClickCapture: !0
                                    })
                                }
                            },
                            drag: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDrag: !0
                                    }),
                                    captured: _({
                                        onDragCapture: !0
                                    })
                                }
                            },
                            dragEnd: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDragEnd: !0
                                    }),
                                    captured: _({
                                        onDragEndCapture: !0
                                    })
                                }
                            },
                            dragEnter: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDragEnter: !0
                                    }),
                                    captured: _({
                                        onDragEnterCapture: !0
                                    })
                                }
                            },
                            dragExit: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDragExit: !0
                                    }),
                                    captured: _({
                                        onDragExitCapture: !0
                                    })
                                }
                            },
                            dragLeave: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDragLeave: !0
                                    }),
                                    captured: _({
                                        onDragLeaveCapture: !0
                                    })
                                }
                            },
                            dragOver: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDragOver: !0
                                    }),
                                    captured: _({
                                        onDragOverCapture: !0
                                    })
                                }
                            },
                            dragStart: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDragStart: !0
                                    }),
                                    captured: _({
                                        onDragStartCapture: !0
                                    })
                                }
                            },
                            drop: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDrop: !0
                                    }),
                                    captured: _({
                                        onDropCapture: !0
                                    })
                                }
                            },
                            durationChange: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onDurationChange: !0
                                    }),
                                    captured: _({
                                        onDurationChangeCapture: !0
                                    })
                                }
                            },
                            emptied: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onEmptied: !0
                                    }),
                                    captured: _({
                                        onEmptiedCapture: !0
                                    })
                                }
                            },
                            encrypted: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onEncrypted: !0
                                    }),
                                    captured: _({
                                        onEncryptedCapture: !0
                                    })
                                }
                            },
                            ended: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onEnded: !0
                                    }),
                                    captured: _({
                                        onEndedCapture: !0
                                    })
                                }
                            },
                            error: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onError: !0
                                    }),
                                    captured: _({
                                        onErrorCapture: !0
                                    })
                                }
                            },
                            focus: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onFocus: !0
                                    }),
                                    captured: _({
                                        onFocusCapture: !0
                                    })
                                }
                            },
                            input: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onInput: !0
                                    }),
                                    captured: _({
                                        onInputCapture: !0
                                    })
                                }
                            },
                            invalid: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onInvalid: !0
                                    }),
                                    captured: _({
                                        onInvalidCapture: !0
                                    })
                                }
                            },
                            keyDown: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onKeyDown: !0
                                    }),
                                    captured: _({
                                        onKeyDownCapture: !0
                                    })
                                }
                            },
                            keyPress: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onKeyPress: !0
                                    }),
                                    captured: _({
                                        onKeyPressCapture: !0
                                    })
                                }
                            },
                            keyUp: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onKeyUp: !0
                                    }),
                                    captured: _({
                                        onKeyUpCapture: !0
                                    })
                                }
                            },
                            load: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onLoad: !0
                                    }),
                                    captured: _({
                                        onLoadCapture: !0
                                    })
                                }
                            },
                            loadedData: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onLoadedData: !0
                                    }),
                                    captured: _({
                                        onLoadedDataCapture: !0
                                    })
                                }
                            },
                            loadedMetadata: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onLoadedMetadata: !0
                                    }),
                                    captured: _({
                                        onLoadedMetadataCapture: !0
                                    })
                                }
                            },
                            loadStart: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onLoadStart: !0
                                    }),
                                    captured: _({
                                        onLoadStartCapture: !0
                                    })
                                }
                            },
                            mouseDown: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onMouseDown: !0
                                    }),
                                    captured: _({
                                        onMouseDownCapture: !0
                                    })
                                }
                            },
                            mouseMove: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onMouseMove: !0
                                    }),
                                    captured: _({
                                        onMouseMoveCapture: !0
                                    })
                                }
                            },
                            mouseOut: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onMouseOut: !0
                                    }),
                                    captured: _({
                                        onMouseOutCapture: !0
                                    })
                                }
                            },
                            mouseOver: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onMouseOver: !0
                                    }),
                                    captured: _({
                                        onMouseOverCapture: !0
                                    })
                                }
                            },
                            mouseUp: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onMouseUp: !0
                                    }),
                                    captured: _({
                                        onMouseUpCapture: !0
                                    })
                                }
                            },
                            paste: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onPaste: !0
                                    }),
                                    captured: _({
                                        onPasteCapture: !0
                                    })
                                }
                            },
                            pause: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onPause: !0
                                    }),
                                    captured: _({
                                        onPauseCapture: !0
                                    })
                                }
                            },
                            play: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onPlay: !0
                                    }),
                                    captured: _({
                                        onPlayCapture: !0
                                    })
                                }
                            },
                            playing: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onPlaying: !0
                                    }),
                                    captured: _({
                                        onPlayingCapture: !0
                                    })
                                }
                            },
                            progress: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onProgress: !0
                                    }),
                                    captured: _({
                                        onProgressCapture: !0
                                    })
                                }
                            },
                            rateChange: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onRateChange: !0
                                    }),
                                    captured: _({
                                        onRateChangeCapture: !0
                                    })
                                }
                            },
                            reset: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onReset: !0
                                    }),
                                    captured: _({
                                        onResetCapture: !0
                                    })
                                }
                            },
                            scroll: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onScroll: !0
                                    }),
                                    captured: _({
                                        onScrollCapture: !0
                                    })
                                }
                            },
                            seeked: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onSeeked: !0
                                    }),
                                    captured: _({
                                        onSeekedCapture: !0
                                    })
                                }
                            },
                            seeking: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onSeeking: !0
                                    }),
                                    captured: _({
                                        onSeekingCapture: !0
                                    })
                                }
                            },
                            stalled: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onStalled: !0
                                    }),
                                    captured: _({
                                        onStalledCapture: !0
                                    })
                                }
                            },
                            submit: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onSubmit: !0
                                    }),
                                    captured: _({
                                        onSubmitCapture: !0
                                    })
                                }
                            },
                            suspend: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onSuspend: !0
                                    }),
                                    captured: _({
                                        onSuspendCapture: !0
                                    })
                                }
                            },
                            timeUpdate: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onTimeUpdate: !0
                                    }),
                                    captured: _({
                                        onTimeUpdateCapture: !0
                                    })
                                }
                            },
                            touchCancel: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onTouchCancel: !0
                                    }),
                                    captured: _({
                                        onTouchCancelCapture: !0
                                    })
                                }
                            },
                            touchEnd: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onTouchEnd: !0
                                    }),
                                    captured: _({
                                        onTouchEndCapture: !0
                                    })
                                }
                            },
                            touchMove: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onTouchMove: !0
                                    }),
                                    captured: _({
                                        onTouchMoveCapture: !0
                                    })
                                }
                            },
                            touchStart: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onTouchStart: !0
                                    }),
                                    captured: _({
                                        onTouchStartCapture: !0
                                    })
                                }
                            },
                            transitionEnd: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onTransitionEnd: !0
                                    }),
                                    captured: _({
                                        onTransitionEndCapture: !0
                                    })
                                }
                            },
                            volumeChange: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onVolumeChange: !0
                                    }),
                                    captured: _({
                                        onVolumeChangeCapture: !0
                                    })
                                }
                            },
                            waiting: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onWaiting: !0
                                    }),
                                    captured: _({
                                        onWaitingCapture: !0
                                    })
                                }
                            },
                            wheel: {
                                phasedRegistrationNames: {
                                    bubbled: _({
                                        onWheel: !0
                                    }),
                                    captured: _({
                                        onWheelCapture: !0
                                    })
                                }
                            }
                        },
                        E = {
                            topAbort: C.abort,
                            topAnimationEnd: C.animationEnd,
                            topAnimationIteration: C.animationIteration,
                            topAnimationStart: C.animationStart,
                            topBlur: C.blur,
                            topCanPlay: C.canPlay,
                            topCanPlayThrough: C.canPlayThrough,
                            topClick: C.click,
                            topContextMenu: C.contextMenu,
                            topCopy: C.copy,
                            topCut: C.cut,
                            topDoubleClick: C.doubleClick,
                            topDrag: C.drag,
                            topDragEnd: C.dragEnd,
                            topDragEnter: C.dragEnter,
                            topDragExit: C.dragExit,
                            topDragLeave: C.dragLeave,
                            topDragOver: C.dragOver,
                            topDragStart: C.dragStart,
                            topDrop: C.drop,
                            topDurationChange: C.durationChange,
                            topEmptied: C.emptied,
                            topEncrypted: C.encrypted,
                            topEnded: C.ended,
                            topError: C.error,
                            topFocus: C.focus,
                            topInput: C.input,
                            topInvalid: C.invalid,
                            topKeyDown: C.keyDown,
                            topKeyPress: C.keyPress,
                            topKeyUp: C.keyUp,
                            topLoad: C.load,
                            topLoadedData: C.loadedData,
                            topLoadedMetadata: C.loadedMetadata,
                            topLoadStart: C.loadStart,
                            topMouseDown: C.mouseDown,
                            topMouseMove: C.mouseMove,
                            topMouseOut: C.mouseOut,
                            topMouseOver: C.mouseOver,
                            topMouseUp: C.mouseUp,
                            topPaste: C.paste,
                            topPause: C.pause,
                            topPlay: C.play,
                            topPlaying: C.playing,
                            topProgress: C.progress,
                            topRateChange: C.rateChange,
                            topReset: C.reset,
                            topScroll: C.scroll,
                            topSeeked: C.seeked,
                            topSeeking: C.seeking,
                            topStalled: C.stalled,
                            topSubmit: C.submit,
                            topSuspend: C.suspend,
                            topTimeUpdate: C.timeUpdate,
                            topTouchCancel: C.touchCancel,
                            topTouchEnd: C.touchEnd,
                            topTouchMove: C.touchMove,
                            topTouchStart: C.touchStart,
                            topTransitionEnd: C.transitionEnd,
                            topVolumeChange: C.volumeChange,
                            topWaiting: C.waiting,
                            topWheel: C.wheel
                        };
                    for (var S in E) E[S].dependencies = [S];
                    var T = _({
                            onClick: null
                        }),
                        M = {},
                        A = {
                            eventTypes: C,
                            extractEvents: function(e, t, r, n) {
                                var i = E[e];
                                if (!i) return null;
                                var a;
                                switch (e) {
                                    case w.topAbort:
                                    case w.topCanPlay:
                                    case w.topCanPlayThrough:
                                    case w.topDurationChange:
                                    case w.topEmptied:
                                    case w.topEncrypted:
                                    case w.topEnded:
                                    case w.topError:
                                    case w.topInput:
                                    case w.topInvalid:
                                    case w.topLoad:
                                    case w.topLoadedData:
                                    case w.topLoadedMetadata:
                                    case w.topLoadStart:
                                    case w.topPause:
                                    case w.topPlay:
                                    case w.topPlaying:
                                    case w.topProgress:
                                    case w.topRateChange:
                                    case w.topReset:
                                    case w.topSeeked:
                                    case w.topSeeking:
                                    case w.topStalled:
                                    case w.topSubmit:
                                    case w.topSuspend:
                                    case w.topTimeUpdate:
                                    case w.topVolumeChange:
                                    case w.topWaiting:
                                        a = l;
                                        break;
                                    case w.topKeyPress:
                                        if (0 === b(r)) return null;
                                    case w.topKeyDown:
                                    case w.topKeyUp:
                                        a = h;
                                        break;
                                    case w.topBlur:
                                    case w.topFocus:
                                        a = c;
                                        break;
                                    case w.topClick:
                                        if (2 === r.button) return null;
                                    case w.topContextMenu:
                                    case w.topDoubleClick:
                                    case w.topMouseDown:
                                    case w.topMouseMove:
                                    case w.topMouseOut:
                                    case w.topMouseOver:
                                    case w.topMouseUp:
                                        a = p;
                                        break;
                                    case w.topDrag:
                                    case w.topDragEnd:
                                    case w.topDragEnter:
                                    case w.topDragExit:
                                    case w.topDragLeave:
                                    case w.topDragOver:
                                    case w.topDragStart:
                                    case w.topDrop:
                                        a = d;
                                        break;
                                    case w.topTouchCancel:
                                    case w.topTouchEnd:
                                    case w.topTouchMove:
                                    case w.topTouchStart:
                                        a = f;
                                        break;
                                    case w.topAnimationEnd:
                                    case w.topAnimationIteration:
                                    case w.topAnimationStart:
                                        a = s;
                                        break;
                                    case w.topTransitionEnd:
                                        a = m;
                                        break;
                                    case w.topScroll:
                                        a = v;
                                        break;
                                    case w.topWheel:
                                        a = g;
                                        break;
                                    case w.topCopy:
                                    case w.topCut:
                                    case w.topPaste:
                                        a = u
                                }
                                a ? void 0 : x(!1);
                                var y = a.getPooled(i, t, r, n);
                                return o.accumulateTwoPhaseDispatches(y), y
                            },
                            didPutListener: function(e, t, r) {
                                if (t === T) {
                                    var n = e._rootNodeID,
                                        o = a.getNodeFromInstance(e);
                                    M[n] || (M[n] = i.listen(o, "click", y))
                                }
                            },
                            willDeleteListener: function(e, t) {
                                if (t === T) {
                                    var r = e._rootNodeID;
                                    M[r].remove(), delete M[r]
                                }
                            }
                        };
                    t.exports = A
                }, {
                    100: 100,
                    102: 102,
                    103: 103,
                    104: 104,
                    105: 105,
                    106: 106,
                    107: 107,
                    119: 119,
                    139: 139,
                    146: 146,
                    15: 15,
                    154: 154,
                    158: 158,
                    19: 19,
                    38: 38,
                    95: 95,
                    96: 96,
                    98: 98,
                    99: 99
                }],
                95: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(99),
                        o = {
                            animationName: null,
                            elapsedTime: null,
                            pseudoElement: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    99: 99
                }],
                96: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(99),
                        o = {
                            clipboardData: function(e) {
                                return "clipboardData" in e ? e.clipboardData : window.clipboardData
                            }
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    99: 99
                }],
                97: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(99),
                        o = {
                            data: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    99: 99
                }],
                98: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(103),
                        o = {
                            dataTransfer: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    103: 103
                }],
                99: [function(e, t, r) {
                    function n(e, t, r, n) {
                        this.dispatchConfig = e, this._targetInst = t, this.nativeEvent = r;
                        var i = this.constructor.Interface;
                        for (var o in i)
                            if (i.hasOwnProperty(o)) {
                                var s = i[o];
                                s ? this[o] = s(r) : "target" === o ? this.target = n : this[o] = r[o]
                            }
                        var u = null != r.defaultPrevented ? r.defaultPrevented : r.returnValue === !1;
                        return u ? this.isDefaultPrevented = a.thatReturnsTrue : this.isDefaultPrevented = a.thatReturnsFalse, this.isPropagationStopped = a.thatReturnsFalse, this
                    }
                    var i = e(163),
                        o = e(23),
                        a = e(146),
                        s = (e(162), "function" == typeof Proxy, ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"]),
                        u = {
                            type: null,
                            target: null,
                            currentTarget: a.thatReturnsNull,
                            eventPhase: null,
                            bubbles: null,
                            cancelable: null,
                            timeStamp: function(e) {
                                return e.timeStamp || Date.now()
                            },
                            defaultPrevented: null,
                            isTrusted: null
                        };
                    i(n.prototype, {
                        preventDefault: function() {
                            this.defaultPrevented = !0;
                            var e = this.nativeEvent;
                            e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, this.isDefaultPrevented = a.thatReturnsTrue)
                        },
                        stopPropagation: function() {
                            var e = this.nativeEvent;
                            e && (e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, this.isPropagationStopped = a.thatReturnsTrue)
                        },
                        persist: function() {
                            this.isPersistent = a.thatReturnsTrue
                        },
                        isPersistent: a.thatReturnsFalse,
                        destructor: function() {
                            var e = this.constructor.Interface;
                            for (var t in e) this[t] = null;
                            for (var r = 0; r < s.length; r++) this[s[r]] = null
                        }
                    }), n.Interface = u, n.augmentClass = function(e, t) {
                        var r = this,
                            n = function() {};
                        n.prototype = r.prototype;
                        var a = new n;
                        i(a, e.prototype), e.prototype = a, e.prototype.constructor = e, e.Interface = i({}, r.Interface, t), e.augmentClass = r.augmentClass, o.addPoolingTo(e, o.fourArgumentPooler)
                    }, o.addPoolingTo(n, o.fourArgumentPooler), t.exports = n
                }, {
                    146: 146,
                    162: 162,
                    163: 163,
                    23: 23
                }],
                100: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(106),
                        o = {
                            relatedTarget: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    106: 106
                }],
                101: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(99),
                        o = {
                            data: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    99: 99
                }],
                102: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(106),
                        o = e(119),
                        a = e(120),
                        s = e(121),
                        u = {
                            key: a,
                            location: null,
                            ctrlKey: null,
                            shiftKey: null,
                            altKey: null,
                            metaKey: null,
                            repeat: null,
                            locale: null,
                            getModifierState: s,
                            charCode: function(e) {
                                return "keypress" === e.type ? o(e) : 0
                            },
                            keyCode: function(e) {
                                return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                            },
                            which: function(e) {
                                return "keypress" === e.type ? o(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                            }
                        };
                    i.augmentClass(n, u), t.exports = n
                }, {
                    106: 106,
                    119: 119,
                    120: 120,
                    121: 121
                }],
                103: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(106),
                        o = e(109),
                        a = e(121),
                        s = {
                            screenX: null,
                            screenY: null,
                            clientX: null,
                            clientY: null,
                            ctrlKey: null,
                            shiftKey: null,
                            altKey: null,
                            metaKey: null,
                            getModifierState: a,
                            button: function(e) {
                                var t = e.button;
                                return "which" in e ? t : 2 === t ? 2 : 4 === t ? 1 : 0
                            },
                            buttons: null,
                            relatedTarget: function(e) {
                                return e.relatedTarget || (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
                            },
                            pageX: function(e) {
                                return "pageX" in e ? e.pageX : e.clientX + o.currentScrollLeft
                            },
                            pageY: function(e) {
                                return "pageY" in e ? e.pageY : e.clientY + o.currentScrollTop
                            }
                        };
                    i.augmentClass(n, s), t.exports = n
                }, {
                    106: 106,
                    109: 109,
                    121: 121
                }],
                104: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(106),
                        o = e(121),
                        a = {
                            touches: null,
                            targetTouches: null,
                            changedTouches: null,
                            altKey: null,
                            metaKey: null,
                            ctrlKey: null,
                            shiftKey: null,
                            getModifierState: o
                        };
                    i.augmentClass(n, a), t.exports = n
                }, {
                    106: 106,
                    121: 121
                }],
                105: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(99),
                        o = {
                            propertyName: null,
                            elapsedTime: null,
                            pseudoElement: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    99: 99
                }],
                106: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(99),
                        o = e(122),
                        a = {
                            view: function(e) {
                                if (e.view) return e.view;
                                var t = o(e);
                                if (null != t && t.window === t) return t;
                                var r = t.ownerDocument;
                                return r ? r.defaultView || r.parentWindow : window
                            },
                            detail: function(e) {
                                return e.detail || 0
                            }
                        };
                    i.augmentClass(n, a), t.exports = n
                }, {
                    122: 122,
                    99: 99
                }],
                107: [function(e, t, r) {
                    function n(e, t, r, n) {
                        return i.call(this, e, t, r, n)
                    }
                    var i = e(103),
                        o = {
                            deltaX: function(e) {
                                return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0
                            },
                            deltaY: function(e) {
                                return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0
                            },
                            deltaZ: null,
                            deltaMode: null
                        };
                    i.augmentClass(n, o), t.exports = n
                }, {
                    103: 103
                }],
                108: [function(e, t, r) {
                    var n = e(154),
                        i = {
                            reinitializeTransaction: function() {
                                this.transactionWrappers = this.getTransactionWrappers(), this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [], this._isInTransaction = !1
                            },
                            _isInTransaction: !1,
                            getTransactionWrappers: null,
                            isInTransaction: function() {
                                return !!this._isInTransaction
                            },
                            perform: function(e, t, r, i, o, a, s, u) {
                                this.isInTransaction() ? n(!1) : void 0;
                                var l, c;
                                try {
                                    this._isInTransaction = !0, l = !0, this.initializeAll(0), c = e.call(t, r, i, o, a, s, u), l = !1
                                } finally {
                                    try {
                                        if (l) try {
                                            this.closeAll(0)
                                        } catch (h) {} else this.closeAll(0)
                                    } finally {
                                        this._isInTransaction = !1
                                    }
                                }
                                return c
                            },
                            initializeAll: function(e) {
                                for (var t = this.transactionWrappers, r = e; r < t.length; r++) {
                                    var n = t[r];
                                    try {
                                        this.wrapperInitData[r] = o.OBSERVED_ERROR, this.wrapperInitData[r] = n.initialize ? n.initialize.call(this) : null
                                    } finally {
                                        if (this.wrapperInitData[r] === o.OBSERVED_ERROR) try {
                                            this.initializeAll(r + 1)
                                        } catch (i) {}
                                    }
                                }
                            },
                            closeAll: function(e) {
                                this.isInTransaction() ? void 0 : n(!1);
                                for (var t = this.transactionWrappers, r = e; r < t.length; r++) {
                                    var i, a = t[r],
                                        s = this.wrapperInitData[r];
                                    try {
                                        i = !0, s !== o.OBSERVED_ERROR && a.close && a.close.call(this, s), i = !1
                                    } finally {
                                        if (i) try {
                                            this.closeAll(r + 1)
                                        } catch (u) {}
                                    }
                                }
                                this.wrapperInitData.length = 0
                            }
                        },
                        o = {
                            Mixin: i,
                            OBSERVED_ERROR: {}
                        };
                    t.exports = o
                }, {
                    154: 154
                }],
                109: [function(e, t, r) {
                    var n = {
                        currentScrollLeft: 0,
                        currentScrollTop: 0,
                        refreshScrollValues: function(e) {
                            n.currentScrollLeft = e.x, n.currentScrollTop = e.y
                        }
                    };
                    t.exports = n
                }, {}],
                110: [function(e, t, r) {
                    function n(e, t) {
                        if (null == t ? i(!1) : void 0, null == e) return t;
                        var r = Array.isArray(e),
                            n = Array.isArray(t);
                        return r && n ? (e.push.apply(e, t), e) : r ? (e.push(t), e) : n ? [e].concat(t) : [e, t]
                    }
                    var i = e(154);
                    t.exports = n
                }, {
                    154: 154
                }],
                111: [function(e, t, r) {
                    function n(e) {
                        for (var t = 1, r = 0, n = 0, o = e.length, a = -4 & o; a > n;) {
                            for (var s = Math.min(n + 4096, a); s > n; n += 4) r += (t += e.charCodeAt(n)) + (t += e.charCodeAt(n + 1)) + (t += e.charCodeAt(n + 2)) + (t += e.charCodeAt(n + 3));
                            t %= i, r %= i
                        }
                        for (; o > n; n++) r += t += e.charCodeAt(n);
                        return t %= i, r %= i, t | r << 16
                    }
                    var i = 65521;
                    t.exports = n
                }, {}],
                112: [function(e, t, r) {
                    var n = !1;
                    t.exports = n
                }, {}],
                113: [function(e, t, r) {
                    var n = function(e) {
                        return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t, r, n, i) {
                            MSApp.execUnsafeLocalFunction(function() {
                                return e(t, r, n, i)
                            })
                        } : e
                    };
                    t.exports = n
                }, {}],
                114: [function(e, t, r) {
                    function n(e, t, r) {
                        var n = null == t || "boolean" == typeof t || "" === t;
                        if (n) return "";
                        var i = isNaN(t);
                        return i || 0 === t || o.hasOwnProperty(e) && o[e] ? "" + t : ("string" == typeof t && (t = t.trim()), t + "px")
                    }
                    var i = e(3),
                        o = (e(162), i.isUnitlessNumber);
                    t.exports = n
                }, {
                    162: 162,
                    3: 3
                }],
                115: [function(e, t, r) {
                    function n(e) {
                        return o[e]
                    }

                    function i(e) {
                        return ("" + e).replace(a, n)
                    }
                    var o = {
                            "&": "&amp;",
                            ">": "&gt;",
                            "<": "&lt;",
                            '"': "&quot;",
                            "'": "&#x27;"
                        },
                        a = /[&><"']/g;
                    t.exports = i
                }, {}],
                116: [function(e, t, r) {
                    function n(e) {
                        if (null == e) return null;
                        if (1 === e.nodeType) return e;
                        var t = o.get(e);
                        return t ? (t = a(t), t ? i.getNodeFromInstance(t) : null) : void s(("function" == typeof e.render, !1))
                    }
                    var i = (e(33), e(38)),
                        o = e(67),
                        a = e(124),
                        s = e(154);
                    e(162), t.exports = n
                }, {
                    124: 124,
                    154: 154,
                    162: 162,
                    33: 33,
                    38: 38,
                    67: 67
                }],
                117: [function(e, t, r) {
                    function n(e, t, r) {
                        var n = e,
                            i = void 0 === n[r];
                        i && null != t && (n[r] = t)
                    }

                    function i(e) {
                        if (null == e) return e;
                        var t = {};
                        return o(e, n, t), t
                    }
                    var o = e(137);
                    e(162), t.exports = i
                }, {
                    137: 137,
                    162: 162
                }],
                118: [function(e, t, r) {
                    var n = function(e, t, r) {
                        Array.isArray(e) ? e.forEach(t, r) : e && t.call(r, e)
                    };
                    t.exports = n
                }, {}],
                119: [function(e, t, r) {
                    function n(e) {
                        var t, r = e.keyCode;
                        return "charCode" in e ? (t = e.charCode, 0 === t && 13 === r && (t = 13)) : t = r, t >= 32 || 13 === t ? t : 0
                    }
                    t.exports = n
                }, {}],
                120: [function(e, t, r) {
                    function n(e) {
                        if (e.key) {
                            var t = o[e.key] || e.key;
                            if ("Unidentified" !== t) return t
                        }
                        if ("keypress" === e.type) {
                            var r = i(e);
                            return 13 === r ? "Enter" : String.fromCharCode(r)
                        }
                        return "keydown" === e.type || "keyup" === e.type ? a[e.keyCode] || "Unidentified" : ""
                    }
                    var i = e(119),
                        o = {
                            Esc: "Escape",
                            Spacebar: " ",
                            Left: "ArrowLeft",
                            Up: "ArrowUp",
                            Right: "ArrowRight",
                            Down: "ArrowDown",
                            Del: "Delete",
                            Win: "OS",
                            Menu: "ContextMenu",
                            Apps: "ContextMenu",
                            Scroll: "ScrollLock",
                            MozPrintableKey: "Unidentified"
                        },
                        a = {
                            8: "Backspace",
                            9: "Tab",
                            12: "Clear",
                            13: "Enter",
                            16: "Shift",
                            17: "Control",
                            18: "Alt",
                            19: "Pause",
                            20: "CapsLock",
                            27: "Escape",
                            32: " ",
                            33: "PageUp",
                            34: "PageDown",
                            35: "End",
                            36: "Home",
                            37: "ArrowLeft",
                            38: "ArrowUp",
                            39: "ArrowRight",
                            40: "ArrowDown",
                            45: "Insert",
                            46: "Delete",
                            112: "F1",
                            113: "F2",
                            114: "F3",
                            115: "F4",
                            116: "F5",
                            117: "F6",
                            118: "F7",
                            119: "F8",
                            120: "F9",
                            121: "F10",
                            122: "F11",
                            123: "F12",
                            144: "NumLock",
                            145: "ScrollLock",
                            224: "Meta"
                        };
                    t.exports = n
                }, {
                    119: 119
                }],
                121: [function(e, t, r) {
                    function n(e) {
                        var t = this,
                            r = t.nativeEvent;
                        if (r.getModifierState) return r.getModifierState(e);
                        var n = o[e];
                        return n ? !!r[n] : !1
                    }

                    function i(e) {
                        return n
                    }
                    var o = {
                        Alt: "altKey",
                        Control: "ctrlKey",
                        Meta: "metaKey",
                        Shift: "shiftKey"
                    };
                    t.exports = i
                }, {}],
                122: [function(e, t, r) {
                    function n(e) {
                        var t = e.target || e.srcElement || window;
                        return t.correspondingUseElement && (t = t.correspondingUseElement), 3 === t.nodeType ? t.parentNode : t
                    }
                    t.exports = n
                }, {}],
                123: [function(e, t, r) {
                    function n(e) {
                        var t = e && (i && e[i] || e[o]);
                        return "function" == typeof t ? t : void 0
                    }
                    var i = "function" == typeof Symbol && Symbol.iterator,
                        o = "@@iterator";
                    t.exports = n
                }, {}],
                124: [function(e, t, r) {
                    function n(e) {
                        for (var t;
                            (t = e._renderedNodeType) === i.COMPOSITE;) e = e._renderedComponent;
                        return t === i.NATIVE ? e._renderedComponent : t === i.EMPTY ? null : void 0
                    }
                    var i = e(75);
                    t.exports = n
                }, {
                    75: 75
                }],
                125: [function(e, t, r) {
                    function n(e) {
                        for (; e && e.firstChild;) e = e.firstChild;
                        return e
                    }

                    function i(e) {
                        for (; e;) {
                            if (e.nextSibling) return e.nextSibling;
                            e = e.parentNode
                        }
                    }

                    function o(e, t) {
                        for (var r = n(e), o = 0, a = 0; r;) {
                            if (3 === r.nodeType) {
                                if (a = o + r.textContent.length, t >= o && a >= t) return {
                                    node: r,
                                    offset: t - o
                                };
                                o = a
                            }
                            r = n(i(r))
                        }
                    }
                    t.exports = o
                }, {}],
                126: [function(e, t, r) {
                    function n() {
                        return !o && i.canUseDOM && (o = "textContent" in document.documentElement ? "textContent" : "innerText"), o
                    }
                    var i = e(140),
                        o = null;
                    t.exports = n
                }, {
                    140: 140
                }],
                127: [function(e, t, r) {
                    function n(e, t) {
                        var r = {};
                        return r[e.toLowerCase()] = t.toLowerCase(), r["Webkit" + e] = "webkit" + t, r["Moz" + e] = "moz" + t, r["ms" + e] = "MS" + t, r["O" + e] = "o" + t.toLowerCase(), r
                    }

                    function i(e) {
                        if (s[e]) return s[e];
                        if (!a[e]) return e;
                        var t = a[e];
                        for (var r in t)
                            if (t.hasOwnProperty(r) && r in u) return s[e] = t[r];
                        return ""
                    }
                    var o = e(140),
                        a = {
                            animationend: n("Animation", "AnimationEnd"),
                            animationiteration: n("Animation", "AnimationIteration"),
                            animationstart: n("Animation", "AnimationStart"),
                            transitionend: n("Transition", "TransitionEnd")
                        },
                        s = {},
                        u = {};
                    o.canUseDOM && (u = document.createElement("div").style, "AnimationEvent" in window || (delete a.animationend.animation, delete a.animationiteration.animation, delete a.animationstart.animation), "TransitionEvent" in window || delete a.transitionend.transition), t.exports = i
                }, {
                    140: 140
                }],
                128: [function(e, t, r) {
                    function n(e) {
                        return "function" == typeof e && "undefined" != typeof e.prototype && "function" == typeof e.prototype.mountComponent && "function" == typeof e.prototype.receiveComponent
                    }

                    function i(e) {
                        var t;
                        if (null === e || e === !1) t = s.create(i);
                        else if ("object" == typeof e) {
                            var r = e;
                            !r || "function" != typeof r.type && "string" != typeof r.type ? l(!1) : void 0, t = "string" == typeof r.type ? u.createInternalComponent(r) : n(r.type) ? new r.type(r) : new c(r)
                        } else "string" == typeof e || "number" == typeof e ? t = u.createInstanceForText(e) : l(!1);
                        return t._mountIndex = 0, t._mountImage = null, t
                    }
                    var o = e(163),
                        a = e(32),
                        s = e(60),
                        u = e(74),
                        l = e(154),
                        c = (e(162), function(e) {
                            this.construct(e)
                        });
                    o(c.prototype, a.Mixin, {
                        _instantiateReactComponent: i
                    }), t.exports = i
                }, {
                    154: 154,
                    162: 162,
                    163: 163,
                    32: 32,
                    60: 60,
                    74: 74
                }],
                129: [function(e, t, r) {
                    function n(e, t) {
                        if (!o.canUseDOM || t && !("addEventListener" in document)) return !1;
                        var r = "on" + e,
                            n = r in document;
                        if (!n) {
                            var a = document.createElement("div");
                            a.setAttribute(r, "return;"), n = "function" == typeof a[r]
                        }
                        return !n && i && "wheel" === e && (n = document.implementation.hasFeature("Events.wheel", "3.0")), n
                    }
                    var i, o = e(140);
                    o.canUseDOM && (i = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== !0), t.exports = n
                }, {
                    140: 140
                }],
                130: [function(e, t, r) {
                    function n(e) {
                        var t = e && e.nodeName && e.nodeName.toLowerCase();
                        return t && ("input" === t && i[e.type] || "textarea" === t)
                    }
                    var i = {
                        color: !0,
                        date: !0,
                        datetime: !0,
                        "datetime-local": !0,
                        email: !0,
                        month: !0,
                        number: !0,
                        password: !0,
                        range: !0,
                        search: !0,
                        tel: !0,
                        text: !0,
                        time: !0,
                        url: !0,
                        week: !0
                    };
                    t.exports = n
                }, {}],
                131: [function(e, t, r) {
                    function n(e) {
                        return i.isValidElement(e) ? void 0 : o(!1), e
                    }
                    var i = e(58),
                        o = e(154);
                    t.exports = n
                }, {
                    154: 154,
                    58: 58
                }],
                132: [function(e, t, r) {
                    function n(e) {
                        return '"' + i(e) + '"'
                    }
                    var i = e(115);
                    t.exports = n
                }, {
                    115: 115
                }],
                133: [function(e, t, r) {
                    var n = e(71);
                    t.exports = n.renderSubtreeIntoContainer
                }, {
                    71: 71
                }],
                134: [function(e, t, r) {
                    var n = e(140),
                        i = /^[ \r\n\t\f]/,
                        o = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,
                        a = e(113),
                        s = a(function(e, t) {
                            e.innerHTML = t
                        });
                    if (n.canUseDOM) {
                        var u = document.createElement("div");
                        u.innerHTML = " ", "" === u.innerHTML && (s = function(e, t) {
                            if (e.parentNode && e.parentNode.replaceChild(e, e), i.test(t) || "<" === t[0] && o.test(t)) {
                                e.innerHTML = String.fromCharCode(65279) + t;
                                var r = e.firstChild;
                                1 === r.data.length ? e.removeChild(r) : r.deleteData(0, 1)
                            } else e.innerHTML = t
                        }), u = null
                    }
                    t.exports = s
                }, {
                    113: 113,
                    140: 140
                }],
                135: [function(e, t, r) {
                    var n = e(140),
                        i = e(115),
                        o = e(134),
                        a = function(e, t) {
                            e.textContent = t
                        };
                    n.canUseDOM && ("textContent" in document.documentElement || (a = function(e, t) {
                        o(e, i(t))
                    })), t.exports = a
                }, {
                    115: 115,
                    134: 134,
                    140: 140
                }],
                136: [function(e, t, r) {
                    function n(e, t) {
                        var r = null === e || e === !1,
                            n = null === t || t === !1;
                        if (r || n) return r === n;
                        var i = typeof e,
                            o = typeof t;
                        return "string" === i || "number" === i ? "string" === o || "number" === o : "object" === o && e.type === t.type && e.key === t.key
                    }
                    t.exports = n
                }, {}],
                137: [function(e, t, r) {
                    function n(e) {
                        return f[e]
                    }

                    function i(e, t) {
                        return e && "object" == typeof e && null != e.key ? a(e.key) : t.toString(36)
                    }

                    function o(e) {
                        return ("" + e).replace(m, n)
                    }

                    function a(e) {
                        return "$" + o(e)
                    }

                    function s(e, t, r, n) {
                        var o = typeof e;
                        if ("undefined" !== o && "boolean" !== o || (e = null), null === e || "string" === o || "number" === o || l.isValidElement(e)) return r(n, e, "" === t ? p + i(e, 0) : t), 1;
                        var u, f, m = 0,
                            v = "" === t ? p : t + d;
                        if (Array.isArray(e))
                            for (var g = 0; g < e.length; g++) u = e[g], f = v + i(u, g), m += s(u, f, r, n);
                        else {
                            var y = c(e);
                            if (y) {
                                var b, x = y.call(e);
                                if (y !== e.entries)
                                    for (var _ = 0; !(b = x.next()).done;) u = b.value, f = v + i(u, _++), m += s(u, f, r, n);
                                else
                                    for (; !(b = x.next()).done;) {
                                        var w = b.value;
                                        w && (u = w[1], f = v + a(w[0]) + d + i(u, 0), m += s(u, f, r, n))
                                    }
                            } else "object" === o && (String(e), h(!1))
                        }
                        return m
                    }

                    function u(e, t, r) {
                        return null == e ? 0 : s(e, "", t, r)
                    }
                    var l = (e(33), e(58)),
                        c = e(123),
                        h = e(154),
                        p = (e(162), "."),
                        d = ":",
                        f = {
                            "=": "=0",
                            ":": "=2"
                        },
                        m = /[=:]/g;
                    t.exports = u
                }, {
                    123: 123,
                    154: 154,
                    162: 162,
                    33: 33,
                    58: 58
                }],
                138: [function(e, t, r) {
                    var n = (e(163), e(146)),
                        i = (e(162), n);
                    t.exports = i
                }, {
                    146: 146,
                    162: 162,
                    163: 163
                }],
                139: [function(e, t, r) {
                    var n = e(146),
                        i = {
                            listen: function(e, t, r) {
                                return e.addEventListener ? (e.addEventListener(t, r, !1), {
                                    remove: function() {
                                        e.removeEventListener(t, r, !1)
                                    }
                                }) : e.attachEvent ? (e.attachEvent("on" + t, r), {
                                    remove: function() {
                                        e.detachEvent("on" + t, r)
                                    }
                                }) : void 0
                            },
                            capture: function(e, t, r) {
                                return e.addEventListener ? (e.addEventListener(t, r, !0), {
                                    remove: function() {
                                        e.removeEventListener(t, r, !0)
                                    }
                                }) : {
                                    remove: n
                                }
                            },
                            registerDefault: function() {}
                        };
                    t.exports = i
                }, {
                    146: 146
                }],
                140: [function(e, t, r) {
                    var n = !("undefined" == typeof window || !window.document || !window.document.createElement),
                        i = {
                            canUseDOM: n,
                            canUseWorkers: "undefined" != typeof Worker,
                            canUseEventListeners: n && !(!window.addEventListener && !window.attachEvent),
                            canUseViewport: n && !!window.screen,
                            isInWorker: !n
                        };
                    t.exports = i
                }, {}],
                141: [function(e, t, r) {
                    function n(e) {
                        return e.replace(i, function(e, t) {
                            return t.toUpperCase()
                        })
                    }
                    var i = /-(.)/g;
                    t.exports = n
                }, {}],
                142: [function(e, t, r) {
                    function n(e) {
                        return i(e.replace(o, "ms-"))
                    }
                    var i = e(141),
                        o = /^-ms-/;
                    t.exports = n
                }, {
                    141: 141
                }],
                143: [function(e, t, r) {
                    function n(e, t) {
                        return e && t ? e === t ? !0 : i(e) ? !1 : i(t) ? n(e, t.parentNode) : e.contains ? e.contains(t) : e.compareDocumentPosition ? !!(16 & e.compareDocumentPosition(t)) : !1 : !1
                    }
                    var i = e(156);
                    t.exports = n
                }, {
                    156: 156
                }],
                144: [function(e, t, r) {
                    function n(e) {
                        var t = e.length;
                        if (Array.isArray(e) || "object" != typeof e && "function" != typeof e ? a(!1) : void 0, "number" != typeof t ? a(!1) : void 0, 0 === t || t - 1 in e ? void 0 : a(!1), "function" == typeof e.callee ? a(!1) : void 0, e.hasOwnProperty) try {
                            return Array.prototype.slice.call(e)
                        } catch (r) {}
                        for (var n = Array(t), i = 0; t > i; i++) n[i] = e[i];
                        return n
                    }

                    function i(e) {
                        return !!e && ("object" == typeof e || "function" == typeof e) && "length" in e && !("setInterval" in e) && "number" != typeof e.nodeType && (Array.isArray(e) || "callee" in e || "item" in e)
                    }

                    function o(e) {
                        return i(e) ? Array.isArray(e) ? e.slice() : n(e) : [e]
                    }
                    var a = e(154);
                    t.exports = o
                }, {
                    154: 154
                }],
                145: [function(e, t, r) {
                    function n(e) {
                        var t = e.match(c);
                        return t && t[1].toLowerCase()
                    }

                    function i(e, t) {
                        var r = l;
                        l ? void 0 : u(!1);
                        var i = n(e),
                            o = i && s(i);
                        if (o) {
                            r.innerHTML = o[1] + e + o[2];
                            for (var c = o[0]; c--;) r = r.lastChild
                        } else r.innerHTML = e;
                        var h = r.getElementsByTagName("script");
                        h.length && (t ? void 0 : u(!1), a(h).forEach(t));
                        for (var p = Array.from(r.childNodes); r.lastChild;) r.removeChild(r.lastChild);
                        return p
                    }
                    var o = e(140),
                        a = e(144),
                        s = e(150),
                        u = e(154),
                        l = o.canUseDOM ? document.createElement("div") : null,
                        c = /^\s*<(\w+)/;
                    t.exports = i
                }, {
                    140: 140,
                    144: 144,
                    150: 150,
                    154: 154
                }],
                146: [function(e, t, r) {
                    function n(e) {
                        return function() {
                            return e
                        }
                    }

                    function i() {}
                    i.thatReturns = n, i.thatReturnsFalse = n(!1), i.thatReturnsTrue = n(!0), i.thatReturnsNull = n(null), i.thatReturnsThis = function() {
                        return this
                    }, i.thatReturnsArgument = function(e) {
                        return e
                    }, t.exports = i
                }, {}],
                147: [function(e, t, r) {
                    var n = {};
                    t.exports = n
                }, {}],
                148: [function(e, t, r) {
                    function n(e) {
                        try {
                            e.focus()
                        } catch (t) {}
                    }
                    t.exports = n
                }, {}],
                149: [function(e, t, r) {
                    function n() {
                        if ("undefined" == typeof document) return null;
                        try {
                            return document.activeElement || document.body
                        } catch (e) {
                            return document.body
                        }
                    }
                    t.exports = n
                }, {}],
                150: [function(e, t, r) {
                    function n(e) {
                        return a ? void 0 : o(!1), p.hasOwnProperty(e) || (e = "*"), s.hasOwnProperty(e) || ("*" === e ? a.innerHTML = "<link />" : a.innerHTML = "<" + e + "></" + e + ">", s[e] = !a.firstChild), s[e] ? p[e] : null
                    }
                    var i = e(140),
                        o = e(154),
                        a = i.canUseDOM ? document.createElement("div") : null,
                        s = {},
                        u = [1, '<select multiple="true">', "</select>"],
                        l = [1, "<table>", "</table>"],
                        c = [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                        h = [1, '<svg xmlns="http://www.w3.org/2000/svg">', "</svg>"],
                        p = {
                            "*": [1, "?<div>", "</div>"],
                            area: [1, "<map>", "</map>"],
                            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                            legend: [1, "<fieldset>", "</fieldset>"],
                            param: [1, "<object>", "</object>"],
                            tr: [2, "<table><tbody>", "</tbody></table>"],
                            optgroup: u,
                            option: u,
                            caption: l,
                            colgroup: l,
                            tbody: l,
                            tfoot: l,
                            thead: l,
                            td: c,
                            th: c
                        },
                        d = ["circle", "clipPath", "defs", "ellipse", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "text", "tspan"];
                    d.forEach(function(e) {
                        p[e] = h, s[e] = !0
                    }), t.exports = n
                }, {
                    140: 140,
                    154: 154
                }],
                151: [function(e, t, r) {
                    function n(e) {
                        return e === window ? {
                            x: window.pageXOffset || document.documentElement.scrollLeft,
                            y: window.pageYOffset || document.documentElement.scrollTop
                        } : {
                            x: e.scrollLeft,
                            y: e.scrollTop
                        }
                    }
                    t.exports = n
                }, {}],
                152: [function(e, t, r) {
                    function n(e) {
                        return e.replace(i, "-$1").toLowerCase()
                    }
                    var i = /([A-Z])/g;
                    t.exports = n
                }, {}],
                153: [function(e, t, r) {
                    function n(e) {
                        return i(e).replace(o, "-ms-")
                    }
                    var i = e(152),
                        o = /^ms-/;
                    t.exports = n
                }, {
                    152: 152
                }],
                154: [function(e, t, r) {
                    function n(e, t, r, n, i, o, a, s) {
                        if (!e) {
                            var u;
                            if (void 0 === t) u = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                            else {
                                var l = [r, n, i, o, a, s],
                                    c = 0;
                                u = new Error(t.replace(/%s/g, function() {
                                    return l[c++]
                                })), u.name = "Invariant Violation"
                            }
                            throw u.framesToPop = 1, u
                        }
                    }
                    t.exports = n
                }, {}],
                155: [function(e, t, r) {
                    function n(e) {
                        return !(!e || !("function" == typeof Node ? e instanceof Node : "object" == typeof e && "number" == typeof e.nodeType && "string" == typeof e.nodeName))
                    }
                    t.exports = n
                }, {}],
                156: [function(e, t, r) {
                    function n(e) {
                        return i(e) && 3 == e.nodeType
                    }
                    var i = e(155);
                    t.exports = n
                }, {
                    155: 155
                }],
                157: [function(e, t, r) {
                    var n = e(154),
                        i = function(e) {
                            var t, r = {};
                            e instanceof Object && !Array.isArray(e) ? void 0 : n(!1);
                            for (t in e) e.hasOwnProperty(t) && (r[t] = t);
                            return r
                        };
                    t.exports = i
                }, {
                    154: 154
                }],
                158: [function(e, t, r) {
                    var n = function(e) {
                        var t;
                        for (t in e)
                            if (e.hasOwnProperty(t)) return t;
                        return null
                    };
                    t.exports = n
                }, {}],
                159: [function(e, t, r) {
                    function n(e, t, r) {
                        if (!e) return null;
                        var n = {};
                        for (var o in e) i.call(e, o) && (n[o] = t.call(r, e[o], o, e));
                        return n
                    }
                    var i = Object.prototype.hasOwnProperty;
                    t.exports = n
                }, {}],
                160: [function(e, t, r) {
                    function n(e) {
                        var t = {};
                        return function(r) {
                            return t.hasOwnProperty(r) || (t[r] = e.call(this, r)), t[r]
                        }
                    }
                    t.exports = n
                }, {}],
                161: [function(e, t, r) {
                    function n(e, t) {
                        return e === t ? 0 !== e || 1 / e === 1 / t : e !== e && t !== t
                    }

                    function i(e, t) {
                        if (n(e, t)) return !0;
                        if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
                        var r = Object.keys(e),
                            i = Object.keys(t);
                        if (r.length !== i.length) return !1;
                        for (var a = 0; a < r.length; a++)
                            if (!o.call(t, r[a]) || !n(e[r[a]], t[r[a]])) return !1;
                        return !0
                    }
                    var o = Object.prototype.hasOwnProperty;
                    t.exports = i
                }, {}],
                162: [function(e, t, r) {
                    var n = e(146),
                        i = n;
                    t.exports = i
                }, {
                    146: 146
                }],
                163: [function(e, t, r) {
                    function n(e) {
                        if (null === e || void 0 === e) throw new TypeError("Object.assign cannot be called with null or undefined");
                        return Object(e)
                    }
                    var i = Object.prototype.hasOwnProperty,
                        o = Object.prototype.propertyIsEnumerable;
                    t.exports = Object.assign || function(e, t) {
                        for (var r, a, s = n(e), u = 1; u < arguments.length; u++) {
                            r = Object(arguments[u]);
                            for (var l in r) i.call(r, l) && (s[l] = r[l]);
                            if (Object.getOwnPropertySymbols) {
                                a = Object.getOwnPropertySymbols(r);
                                for (var c = 0; c < a.length; c++) o.call(r, a[c]) && (s[a[c]] = r[a[c]])
                            }
                        }
                        return s
                    }
                }, {}]
            }, {}, [88])(88)
        }), e = r.exports
    }();
    var t, r = function(e) {
        function t(e) {
            return "function" == typeof e || "object" == typeof e && null !== e
        }

        function r(e) {
            return "function" == typeof e
        }

        function n(e) {
            H = e
        }

        function i(e) {
            W = e
        }

        function o() {
            return function() {
                process.nextTick(l)
            }
        }

        function a() {
            var e = 0,
                t = new K(l),
                r = document.createTextNode("");
            return t.observe(r, {
                    characterData: !0
                }),
                function() {
                    r.data = e = ++e % 2
                }
        }

        function s() {
            var e = new MessageChannel;
            return e.port1.onmessage = l,
                function() {
                    e.port2.postMessage(0)
                }
        }

        function u() {
            return function() {
                setTimeout(l, 1)
            }
        }

        function l() {
            for (var e = 0; q > e; e += 2) {
                var t = $[e],
                    r = $[e + 1];
                t(r), $[e] = void 0, $[e + 1] = void 0
            }
            q = 0
        }

        function c(e, t) {
            var r = this,
                n = new this.constructor(p);
            void 0 === n[te] && k(n);
            var i = r._state;
            if (i) {
                var o = arguments[i - 1];
                W(function() {
                    A(i, n, o, r._result)
                })
            } else E(r, n, e, t);
            return n
        }

        function h(e) {
            var t = this;
            if (e && "object" == typeof e && e.constructor === t) return e;
            var r = new t(p);
            return x(r, e), r
        }

        function p() {}

        function d() {
            return new TypeError("You cannot resolve a promise with itself")
        }

        function f() {
            return new TypeError("A promises callback cannot return that same promise.")
        }

        function m(e) {
            try {
                return e.then
            } catch (t) {
                return oe.error = t, oe
            }
        }

        function v(e, t, r, n) {
            try {
                e.call(t, r, n)
            } catch (i) {
                return i
            }
        }

        function g(e, t, r) {
            W(function(e) {
                var n = !1,
                    i = v(r, t, function(r) {
                        n || (n = !0, t !== r ? x(e, r) : w(e, r))
                    }, function(t) {
                        n || (n = !0, C(e, t))
                    }, "Settle: " + (e._label || " unknown promise"));
                !n && i && (n = !0, C(e, i))
            }, e)
        }

        function y(e, t) {
            t._state === ne ? w(e, t._result) : t._state === ie ? C(e, t._result) : E(t, void 0, function(t) {
                x(e, t)
            }, function(t) {
                C(e, t)
            })
        }

        function b(e, t, n) {
            t.constructor === e.constructor && n === J && constructor.resolve === ee ? y(e, t) : n === oe ? C(e, oe.error) : void 0 === n ? w(e, t) : r(n) ? g(e, t, n) : w(e, t)
        }

        function x(e, r) {
            e === r ? C(e, d()) : t(r) ? b(e, r, m(r)) : w(e, r)
        }

        function _(e) {
            e._onerror && e._onerror(e._result), S(e)
        }

        function w(e, t) {
            e._state === re && (e._result = t, e._state = ne, 0 !== e._subscribers.length && W(S, e))
        }

        function C(e, t) {
            e._state === re && (e._state = ie, e._result = t, W(_, e))
        }

        function E(e, t, r, n) {
            var i = e._subscribers,
                o = i.length;
            e._onerror = null, i[o] = t, i[o + ne] = r, i[o + ie] = n, 0 === o && e._state && W(S, e)
        }

        function S(e) {
            var t = e._subscribers,
                r = e._state;
            if (0 !== t.length) {
                for (var n, i, o = e._result, a = 0; a < t.length; a += 3) n = t[a], i = t[a + r], n ? A(r, n, i, o) : i(o);
                e._subscribers.length = 0
            }
        }

        function T() {
            this.error = null
        }

        function M(e, t) {
            try {
                return e(t)
            } catch (r) {
                return ae.error = r, ae
            }
        }

        function A(e, t, n, i) {
            var o, a, s, u, l = r(n);
            if (l) {
                if (o = M(n, i), o === ae ? (u = !0, a = o.error, o = null) : s = !0, t === o) return void C(t, f())
            } else o = i, s = !0;
            t._state !== re || (l && s ? x(t, o) : u ? C(t, a) : e === ne ? w(t, o) : e === ie && C(t, o))
        }

        function P(e, t) {
            try {
                t(function(t) {
                    x(e, t)
                }, function(t) {
                    C(e, t)
                })
            } catch (r) {
                C(e, r)
            }
        }

        function R() {
            return se++
        }

        function k(e) {
            e[te] = se++, e._state = void 0, e._result = void 0, e._subscribers = []
        }

        function I(e) {
            return new pe(this, e).promise
        }

        function D(e) {
            var t = this;
            return new t(G(e) ? function(r, n) {
                for (var i = e.length, o = 0; i > o; o++) t.resolve(e[o]).then(r, n)
            } : function(e, t) {
                t(new TypeError("You must pass an array to race."))
            })
        }

        function B(e) {
            var t = this,
                r = new t(p);
            return C(r, e), r
        }

        function L() {
            throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
        }

        function V() {
            throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
        }

        function N(e) {
            this[te] = R(), this._result = this._state = void 0, this._subscribers = [], p !== e && ("function" != typeof e && L(), this instanceof N ? P(this, e) : V())
        }

        function O(e, t) {
            this._instanceConstructor = e, this.promise = new e(p), this.promise[te] || k(this.promise), Array.isArray(t) ? (this._input = t, this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? w(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && w(this.promise, this._result))) : C(this.promise, F())
        }

        function F() {
            return new Error("Array Methods must be provided an Array")
        }

        function U() {
            var e;
            if ("undefined" != typeof global) e = global;
            else if ("undefined" != typeof self) e = self;
            else try {
                e = Function("return this")()
            } catch (t) {
                throw new Error("polyfill failed because global object is unavailable in this environment")
            }
            var r = e.Promise;
            (!r || "[object Promise]" !== Object.prototype.toString.call(r.resolve()) || r.cast) && (e.Promise = he)
        }
        var z;
        z = Array.isArray ? Array.isArray : function(e) {
            return "[object Array]" === Object.prototype.toString.call(e)
        };
        var H, j, G = z,
            q = 0,
            W = function(e, t) {
                $[q] = e, $[q + 1] = t, q += 2, 2 === q && (H ? H(l) : j())
            },
            X = "undefined" != typeof window ? window : void 0,
            Y = X || {},
            K = Y.MutationObserver || Y.WebKitMutationObserver,
            Q = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process),
            Z = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
            $ = new Array(1e3);
        j = Q ? o() : K ? a() : Z ? s() : u();
        var J = c,
            ee = h,
            te = Math.random().toString(36).substring(16),
            re = void 0,
            ne = 1,
            ie = 2,
            oe = new T,
            ae = new T,
            se = 0,
            ue = I,
            le = D,
            ce = B,
            he = N;
        N.all = ue, N.race = le, N.resolve = ee, N.reject = ce, N._setScheduler = n, N._setAsap = i, N._asap = W, N.prototype = {
            constructor: N,
            then: J,
            "catch": function(e) {
                return this.then(null, e)
            }
        };
        var pe = O;
        O.prototype._enumerate = function() {
            for (var e = this.length, t = this._input, r = 0; this._state === re && e > r; r++) this._eachEntry(t[r], r)
        }, O.prototype._eachEntry = function(e, t) {
            var r = this._instanceConstructor,
                n = r.resolve;
            if (n === ee) {
                var i = m(e);
                if (i === J && e._state !== re) this._settledAt(e._state, t, e._result);
                else if ("function" != typeof i) this._remaining--, this._result[t] = e;
                else if (r === he) {
                    var o = new r(p);
                    b(o, e, i), this._willSettleAt(o, t)
                } else this._willSettleAt(new r(function(t) {
                    t(e)
                }), t)
            } else this._willSettleAt(n(e), t)
        }, O.prototype._settledAt = function(e, t, r) {
            var n = this.promise;
            n._state === re && (this._remaining--, e === ie ? C(n, r) : this._result[t] = r), 0 === this._remaining && w(n, this._result)
        }, O.prototype._willSettleAt = function(e, t) {
            var r = this;
            E(e, void 0, function(e) {
                r._settledAt(ne, t, e)
            }, function(e) {
                r._settledAt(ie, t, e)
            })
        };
        var de = U,
            fe = {
                Promise: he,
                polyfill: de
            };
        de(), e.ES6Promise = fe
    };
    if ("undefined" != typeof window && window && window.Promise) t = window.Promise;
    else if ("undefined" != typeof global && global && global.Promise) t = global.Promise;
    else {
        var n = {};
        r(n), t = n.ES6Promise.Promise
    }
    var i = {};
    (function(e, t, r) {
        function n(e) {
            return e && e.Object === Object ? e : null
        }

        function i(e) {
            for (var t = e.length, r = new Array(t), n = 0; t > n; n++) r[n] = e[n];
            return r
        }

        function o(e) {
            return function() {
                try {
                    return e.apply(this, arguments)
                } catch (t) {
                    return Ce.e = t, Ce
                }
            }
        }

        function a(e) {
            throw e
        }

        function s(e, t) {
            if (Se && t.stack && "object" == typeof e && null !== e && e.stack && -1 === e.stack.indexOf(Pe)) {
                for (var r = [], n = t; n; n = n.source) n.stack && r.unshift(n.stack);
                r.unshift(e.stack);
                var i = r.join("\n" + Pe + "\n");
                e.stack = u(i)
            }
        }

        function u(e) {
            for (var t = e.split("\n"), r = [], n = 0, i = t.length; i > n; n++) {
                var o = t[n];
                l(o) || c(o) || !o || r.push(o)
            }
            return r.join("\n")
        }

        function l(e) {
            var t = p(e);
            if (!t) return !1;
            var r = t[0],
                n = t[1];
            return r === Me && n >= Ae && bi >= n
        }

        function c(e) {
            return -1 !== e.indexOf("(module.js:") || -1 !== e.indexOf("(node.js:")
        }

        function h() {
            if (Se) try {
                throw new Error
            } catch (e) {
                var t = e.stack.split("\n"),
                    r = t[0].indexOf("@") > 0 ? t[1] : t[2],
                    n = p(r);
                if (!n) return;
                return Me = n[0], n[1]
            }
        }

        function p(e) {
            var t = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(e);
            if (t) return [t[1], Number(t[2])];
            var r = /at ([^ ]+):(\d+):(?:\d+)$/.exec(e);
            if (r) return [r[1], Number(r[2])];
            var n = /.*@(.+):(\d+)$/.exec(e);
            return n ? [n[1], Number(n[2])] : void 0
        }

        function d(e, t, n, i, o, a) {
            var s = vt(e),
                u = s.length,
                l = vt(t),
                c = l.length;
            if (u !== c && !i) return !1;
            for (var h, p = u; p--;)
                if (h = s[p], !(i ? h in t : dt.call(t, h))) return !1;
            for (var d = i; ++p < u;) {
                h = s[p];
                var f, m = e[h],
                    v = t[h];
                if (!(f === r ? n(m, v, i, o, a) : f)) return !1;
                d || (d = "constructor" === h)
            }
            if (!d) {
                var g = e.constructor,
                    y = t.constructor;
                if (g !== y && "constructor" in e && "constructor" in t && !("function" == typeof g && g instanceof g && "function" == typeof y && y instanceof y)) return !1
            }
            return !0
        }

        function f(e, t, r) {
            switch (r) {
                case Ge:
                case qe:
                    return +e === +t;
                case We:
                    return e.name === t.name && e.message === t.message;
                case Ke:
                    return e !== +e ? t !== +t : e === +t;
                case Ze:
                case Je:
                    return e === t + ""
            }
            return !1
        }

        function m(e) {
            return !!e && "object" == typeof e
        }

        function v(e) {
            return "number" == typeof e && e > -1 && e % 1 === 0 && mt >= e
        }

        function g(e) {
            return m(e) && v(e.length) && !!ht[ft.call(e)]
        }

        function y(e, t) {
            for (var r = -1, n = e.length; ++r < n;)
                if (t(e[r], r, e)) return !0;
            return !1
        }

        function b(e, t, n, i, o, a) {
            var s = -1,
                u = e.length,
                l = t.length;
            if (u !== l && !(i && l > u)) return !1;
            for (; ++s < u;) {
                var c, h = e[s],
                    p = t[s];
                if (c !== r) {
                    if (c) continue;
                    return !1
                }
                if (i) {
                    if (!y(t, function(e) {
                            return h === e || n(h, e, i, o, a)
                        })) return !1
                } else if (h !== p && !n(h, p, i, o, a)) return !1
            }
            return !0
        }

        function x(e, t, r, n, i, o) {
            var a = bt(e),
                s = bt(t),
                u = je,
                l = je;
            a || (u = ft.call(e), u === He ? u = Qe : u !== Qe && (a = g(e))), s || (l = ft.call(t), l === He && (l = Qe));
            var c = u === Qe && !yt(e),
                h = l === Qe && !yt(t),
                p = u === l;
            if (p && !a && !c) return f(e, t, u);
            if (!n) {
                var m = c && dt.call(e, "__wrapped__"),
                    v = h && dt.call(t, "__wrapped__");
                if (m || v) return r(m ? e.value() : e, v ? t.value() : t, n, i, o)
            }
            if (!p) return !1;
            i || (i = []), o || (o = []);
            for (var y = i.length; y--;)
                if (i[y] === e) return o[y] === t;
            i.push(e), o.push(t);
            var x = (a ? b : d)(e, t, r, n, i, o);
            return i.pop(), o.pop(), x
        }

        function _(e, t, r, n, i) {
            return e === t ? !0 : null == e || null == t || !gt(e) && !m(t) ? e !== e && t !== t : x(e, t, _, r, n, i)
        }

        function w(e, t) {
            for (var r = new Array(e), n = 0; e > n; n++) r[n] = t();
            return r
        }

        function C(e, t) {
            this.id = e, this.value = t
        }

        function E(e) {
            this._s = e, this.isDisposed = !1
        }

        function S(e) {
            this._s = e
        }

        function T(e) {
            this._s = e, this._l = e.length, this._i = 0
        }

        function M(e) {
            this._a = e
        }

        function A(e) {
            this._a = e, this._l = I(e), this._i = 0
        }

        function P(e) {
            return "number" == typeof e && de.isFinite(e)
        }

        function R(e) {
            var t, n = e[Ve];
            if (!n && "string" == typeof e) return t = new S(e), t[Ve]();
            if (!n && e.length !== r) return t = new M(e), t[Ve]();
            if (!n) throw new TypeError("Object is not iterable");
            return e[Ve]()
        }

        function k(e) {
            var t = +e;
            return 0 === t ? t : isNaN(t) ? t : 0 > t ? -1 : 1
        }

        function I(e) {
            var t = +e.length;
            return isNaN(t) ? 0 : 0 !== t && P(t) ? (t = k(t) * Math.floor(Math.abs(t)), 0 >= t ? 0 : t > Ar ? Ar : t) : t
        }

        function D(e, t) {
            return Ot(e) || (e = Gt), new Rr(t, e)
        }

        function B(e, t) {
            this.observer = e, this.parent = t
        }

        function L() {
            return !1
        }

        function V() {
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            return t
        }

        function L() {
            return !1
        }

        function V() {
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            return t
        }

        function L() {
            return !1
        }

        function N() {
            return []
        }

        function L() {
            return !1
        }

        function N() {
            return []
        }

        function V() {
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            return t
        }

        function O(e) {
            return function(t) {
                return e.subscribe(t)
            }
        }

        function F(e) {
            return {
                "@@iterator": function() {
                    return {
                        next: function() {
                            return {
                                done: !1,
                                value: e
                            }
                        }
                    }
                }
            }
        }

        function F(e) {
            return {
                "@@iterator": function() {
                    return {
                        next: function() {
                            return {
                                done: !1,
                                value: e
                            }
                        }
                    }
                }
            }
        }

        function U(e, t) {
            return function(n) {
                for (var i = n, o = 0; t > o; o++) {
                    var a = i[e[o]];
                    if ("undefined" == typeof a) return r;
                    i = a
                }
                return i
            }
        }

        function z(e, t, r, n) {
            var i = new mi;
            return n.push(H(i, t, r)), e.apply(t, n), i.asObservable();
        }

        function H(e, t, r) {
            return function() {
                for (var n = arguments.length, i = new Array(n), o = 0; n > o; o++) i[o] = arguments[o];
                if (we(r)) {
                    if (i = Ee(r).apply(t, i), i === Ce) return e.onError(i.e);
                    e.onNext(i)
                } else i.length <= 1 ? e.onNext(i[0]) : e.onNext(i);
                e.onCompleted()
            }
        }

        function j(e, t, r, n) {
            var i = new mi;
            return n.push(G(i, t, r)), e.apply(t, n), i.asObservable()
        }

        function G(e, t, r) {
            return function() {
                var n = arguments[0];
                if (n) return e.onError(n);
                for (var i = arguments.length, o = [], a = 1; i > a; a++) o[a - 1] = arguments[a];
                if (we(r)) {
                    var o = Ee(r).apply(t, o);
                    if (o === Ce) return e.onError(o.e);
                    e.onNext(o)
                } else o.length <= 1 ? e.onNext(o[0]) : e.onNext(o);
                e.onCompleted()
            }
        }

        function q(e) {
            return de.StaticNodeList ? e instanceof de.StaticNodeList || e instanceof de.NodeList : "[object NodeList]" === Object.prototype.toString.call(e)
        }

        function W(e, t, r) {
            this._e = e, this._n = t, this._fn = r, this._e.addEventListener(this._n, this._fn, !1), this.isDisposed = !1
        }

        function X(e, t, r) {
            var n = new Ct,
                i = Object.prototype.toString.call(e);
            if (q(e) || "[object HTMLCollection]" === i)
                for (var o = 0, a = e.length; a > o; o++) n.add(X(e.item(o), t, r));
            else e && n.add(new W(e, t, r));
            return n
        }

        function Y(e, t) {
            return new Qn(e, t)
        }

        function K(e, t, r) {
            return new hi(function(n) {
                var i = e,
                    o = Nt(t);
                return r.scheduleRecursiveFuture(0, i, function(e, t) {
                    if (o > 0) {
                        var a = r.now();
                        i = new Date(i.getTime() + o), i.getTime() <= a && (i = new Date(a + o))
                    }
                    n.onNext(e), t(e + 1, new Date(i))
                })
            })
        }

        function Q(e, t, r) {
            return e === t ? new hi(function(e) {
                return r.schedulePeriodic(0, t, function(t) {
                    return e.onNext(t), t + 1
                })
            }) : Cr(function() {
                return K(new Date(r.now() + e), t, r)
            })
        }

        function Z(e, t, r) {
            return new hi(function(n) {
                var i, o = !1,
                    a = new It,
                    s = null,
                    u = [],
                    l = !1;
                return i = e.materialize().timestamp(r).subscribe(function(e) {
                    var i, c;
                    "E" === e.value.kind ? (u = [], u.push(e), s = e.value.error, c = !l) : (u.push({
                        value: e.value,
                        timestamp: e.timestamp + t
                    }), c = !o, o = !0), c && (null !== s ? n.onError(s) : (i = new kt, a.setDisposable(i), i.setDisposable(r.scheduleRecursiveFuture(null, t, function(e, t) {
                        var i, a, c, h;
                        if (null === s) {
                            l = !0;
                            do c = null, u.length > 0 && u[0].timestamp - r.now() <= 0 && (c = u.shift().value), null !== c && c.accept(n); while (null !== c);
                            h = !1, a = 0, u.length > 0 ? (h = !0, a = Math.max(0, u[0].timestamp - r.now())) : o = !1, i = s, l = !1, null !== i ? n.onError(i) : h && t(null, a)
                        }
                    }))))
                }), new Dt(i, a)
            }, e)
        }

        function $(e, t, r) {
            return Cr(function() {
                return Z(e, t - r.now(), r)
            })
        }

        function J(e, t, r) {
            var n, i;
            return we(t) ? i = t : (n = t, i = r), new hi(function(t) {
                function r() {
                    u.setDisposable(e.subscribe(function(e) {
                        var r = Ee(i)(e);
                        if (r === Ce) return t.onError(r.e);
                        var n = new kt;
                        a.add(n), n.setDisposable(r.subscribe(function() {
                            t.onNext(e), a.remove(n), o()
                        }, function(e) {
                            t.onError(e)
                        }, function() {
                            t.onNext(e), a.remove(n), o()
                        }))
                    }, function(e) {
                        t.onError(e)
                    }, function() {
                        s = !0, u.dispose(), o()
                    }))
                }

                function o() {
                    s && 0 === a.length && t.onCompleted()
                }
                var a = new Ct,
                    s = !1,
                    u = new It;
                return n ? u.setDisposable(n.subscribe(r, function(e) {
                    t.onError(e)
                }, r)) : r(), new Dt(u, a)
            }, e)
        }

        function ee(e, t) {
            return new hi(function(r) {
                var n, i = !1,
                    o = new It,
                    a = 0,
                    s = e.subscribe(function(e) {
                        var s = Ee(t)(e);
                        if (s === Ce) return r.onError(s.e);
                        _e(s) && (s = Wn(s)), i = !0, n = e, a++;
                        var u = a,
                            l = new kt;
                        o.setDisposable(l), l.setDisposable(s.subscribe(function() {
                            i && a === u && r.onNext(n), i = !1, l.dispose()
                        }, function(e) {
                            r.onError(e)
                        }, function() {
                            i && a === u && r.onNext(n), i = !1, l.dispose()
                        }))
                    }, function(e) {
                        o.dispose(), r.onError(e), i = !1, a++
                    }, function() {
                        o.dispose(), i && r.onNext(n), r.onCompleted(), i = !1, a++
                    });
                return new Dt(s, o)
            }, e)
        }

        function te(e, t, r, n) {
            return we(t) && (n = r, r = t, t = Br()), cr.isObservable(n) || (n = Ur(new oi)), new hi(function(i) {
                function o(e) {
                    function t() {
                        return h = r === c
                    }
                    var r = c,
                        o = new kt;
                    u.setDisposable(o), o.setDisposable(e.subscribe(function() {
                        t() && s.setDisposable(n.subscribe(i)), o.dispose()
                    }, function(e) {
                        t() && i.onError(e)
                    }, function() {
                        t() && s.setDisposable(n.subscribe(i))
                    }))
                }

                function a() {
                    var e = !h;
                    return e && c++, e
                }
                var s = new It,
                    u = new It,
                    l = new kt;
                s.setDisposable(l);
                var c = 0,
                    h = !1;
                return o(t), l.setDisposable(e.subscribe(function(e) {
                    if (a()) {
                        i.onNext(e);
                        var t = Ee(r)(e);
                        if (t === Ce) return i.onError(t.e);
                        o(_e(t) ? Wn(t) : t)
                    }
                }, function(e) {
                    a() && i.onError(e)
                }, function() {
                    a() && i.onCompleted()
                })), new Dt(s, u)
            }, e)
        }

        function re(e, t, r, n) {
            return Ot(r) && (n = r, r = Ur(new oi)), r instanceof Error && (r = Ur(r)), Ot(n) || (n = Kt), cr.isObservable(r) || (r = Ur(new oi)), new hi(function(i) {
                function o() {
                    var e = a;
                    c.setDisposable(n.scheduleFuture(null, t, function() {
                        l = a === e, l && (_e(r) && (r = Wn(r)), u.setDisposable(r.subscribe(i)))
                    }))
                }
                var a = 0,
                    s = new kt,
                    u = new It,
                    l = !1,
                    c = new It;
                return u.setDisposable(s), o(), s.setDisposable(e.subscribe(function(e) {
                    l || (a++, i.onNext(e), o())
                }, function(e) {
                    l || (a++, i.onError(e))
                }, function() {
                    l || (a++, i.onCompleted())
                })), new Dt(u, c)
            }, e)
        }

        function ne(e, t, r) {
            return new hi(function(n) {
                function i(e, t) {
                    if (l[t] = e, a[t] = !0, s || (s = a.every(ve))) {
                        if (o) return n.onError(o);
                        var i = Ee(r).apply(null, l);
                        if (i === Ce) return n.onError(i.e);
                        n.onNext(i)
                    }
                    u && l[1] && n.onCompleted()
                }
                var o, a = [!1, !1],
                    s = !1,
                    u = !1,
                    l = new Array(2);
                return new Dt(e.subscribe(function(e) {
                    i(e, 0)
                }, function(e) {
                    l[1] ? n.onError(e) : o = e
                }, function() {
                    u = !0, l[1] && n.onCompleted()
                }), t.subscribe(function(e) {
                    i(e, 1)
                }, function(e) {
                    n.onError(e)
                }, function() {
                    u = !0, i(!0, 1)
                }))
            }, e)
        }

        function ie(e) {
            return {
                "@@transducer/init": function() {
                    return e
                },
                "@@transducer/step": function(e, t) {
                    return e.onNext(t)
                },
                "@@transducer/result": function(e) {
                    return e.onCompleted()
                }
            }
        }
        var oe = {
                "function": !0,
                object: !0
            },
            ae = oe[typeof exports] && exports && !exports.nodeType ? exports : null,
            se = oe[typeof module] && module && !module.nodeType ? module : null,
            ue = n(ae && se && "object" == typeof global && global),
            le = n(oe[typeof self] && self),
            ce = n(oe[typeof window] && window),
            he = se && se.exports === ae ? ae : null,
            pe = n(oe[typeof this] && this),
            de = ue || ce !== (pe && pe.window) && ce || le || pe || Function("return this")(),
            fe = {
                internals: {},
                config: {
                    Promise: t
                },
                helpers: {}
            },
            me = fe.helpers.noop = function() {},
            ve = fe.helpers.identity = function(e) {
                return e
            },
            ge = fe.helpers.defaultNow = Date.now,
            ye = fe.helpers.defaultComparer = function(e, t) {
                return xt(e, t)
            },
            be = fe.helpers.defaultSubComparer = function(e, t) {
                return e > t ? 1 : t > e ? -1 : 0
            },
            xe = (fe.helpers.defaultKeySerializer = function(e) {
                return e.toString()
            }, fe.helpers.defaultError = function(e) {
                throw e
            }),
            _e = fe.helpers.isPromise = function(e) {
                return !!e && "function" != typeof e.subscribe && "function" == typeof e.then
            },
            we = fe.helpers.isFunction = function() {
                var e = function(e) {
                    return "function" == typeof e || !1
                };
                return e(/x/) && (e = function(e) {
                    return "function" == typeof e && "[object Function]" == toString.call(e)
                }), e
            }(),
            Ce = {
                e: {}
            },
            Ee = fe.internals.tryCatch = function(e) {
                if (!we(e)) throw new TypeError("fn must be a function");
                return o(e)
            };
        fe.config.longStackSupport = !1;
        var Se = !1,
            Te = Ee(function() {
                throw new Error
            })();
        Se = !!Te.e && !!Te.e.stack;
        var Me, Ae = h(),
            Pe = "From previous event:",
            Re = fe.EmptyError = function() {
                this.message = "Sequence contains no elements.", Error.call(this)
            };
        Re.prototype = Object.create(Error.prototype), Re.prototype.name = "EmptyError";
        var ke = fe.ObjectDisposedError = function() {
            this.message = "Object has been disposed", Error.call(this)
        };
        ke.prototype = Object.create(Error.prototype), ke.prototype.name = "ObjectDisposedError";
        var Ie = fe.ArgumentOutOfRangeError = function() {
            this.message = "Argument out of range", Error.call(this)
        };
        Ie.prototype = Object.create(Error.prototype), Ie.prototype.name = "ArgumentOutOfRangeError";
        var De = fe.NotSupportedError = function(e) {
            this.message = e || "This operation is not supported", Error.call(this)
        };
        De.prototype = Object.create(Error.prototype), De.prototype.name = "NotSupportedError";
        var Be = fe.NotImplementedError = function(e) {
            this.message = e || "This operation is not implemented", Error.call(this)
        };
        Be.prototype = Object.create(Error.prototype), Be.prototype.name = "NotImplementedError";
        var Le = fe.helpers.notImplemented = function() {
                throw new Be
            },
            Ve = (fe.helpers.notSupported = function() {
                throw new De
            }, "function" == typeof Symbol && Symbol.iterator || "_es6shim_iterator_");
        de.Set && "function" == typeof(new de.Set)["@@iterator"] && (Ve = "@@iterator");
        var Ne = fe.doneEnumerator = {
                done: !0,
                value: r
            },
            Oe = fe.helpers.isIterable = function(e) {
                return e && e[Ve] !== r
            },
            Fe = fe.helpers.isArrayLike = function(e) {
                return e && e.length !== r
            };
        fe.helpers.iterator = Ve;
        var Ue = fe.internals.bindCallback = function(e, t, r) {
                if ("undefined" == typeof t) return e;
                switch (r) {
                    case 0:
                        return function() {
                            return e.call(t)
                        };
                    case 1:
                        return function(r) {
                            return e.call(t, r)
                        };
                    case 2:
                        return function(r, n) {
                            return e.call(t, r, n)
                        };
                    case 3:
                        return function(r, n, i) {
                            return e.call(t, r, n, i)
                        }
                }
                return function() {
                    return e.apply(t, arguments)
                }
            },
            ze = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
            He = (ze.length, "[object Arguments]"),
            je = "[object Array]",
            Ge = "[object Boolean]",
            qe = "[object Date]",
            We = "[object Error]",
            Xe = "[object Function]",
            Ye = "[object Map]",
            Ke = "[object Number]",
            Qe = "[object Object]",
            Ze = "[object RegExp]",
            $e = "[object Set]",
            Je = "[object String]",
            et = "[object WeakMap]",
            tt = "[object ArrayBuffer]",
            rt = "[object Float32Array]",
            nt = "[object Float64Array]",
            it = "[object Int8Array]",
            ot = "[object Int16Array]",
            at = "[object Int32Array]",
            st = "[object Uint8Array]",
            ut = "[object Uint8ClampedArray]",
            lt = "[object Uint16Array]",
            ct = "[object Uint32Array]",
            ht = {};
        ht[rt] = ht[nt] = ht[it] = ht[ot] = ht[at] = ht[st] = ht[ut] = ht[lt] = ht[ct] = !0, ht[He] = ht[je] = ht[tt] = ht[Ge] = ht[qe] = ht[We] = ht[Xe] = ht[Ye] = ht[Ke] = ht[Qe] = ht[Ze] = ht[$e] = ht[Je] = ht[et] = !1;
        var pt = Object.prototype,
            dt = pt.hasOwnProperty,
            ft = pt.toString,
            mt = Math.pow(2, 53) - 1,
            vt = Object.keys || function() {
                var e = Object.prototype.hasOwnProperty,
                    t = !{
                        toString: null
                    }.propertyIsEnumerable("toString"),
                    r = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
                    n = r.length;
                return function(i) {
                    if ("object" != typeof i && ("function" != typeof i || null === i)) throw new TypeError("Object.keys called on non-object");
                    var o, a, s = [];
                    for (o in i) e.call(i, o) && s.push(o);
                    if (t)
                        for (a = 0; n > a; a++) e.call(i, r[a]) && s.push(r[a]);
                    return s
                }
            }(),
            gt = fe.internals.isObject = function(e) {
                var t = typeof e;
                return !!e && ("object" === t || "function" === t)
            },
            yt = function() {
                try {
                    Object({
                        toString: 0
                    } + "")
                } catch (e) {
                    return function() {
                        return !1
                    }
                }
                return function(e) {
                    return "function" != typeof e.toString && "string" == typeof(e + "")
                }
            }(),
            bt = Array.isArray || function(e) {
                return m(e) && v(e.length) && ft.call(e) === je
            },
            xt = fe.internals.isEqual = function(e, t) {
                return _(e, t)
            },
            _t = ({}.hasOwnProperty, Array.prototype.slice, fe.internals.inherits = function(e, t) {
                function r() {
                    this.constructor = e
                }
                r.prototype = t.prototype, e.prototype = new r
            }),
            wt = fe.internals.addProperties = function(e) {
                for (var t = [], r = 1, n = arguments.length; n > r; r++) t.push(arguments[r]);
                for (var i = 0, o = t.length; o > i; i++) {
                    var a = t[i];
                    for (var s in a) e[s] = a[s]
                }
            },
            Ct = (fe.internals.addRef = function(e, t) {
                return new hi(function(r) {
                    return new Dt(t.getDisposable(), e.subscribe(r))
                })
            }, fe.CompositeDisposable = function() {
                var e, t, r = [];
                if (Array.isArray(arguments[0])) r = arguments[0];
                else
                    for (t = arguments.length, r = new Array(t), e = 0; t > e; e++) r[e] = arguments[e];
                this.disposables = r, this.isDisposed = !1, this.length = r.length
            }),
            Et = Ct.prototype;
        Et.add = function(e) {
            this.isDisposed ? e.dispose() : (this.disposables.push(e), this.length++)
        }, Et.remove = function(e) {
            var t = !1;
            if (!this.isDisposed) {
                var r = this.disposables.indexOf(e); - 1 !== r && (t = !0, this.disposables.splice(r, 1), this.length--, e.dispose())
            }
            return t
        }, Et.dispose = function() {
            if (!this.isDisposed) {
                this.isDisposed = !0;
                for (var e = this.disposables.length, t = new Array(e), r = 0; e > r; r++) t[r] = this.disposables[r];
                for (this.disposables = [], this.length = 0, r = 0; e > r; r++) t[r].dispose()
            }
        };
        var St = fe.Disposable = function(e) {
            this.isDisposed = !1, this.action = e || me
        };
        St.prototype.dispose = function() {
            this.isDisposed || (this.action(), this.isDisposed = !0)
        };
        var Tt = St.create = function(e) {
                return new St(e)
            },
            Mt = St.empty = {
                dispose: me
            },
            At = St.isDisposable = function(e) {
                return e && we(e.dispose)
            },
            Pt = St.checkDisposed = function(e) {
                if (e.isDisposed) throw new ke
            },
            Rt = St._fixup = function(e) {
                return At(e) ? e : Mt
            },
            kt = fe.SingleAssignmentDisposable = function() {
                this.isDisposed = !1, this.current = null
            };
        kt.prototype.getDisposable = function() {
            return this.current
        }, kt.prototype.setDisposable = function(e) {
            if (this.current) throw new Error("Disposable has already been assigned");
            var t = this.isDisposed;
            !t && (this.current = e), t && e && e.dispose()
        }, kt.prototype.dispose = function() {
            if (!this.isDisposed) {
                this.isDisposed = !0;
                var e = this.current;
                this.current = null, e && e.dispose()
            }
        };
        var It = fe.SerialDisposable = function() {
            this.isDisposed = !1, this.current = null
        };
        It.prototype.getDisposable = function() {
            return this.current
        }, It.prototype.setDisposable = function(e) {
            var t = this.isDisposed;
            if (!t) {
                var r = this.current;
                this.current = e
            }
            r && r.dispose(), t && e && e.dispose()
        }, It.prototype.dispose = function() {
            if (!this.isDisposed) {
                this.isDisposed = !0;
                var e = this.current;
                this.current = null
            }
            e && e.dispose()
        };
        var Dt = fe.BinaryDisposable = function(e, t) {
            this._first = e, this._second = t, this.isDisposed = !1
        };
        Dt.prototype.dispose = function() {
            if (!this.isDisposed) {
                this.isDisposed = !0;
                var e = this._first;
                this._first = null, e && e.dispose();
                var t = this._second;
                this._second = null, t && t.dispose()
            }
        };
        var Bt = fe.NAryDisposable = function(e) {
            this._disposables = e, this.isDisposed = !1
        };
        Bt.prototype.dispose = function() {
            if (!this.isDisposed) {
                this.isDisposed = !0;
                for (var e = 0, t = this._disposables.length; t > e; e++) this._disposables[e].dispose();
                this._disposables.length = 0
            }
        };
        var Lt = (fe.RefCountDisposable = function() {
            function e(e) {
                this.disposable = e, this.disposable.count++, this.isInnerDisposed = !1
            }

            function t(e) {
                this.underlyingDisposable = e, this.isDisposed = !1, this.isPrimaryDisposed = !1, this.count = 0
            }
            return e.prototype.dispose = function() {
                this.disposable.isDisposed || this.isInnerDisposed || (this.isInnerDisposed = !0, this.disposable.count--, 0 === this.disposable.count && this.disposable.isPrimaryDisposed && (this.disposable.isDisposed = !0, this.disposable.underlyingDisposable.dispose()))
            }, t.prototype.dispose = function() {
                this.isDisposed || this.isPrimaryDisposed || (this.isPrimaryDisposed = !0, 0 === this.count && (this.isDisposed = !0, this.underlyingDisposable.dispose()))
            }, t.prototype.getDisposable = function() {
                return this.isDisposed ? Mt : new e(this)
            }, t
        }(), fe.internals.ScheduledItem = function(e, t, r, n, i) {
            this.scheduler = e, this.state = t, this.action = r, this.dueTime = n, this.comparer = i || be, this.disposable = new kt
        });
        Lt.prototype.invoke = function() {
            this.disposable.setDisposable(this.invokeCore())
        }, Lt.prototype.compareTo = function(e) {
            return this.comparer(this.dueTime, e.dueTime)
        }, Lt.prototype.isCancelled = function() {
            return this.disposable.isDisposed
        }, Lt.prototype.invokeCore = function() {
            return Rt(this.action(this.scheduler, this.state))
        };
        var Vt = fe.Scheduler = function() {
                function e() {}
                e.isScheduler = function(t) {
                    return t instanceof e
                };
                var t = e.prototype;
                return t.schedule = function(e, t) {
                    throw new Be
                }, t.scheduleFuture = function(t, r, n) {
                    var i = r;
                    return i instanceof Date && (i -= this.now()), i = e.normalize(i), 0 === i ? this.schedule(t, n) : this._scheduleFuture(t, i, n)
                }, t._scheduleFuture = function(e, t, r) {
                    throw new Be
                }, e.now = ge, e.prototype.now = ge, e.normalize = function(e) {
                    return 0 > e && (e = 0), e
                }, e
            }(),
            Nt = Vt.normalize,
            Ot = Vt.isScheduler;
        ! function(e) {
            function t(e, t) {
                function r(t) {
                    function n(e, t) {
                        return a ? o.remove(u) : s = !0, i(t, r), Mt
                    }
                    var a = !1,
                        s = !1,
                        u = e.schedule(t, n);
                    s || (o.add(u), a = !0)
                }
                var n = t[0],
                    i = t[1],
                    o = new Ct;
                return i(n, r), o
            }

            function r(e, t) {
                function r(t, n) {
                    function a(e, t) {
                        return s ? o.remove(l) : u = !0, i(t, r), Mt
                    }
                    var s = !1,
                        u = !1,
                        l = e.scheduleFuture(t, n, a);
                    u || (o.add(l), s = !0)
                }
                var n = t[0],
                    i = t[1],
                    o = new Ct;
                return i(n, r), o
            }
            e.scheduleRecursive = function(e, r) {
                return this.schedule([e, r], t)
            }, e.scheduleRecursiveFuture = function(e, t, n) {
                return this.scheduleFuture([e, n], t, r)
            }
        }(Vt.prototype),
        function(e) {
            e.schedulePeriodic = function(e, t, r) {
                if ("undefined" == typeof de.setInterval) throw new De;
                t = Nt(t);
                var n = e,
                    i = de.setInterval(function() {
                        n = r(n)
                    }, t);
                return Tt(function() {
                    de.clearInterval(i)
                })
            }
        }(Vt.prototype);
        var Ft, Ut, zt = function(e) {
                function t() {
                    e.call(this)
                }
                return _t(t, e), t.prototype.schedule = function(e, t) {
                    return Rt(t(this, e))
                }, t
            }(Vt),
            Ht = Vt.immediate = new zt,
            jt = function(e) {
                function t() {
                    for (; n.length > 0;) {
                        var e = n.dequeue();
                        !e.isCancelled() && e.invoke()
                    }
                }

                function r() {
                    e.call(this)
                }
                var n;
                return _t(r, e), r.prototype.schedule = function(e, r) {
                    var i = new Lt(this, e, r, this.now());
                    if (n) n.enqueue(i);
                    else {
                        n = new Qt(4), n.enqueue(i);
                        var o = Ee(t)();
                        n = null, o === Ce && a(o.e)
                    }
                    return i.disposable
                }, r.prototype.scheduleRequired = function() {
                    return !n
                }, r
            }(Vt),
            Gt = Vt.currentThread = new jt,
            qt = (fe.internals.SchedulePeriodicRecursive = function() {
                function e(e) {
                    return function(t, r) {
                        r(0, e._period);
                        var n = Ee(e._action)(e._state);
                        n === Ce && (e._cancel.dispose(), a(n.e)), e._state = n
                    }
                }

                function t(e, t, r, n) {
                    this._scheduler = e, this._state = t, this._period = r, this._action = n
                }
                return t.prototype.start = function() {
                    var t = new kt;
                    return this._cancel = t, t.setDisposable(this._scheduler.scheduleRecursiveFuture(0, this._period, e(this))), t
                }, t
            }(), function() {
                var e, t = me;
                if (de.setTimeout) e = de.setTimeout, t = de.clearTimeout;
                else {
                    if (!de.WScript) throw new De;
                    e = function(e, t) {
                        de.WScript.Sleep(t), e()
                    }
                }
                return {
                    setTimeout: e,
                    clearTimeout: t
                }
            }()),
            Wt = qt.setTimeout,
            Xt = qt.clearTimeout;
        ! function() {
            function e(t) {
                if (i) Wt(function() {
                    e(t)
                }, 0);
                else {
                    var r = n[t];
                    if (r) {
                        i = !0;
                        var o = Ee(r)();
                        Ut(t), i = !1, o === Ce && a(o.e)
                    }
                }
            }

            function t() {
                if (!de.postMessage || de.importScripts) return !1;
                var e = !1,
                    t = de.onmessage;
                return de.onmessage = function() {
                    e = !0
                }, de.postMessage("", "*"), de.onmessage = t, e
            }
            var r = 1,
                n = {},
                i = !1;
            Ut = function(e) {
                delete n[e]
            };
            var o = new RegExp("^" + String(toString).replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/toString| for [^\]]+/g, ".*?") + "$"),
                s = "function" == typeof(s = ue && he && ue.setImmediate) && !o.test(s) && s;
            if (we(s)) Ft = function(t) {
                var i = r++;
                return n[i] = t, s(function() {
                    e(i)
                }), i
            };
            else if ("undefined" != typeof process && "[object process]" === {}.toString.call(process)) Ft = function(t) {
                var i = r++;
                return n[i] = t, process.nextTick(function() {
                    e(i)
                }), i
            };
            else if (t()) {
                var u = "ms.rx.schedule" + Math.random(),
                    l = function(t) {
                        "string" == typeof t.data && t.data.substring(0, u.length) === u && e(t.data.substring(u.length))
                    };
                de.addEventListener("message", l, !1), Ft = function(e) {
                    var t = r++;
                    return n[t] = e, de.postMessage(u + t, "*"), t
                }
            } else if (de.MessageChannel) {
                var c = new de.MessageChannel;
                c.port1.onmessage = function(t) {
                    e(t.data)
                }, Ft = function(e) {
                    var t = r++;
                    return n[t] = e, c.port2.postMessage(t), t
                }
            } else Ft = "document" in de && "onreadystatechange" in de.document.createElement("script") ? function(t) {
                var i = de.document.createElement("script"),
                    o = r++;
                return n[o] = t, i.onreadystatechange = function() {
                    e(o), i.onreadystatechange = null, i.parentNode.removeChild(i), i = null
                }, de.document.documentElement.appendChild(i), o
            } : function(t) {
                var i = r++;
                return n[i] = t, Wt(function() {
                    e(i)
                }, 0), i
            }
        }();
        var Yt = function(e) {
                function t() {
                    e.call(this)
                }

                function r(e, t, r, n) {
                    return function() {
                        e.setDisposable(St._fixup(t(r, n)))
                    }
                }

                function n(e) {
                    this._id = e, this.isDisposed = !1
                }

                function i(e) {
                    this._id = e, this.isDisposed = !1
                }

                function o(e, t, r) {
                    return function() {
                        t(e, r)
                    }
                }
                return _t(t, e), n.prototype.dispose = function() {
                    this.isDisposed || (this.isDisposed = !0, Ut(this._id))
                }, i.prototype.dispose = function() {
                    this.isDisposed || (this.isDisposed = !0, Xt(this._id))
                }, t.prototype.schedule = function(e, t) {
                    var i = new kt,
                        o = Ft(r(i, t, this, e));
                    return new Dt(i, new n(o))
                }, t.prototype._scheduleFuture = function(e, t, n) {
                    if (0 === t) return this.schedule(e, n);
                    var o = new kt,
                        a = Wt(r(o, n, this, e), t);
                    return new Dt(o, new i(a))
                }, t.prototype.scheduleLongRunning = function(e, t) {
                    var r = Tt(me);
                    return Ft(o(e, t, r)), r
                }, t
            }(Vt),
            Kt = Vt["default"] = Vt.async = new Yt;
        C.prototype.compareTo = function(e) {
            var t = this.value.compareTo(e.value);
            return 0 === t && (t = this.id - e.id), t
        };
        var Qt = fe.internals.PriorityQueue = function(e) {
                this.items = new Array(e), this.length = 0
            },
            Zt = Qt.prototype;
        Zt.isHigherPriority = function(e, t) {
            return this.items[e].compareTo(this.items[t]) < 0
        }, Zt.percolate = function(e) {
            if (!(e >= this.length || 0 > e)) {
                var t = e - 1 >> 1;
                if (!(0 > t || t === e) && this.isHigherPriority(e, t)) {
                    var r = this.items[e];
                    this.items[e] = this.items[t], this.items[t] = r, this.percolate(t)
                }
            }
        }, Zt.heapify = function(e) {
            if (+e || (e = 0), !(e >= this.length || 0 > e)) {
                var t = 2 * e + 1,
                    r = 2 * e + 2,
                    n = e;
                if (t < this.length && this.isHigherPriority(t, n) && (n = t), r < this.length && this.isHigherPriority(r, n) && (n = r), n !== e) {
                    var i = this.items[e];
                    this.items[e] = this.items[n], this.items[n] = i, this.heapify(n)
                }
            }
        }, Zt.peek = function() {
            return this.items[0].value
        }, Zt.removeAt = function(e) {
            this.items[e] = this.items[--this.length], this.items[this.length] = r, this.heapify()
        }, Zt.dequeue = function() {
            var e = this.peek();
            return this.removeAt(0), e
        }, Zt.enqueue = function(e) {
            var t = this.length++;
            this.items[t] = new C(Qt.count++, e), this.percolate(t)
        }, Zt.remove = function(e) {
            for (var t = 0; t < this.length; t++)
                if (this.items[t].value === e) return this.removeAt(t), !0;
            return !1
        }, Qt.count = 0;
        var $t, Jt = fe.Notification = function() {
                function e() {}
                return e.prototype._accept = function(e, t, r) {
                    throw new Be
                }, e.prototype._acceptObserver = function(e, t, r) {
                    throw new Be
                }, e.prototype.accept = function(e, t, r) {
                    return e && "object" == typeof e ? this._acceptObserver(e) : this._accept(e, t, r)
                }, e.prototype.toObservable = function(e) {
                    var t = this;
                    return Ot(e) || (e = Ht), new hi(function(r) {
                        return e.schedule(t, function(e, t) {
                            t._acceptObserver(r), "N" === t.kind && r.onCompleted()
                        })
                    })
                }, e
            }(),
            er = function(e) {
                function t(e) {
                    this.value = e, this.kind = "N"
                }
                return _t(t, e), t.prototype._accept = function(e) {
                    return e(this.value)
                }, t.prototype._acceptObserver = function(e) {
                    return e.onNext(this.value)
                }, t.prototype.toString = function() {
                    return "OnNext(" + this.value + ")"
                }, t
            }(Jt),
            tr = function(e) {
                function t(e) {
                    this.error = e, this.kind = "E"
                }
                return _t(t, e), t.prototype._accept = function(e, t) {
                    return t(this.error)
                }, t.prototype._acceptObserver = function(e) {
                    return e.onError(this.error)
                }, t.prototype.toString = function() {
                    return "OnError(" + this.error + ")"
                }, t
            }(Jt),
            rr = function(e) {
                function t() {
                    this.kind = "C"
                }
                return _t(t, e), t.prototype._accept = function(e, t, r) {
                    return r()
                }, t.prototype._acceptObserver = function(e) {
                    return e.onCompleted()
                }, t.prototype.toString = function() {
                    return "OnCompleted()"
                }, t
            }(Jt),
            nr = Jt.createOnNext = function(e) {
                return new er(e)
            },
            ir = Jt.createOnError = function(e) {
                return new tr(e)
            },
            or = Jt.createOnCompleted = function() {
                return new rr
            },
            ar = fe.Observer = function() {},
            sr = ar.create = function(e, t, r) {
                return e || (e = me), t || (t = xe), r || (r = me), new lr(e, t, r)
            },
            ur = fe.internals.AbstractObserver = function(e) {
                function t() {
                    this.isStopped = !1
                }
                return _t(t, e), t.prototype.next = Le, t.prototype.error = Le, t.prototype.completed = Le, t.prototype.onNext = function(e) {
                    !this.isStopped && this.next(e)
                }, t.prototype.onError = function(e) {
                    this.isStopped || (this.isStopped = !0, this.error(e))
                }, t.prototype.onCompleted = function() {
                    this.isStopped || (this.isStopped = !0, this.completed())
                }, t.prototype.dispose = function() {
                    this.isStopped = !0
                }, t.prototype.fail = function(e) {
                    return this.isStopped ? !1 : (this.isStopped = !0, this.error(e), !0)
                }, t
            }(ar),
            lr = fe.AnonymousObserver = function(e) {
                function t(t, r, n) {
                    e.call(this), this._onNext = t, this._onError = r, this._onCompleted = n
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._onNext(e)
                }, t.prototype.error = function(e) {
                    this._onError(e)
                }, t.prototype.completed = function() {
                    this._onCompleted()
                }, t
            }(ur),
            cr = fe.Observable = function() {
                function e(e, t) {
                    return function(r) {
                        var n = r.onError;
                        return r.onError = function(t) {
                            s(t, e), n.call(r, t)
                        }, t.call(e, r)
                    }
                }

                function t() {
                    if (fe.config.longStackSupport && Se) {
                        var t = this._subscribe,
                            r = Ee(a)(new Error).e;
                        this.stack = r.stack.substring(r.stack.indexOf("\n") + 1), this._subscribe = e(this, t)
                    }
                }
                return $t = t.prototype, t.isObservable = function(e) {
                    return e && we(e.subscribe)
                }, $t.subscribe = $t.forEach = function(e, t, r) {
                    return this._subscribe("object" == typeof e ? e : sr(e, t, r))
                }, $t.subscribeOnNext = function(e, t) {
                    return this._subscribe(sr("undefined" != typeof t ? function(r) {
                        e.call(t, r)
                    } : e))
                }, $t.subscribeOnError = function(e, t) {
                    return this._subscribe(sr(null, "undefined" != typeof t ? function(r) {
                        e.call(t, r)
                    } : e))
                }, $t.subscribeOnCompleted = function(e, t) {
                    return this._subscribe(sr(null, null, "undefined" != typeof t ? function() {
                        e.call(t)
                    } : e))
                }, t
            }(),
            hr = fe.internals.ScheduledObserver = function(e) {
                function t(t, r) {
                    e.call(this), this.scheduler = t, this.observer = r, this.isAcquired = !1, this.hasFaulted = !1, this.queue = [], this.disposable = new It
                }

                function r(e, t) {
                    return function() {
                        e.onNext(t)
                    }
                }

                function n(e, t) {
                    return function() {
                        e.onError(t)
                    }
                }

                function i(e) {
                    return function() {
                        e.onCompleted()
                    }
                }

                function o(e, t) {
                    var r;
                    if (!(e.queue.length > 0)) return void(e.isAcquired = !1);
                    r = e.queue.shift();
                    var n = Ee(r)();
                    return n === Ce ? (e.queue = [], e.hasFaulted = !0, a(n.e)) : void t(e)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this.queue.push(r(this.observer, e))
                }, t.prototype.error = function(e) {
                    this.queue.push(n(this.observer, e))
                }, t.prototype.completed = function() {
                    this.queue.push(i(this.observer))
                }, t.prototype.ensureActive = function() {
                    var e = !1;
                    !this.hasFaulted && this.queue.length > 0 && (e = !this.isAcquired, this.isAcquired = !0), e && this.disposable.setDisposable(this.scheduler.scheduleRecursive(this, o))
                }, t.prototype.dispose = function() {
                    e.prototype.dispose.call(this), this.disposable.dispose()
                }, t
            }(ur),
            pr = fe.ObservableBase = function(e) {
                function t(e) {
                    return e && we(e.dispose) ? e : we(e) ? Tt(e) : Mt
                }

                function r(e, r) {
                    var n = r[0],
                        i = r[1],
                        o = Ee(i.subscribeCore).call(i, n);
                    o !== Ce || n.fail(Ce.e) || a(Ce.e), n.setDisposable(t(o))
                }

                function n() {
                    e.call(this)
                }
                return _t(n, e), n.prototype._subscribe = function(e) {
                    var t = new pi(e),
                        n = [t, this];
                    return Gt.scheduleRequired() ? Gt.schedule(n, r) : r(null, n), t
                }, n.prototype.subscribeCore = Le, n
            }(cr),
            dr = fe.FlatMapObservable = function(e) {
                function t(t, r, n, i) {
                    this.resultSelector = we(n) ? n : null, this.selector = Ue(we(r) ? r : function() {
                        return r
                    }, i, 3), this.source = t, e.call(this)
                }

                function r(e, t, r, n) {
                    this.i = 0, this.selector = t, this.resultSelector = r, this.source = n, this.o = e, ur.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new r(e, this.selector, this.resultSelector, this))
                }, _t(r, ur), r.prototype._wrapResult = function(e, t, r) {
                    return this.resultSelector ? e.map(function(e, n) {
                        return this.resultSelector(t, e, r, n)
                    }, this) : e
                }, r.prototype.next = function(e) {
                    var t = this.i++,
                        r = Ee(this.selector)(e, t, this.source);
                    return r === Ce ? this.o.onError(r.e) : (_e(r) && (r = Wn(r)), (Fe(r) || Oe(r)) && (r = cr.from(r)), void this.o.onNext(this._wrapResult(r, e, t)))
                }, r.prototype.error = function(e) {
                    this.o.onError(e)
                }, r.prototype.completed = function() {
                    this.o.onCompleted()
                }, t
            }(pr),
            fr = fe.internals.Enumerable = function() {};
        E.prototype.dispose = function() {
            this.isDisposed || (this.isDisposed = !0, this._s.isDisposed = !0)
        };
        var mr = function(e) {
            function t(t) {
                this.sources = t, e.call(this)
            }

            function r(e, t) {
                if (!e.isDisposed) {
                    var r = Ee(e.e.next).call(e.e);
                    if (r === Ce) return e.o.onError(r.e);
                    if (r.done) return e.o.onCompleted();
                    var i = r.value;
                    _e(i) && (i = Wn(i));
                    var o = new kt;
                    e.subscription.setDisposable(o), o.setDisposable(i.subscribe(new n(e, t)))
                }
            }

            function n(e, t) {
                this._state = e, this._recurse = t, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                var t = new It,
                    n = {
                        isDisposed: !1,
                        o: e,
                        subscription: t,
                        e: this.sources[Ve]()
                    },
                    i = Gt.scheduleRecursive(n, r);
                return new Bt([t, i, new E(n)])
            }, _t(n, ur), n.prototype.next = function(e) {
                this._state.o.onNext(e)
            }, n.prototype.error = function(e) {
                this._state.o.onError(e)
            }, n.prototype.completed = function() {
                this._recurse(this._state)
            }, t
        }(pr);
        fr.prototype.concat = function() {
            return new mr(this)
        };
        var vr = function(e) {
            function t(t) {
                this.sources = t, e.call(this)
            }

            function r(e, t) {
                if (!e.isDisposed) {
                    var r = Ee(e.e.next).call(e.e);
                    if (r === Ce) return e.o.onError(r.e);
                    if (r.done) return null !== e.lastError ? e.o.onError(e.lastError) : e.o.onCompleted();
                    var i = r.value;
                    _e(i) && (i = Wn(i));
                    var o = new kt;
                    e.subscription.setDisposable(o), o.setDisposable(i.subscribe(new n(e, t)))
                }
            }

            function n(e, t) {
                this._state = e, this._recurse = t, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                var t = new It,
                    n = {
                        isDisposed: !1,
                        e: this.sources[Ve](),
                        subscription: t,
                        lastError: null,
                        o: e
                    },
                    i = Gt.scheduleRecursive(n, r);
                return new Bt([t, i, new E(n)])
            }, _t(n, ur), n.prototype.next = function(e) {
                this._state.o.onNext(e)
            }, n.prototype.error = function(e) {
                this._state.lastError = e, this._recurse(this._state)
            }, n.prototype.completed = function() {
                this._state.o.onCompleted()
            }, t
        }(pr);
        fr.prototype.catchError = function() {
            return new vr(this)
        };
        var gr = function(e) {
                function t(e, t) {
                    this.v = e, this.c = null == t ? -1 : t
                }

                function r(e) {
                    this.v = e.v, this.l = e.c
                }
                return _t(t, e), t.prototype[Ve] = function() {
                    return new r(this)
                }, r.prototype.next = function() {
                    return 0 === this.l ? Ne : (this.l > 0 && this.l--, {
                        done: !1,
                        value: this.v
                    })
                }, t
            }(fr),
            yr = fr.repeat = function(e, t) {
                return new gr(e, t)
            },
            br = function(e) {
                function t(e, t, r) {
                    this.s = e, this.fn = t ? Ue(t, r, 3) : null
                }

                function r(e) {
                    this.i = -1, this.s = e.s, this.l = this.s.length, this.fn = e.fn
                }
                return _t(t, e), t.prototype[Ve] = function() {
                    return new r(this)
                }, r.prototype.next = function() {
                    return ++this.i < this.l ? {
                        done: !1,
                        value: this.fn ? this.fn(this.s[this.i], this.i, this.s) : this.s[this.i]
                    } : Ne
                }, t
            }(fr),
            xr = fr.of = function(e, t, r) {
                return new br(e, t, r)
            },
            _r = function(e) {
                function t(t) {
                    this.source = t, e.call(this)
                }

                function r(e) {
                    this.o = e, this.a = [], ur.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new r(e))
                }, _t(r, ur), r.prototype.next = function(e) {
                    this.a.push(e)
                }, r.prototype.error = function(e) {
                    this.o.onError(e)
                }, r.prototype.completed = function() {
                    this.o.onNext(this.a), this.o.onCompleted()
                }, t
            }(pr);
        $t.toArray = function() {
            return new _r(this)
        }, cr.create = function(e, t) {
            return new hi(e, t)
        };
        var wr = function(e) {
                function t(t) {
                    this._f = t, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = Ee(this._f)();
                    return t === Ce ? Ur(t.e).subscribe(e) : (_e(t) && (t = Wn(t)), t.subscribe(e))
                }, t
            }(pr),
            Cr = cr.defer = function(e) {
                return new wr(e)
            },
            Er = function(e) {
                function t(t) {
                    this.scheduler = t, e.call(this)
                }

                function r(e, t) {
                    this.observer = e, this.scheduler = t
                }

                function n(e, t) {
                    return t.onCompleted(), Mt
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new r(e, this.scheduler);
                    return t.run()
                }, r.prototype.run = function() {
                    var e = this.observer;
                    return this.scheduler === Ht ? n(null, e) : this.scheduler.schedule(e, n)
                }, t
            }(pr),
            Sr = new Er(Ht),
            Tr = cr.empty = function(e) {
                return Ot(e) || (e = Ht), e === Ht ? Sr : new Er(e)
            },
            Mr = function(e) {
                function t(t, r, n) {
                    this._iterable = t, this._fn = r, this._scheduler = n, e.call(this)
                }

                function r(e, t, r) {
                    return function(n, i) {
                        var o = Ee(t.next).call(t);
                        if (o === Ce) return e.onError(o.e);
                        if (o.done) return e.onCompleted();
                        var a = o.value;
                        return we(r) && (a = Ee(r)(a, n), a === Ce) ? e.onError(a.e) : (e.onNext(a), void i(n + 1))
                    }
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = Object(this._iterable),
                        n = R(t);
                    return this._scheduler.scheduleRecursive(0, r(e, n, this._fn))
                }, t
            }(pr),
            Ar = Math.pow(2, 53) - 1;
        S.prototype[Ve] = function() {
            return new T(this._s)
        }, T.prototype[Ve] = function() {
            return this
        }, T.prototype.next = function() {
            return this._i < this._l ? {
                done: !1,
                value: this._s.charAt(this._i++)
            } : Ne
        }, M.prototype[Ve] = function() {
            return new A(this._a)
        }, A.prototype[Ve] = function() {
            return this
        }, A.prototype.next = function() {
            return this._i < this._l ? {
                done: !1,
                value: this._a[this._i++]
            } : Ne
        };
        var Pr = cr.from = function(e, t, r, n) {
                if (null == e) throw new Error("iterable cannot be null.");
                if (t && !we(t)) throw new Error("mapFn when provided must be a function");
                if (t) var i = Ue(t, r, 2);
                return Ot(n) || (n = Gt), new Mr(e, i, n)
            },
            Rr = function(e) {
                function t(t, r) {
                    this._args = t, this._scheduler = r, e.call(this)
                }

                function r(e, t) {
                    var r = t.length;
                    return function(n, i) {
                        r > n ? (e.onNext(t[n]), i(n + 1)) : e.onCompleted()
                    }
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this._scheduler.scheduleRecursive(0, r(e, this._args))
                }, t
            }(pr),
            kr = cr.fromArray = function(e, t) {
                return Ot(t) || (t = Gt), new Rr(e, t)
            },
            Ir = function(e) {
                function t() {
                    e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return Mt
                }, t
            }(pr),
            Dr = new Ir,
            Br = cr.never = function() {
                return Dr
            };
        cr.of = function() {
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            return new Rr(t, Gt)
        }, cr.ofWithScheduler = function(e) {
            for (var t = arguments.length, r = new Array(t - 1), n = 1; t > n; n++) r[n - 1] = arguments[n];
            return new Rr(r, e)
        };
        var Lr = function(e) {
            function t(t, r) {
                this._o = t, this._keys = Object.keys(t), this._scheduler = r, e.call(this)
            }

            function r(e, t, r) {
                return function(n, i) {
                    if (n < r.length) {
                        var o = r[n];
                        e.onNext([o, t[o]]), i(n + 1)
                    } else e.onCompleted()
                }
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this._scheduler.scheduleRecursive(0, r(e, this._o, this._keys))
            }, t
        }(pr);
        cr.pairs = function(e, t) {
            return t || (t = Gt), new Lr(e, t)
        };
        var Vr = function(e) {
            function t(t, r, n) {
                this.start = t, this.rangeCount = r, this.scheduler = n, e.call(this)
            }

            function r(e, t, r) {
                return function(n, i) {
                    t > n ? (r.onNext(e + n), i(n + 1)) : r.onCompleted()
                }
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this.scheduler.scheduleRecursive(0, r(this.start, this.rangeCount, e))
            }, t
        }(pr);
        cr.range = function(e, t, r) {
            return Ot(r) || (r = Gt), new Vr(e, t, r)
        };
        var Nr = function(e) {
            function t(t, r, n) {
                this.value = t, this.repeatCount = null == r ? -1 : r, this.scheduler = n, e.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                var t = new B(e, this);
                return t.run()
            }, t
        }(pr);
        B.prototype.run = function() {
            function e(e, n) {
                return (-1 === e || e > 0) && (t.onNext(r), e > 0 && e--), 0 === e ? t.onCompleted() : void n(e);
            }
            var t = this.observer,
                r = this.parent.value;
            return this.parent.scheduler.scheduleRecursive(this.parent.repeatCount, e)
        }, cr.repeat = function(e, t, r) {
            return Ot(r) || (r = Gt), new Nr(e, t, r)
        };
        var Or = function(e) {
                function t(t, r) {
                    this._value = t, this._scheduler = r, e.call(this)
                }

                function r(e, t) {
                    var r = t[0],
                        n = t[1];
                    return n.onNext(r), n.onCompleted(), Mt
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = [this._value, e];
                    return this._scheduler === Ht ? r(null, t) : this._scheduler.schedule(t, r)
                }, t
            }(pr),
            Fr = (cr["return"] = cr.just = function(e, t) {
                return Ot(t) || (t = Ht), new Or(e, t)
            }, function(e) {
                function t(t, r) {
                    this._error = t, this._scheduler = r, e.call(this)
                }

                function r(e, t) {
                    var r = t[0],
                        n = t[1];
                    return n.onError(r), Mt
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = [this._error, e];
                    return this._scheduler === Ht ? r(null, t) : this._scheduler.schedule(t, r)
                }, t
            }(pr)),
            Ur = cr["throw"] = function(e, t) {
                return Ot(t) || (t = Ht), new Fr(e, t)
            },
            zr = function(e) {
                function t(t, r) {
                    this.source = t, this._fn = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new kt,
                        r = new It;
                    return r.setDisposable(t), t.setDisposable(this.source.subscribe(new Hr(e, r, this._fn))), r
                }, t
            }(pr),
            Hr = function(e) {
                function t(t, r, n) {
                    this._o = t, this._s = r, this._fn = n, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._o.onNext(e)
                }, t.prototype.completed = function() {
                    return this._o.onCompleted()
                }, t.prototype.error = function(e) {
                    var t = Ee(this._fn)(e);
                    if (t === Ce) return this._o.onError(t.e);
                    _e(t) && (t = Wn(t));
                    var r = new kt;
                    this._s.setDisposable(r), r.setDisposable(t.subscribe(this._o))
                }, t
            }(ur);
        $t["catch"] = function(e) {
            return we(e) ? new zr(this, e) : jr([this, e])
        };
        var jr = cr["catch"] = function() {
            var e;
            if (Array.isArray(arguments[0])) e = arguments[0];
            else {
                var t = arguments.length;
                e = new Array(t);
                for (var r = 0; t > r; r++) e[r] = arguments[r]
            }
            return xr(e).catchError()
        };
        $t.combineLatest = function() {
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            return Array.isArray(t[0]) ? t[0].unshift(this) : t.unshift(this), Wr.apply(this, t)
        };
        var Gr = function(e) {
                function t(t, r) {
                    this._params = t, this._cb = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    for (var t = this._params.length, r = new Array(t), n = {
                            hasValue: w(t, L),
                            hasValueAll: !1,
                            isDone: w(t, L),
                            values: new Array(t)
                        }, i = 0; t > i; i++) {
                        var o = this._params[i],
                            a = new kt;
                        r[i] = a, _e(o) && (o = Wn(o)), a.setDisposable(o.subscribe(new qr(e, i, this._cb, n)))
                    }
                    return new Bt(r)
                }, t
            }(pr),
            qr = function(e) {
                function t(t, r, n, i) {
                    this._o = t, this._i = r, this._cb = n, this._state = i, e.call(this)
                }

                function r(e) {
                    return function(t, r) {
                        return r !== e
                    }
                }
                return _t(t, e), t.prototype.next = function(e) {
                    if (this._state.values[this._i] = e, this._state.hasValue[this._i] = !0, this._state.hasValueAll || (this._state.hasValueAll = this._state.hasValue.every(ve))) {
                        var t = Ee(this._cb).apply(null, this._state.values);
                        if (t === Ce) return this._o.onError(t.e);
                        this._o.onNext(t)
                    } else this._state.isDone.filter(r(this._i)).every(ve) && this._o.onCompleted()
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._state.isDone[this._i] = !0, this._state.isDone.every(ve) && this._o.onCompleted()
                }, t
            }(ur),
            Wr = cr.combineLatest = function() {
                for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
                var n = we(t[e - 1]) ? t.pop() : V;
                return Array.isArray(t[0]) && (t = t[0]), new Gr(t, n)
            };
        $t.concat = function() {
            for (var e = [], t = 0, r = arguments.length; r > t; t++) e.push(arguments[t]);
            return e.unshift(this), Kr.apply(null, e)
        };
        var Xr = function(e) {
                function t(t, r) {
                    this._s = t, this._fn = r, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._s.o.onNext(e)
                }, t.prototype.error = function(e) {
                    this._s.o.onError(e)
                }, t.prototype.completed = function() {
                    this._s.i++, this._fn(this._s)
                }, t
            }(ur),
            Yr = function(e) {
                function t(t) {
                    this._sources = t, e.call(this)
                }

                function r(e, t) {
                    if (!e.disposable.isDisposed) {
                        if (e.i === e.sources.length) return e.o.onCompleted();
                        var r = e.sources[e.i];
                        _e(r) && (r = Wn(r));
                        var n = new kt;
                        e.subscription.setDisposable(n), n.setDisposable(r.subscribe(new Xr(e, t)))
                    }
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new It,
                        n = Tt(me),
                        i = {
                            o: e,
                            i: 0,
                            subscription: t,
                            disposable: n,
                            sources: this._sources
                        },
                        o = Ht.scheduleRecursive(i, r);
                    return new Bt([t, n, o])
                }, t
            }(pr),
            Kr = cr.concat = function() {
                var e;
                if (Array.isArray(arguments[0])) e = arguments[0];
                else {
                    e = new Array(arguments.length);
                    for (var t = 0, r = arguments.length; r > t; t++) e[t] = arguments[t]
                }
                return new Yr(e)
            };
        $t.concatAll = function() {
            return this.merge(1)
        };
        var Qr = function(e) {
                function t(t, r) {
                    this.source = t, this.maxConcurrent = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new Ct;
                    return t.add(this.source.subscribe(new Zr(e, this.maxConcurrent, t))), t
                }, t
            }(pr),
            Zr = function(e) {
                function t(t, r, n) {
                    this.o = t, this.max = r, this.g = n, this.done = !1, this.q = [], this.activeCount = 0, e.call(this)
                }

                function r(t, r) {
                    this.parent = t, this.sad = r, e.call(this)
                }
                return _t(t, e), t.prototype.handleSubscribe = function(e) {
                    var t = new kt;
                    this.g.add(t), _e(e) && (e = Wn(e)), t.setDisposable(e.subscribe(new r(this, t)))
                }, t.prototype.next = function(e) {
                    this.activeCount < this.max ? (this.activeCount++, this.handleSubscribe(e)) : this.q.push(e)
                }, t.prototype.error = function(e) {
                    this.o.onError(e)
                }, t.prototype.completed = function() {
                    this.done = !0, 0 === this.activeCount && this.o.onCompleted()
                }, _t(r, e), r.prototype.next = function(e) {
                    this.parent.o.onNext(e)
                }, r.prototype.error = function(e) {
                    this.parent.o.onError(e)
                }, r.prototype.completed = function() {
                    this.parent.g.remove(this.sad), this.parent.q.length > 0 ? this.parent.handleSubscribe(this.parent.q.shift()) : (this.parent.activeCount--, this.parent.done && 0 === this.parent.activeCount && this.parent.o.onCompleted())
                }, t
            }(ur);
        $t.merge = function(e) {
            return "number" != typeof e ? $r(this, e) : new Qr(this, e)
        };
        var $r = cr.merge = function() {
                var e, t, r = [],
                    n = arguments.length;
                if (arguments[0])
                    if (Ot(arguments[0]))
                        for (e = arguments[0], t = 1; n > t; t++) r.push(arguments[t]);
                    else
                        for (e = Ht, t = 0; n > t; t++) r.push(arguments[t]);
                else
                    for (e = Ht, t = 1; n > t; t++) r.push(arguments[t]);
                return Array.isArray(r[0]) && (r = r[0]), D(e, r).mergeAll()
            },
            Jr = fe.CompositeError = function(e) {
                this.innerErrors = e, this.message = "This contains multiple errors. Check the innerErrors", Error.call(this)
            };
        Jr.prototype = Object.create(Error.prototype), Jr.prototype.name = "CompositeError";
        var en = function(e) {
                function t(t) {
                    this.source = t, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new Ct,
                        r = new kt,
                        n = {
                            isStopped: !1,
                            errors: [],
                            o: e
                        };
                    return t.add(r), r.setDisposable(this.source.subscribe(new tn(t, n))), t
                }, t
            }(pr),
            tn = function(e) {
                function t(t, r) {
                    this._group = t, this._state = r, e.call(this)
                }

                function r(e, t) {
                    0 === t.length ? e.onCompleted() : 1 === t.length ? e.onError(t[0]) : e.onError(new Jr(t))
                }

                function n(t, r, n) {
                    this._inner = t, this._group = r, this._state = n, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    var t = new kt;
                    this._group.add(t), _e(e) && (e = Wn(e)), t.setDisposable(e.subscribe(new n(t, this._group, this._state)))
                }, t.prototype.error = function(e) {
                    this._state.errors.push(e), this._state.isStopped = !0, 1 === this._group.length && r(this._state.o, this._state.errors)
                }, t.prototype.completed = function() {
                    this._state.isStopped = !0, 1 === this._group.length && r(this._state.o, this._state.errors)
                }, _t(n, e), n.prototype.next = function(e) {
                    this._state.o.onNext(e)
                }, n.prototype.error = function(e) {
                    this._state.errors.push(e), this._group.remove(this._inner), this._state.isStopped && 1 === this._group.length && r(this._state.o, this._state.errors)
                }, n.prototype.completed = function() {
                    this._group.remove(this._inner), this._state.isStopped && 1 === this._group.length && r(this._state.o, this._state.errors)
                }, t
            }(ur);
        cr.mergeDelayError = function() {
            var e;
            if (Array.isArray(arguments[0])) e = arguments[0];
            else {
                var t = arguments.length;
                e = new Array(t);
                for (var r = 0; t > r; r++) e[r] = arguments[r]
            }
            var n = D(null, e);
            return new en(n)
        };
        var rn = function(e) {
                function t(t) {
                    this.source = t, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new Ct,
                        r = new kt;
                    return t.add(r), r.setDisposable(this.source.subscribe(new nn(e, t))), t
                }, t
            }(pr),
            nn = function(e) {
                function t(t, r) {
                    this.o = t, this.g = r, this.done = !1, e.call(this)
                }

                function r(t, r) {
                    this.parent = t, this.sad = r, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    var t = new kt;
                    this.g.add(t), _e(e) && (e = Wn(e)), t.setDisposable(e.subscribe(new r(this, t)))
                }, t.prototype.error = function(e) {
                    this.o.onError(e)
                }, t.prototype.completed = function() {
                    this.done = !0, 1 === this.g.length && this.o.onCompleted()
                }, _t(r, e), r.prototype.next = function(e) {
                    this.parent.o.onNext(e)
                }, r.prototype.error = function(e) {
                    this.parent.o.onError(e)
                }, r.prototype.completed = function() {
                    this.parent.g.remove(this.sad), this.parent.done && 1 === this.parent.g.length && this.parent.o.onCompleted()
                }, t
            }(ur);
        $t.mergeAll = function() {
            return new rn(this)
        };
        var on = function(e) {
                function t(t, r) {
                    this._s = t, this._o = _e(r) ? Wn(r) : r, this._open = !1, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new kt;
                    t.setDisposable(this._s.subscribe(new an(e, this))), _e(this._o) && (this._o = Wn(this._o));
                    var r = new kt;
                    return r.setDisposable(this._o.subscribe(new sn(e, this, r))), new Dt(t, r)
                }, t
            }(pr),
            an = function(e) {
                function t(t, r) {
                    this._o = t, this._p = r, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._p._open && this._o.onNext(e)
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.onCompleted = function() {
                    this._p._open && this._o.onCompleted()
                }, t
            }(ur),
            sn = function(e) {
                function t(t, r, n) {
                    this._o = t, this._p = r, this._r = n, e.call(this)
                }
                return _t(t, e), t.prototype.next = function() {
                    this._p._open = !0, this._r.dispose()
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.onCompleted = function() {
                    this._r.dispose()
                }, t
            }(ur);
        $t.skipUntil = function(e) {
            return new on(this, e)
        };
        var un = function(e) {
            function t(t) {
                this.source = t, e.call(this)
            }

            function r(e, t) {
                this.o = e, this.inner = t, this.stopped = !1, this.latest = 0, this.hasLatest = !1, ur.call(this)
            }

            function n(e, t) {
                this.parent = e, this.id = t, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                var t = new It,
                    n = this.source.subscribe(new r(e, t));
                return new Dt(n, t)
            }, _t(r, ur), r.prototype.next = function(e) {
                var t = new kt,
                    r = ++this.latest;
                this.hasLatest = !0, this.inner.setDisposable(t), _e(e) && (e = Wn(e)), t.setDisposable(e.subscribe(new n(this, r)))
            }, r.prototype.error = function(e) {
                this.o.onError(e)
            }, r.prototype.completed = function() {
                this.stopped = !0, !this.hasLatest && this.o.onCompleted()
            }, _t(n, ur), n.prototype.next = function(e) {
                this.parent.latest === this.id && this.parent.o.onNext(e)
            }, n.prototype.error = function(e) {
                this.parent.latest === this.id && this.parent.o.onError(e)
            }, n.prototype.completed = function() {
                this.parent.latest === this.id && (this.parent.hasLatest = !1, this.parent.stopped && this.parent.o.onCompleted())
            }, t
        }(pr);
        $t["switch"] = $t.switchLatest = function() {
            return new un(this)
        };
        var ln = function(e) {
                function t(t, r) {
                    this.source = t, this.other = _e(r) ? Wn(r) : r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return new Dt(this.source.subscribe(e), this.other.subscribe(new cn(e)))
                }, t
            }(pr),
            cn = function(e) {
                function t(t) {
                    this._o = t, e.call(this)
                }
                return _t(t, e), t.prototype.next = function() {
                    this._o.onCompleted()
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.onCompleted = me, t
            }(ur);
        $t.takeUntil = function(e) {
            return new ln(this, e)
        };
        var hn = function(e) {
                function t(t, r, n) {
                    this._s = t, this._ss = r, this._cb = n, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    for (var t = this._ss.length, r = {
                            hasValue: w(t, L),
                            hasValueAll: !1,
                            values: new Array(t)
                        }, n = this._ss.length, i = new Array(n + 1), o = 0; n > o; o++) {
                        var a = this._ss[o],
                            s = new kt;
                        _e(a) && (a = Wn(a)), s.setDisposable(a.subscribe(new pn(e, o, r))), i[o] = s
                    }
                    var u = new kt;
                    return u.setDisposable(this._s.subscribe(new dn(e, this._cb, r))), i[n] = u, new Bt(i)
                }, t
            }(pr),
            pn = function(e) {
                function t(t, r, n) {
                    this._o = t, this._i = r, this._state = n, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._state.values[this._i] = e, this._state.hasValue[this._i] = !0, this._state.hasValueAll = this._state.hasValue.every(ve)
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = me, t
            }(ur),
            dn = function(e) {
                function t(t, r, n) {
                    this._o = t, this._cb = r, this._state = n, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    var t = [e].concat(this._state.values);
                    if (this._state.hasValueAll) {
                        var r = Ee(this._cb).apply(null, t);
                        return r === Ce ? this._o.onError(r.e) : void this._o.onNext(r)
                    }
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._o.onCompleted()
                }, t
            }(ur);
        $t.withLatestFrom = function() {
            if (0 === arguments.length) throw new Error("invalid arguments");
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            var n = we(t[e - 1]) ? t.pop() : V;
            return Array.isArray(t[0]) && (t = t[0]), new hn(this, t, n)
        };
        var fn = function(e) {
                function t(t, r) {
                    this._s = t, this._cb = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    for (var t = this._s.length, r = new Array(t), n = w(t, L), i = w(t, N), o = 0; t > o; o++) {
                        var a = this._s[o],
                            s = new kt;
                        r[o] = s, _e(a) && (a = Wn(a)), s.setDisposable(a.subscribe(new mn(e, o, this, i, n)))
                    }
                    return new Bt(r)
                }, t
            }(pr),
            mn = function(e) {
                function t(t, r, n, i, o) {
                    this._o = t, this._i = r, this._p = n, this._q = i, this._d = o, e.call(this)
                }

                function r(e) {
                    return e.length > 0
                }

                function n(e) {
                    return e.shift()
                }

                function i(e) {
                    return function(t, r) {
                        return r !== e
                    }
                }
                return _t(t, e), t.prototype.next = function(e) {
                    if (this._q[this._i].push(e), this._q.every(r)) {
                        var t = this._q.map(n),
                            o = Ee(this._p._cb).apply(null, t);
                        if (o === Ce) return this._o.onError(o.e);
                        this._o.onNext(o)
                    } else this._d.filter(i(this._i)).every(ve) && this._o.onCompleted()
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._d[this._i] = !0, this._d.every(ve) && this._o.onCompleted()
                }, t
            }(ur);
        $t.zip = function() {
            if (0 === arguments.length) throw new Error("invalid arguments");
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            var n = we(t[e - 1]) ? t.pop() : V;
            Array.isArray(t[0]) && (t = t[0]);
            var i = this;
            return t.unshift(i), new fn(t, n)
        }, cr.zip = function() {
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            Array.isArray(t[0]) && (t = we(t[1]) ? t[0].concat(t[1]) : t[0]);
            var n = t.shift();
            return n.zip.apply(n, t)
        };
        var vn = function(e) {
                function t(t, r) {
                    this.sources = t, this._cb = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    for (var t = this.sources, r = t.length, n = new Array(r), i = {
                            q: w(r, N),
                            done: w(r, L),
                            cb: this._cb,
                            o: e
                        }, o = 0; r > o; o++) ! function(e) {
                        var r = t[e],
                            o = new kt;
                        (Fe(r) || Oe(r)) && (r = Pr(r)), n[e] = o, o.setDisposable(r.subscribe(new gn(i, e)))
                    }(o);
                    return new Bt(n)
                }, t
            }(pr),
            gn = function(e) {
                function t(t, r) {
                    this._s = t, this._i = r, e.call(this)
                }

                function r(e) {
                    return e.length > 0
                }

                function n(e) {
                    return e.shift()
                }

                function i(e) {
                    return function(t, r) {
                        return r !== e
                    }
                }
                return _t(t, e), t.prototype.next = function(e) {
                    if (this._s.q[this._i].push(e), this._s.q.every(r)) {
                        var t = this._s.q.map(n),
                            o = Ee(this._s.cb).apply(null, t);
                        if (o === Ce) return this._s.o.onError(o.e);
                        this._s.o.onNext(o)
                    } else this._s.done.filter(i(this._i)).every(ve) && this._s.o.onCompleted()
                }, t.prototype.error = function(e) {
                    this._s.o.onError(e)
                }, t.prototype.completed = function() {
                    this._s.done[this._i] = !0, this._s.done.every(ve) && this._s.o.onCompleted()
                }, t
            }(ur);
        $t.zipIterable = function() {
            if (0 === arguments.length) throw new Error("invalid arguments");
            for (var e = arguments.length, t = new Array(e), r = 0; e > r; r++) t[r] = arguments[r];
            var n = we(t[e - 1]) ? t.pop() : V,
                i = this;
            return t.unshift(i), new vn(t, n)
        }, $t.asObservable = function() {
            return new hi(O(this), this)
        };
        var yn = function(e) {
                function t(t) {
                    this.source = t, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new bn(e))
                }, t
            }(pr),
            bn = function(e) {
                function t(t) {
                    this._o = t, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    e.accept(this._o)
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._o.onCompleted()
                }, t
            }(ur);
        $t.dematerialize = function() {
            return new yn(this)
        };
        var xn = function(e) {
                function t(t, r, n) {
                    this.source = t, this.keyFn = r, this.comparer = n, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new _n(e, this.keyFn, this.comparer))
                }, t
            }(pr),
            _n = function(e) {
                function t(t, r, n) {
                    this.o = t, this.keyFn = r, this.comparer = n, this.hasCurrentKey = !1, this.currentKey = null, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    var t, r = e;
                    return we(this.keyFn) && (r = Ee(this.keyFn)(e), r === Ce) ? this.o.onError(r.e) : this.hasCurrentKey && (t = Ee(this.comparer)(this.currentKey, r), t === Ce) ? this.o.onError(t.e) : void(this.hasCurrentKey && t || (this.hasCurrentKey = !0, this.currentKey = r, this.o.onNext(e)))
                }, t.prototype.error = function(e) {
                    this.o.onError(e)
                }, t.prototype.completed = function() {
                    this.o.onCompleted()
                }, t
            }(ur);
        $t.distinctUntilChanged = function(e, t) {
            return t || (t = ye), new xn(this, e, t)
        };
        var wn = function(e) {
            function t(t, r, n, i) {
                this.source = t, this._oN = r, this._oE = n, this._oC = i, e.call(this)
            }

            function r(e, t) {
                this.o = e, this.t = !t._oN || we(t._oN) ? sr(t._oN || me, t._oE || me, t._oC || me) : t._oN, this.isStopped = !1, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this.source.subscribe(new r(e, this))
            }, _t(r, ur), r.prototype.next = function(e) {
                var t = Ee(this.t.onNext).call(this.t, e);
                t === Ce && this.o.onError(t.e), this.o.onNext(e)
            }, r.prototype.error = function(e) {
                var t = Ee(this.t.onError).call(this.t, e);
                return t === Ce ? this.o.onError(t.e) : void this.o.onError(e)
            }, r.prototype.completed = function() {
                var e = Ee(this.t.onCompleted).call(this.t);
                return e === Ce ? this.o.onError(e.e) : void this.o.onCompleted()
            }, t
        }(pr);
        $t["do"] = $t.tap = $t.doAction = function(e, t, r) {
            return new wn(this, e, t, r)
        }, $t.doOnNext = $t.tapOnNext = function(e, t) {
            return this.tap("undefined" != typeof t ? function(r) {
                e.call(t, r)
            } : e)
        }, $t.doOnError = $t.tapOnError = function(e, t) {
            return this.tap(me, "undefined" != typeof t ? function(r) {
                e.call(t, r)
            } : e)
        }, $t.doOnCompleted = $t.tapOnCompleted = function(e, t) {
            return this.tap(me, null, "undefined" != typeof t ? function() {
                e.call(t)
            } : e)
        };
        var Cn = function(e) {
            function t(t, r, n) {
                this.source = t, this._fn = Ue(r, n, 0), e.call(this)
            }

            function r(e, t) {
                this.isDisposed = !1, this._s = e, this._fn = t
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                var t = Ee(this.source.subscribe).call(this.source, e);
                return t === Ce && (this._fn(), a(t.e)), new r(t, this._fn)
            }, r.prototype.dispose = function() {
                if (!this.isDisposed) {
                    var e = Ee(this._s.dispose).call(this._s);
                    this._fn(), e === Ce && a(e.e)
                }
            }, t
        }(pr);
        $t["finally"] = function(e, t) {
            return new Cn(this, e, t)
        };
        var En = function(e) {
            function t(t) {
                this.source = t, e.call(this)
            }

            function r(e) {
                this.o = e, this.isStopped = !1
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this.source.subscribe(new r(e))
            }, r.prototype.onNext = me, r.prototype.onError = function(e) {
                this.isStopped || (this.isStopped = !0, this.o.onError(e))
            }, r.prototype.onCompleted = function() {
                this.isStopped || (this.isStopped = !0, this.o.onCompleted())
            }, r.prototype.dispose = function() {
                this.isStopped = !0
            }, r.prototype.fail = function(e) {
                return this.isStopped ? !1 : (this.isStopped = !0, this.observer.onError(e), !0)
            }, t
        }(pr);
        $t.ignoreElements = function() {
            return new En(this)
        };
        var Sn = function(e) {
                function t(t, r) {
                    this.source = t, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new Tn(e))
                }, t
            }(pr),
            Tn = function(e) {
                function t(t) {
                    this._o = t, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._o.onNext(nr(e))
                }, t.prototype.error = function(e) {
                    this._o.onNext(ir(e)), this._o.onCompleted()
                }, t.prototype.completed = function() {
                    this._o.onNext(or()), this._o.onCompleted()
                }, t
            }(ur);
        $t.materialize = function() {
            return new Sn(this)
        }, $t.repeat = function(e) {
            return yr(this, e).concat()
        }, $t.retry = function(e) {
            return yr(this, e).catchError()
        };
        var Mn = function(e) {
            function t(e) {
                return {
                    isDisposed: !1,
                    dispose: function() {
                        this.isDisposed || (this.isDisposed = !0, e.isDisposed = !0)
                    }
                }
            }

            function r(t, r) {
                this.source = t, this._notifier = r, e.call(this)
            }
            return _t(r, e), r.prototype.subscribeCore = function(e) {
                var r, n = new fi,
                    i = new fi,
                    o = this._notifier(n),
                    a = o.subscribe(i),
                    s = this.source["@@iterator"](),
                    u = {
                        isDisposed: !1
                    },
                    l = new It,
                    c = Gt.scheduleRecursive(null, function(t, o) {
                        if (!u.isDisposed) {
                            var a = s.next();
                            if (a.done) return void(r ? e.onError(r) : e.onCompleted());
                            var c = a.value;
                            _e(c) && (c = Wn(c));
                            var h = new kt,
                                p = new kt;
                            l.setDisposable(new Dt(p, h)), h.setDisposable(c.subscribe(function(t) {
                                e.onNext(t)
                            }, function(t) {
                                p.setDisposable(i.subscribe(o, function(t) {
                                    e.onError(t)
                                }, function() {
                                    e.onCompleted()
                                })), n.onNext(t), h.dispose()
                            }, function() {
                                e.onCompleted()
                            }))
                        }
                    });
                return new Bt([a, l, c, t(u)])
            }, r
        }(pr);
        $t.retryWhen = function(e) {
            return new Mn(F(this), e)
        };
        var An = function(e) {
            function t(e) {
                return {
                    isDisposed: !1,
                    dispose: function() {
                        this.isDisposed || (this.isDisposed = !0, e.isDisposed = !0)
                    }
                }
            }

            function r(t, r) {
                this.source = t, this._notifier = r, e.call(this)
            }
            return _t(r, e), r.prototype.subscribeCore = function(e) {
                var r, n = new fi,
                    i = new fi,
                    o = this._notifier(n),
                    a = o.subscribe(i),
                    s = this.source["@@iterator"](),
                    u = {
                        isDisposed: !1
                    },
                    l = new It,
                    c = Gt.scheduleRecursive(null, function(t, o) {
                        if (!u.isDisposed) {
                            var a = s.next();
                            if (a.done) return void(r ? e.onError(r) : e.onCompleted());
                            var c = a.value;
                            _e(c) && (c = Wn(c));
                            var h = new kt,
                                p = new kt;
                            l.setDisposable(new Dt(p, h)), h.setDisposable(c.subscribe(function(t) {
                                e.onNext(t)
                            }, function(t) {
                                e.onError(t)
                            }, function() {
                                p.setDisposable(i.subscribe(o, function(t) {
                                    e.onError(t)
                                }, function() {
                                    e.onCompleted()
                                })), n.onNext(null), h.dispose()
                            }))
                        }
                    });
                return new Bt([a, l, c, t(u)])
            }, r
        }(pr);
        $t.repeatWhen = function(e) {
            return new An(F(this), e)
        };
        var Pn = function(e) {
                function t(t, r, n, i) {
                    this.source = t, this.accumulator = r, this.hasSeed = n, this.seed = i, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new Rn(e, this))
                }, t
            }(pr),
            Rn = function(e) {
                function t(t, r) {
                    this._o = t, this._p = r, this._fn = r.accumulator, this._hs = r.hasSeed, this._s = r.seed, this._ha = !1, this._a = null, this._hv = !1, this._i = 0, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    return !this._hv && (this._hv = !0), this._ha ? this._a = Ee(this._fn)(this._a, e, this._i, this._p) : (this._a = this._hs ? Ee(this._fn)(this._s, e, this._i, this._p) : e, this._ha = !0), this._a === Ce ? this._o.onError(this._a.e) : (this._o.onNext(this._a), void this._i++)
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    !this._hv && this._hs && this._o.onNext(this._s), this._o.onCompleted()
                }, t
            }(ur);
        $t.scan = function() {
            var e, t = !1,
                r = arguments[0];
            return 2 === arguments.length && (t = !0, e = arguments[1]), new Pn(this, r, t, e)
        };
        var kn = function(e) {
                function t(t, r) {
                    this.source = t, this._c = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new In(e, this._c))
                }, t
            }(pr),
            In = function(e) {
                function t(t, r) {
                    this._o = t, this._c = r, this._q = [], e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._q.push(e), this._q.length > this._c && this._o.onNext(this._q.shift())
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._o.onCompleted()
                }, t
            }(ur);
        $t.skipLast = function(e) {
            if (0 > e) throw new Ie;
            return new kn(this, e)
        }, $t.startWith = function() {
            var e, t = 0;
            arguments.length && Ot(arguments[0]) ? (e = arguments[0], t = 1) : e = Ht;
            for (var r = [], n = t, i = arguments.length; i > n; n++) r.push(arguments[n]);
            return Kr.apply(null, [kr(r, e), this])
        };
        var Dn = function(e) {
            function t(t, r) {
                this._o = t, this._c = r, this._q = [], e.call(this)
            }
            return _t(t, e), t.prototype.next = function(e) {
                this._q.push(e), this._q.length > this._c && this._q.shift()
            }, t.prototype.error = function(e) {
                this._o.onError(e)
            }, t.prototype.completed = function() {
                for (; this._q.length > 0;) this._o.onNext(this._q.shift());
                this._o.onCompleted()
            }, t
        }(ur);
        $t.takeLast = function(e) {
            if (0 > e) throw new Ie;
            var t = this;
            return new hi(function(r) {
                return t.subscribe(new Dn(r, e))
            }, t)
        }, $t.flatMapConcat = $t.concatMap = function(e, t, r) {
            return new dr(this, e, t, r).merge(1)
        };
        var Bn = function(e) {
            function t(t, r, n) {
                this.source = t, this.selector = Ue(r, n, 3), e.call(this)
            }

            function r(e, t) {
                return function(r, n, i) {
                    return e.call(this, t.selector(r, n, i), n, i)
                }
            }

            function n(e, t, r) {
                this.o = e, this.selector = t, this.source = r, this.i = 0, ur.call(this)
            }
            return _t(t, e), t.prototype.internalMap = function(e, n) {
                return new t(this.source, r(e, this), n)
            }, t.prototype.subscribeCore = function(e) {
                return this.source.subscribe(new n(e, this.selector, this))
            }, _t(n, ur), n.prototype.next = function(e) {
                var t = Ee(this.selector)(e, this.i++, this.source);
                return t === Ce ? this.o.onError(t.e) : void this.o.onNext(t)
            }, n.prototype.error = function(e) {
                this.o.onError(e)
            }, n.prototype.completed = function() {
                this.o.onCompleted()
            }, t
        }(pr);
        $t.map = $t.select = function(e, t) {
            var r = "function" == typeof e ? e : function() {
                return e
            };
            return this instanceof Bn ? this.internalMap(r, t) : new Bn(this, r, t)
        }, $t.pluck = function() {
            var e = arguments.length,
                t = new Array(e);
            if (0 === e) throw new Error("List of properties cannot be empty.");
            for (var r = 0; e > r; r++) t[r] = arguments[r];
            return this.map(U(t, e))
        }, $t.flatMap = $t.selectMany = $t.mergeMap = function(e, t, r) {
            return new dr(this, e, t, r).mergeAll()
        }, $t.flatMapLatest = $t.switchMap = function(e, t, r) {
            return new dr(this, e, t, r).switchLatest()
        };
        var Ln = function(e) {
            function t(t, r) {
                this.source = t, this._count = r, e.call(this)
            }

            function r(e, t) {
                this._o = e, this._r = t, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this.source.subscribe(new r(e, this._count))
            }, _t(r, ur), r.prototype.next = function(e) {
                this._r <= 0 ? this._o.onNext(e) : this._r--
            }, r.prototype.error = function(e) {
                this._o.onError(e)
            }, r.prototype.completed = function() {
                this._o.onCompleted()
            }, t
        }(pr);
        $t.skip = function(e) {
            if (0 > e) throw new Ie;
            return new Ln(this, e)
        };
        var Vn = function(e) {
                function t(t, r) {
                    this.source = t, this._fn = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new Nn(e, this))
                }, t
            }(pr),
            Nn = function(e) {
                function t(t, r) {
                    this._o = t, this._p = r, this._i = 0, this._r = !1, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    if (!this._r) {
                        var t = Ee(this._p._fn)(e, this._i++, this._p);
                        if (t === Ce) return this._o.onError(t.e);
                        this._r = !t
                    }
                    this._r && this._o.onNext(e)
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._o.onCompleted()
                }, t
            }(ur);
        $t.skipWhile = function(e, t) {
            var r = Ue(e, t, 3);
            return new Vn(this, r)
        };
        var On = function(e) {
            function t(t, r) {
                this.source = t, this._count = r, e.call(this)
            }

            function r(e, t) {
                this._o = e, this._c = t, this._r = t, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this.source.subscribe(new r(e, this._count))
            }, _t(r, ur), r.prototype.next = function(e) {
                this._r-- > 0 && (this._o.onNext(e), this._r <= 0 && this._o.onCompleted())
            }, r.prototype.error = function(e) {
                this._o.onError(e)
            }, r.prototype.completed = function() {
                this._o.onCompleted()
            }, t
        }(pr);
        $t.take = function(e, t) {
            if (0 > e) throw new Ie;
            return 0 === e ? Tr(t) : new On(this, e)
        };
        var Fn = function(e) {
                function t(t, r) {
                    this.source = t, this._fn = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new Un(e, this))
                }, t
            }(pr),
            Un = function(e) {
                function t(t, r) {
                    this._o = t, this._p = r, this._i = 0, this._r = !0, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    return this._r && (this._r = Ee(this._p._fn)(e, this._i++, this._p), this._r === Ce) ? this._o.onError(this._r.e) : void(this._r ? this._o.onNext(e) : this._o.onCompleted())
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._o.onCompleted()
                }, t
            }(ur);
        $t.takeWhile = function(e, t) {
            var r = Ue(e, t, 3);
            return new Fn(this, r)
        };
        var zn = function(e) {
            function t(t, r, n) {
                this.source = t, this.predicate = Ue(r, n, 3), e.call(this)
            }

            function r(e, t) {
                return function(r, n, i) {
                    return t.predicate(r, n, i) && e.call(this, r, n, i)
                }
            }

            function n(e, t, r) {
                this.o = e, this.predicate = t, this.source = r, this.i = 0, ur.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return this.source.subscribe(new n(e, this.predicate, this))
            }, t.prototype.internalFilter = function(e, n) {
                return new t(this.source, r(e, this), n)
            }, _t(n, ur), n.prototype.next = function(e) {
                var t = Ee(this.predicate)(e, this.i++, this.source);
                return t === Ce ? this.o.onError(t.e) : void(t && this.o.onNext(e))
            }, n.prototype.error = function(e) {
                this.o.onError(e)
            }, n.prototype.completed = function() {
                this.o.onCompleted()
            }, t
        }(pr);
        $t.filter = $t.where = function(e, t) {
            return this instanceof zn ? this.internalFilter(e, t) : new zn(this, e, t)
        }, cr.fromCallback = function(e, t, r) {
            return function() {
                "undefined" == typeof t && (t = this);
                for (var n = arguments.length, i = new Array(n), o = 0; n > o; o++) i[o] = arguments[o];
                return z(e, t, r, i)
            }
        }, cr.fromNodeCallback = function(e, t, r) {
            return function() {
                "undefined" == typeof t && (t = this);
                for (var n = arguments.length, i = new Array(n), o = 0; n > o; o++) i[o] = arguments[o];
                return j(e, t, r, i)
            }
        }, W.prototype.dispose = function() {
            this.isDisposed || (this._e.removeEventListener(this._n, this._fn, !1), this.isDisposed = !0)
        }, fe.config.useNativeEvents = !1;
        var Hn = function(e) {
            function t(t, r, n) {
                this._el = t, this._n = r, this._fn = n, e.call(this)
            }

            function r(e, t) {
                return function() {
                    var r = arguments[0];
                    return we(t) && (r = Ee(t).apply(null, arguments), r === Ce) ? e.onError(r.e) : void e.onNext(r)
                }
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                return X(this._el, this._n, r(e, this._fn))
            }, t
        }(pr);
        cr.fromEvent = function(e, t, r) {
            return e.addListener ? Gn(function(r) {
                e.addListener(t, r)
            }, function(r) {
                e.removeListener(t, r)
            }, r) : fe.config.useNativeEvents || "function" != typeof e.on || "function" != typeof e.off ? new Hn(e, t, r).publish().refCount() : Gn(function(r) {
                e.on(t, r)
            }, function(r) {
                e.off(t, r)
            }, r)
        };
        var jn = function(e) {
                function t(t, r, n) {
                    this._add = t, this._del = r, this._fn = n, e.call(this)
                }

                function r(e, t) {
                    return function() {
                        var r = arguments[0];
                        return we(t) && (r = Ee(t).apply(null, arguments), r === Ce) ? e.onError(r.e) : void e.onNext(r)
                    }
                }

                function n(e, t, r) {
                    this._del = e, this._fn = t, this._ret = r, this.isDisposed = !1
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = r(e, this._fn),
                        i = this._add(t);
                    return new n(this._del, t, i)
                }, n.prototype.dispose = function() {
                    this.isDisposed || (we(this._del) && this._del(this._fn, this._ret), this.isDisposed = !0)
                }, t
            }(pr),
            Gn = cr.fromEventPattern = function(e, t, r) {
                return new jn(e, t, r).publish().refCount()
            },
            qn = function(e) {
                function t(t, r) {
                    this._p = t, this._s = r, e.call(this)
                }

                function r(e, t) {
                    var r = t[0],
                        n = t[1];
                    r.onNext(n), r.onCompleted()
                }

                function n(e, t) {
                    var r = t[0],
                        n = t[1];
                    r.onError(n)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new kt,
                        i = this,
                        o = this._p;
                    return we(o) && (o = Ee(o)(), o === Ce) ? (e.onError(o.e), t) : (o.then(function(n) {
                        t.setDisposable(i._s.schedule([e, n], r))
                    }, function(r) {
                        t.setDisposable(i._s.schedule([e, r], n))
                    }), t)
                }, t
            }(pr),
            Wn = cr.fromPromise = function(e, t) {
                return t || (t = Kt), new qn(e, t)
            };
        $t.toPromise = function(e) {
            if (e || (e = fe.config.Promise), !e) throw new De("Promise type not provided nor in Rx.config.Promise");
            var t = this;
            return new e(function(e, r) {
                var n;
                t.subscribe(function(e) {
                    n = e
                }, r, function() {
                    e(n)
                })
            })
        }, cr.startAsync = function(e) {
            var t = Ee(e)();
            return t === Ce ? Ur(t.e) : Wn(t)
        };
        var Xn = function(e) {
            function t(t, r, n) {
                this.source = t, this._fn1 = r, this._fn2 = n, e.call(this)
            }
            return _t(t, e), t.prototype.subscribeCore = function(e) {
                var t = this.source.multicast(this._fn1());
                return new Dt(this._fn2(t).subscribe(e), t.connect())
            }, t
        }(pr);
        $t.multicast = function(e, t) {
            return we(e) ? new Xn(this, e, t) : new Kn(this, e)
        }, $t.publish = function(e) {
            return e && we(e) ? this.multicast(function() {
                return new fi
            }, e) : this.multicast(new fi)
        }, $t.share = function() {
            return this.publish().refCount()
        }, $t.publishLast = function(e) {
            return e && we(e) ? this.multicast(function() {
                return new mi
            }, e) : this.multicast(new mi)
        }, $t.publishValue = function(e, t) {
            return 2 === arguments.length ? this.multicast(function() {
                return new gi(t)
            }, e) : this.multicast(new gi(e))
        }, $t.shareValue = function(e) {
            return this.publishValue(e).refCount()
        }, $t.replay = function(e, t, r, n) {
            return e && we(e) ? this.multicast(function() {
                return new yi(t, r, n)
            }, e) : this.multicast(new yi(t, r, n))
        }, $t.shareReplay = function(e, t, r) {
            return this.replay(null, e, t, r).refCount()
        };
        var Yn = function(e) {
                function t(t) {
                    this.source = t, this._count = 0, this._connectableSubscription = null, e.call(this)
                }

                function r(e, t) {
                    this._p = e, this._s = t, this.isDisposed = !1
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = this.source.subscribe(e);
                    return 1 === ++this._count && (this._connectableSubscription = this.source.connect()), new r(this, t)
                }, r.prototype.dispose = function() {
                    this.isDisposed || (this.isDisposed = !0, this._s.dispose(), 0 === --this._p._count && this._p._connectableSubscription.dispose())
                }, t
            }(pr),
            Kn = fe.ConnectableObservable = function(e) {
                function t(t, r) {
                    this.source = t, this._connection = null, this._source = t.asObservable(), this._subject = r, e.call(this)
                }

                function r(e, t) {
                    this._p = e, this._s = t
                }
                return _t(t, e), r.prototype.dispose = function() {
                    this._s && (this._s.dispose(), this._s = null, this._p._connection = null)
                }, t.prototype.connect = function() {
                    if (!this._connection) {
                        if (this._subject.isStopped) return Mt;
                        var e = this._source.subscribe(this._subject);
                        this._connection = new r(this, e)
                    }
                    return this._connection
                }, t.prototype._subscribe = function(e) {
                    return this._subject.subscribe(e)
                }, t.prototype.refCount = function() {
                    return new Yn(this)
                }, t
            }(cr),
            Qn = function(e) {
                function t(t, r) {
                    this._dt = t,
                        this._s = r, e.call(this)
                }

                function r(e, t) {
                    t.onNext(0), t.onCompleted()
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this._s.scheduleFuture(e, this._dt, r)
                }, t
            }(pr),
            Zn = cr.interval = function(e, t) {
                return Q(e, e, Ot(t) ? t : Kt)
            };
        cr.timer = function(e, t, n) {
            var i;
            return Ot(n) || (n = Kt), null != t && "number" == typeof t ? i = t : Ot(t) && (n = t), (e instanceof Date || "number" == typeof e) && i === r ? Y(e, n) : e instanceof Date && i !== r ? K(e, t, n) : Q(e, i, n)
        };
        $t.delay = function() {
            var e = arguments[0];
            if ("number" == typeof e || e instanceof Date) {
                var t = e,
                    r = arguments[1];
                return Ot(r) || (r = Kt), t instanceof Date ? $(this, t, r) : Z(this, t, r)
            }
            if (cr.isObservable(e) || we(e)) return J(this, e, arguments[1]);
            throw new Error("Invalid arguments")
        };
        var $n = function(e) {
                function t(t, r, n) {
                    Ot(n) || (n = Kt), this.source = t, this._dt = r, this._s = n, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = new It;
                    return new Dt(this.source.subscribe(new Jn(e, this._dt, this._s, t)), t)
                }, t
            }(pr),
            Jn = function(e) {
                function t(t, r, n, i) {
                    this._o = t, this._d = r, this._scheduler = n, this._c = i, this._v = null, this._hv = !1, this._id = 0, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._hv = !0, this._v = e;
                    var t = ++this._id,
                        r = new kt;
                    this._c.setDisposable(r), r.setDisposable(this._scheduler.scheduleFuture(this, this._d, function(r, n) {
                        n._hv && n._id === t && n._o.onNext(e), n._hv = !1
                    }))
                }, t.prototype.error = function(e) {
                    this._c.dispose(), this._o.onError(e), this._hv = !1, this._id++
                }, t.prototype.completed = function() {
                    this._c.dispose(), this._hv && this._o.onNext(this._v), this._o.onCompleted(), this._hv = !1, this._id++
                }, t
            }(ur);
        $t.debounce = function() {
            if (we(arguments[0])) return ee(this, arguments[0]);
            if ("number" == typeof arguments[0]) return new $n(this, arguments[0], arguments[1]);
            throw new Error("Invalid arguments")
        };
        var ei = function(e) {
                function t(t, r) {
                    this.source = t, this._s = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    return this.source.subscribe(new ti(e, this._s))
                }, t
            }(pr),
            ti = function(e) {
                function t(t, r) {
                    this._o = t, this._s = r, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._o.onNext({
                        value: e,
                        timestamp: this._s.now()
                    })
                }, t.prototype.error = function(e) {
                    this._o.onError(e)
                }, t.prototype.completed = function() {
                    this._o.onCompleted()
                }, t
            }(ur);
        $t.timestamp = function(e) {
            return Ot(e) || (e = Kt), new ei(this, e)
        };
        var ri = function(e) {
                function t(t, r) {
                    this.source = t, this._sampler = r, e.call(this)
                }
                return _t(t, e), t.prototype.subscribeCore = function(e) {
                    var t = {
                        o: e,
                        atEnd: !1,
                        value: null,
                        hasValue: !1,
                        sourceSubscription: new kt
                    };
                    return t.sourceSubscription.setDisposable(this.source.subscribe(new ii(t))), new Dt(t.sourceSubscription, this._sampler.subscribe(new ni(t)))
                }, t
            }(pr),
            ni = function(e) {
                function t(t) {
                    this._s = t, e.call(this)
                }
                return _t(t, e), t.prototype._handleMessage = function() {
                    this._s.hasValue && (this._s.hasValue = !1, this._s.o.onNext(this._s.value)), this._s.atEnd && this._s.o.onCompleted()
                }, t.prototype.next = function() {
                    this._handleMessage()
                }, t.prototype.error = function(e) {
                    this._s.onError(e)
                }, t.prototype.completed = function() {
                    this._handleMessage()
                }, t
            }(ur),
            ii = function(e) {
                function t(t) {
                    this._s = t, e.call(this)
                }
                return _t(t, e), t.prototype.next = function(e) {
                    this._s.hasValue = !0, this._s.value = e
                }, t.prototype.error = function(e) {
                    this._s.o.onError(e)
                }, t.prototype.completed = function() {
                    this._s.atEnd = !0, this._s.sourceSubscription.dispose()
                }, t
            }(ur);
        $t.sample = function(e, t) {
            return Ot(t) || (t = Kt), "number" == typeof e ? new ri(this, Zn(e, t)) : new ri(this, e)
        };
        var oi = fe.TimeoutError = function(e) {
            this.message = e || "Timeout has occurred", this.name = "TimeoutError", Error.call(this)
        };
        oi.prototype = Object.create(Error.prototype), $t.timeout = function() {
            var e = arguments[0];
            if (e instanceof Date || "number" == typeof e) return re(this, e, arguments[1], arguments[2]);
            if (cr.isObservable(e) || we(e)) return te(this, e, arguments[1], arguments[2]);
            throw new Error("Invalid arguments")
        }, $t.throttle = function(e, t) {
            Ot(t) || (t = Kt);
            var r = +e || 0;
            if (0 >= r) throw new RangeError("windowDuration cannot be less or equal zero.");
            var n = this;
            return new hi(function(e) {
                var i = 0;
                return n.subscribe(function(n) {
                    var o = t.now();
                    (0 === i || o - i >= r) && (i = o, e.onNext(n))
                }, function(t) {
                    e.onError(t)
                }, function() {
                    e.onCompleted()
                })
            }, n)
        };
        var ai = function(e) {
            function t(t, r) {
                this.source = t, this.controller = new fi, this.paused = !0, r && r.subscribe ? this.pauser = this.controller.merge(r) : this.pauser = this.controller, e.call(this)
            }
            return _t(t, e), t.prototype._subscribe = function(e) {
                var t = this.source.publish(),
                    r = t.subscribe(e),
                    n = Mt,
                    i = this.pauser.startWith(!this.paused).distinctUntilChanged().subscribe(function(e) {
                        e ? n = t.connect() : (n.dispose(), n = Mt)
                    });
                return new Bt([r, n, i])
            }, t.prototype.pause = function() {
                this.paused = !0, this.controller.onNext(!1)
            }, t.prototype.resume = function() {
                this.paused = !1, this.controller.onNext(!0)
            }, t
        }(cr);
        $t.pausable = function(e) {
            return new ai(this, e)
        };
        var si = function(e) {
            function t(t, r) {
                this.source = t, this.controller = new fi, this.paused = !0, r && r.subscribe ? this.pauser = this.controller.merge(r) : this.pauser = this.controller, e.call(this)
            }
            return _t(t, e), t.prototype._subscribe = function(e) {
                function t() {
                    for (; i.length > 0;) e.onNext(i.shift())
                }
                var n, i = [],
                    o = ne(this.source, this.pauser.startWith(!this.paused).distinctUntilChanged(), function(e, t) {
                        return {
                            data: e,
                            shouldFire: t
                        }
                    }).subscribe(function(o) {
                        n !== r && o.shouldFire !== n ? (n = o.shouldFire, o.shouldFire && t()) : (n = o.shouldFire, o.shouldFire ? e.onNext(o.data) : i.push(o.data))
                    }, function(r) {
                        t(), e.onError(r)
                    }, function() {
                        t(), e.onCompleted()
                    });
                return o
            }, t.prototype.pause = function() {
                this.paused = !0, this.controller.onNext(!1)
            }, t.prototype.resume = function() {
                this.paused = !1, this.controller.onNext(!0)
            }, t
        }(cr);
        $t.pausableBuffered = function(e) {
            return new si(this, e)
        };
        var ui = function(e) {
                function t(t, r, n) {
                    e.call(this), this.subject = new li(r, n), this.source = t.multicast(this.subject).refCount()
                }
                return _t(t, e), t.prototype._subscribe = function(e) {
                    return this.source.subscribe(e)
                }, t.prototype.request = function(e) {
                    return this.subject.request(null == e ? -1 : e)
                }, t
            }(cr),
            li = function(e) {
                function t(t, r) {
                    null == t && (t = !0), e.call(this), this.subject = new fi, this.enableQueue = t, this.queue = t ? [] : null, this.requestedCount = 0, this.requestedDisposable = null, this.error = null, this.hasFailed = !1, this.hasCompleted = !1, this.scheduler = r || Gt
                }
                return _t(t, e), wt(t.prototype, ar, {
                    _subscribe: function(e) {
                        return this.subject.subscribe(e)
                    },
                    onCompleted: function() {
                        this.hasCompleted = !0, this.enableQueue && 0 !== this.queue.length ? this.queue.push(Jt.createOnCompleted()) : (this.subject.onCompleted(), this.disposeCurrentRequest())
                    },
                    onError: function(e) {
                        this.hasFailed = !0, this.error = e, this.enableQueue && 0 !== this.queue.length ? this.queue.push(Jt.createOnError(e)) : (this.subject.onError(e), this.disposeCurrentRequest())
                    },
                    onNext: function(e) {
                        this.requestedCount <= 0 ? this.enableQueue && this.queue.push(Jt.createOnNext(e)) : (0 === this.requestedCount-- && this.disposeCurrentRequest(), this.subject.onNext(e))
                    },
                    _processRequest: function(e) {
                        if (this.enableQueue)
                            for (; this.queue.length > 0 && (e > 0 || "N" !== this.queue[0].kind);) {
                                var t = this.queue.shift();
                                t.accept(this.subject), "N" === t.kind ? e-- : (this.disposeCurrentRequest(), this.queue = [])
                            }
                        return e
                    },
                    request: function(e) {
                        this.disposeCurrentRequest();
                        var t = this;
                        return this.requestedDisposable = this.scheduler.schedule(e, function(e, r) {
                            var n = t._processRequest(r),
                                i = t.hasCompleted || t.hasFailed;
                            return !i && n > 0 ? (t.requestedCount = n, Tt(function() {
                                t.requestedCount = 0
                            })) : void 0
                        }), this.requestedDisposable
                    },
                    disposeCurrentRequest: function() {
                        this.requestedDisposable && (this.requestedDisposable.dispose(), this.requestedDisposable = null)
                    }
                }), t
            }(cr);
        $t.controlled = function(e, t) {
            return e && Ot(e) && (t = e, e = !0), null == e && (e = !0), new ui(this, e, t)
        }, $t.pipe = function(e) {
            function t() {
                r.resume()
            }
            var r = this.pausableBuffered();
            return e.addListener("drain", t), r.subscribe(function(t) {
                !e.write(t) && r.pause()
            }, function(t) {
                e.emit("error", t)
            }, function() {
                !e._isStdio && e.end(), e.removeListener("drain", t)
            }), r.resume(), e
        };
        var ci = function(e) {
            function t(t, r) {
                this._o = t, this._xform = r, e.call(this)
            }
            return _t(t, e), t.prototype.next = function(e) {
                var t = Ee(this._xform["@@transducer/step"]).call(this._xform, this._o, e);
                t === Ce && this._o.onError(t.e)
            }, t.prototype.error = function(e) {
                this._o.onError(e)
            }, t.prototype.completed = function() {
                this._xform["@@transducer/result"](this._o)
            }, t
        }(ur);
        $t.transduce = function(e) {
            var t = this;
            return new hi(function(r) {
                var n = e(ie(r));
                return t.subscribe(new ci(r, n))
            }, t)
        };
        var hi = fe.AnonymousObservable = function(e) {
                function t(e) {
                    return e && we(e.dispose) ? e : we(e) ? Tt(e) : Mt
                }

                function r(e, r) {
                    var n = r[0],
                        i = r[1],
                        o = Ee(i.__subscribe).call(i, n);
                    o !== Ce || n.fail(Ce.e) || a(Ce.e), n.setDisposable(t(o))
                }

                function n(t, r) {
                    this.source = r, this.__subscribe = t, e.call(this)
                }
                return _t(n, e), n.prototype._subscribe = function(e) {
                    var t = new pi(e),
                        n = [t, this];
                    return Gt.scheduleRequired() ? Gt.schedule(n, r) : r(null, n), t
                }, n
            }(cr),
            pi = function(e) {
                function t(t) {
                    e.call(this), this.observer = t, this.m = new kt
                }
                _t(t, e);
                var r = t.prototype;
                return r.next = function(e) {
                    var t = Ee(this.observer.onNext).call(this.observer, e);
                    t === Ce && (this.dispose(), a(t.e))
                }, r.error = function(e) {
                    var t = Ee(this.observer.onError).call(this.observer, e);
                    this.dispose(), t === Ce && a(t.e)
                }, r.completed = function() {
                    var e = Ee(this.observer.onCompleted).call(this.observer);
                    this.dispose(), e === Ce && a(e.e)
                }, r.setDisposable = function(e) {
                    this.m.setDisposable(e)
                }, r.getDisposable = function() {
                    return this.m.getDisposable()
                }, r.dispose = function() {
                    e.prototype.dispose.call(this), this.m.dispose()
                }, t
            }(ur),
            di = function(e, t) {
                this._s = e, this._o = t
            };
        di.prototype.dispose = function() {
            if (!this._s.isDisposed && null !== this._o) {
                var e = this._s.observers.indexOf(this._o);
                this._s.observers.splice(e, 1), this._o = null
            }
        };
        var fi = fe.Subject = function(e) {
                function t() {
                    e.call(this), this.isDisposed = !1, this.isStopped = !1, this.observers = [], this.hasError = !1
                }
                return _t(t, e), wt(t.prototype, ar.prototype, {
                    _subscribe: function(e) {
                        return Pt(this), this.isStopped ? this.hasError ? (e.onError(this.error), Mt) : (e.onCompleted(), Mt) : (this.observers.push(e), new di(this, e))
                    },
                    hasObservers: function() {
                        return Pt(this), this.observers.length > 0
                    },
                    onCompleted: function() {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0;
                            for (var e = 0, t = i(this.observers), r = t.length; r > e; e++) t[e].onCompleted();
                            this.observers.length = 0
                        }
                    },
                    onError: function(e) {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0, this.error = e, this.hasError = !0;
                            for (var t = 0, r = i(this.observers), n = r.length; n > t; t++) r[t].onError(e);
                            this.observers.length = 0
                        }
                    },
                    onNext: function(e) {
                        if (Pt(this), !this.isStopped)
                            for (var t = 0, r = i(this.observers), n = r.length; n > t; t++) r[t].onNext(e)
                    },
                    dispose: function() {
                        this.isDisposed = !0, this.observers = null
                    }
                }), t.create = function(e, t) {
                    return new vi(e, t)
                }, t
            }(cr),
            mi = fe.AsyncSubject = function(e) {
                function t() {
                    e.call(this), this.isDisposed = !1, this.isStopped = !1, this.hasValue = !1, this.observers = [], this.hasError = !1
                }
                return _t(t, e), wt(t.prototype, ar.prototype, {
                    _subscribe: function(e) {
                        return Pt(this), this.isStopped ? (this.hasError ? e.onError(this.error) : this.hasValue ? (e.onNext(this.value), e.onCompleted()) : e.onCompleted(), Mt) : (this.observers.push(e), new di(this, e))
                    },
                    hasObservers: function() {
                        return Pt(this), this.observers.length > 0
                    },
                    onCompleted: function() {
                        var e, t;
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0;
                            var r = i(this.observers),
                                t = r.length;
                            if (this.hasValue)
                                for (e = 0; t > e; e++) {
                                    var n = r[e];
                                    n.onNext(this.value), n.onCompleted()
                                } else
                                    for (e = 0; t > e; e++) r[e].onCompleted();
                            this.observers.length = 0
                        }
                    },
                    onError: function(e) {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0, this.hasError = !0, this.error = e;
                            for (var t = 0, r = i(this.observers), n = r.length; n > t; t++) r[t].onError(e);
                            this.observers.length = 0
                        }
                    },
                    onNext: function(e) {
                        Pt(this), this.isStopped || (this.value = e, this.hasValue = !0)
                    },
                    dispose: function() {
                        this.isDisposed = !0, this.observers = null, this.error = null, this.value = null
                    }
                }), t
            }(cr),
            vi = fe.AnonymousSubject = function(e) {
                function t(t, r) {
                    this.observer = t, this.observable = r, e.call(this)
                }
                return _t(t, e), wt(t.prototype, ar.prototype, {
                    _subscribe: function(e) {
                        return this.observable.subscribe(e)
                    },
                    onCompleted: function() {
                        this.observer.onCompleted()
                    },
                    onError: function(e) {
                        this.observer.onError(e)
                    },
                    onNext: function(e) {
                        this.observer.onNext(e)
                    }
                }), t
            }(cr),
            gi = fe.BehaviorSubject = function(e) {
                function t(t) {
                    e.call(this), this.value = t, this.observers = [], this.isDisposed = !1, this.isStopped = !1, this.hasError = !1
                }
                return _t(t, e), wt(t.prototype, ar.prototype, {
                    _subscribe: function(e) {
                        return Pt(this), this.isStopped ? (this.hasError ? e.onError(this.error) : e.onCompleted(), Mt) : (this.observers.push(e), e.onNext(this.value), new di(this, e))
                    },
                    getValue: function() {
                        return Pt(this), this.hasError && a(this.error), this.value
                    },
                    hasObservers: function() {
                        return Pt(this), this.observers.length > 0
                    },
                    onCompleted: function() {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0;
                            for (var e = 0, t = i(this.observers), r = t.length; r > e; e++) t[e].onCompleted();
                            this.observers.length = 0
                        }
                    },
                    onError: function(e) {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0, this.hasError = !0, this.error = e;
                            for (var t = 0, r = i(this.observers), n = r.length; n > t; t++) r[t].onError(e);
                            this.observers.length = 0
                        }
                    },
                    onNext: function(e) {
                        if (Pt(this), !this.isStopped) {
                            this.value = e;
                            for (var t = 0, r = i(this.observers), n = r.length; n > t; t++) r[t].onNext(e)
                        }
                    },
                    dispose: function() {
                        this.isDisposed = !0, this.observers = null, this.value = null, this.error = null
                    }
                }), t
            }(cr),
            yi = fe.ReplaySubject = function(e) {
                function t(e, t) {
                    return Tt(function() {
                        t.dispose(), !e.isDisposed && e.observers.splice(e.observers.indexOf(t), 1)
                    })
                }

                function r(t, r, i) {
                    this.bufferSize = null == t ? n : t, this.windowSize = null == r ? n : r, this.scheduler = i || Gt, this.q = [], this.observers = [], this.isStopped = !1, this.isDisposed = !1, this.hasError = !1, this.error = null, e.call(this)
                }
                var n = Math.pow(2, 53) - 1;
                return _t(r, e), wt(r.prototype, ar.prototype, {
                    _subscribe: function(e) {
                        Pt(this);
                        var r = new hr(this.scheduler, e),
                            n = t(this, r);
                        this._trim(this.scheduler.now()), this.observers.push(r);
                        for (var i = 0, o = this.q.length; o > i; i++) r.onNext(this.q[i].value);
                        return this.hasError ? r.onError(this.error) : this.isStopped && r.onCompleted(), r.ensureActive(), n
                    },
                    hasObservers: function() {
                        return Pt(this), this.observers.length > 0
                    },
                    _trim: function(e) {
                        for (; this.q.length > this.bufferSize;) this.q.shift();
                        for (; this.q.length > 0 && e - this.q[0].interval > this.windowSize;) this.q.shift()
                    },
                    onNext: function(e) {
                        if (Pt(this), !this.isStopped) {
                            var t = this.scheduler.now();
                            this.q.push({
                                interval: t,
                                value: e
                            }), this._trim(t);
                            for (var r = 0, n = i(this.observers), o = n.length; o > r; r++) {
                                var a = n[r];
                                a.onNext(e), a.ensureActive()
                            }
                        }
                    },
                    onError: function(e) {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0, this.error = e, this.hasError = !0;
                            var t = this.scheduler.now();
                            this._trim(t);
                            for (var r = 0, n = i(this.observers), o = n.length; o > r; r++) {
                                var a = n[r];
                                a.onError(e), a.ensureActive()
                            }
                            this.observers.length = 0
                        }
                    },
                    onCompleted: function() {
                        if (Pt(this), !this.isStopped) {
                            this.isStopped = !0;
                            var e = this.scheduler.now();
                            this._trim(e);
                            for (var t = 0, r = i(this.observers), n = r.length; n > t; t++) {
                                var o = r[t];
                                o.onCompleted(), o.ensureActive()
                            }
                            this.observers.length = 0
                        }
                    },
                    dispose: function() {
                        this.isDisposed = !0, this.observers = null
                    }
                }), r
            }(cr);
        fe.Pauser = function(e) {
            function t() {
                e.call(this)
            }
            return _t(t, e), t.prototype.pause = function() {
                this.onNext(!1)
            }, t.prototype.resume = function() {
                this.onNext(!0)
            }, t
        }(fi), e.Rx = fe;
        var bi = h()
    }).call(this, i, t);
    var o, a = i.Rx;
    ! function(e) {
        var r;
        ! function(e) {
            e.Rx = a, e.Promise = t
        }(r = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            e.VERSION = {
                number: "2.1.15",
                date: "June 16 2016"
            }
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t = function() {
                function t(e) {
                    this.computation = e
                }
                return t.prototype.bind = function(e) {
                    var r = this;
                    return t.create(function(t) {
                        r.run(t).result.then(function(r) {
                            e(r).run(t).result.then(t.resolve)["catch"](t.reject)
                        })["catch"](t.reject)
                    })
                }, t.prototype.map = function(e) {
                    var r = this;
                    return t.create(function(t) {
                        r.run(t).result.then(function(r) {
                            return t.resolve(e(r))
                        })["catch"](t.reject)
                    })
                }, t.prototype.run = function(r) {
                    var n = this,
                        i = r ? r : new t.Context;
                    return {
                        progress: i.progressStream,
                        result: new e.Promise(function(e, t) {
                            try {
                                i.__push(e, t), n.computation(i)
                            } catch (r) {
                                i.reject(r)
                            }
                        })
                    }
                }, t
            }();
            e.Computation = t;
            var t;
            ! function(t) {
                function r(e) {
                    return new t(e)
                }

                function n(e) {
                    return r(function(t) {
                        return t.resolve(e)
                    })
                }
                t.create = r, t.resolve = n;
                var i = function() {
                    function t() {
                        var t = this;
                        this._abortRequested = !1, this._abortRequest = function() {
                            return t._abortRequested = !0
                        }, this.progressTick = new e.Rx.Subject, this.progress = {
                            message: "Working...",
                            current: 0,
                            max: 0,
                            isIndeterminate: !1,
                            requestAbort: void 0
                        }, this.progressStream = new e.Rx.BehaviorSubject(this.progress), this.promiseStack = [], this.resolve = this._resolve.bind(this), this.reject = this._reject.bind(this), this.progressTick.throttle(1e3 / 30).subscribe(function(e) {
                            t.progressStream.onNext({
                                message: e.message,
                                isIndeterminate: e.isIndeterminate,
                                current: e.current,
                                max: e.max,
                                requestAbort: e.requestAbort
                            })
                        })
                    }
                    return t.prototype.schedule = function(e, t) {
                        var r = this;
                        void 0 === t && (t = 0), setTimeout(function() {
                            try {
                                e()
                            } catch (t) {
                                r.reject(t)
                            }
                        }, t)
                    }, Object.defineProperty(t.prototype, "abortRequested", {
                        get: function() {
                            return this._abortRequested
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t.prototype.setRequestAbort = function(e) {
                        this.progress.requestAbort = e
                    }, Object.defineProperty(t.prototype, "abortRequest", {
                        get: function() {
                            return this._abortRequest
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t.prototype.update = function(e, t, r, n) {
                        void 0 === r && (r = NaN), void 0 === n && (n = NaN), this.progress.message = e, this.progress.requestAbort = t, isNaN(r) ? this.progress.isIndeterminate = !0 : (this.progress.isIndeterminate = !1, this.progress.current = r, this.progress.max = n), this.progressTick.onNext(this.progress)
                    }, t.prototype.__push = function(e, t) {
                        this.promiseStack.push({
                            resolve: e,
                            reject: t
                        })
                    }, t.prototype._resolve = function(e) {
                        var t = this.promiseStack.pop();
                        if (!t) throw "Bug in code somewhere, Computation.resolve/reject called too many times.";
                        t.resolve(e), this.promiseStack.length || (this.progressTick.onCompleted(), this.progressStream.onCompleted())
                    }, t.prototype._reject = function(e) {
                        var t = this.promiseStack.pop();
                        if (!t) throw "Bug in code somewhere, Computation.resolve/reject called too many times.";
                        t.reject(e), this.promiseStack.length || (this.progressTick.onCompleted(), this.progressStream.onCompleted())
                    }, t.prototype.abort = function() {
                        this.reject("Aborted.")
                    }, t
                }();
                t.Context = i
            }(t = e.Computation || (e.Computation = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t = function() {
                    function e(e, t) {
                        this.message = e, this.line = t
                    }
                    return e.prototype.toString = function() {
                        return this.line >= 0 ? "[Line " + this.line + "] " + this.message : this.message
                    }, e
                }();
                e.ParserError = t;
                var r = function() {
                    function e(e, t, r) {
                        this.error = e, this.warnings = t, this.result = r
                    }
                    return e.error = function(r, n) {
                        return void 0 === n && (n = -1), new e(new t(r, n), [], void 0)
                    }, e.success = function(t, r) {
                        return void 0 === r && (r = []), new e(void 0, r, t)
                    }, e
                }();
                e.ParserResult = r;
                var n = function() {
                    function e(e) {
                        this.count = 0, this.tokens = new Int32Array(e), this.tokensLenMinus2 = e - 2 | 0
                    }
                    return e.prototype.resize = function() {
                        var e = new Int32Array(1.61 * this.tokens.length | 0);
                        e.set(this.tokens), this.tokens = e, this.tokensLenMinus2 = e.length - 2 | 0
                    }, e.prototype.addToken = function(e, t) {
                        this.count >= this.tokensLenMinus2 && this.resize(), this.tokens[this.count++] = e, this.tokens[this.count++] = t
                    }, e
                }();
                e.TokenIndexBuilder = n;
                var i = function() {
                    function e() {}
                    return e.getString = function(e) {
                        if (e.length > 6) return e;
                        var t = this.strings.get(e);
                        return void 0 !== t ? t : (this.strings.set(e, e), e)
                    }, e.strings = new Map, e
                }();
                e.ShortStringPool = i
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = t.ShortStringPool,
                        i = function() {
                            function e(e) {
                                this.data = e, this.dataBlocks = []
                            }
                            return e.prototype.addBlock = function(e) {
                                this.dataBlocks[this.dataBlocks.length] = e
                            }, e.prototype.toJSON = function() {
                                return this.dataBlocks.map(function(e) {
                                    return e.toJSON()
                                })
                            }, e
                        }();
                    r.File = i;
                    var o = function() {
                        function e(e, t) {
                            this.file = e, this.header = t, this.data = e.data, this.categoryList = [], this.additionalData = {}, this.categoryMap = {}
                        }
                        return Object.defineProperty(e.prototype, "categories", {
                            get: function() {
                                return this.categoryMap
                            },
                            enumerable: !0,
                            configurable: !0
                        }), e.prototype.addCategory = function(e) {
                            this.categoryList[this.categoryList.length] = e, this.categoryMap[e.name] = e
                        }, e.prototype.getCategory = function(e) {
                            return this.categoryMap[e]
                        }, e.prototype.hasCategory = function(e) {
                            return void 0 !== this.categoryMap[e]
                        }, e.prototype.toJSON = function() {
                            return {
                                id: this.header,
                                categories: this.categoryList.map(function(e) {
                                    return e.toJSON()
                                }),
                                additionalData: this.additionalData
                            }
                        }, e
                    }();
                    r.Block = o;
                    var a = function() {
                        function e(e, t) {
                            this.category = e, this.rowNumber = t
                        }
                        return e.prototype.getString = function(e) {
                            return this.category.getStringValue(e, this.rowNumber)
                        }, e.prototype.getInt = function(e) {
                            return this.category.getIntValue(e, this.rowNumber)
                        }, e.prototype.getFloat = function(e) {
                            return this.category.getFloatValue(e, this.rowNumber)
                        }, e
                    }();
                    r.CategoryQueryRowContext = a;
                    var s = function() {
                        function e(e, t, r) {
                            this.category = e, this.name = t, this.index = r
                        }
                        return e.prototype.getRaw = function(e) {
                            return this.category.getRawValueFromIndex(this.index, e)
                        }, e.prototype.getString = function(e) {
                            return this.category.getStringValueFromIndex(this.index, e)
                        }, e.prototype.getInteger = function(e) {
                            return this.category.getIntValueFromIndex(this.index, e)
                        }, e.prototype.getFloat = function(e) {
                            return this.category.getFloatValueFromIndex(this.index, e)
                        }, e.prototype.stringEquals = function(e, t) {
                            return this.category.valueEqual(this.index, e, t)
                        }, e.prototype.isUndefined = function(e) {
                            return this.category.isValueUndefinedFromIndex(this.index, e)
                        }, e
                    }();
                    r.Column = s;
                    var u = function() {
                        function t(e, t, r, n, i, o, a) {
                            this.name = t, this.columnNames = i, this.tokens = o, this.data = e, this.startIndex = r, this.endIndex = n, this.columnCount = this.columnNames.length, this.rowCount = a / this.columnNames.length | 0, this.tokenCount = a, this.columnIndices = {}, this.columnWrappers = {}, this._columnArray = [], this.shortColumnWrappers = {};
                            for (var u = 0; u < this.columnNames.length; u++) {
                                this.columnIndices[this.columnNames[u]] = u;
                                var l = new s(this, this.columnNames[u], u);
                                this.columnWrappers[this.columnNames[u]] = l, this.shortColumnWrappers[this.columnNames[u].substr(t.length + 1)] = l, this._columnArray[u] = l
                            }
                        }
                        return Object.defineProperty(t.prototype, "columns", {
                            get: function() {
                                return this.shortColumnWrappers
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "columnArray", {
                            get: function() {
                                return this._columnArray
                            },
                            enumerable: !0,
                            configurable: !0
                        }), t.prototype.getTokenIndex = function(e, t) {
                            return e * this.columnCount + t
                        }, t.prototype.getColumnIndex = function(e) {
                            var t = this.columnIndices[e];
                            return void 0 !== t ? t : -1
                        }, t.prototype.getColumn = function(e) {
                            return this.columnWrappers[e]
                        }, t.prototype.updateTokenRange = function(e, t, r) {
                            var n = 2 * (t * this.columnCount + e);
                            r.start = this.tokens[n], r.end = this.tokens[n + 1]
                        }, t.prototype.updateTokenIndexRange = function(e, t) {
                            t.start = this.tokens[2 * e], t.end = this.tokens[2 * e + 1]
                        }, t.prototype.isTokenUndefined = function(e) {
                            var t = this.tokens[2 * e];
                            if (this.tokens[2 * e + 1] - t === 1) {
                                var r = this.data.charCodeAt(t);
                                return 46 === r || 63 === r
                            }
                        }, t.prototype.isTokenRangeUndefined = function(e, t) {
                            if (t - e === 1) {
                                var r = this.data.charCodeAt(e);
                                return 46 === r || 63 === r
                            }
                        }, t.prototype.isValueUndefined = function(e, t) {
                            void 0 === t && (t = 0), t = 0 | t;
                            var r = this.getColumnIndex(e);
                            return 0 > r ? !0 : this.isTokenUndefined(t * this.columnCount + r)
                        }, t.prototype.isValueUndefinedFromIndex = function(e, t) {
                            return t = 0 | t, 0 > e ? !0 : this.isTokenUndefined(t * this.columnCount + e)
                        }, t.prototype.getTokenLengthFromIndex = function(e, t) {
                            if (0 > e) return 0;
                            var r = 2 * (t * this.columnCount + e);
                            return this.tokens[r + 1] - this.tokens[r]
                        }, t.prototype.getStringValueFromToken = function(e) {
                            var t = this.tokens[2 * e],
                                r = this.tokens[2 * e + 1];
                            if (r - t === 1) {
                                var i = this.data.charCodeAt(t);
                                if (46 === i || 63 === i) return null
                            }
                            var o = n.getString(this.data.substring(t, r));
                            return o
                        }, t.prototype.getStringValue = function(e, t) {
                            void 0 === t && (t = 0), t = 0 | t;
                            var r = this.getColumnIndex(e);
                            return 0 > r ? null : this.getStringValueFromToken(t * this.columnCount + r)
                        }, t.prototype.getStringValueOrDefault = function(e, t, r) {
                            void 0 === t && (t = ""), void 0 === r && (r = 0);
                            var n = this.getStringValue(e, r);
                            return n ? n : t
                        }, t.prototype.getFloatValue = function(t, r) {
                            void 0 === r && (r = 0), r = 0 | r;
                            var n = this.getColumnIndex(t);
                            if (0 > n) return NaN;
                            var i = 2 * (r * this.columnCount + n),
                                o = this.tokens[i],
                                a = this.tokens[i + 1];
                            if (a - o === 1) {
                                var s = this.data.charCodeAt(o);
                                if (46 === s || 63 === s) return NaN
                            }
                            return e.Utils.FastNumberParsers.parseFloat(this.data, this.tokens[i], this.tokens[i + 1])
                        }, t.prototype.getFloatValueOrDefault = function(e, t, r) {
                            void 0 === t && (t = 0), void 0 === r && (r = 0);
                            var n = this.getFloatValue(e, r);
                            return isNaN(n) ? t : n
                        }, t.prototype.getIntValue = function(t, r) {
                            void 0 === r && (r = 0), r = 0 | r;
                            var n = this.getColumnIndex(t);
                            if (0 > n) return NaN;
                            var i = 2 * (r * this.columnCount + n),
                                o = this.tokens[i],
                                a = this.tokens[i + 1];
                            if (a - o === 1) {
                                var s = this.data.charCodeAt(o);
                                if (46 === s || 63 === s) return NaN
                            }
                            return e.Utils.FastNumberParsers.parseInt(this.data, this.tokens[i], this.tokens[i + 1])
                        }, t.prototype.getIntValueOrDefault = function(e, t, r) {
                            void 0 === t && (t = 0), void 0 === r && (r = 0);
                            var n = this.getIntValue(e, r);
                            return isNaN(n) ? t : n
                        }, t.prototype.getRawValueFromIndex = function(e, t) {
                            if (0 > e) return null;
                            var r = 2 * (t * this.columnCount + e);
                            return n.getString(this.data.substring(this.tokens[r], this.tokens[r + 1]))
                        }, t.prototype.getStringValueFromIndex = function(e, t) {
                            if (0 > e) return null;
                            var r = 2 * (t * this.columnCount + e),
                                i = n.getString(this.data.substring(this.tokens[r], this.tokens[r + 1]));
                            return "." === i || "?" === i ? null : i
                        }, t.prototype.getIntValueFromIndex = function(t, r) {
                            if (0 > t) return NaN;
                            var n = 2 * (r * this.columnCount + t);
                            return e.Utils.FastNumberParsers.parseInt(this.data, this.tokens[n], this.tokens[n + 1])
                        }, t.prototype.getFloatValueFromIndex = function(t, r) {
                            if (0 > t) return NaN;
                            var n = 2 * (r * this.columnCount + t);
                            return e.Utils.FastNumberParsers.parseFloat(this.data, this.tokens[n], this.tokens[n + 1])
                        }, t.prototype.getMatrix = function(e, t, r, n) {
                            for (var i, o = [], a = 1; t >= a; a++) {
                                i = [];
                                for (var s = 1; r >= s; s++) {
                                    var u = e + "[" + a + "][" + s + "]";
                                    if (this.isValueUndefined(u, n)) return void 0;
                                    i[s - 1] = this.getFloatValue(u, n)
                                }
                                o[a - 1] = i
                            }
                            return o
                        }, t.prototype.getVector = function(e, t, r, n) {
                            for (var i = [], o = 1; t >= o; o++) {
                                var a = e + "[" + o + "]";
                                if (this.isValueUndefined(a, n)) return void 0;
                                i[o - 1] = this.getFloatValue(a, n)
                            }
                            return i
                        }, t.prototype.getTransform = function(t, r, n) {
                            var i, o, a, s = e.Geometry.LinearAlgebra.Matrix4.identity();
                            for (i = 1; 3 >= i; i++) {
                                for (o = 1; 3 >= o; o++) {
                                    if (a = r + "[" + i + "][" + o + "]", this.isValueUndefined(a, t)) return void 0;
                                    e.Geometry.LinearAlgebra.Matrix4.setValue(s, i - 1, o - 1, this.getFloatValue(a, t))
                                }
                                a = n + "[" + i + "]", e.Geometry.LinearAlgebra.Matrix4.setValue(s, i - 1, 3, this.getFloatValue(a, t))
                            }
                            return s
                        }, t.prototype.areTokensEqual = function(e, t) {
                            var r = this.tokens[2 * e],
                                n = this.tokens[2 * t],
                                i = this.tokens[2 * e + 1] - r;
                            if (i !== this.tokens[2 * t + 1] - n) return !1;
                            for (var o = 0; i > o; o++)
                                if (this.data.charCodeAt(o + r) !== this.data.charCodeAt(o + n)) return !1;
                            return !0
                        }, t.prototype.tokenEqual = function(e, t) {
                            var r = this.tokens[2 * e],
                                n = t.length;
                            if (n !== this.tokens[2 * e + 1] - r) return !1;
                            for (var i = 0; n > i; i++)
                                if (this.data.charCodeAt(i + r) !== t.charCodeAt(i)) return !1;
                            return !0
                        }, t.prototype.valueEqual = function(e, t, r) {
                            var n = 2 * (t * this.columnCount + e),
                                i = this.tokens[n],
                                o = r.length;
                            if (o !== this.tokens[n + 1] - i) return !1;
                            for (var a = 0; o > a; a++)
                                if (this.data.charCodeAt(a + i) !== r.charCodeAt(a)) return !1;
                            return !0
                        }, t.prototype.select = function(e) {
                            for (var t = [], r = 0; r < this.rowCount; r++) t[r] = e(new a(this, r));
                            return t
                        }, t.prototype.selectWhere = function(e, t) {
                            for (var r = [], n = 0; n < this.rowCount; n++) {
                                var i = new a(this, n);
                                e(i) && (r[r.length] = t(i))
                            }
                            return r
                        }, t.prototype.toJSON = function() {
                            for (var e = this, t = [], r = this.data, i = this.tokens, o = this.columnNames.map(function(t) {
                                    return t.substr(e.name.length + 1)
                                }), a = 0; a < this.rowCount; a++) {
                                for (var s = {}, u = 0; u < this.columnCount; u++) {
                                    var l = 2 * (a * this.columnCount + u);
                                    s[o[u]] = n.getString(r.substring(i[l], i[l + 1]))
                                }
                                t[a] = s
                            }
                            return {
                                name: this.name,
                                columns: o,
                                rows: t
                            }
                        }, t
                    }();
                    r.Category = u
                }(r = t.Cif || (t.Cif = {}))
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    var r = function() {
                        function t() {}
                        return t.getModelEndRow = function(e, t) {
                            var r = t.rowCount,
                                n = t.getColumnIndex("_atom_site.pdbx_PDB_model_num"),
                                i = 0,
                                o = t.columnCount,
                                a = e * o + n,
                                s = 0;
                            if (0 > n) return r;
                            for (s = e; r > s && (i = s * o, t.areTokensEqual(a, i + n)); s++);
                            return s
                        }, t.buildModelAtomTable = function(r, n) {
                            for (var i = t.getModelEndRow(r, n), o = n.columnCount, a = new e.Structure.DataTableBuilder(i - r), s = a.addColumn("id", function(e) {
                                    return new Int32Array(e)
                                }), u = n.getColumnIndex("_atom_site.id"), l = a.addColumn("x", function(e) {
                                    return new Float32Array(e)
                                }), c = n.getColumnIndex("_atom_site.Cartn_x"), h = a.addColumn("y", function(e) {
                                    return new Float32Array(e)
                                }), p = n.getColumnIndex("_atom_site.Cartn_y"), d = a.addColumn("z", function(e) {
                                    return new Float32Array(e)
                                }), f = n.getColumnIndex("_atom_site.Cartn_z"), m = a.addColumn("altLoc", function(e) {
                                    return []
                                }), v = n.getColumnIndex("_atom_site.label_alt_id"), g = a.addColumn("rowIndex", function(e) {
                                    return new Int32Array(e)
                                }), y = a.addColumn("residueIndex", function(e) {
                                    return new Int32Array(e)
                                }), b = a.addColumn("chainIndex", function(e) {
                                    return new Int32Array(e)
                                }), x = a.addColumn("entityIndex", function(e) {
                                    return new Int32Array(e)
                                }), _ = a.addColumn("name", function(e) {
                                    return []
                                }), w = n.getColumnIndex("_atom_site.label_atom_id"), C = a.addColumn("elementSymbol", function(e) {
                                    return []
                                }), E = n.getColumnIndex("_atom_site.type_symbol"), S = a.addColumn("occupancy", function(e) {
                                    return new Float32Array(e)
                                }), T = n.getColumnIndex("_atom_site.occupancy"), M = a.addColumn("tempFactor", function(e) {
                                    return new Float32Array(e)
                                }), A = n.getColumnIndex("_atom_site.B_iso_or_equiv"), P = a.addColumn("authName", function(e) {
                                    return []
                                }), R = n.getColumnIndex("_atom_site.auth_atom_id"), k = n.getColumnIndex("_atom_site.label_seq_id"), I = n.getColumnIndex("_atom_site.label_asym_id"), D = n.getColumnIndex("_atom_site.label_entity_id"), B = n.getColumnIndex("_atom_site.pdbx_PDB_ins_code"), L = n.getColumnIndex("_atom_site.auth_seq_id"), V = n.getColumnIndex("_atom_site.pdbx_PDB_model_num"), N = k, O = I, F = B, U = L, z = D, H = 0, j = !1, G = !1, q = 0, W = 0, X = 0, Y = r; i > Y; Y++) {
                                var K = Y - r;
                                H = Y * o, s[K] = n.getIntValueFromIndex(u, Y), l[K] = n.getFloatValueFromIndex(c, Y), h[K] = n.getFloatValueFromIndex(p, Y), d[K] = n.getFloatValueFromIndex(f, Y), _[K] = n.getStringValueFromIndex(w, Y), P[K] = n.getStringValueFromIndex(R, Y), C[K] = n.getStringValueFromIndex(E, Y), m[K] = n.getStringValueFromIndex(v, Y), S[K] = n.getFloatValueFromIndex(T, Y), M[K] = n.getFloatValueFromIndex(A, Y), j = !1, G = !1, j = n.isTokenUndefined(N) ? !n.areTokensEqual(U, H + L) : !n.areTokensEqual(N, H + k) || !n.areTokensEqual(F, H + B), j && (W++, N = H + k, U = H + L, F = H + B), n.areTokensEqual(O, H + I) || (G = !0, q++, O = H + I, j || (j = !0, W++, N = H + k, U = H + L, F = H + B)), n.areTokensEqual(z, H + D) || (X++, z = H + D, G || (G = !0, q++, O = H + I), j || (j = !0, W++, N = H + k, U = H + L, F = H + B)), g[K] = Y, y[K] = W, b[K] = q, x[K] = X
                            }
                            var Q = 0 > V ? "1" : n.getStringValue("_atom_site.pdbx_PDB_model_num", r);
                            return {
                                atoms: a.seal(),
                                modelId: Q,
                                endRow: i
                            }
                        }, t.buildStructure = function(t, r) {
                            var n = r.count,
                                i = r.residueIndex,
                                o = r.chainIndex,
                                a = r.entityIndex,
                                s = new e.Structure.DataTableBuilder(r.residueIndex[r.count - 1] + 1),
                                u = new e.Structure.DataTableBuilder(r.chainIndex[r.count - 1] + 1),
                                l = new e.Structure.DataTableBuilder(r.entityIndex[r.count - 1] + 1),
                                c = s.addColumn("name", function(e) {
                                    return []
                                }),
                                h = s.addColumn("seqNumber", function(e) {
                                    return new Int32Array(e)
                                }),
                                p = s.addColumn("asymId", function(e) {
                                    return []
                                }),
                                d = s.addColumn("authName", function(e) {
                                    return []
                                }),
                                f = s.addColumn("authSeqNumber", function(e) {
                                    return new Int32Array(e)
                                }),
                                m = s.addColumn("authAsymId", function(e) {
                                    return []
                                }),
                                v = s.addColumn("insCode", function(e) {
                                    return []
                                }),
                                g = s.addColumn("entityId", function(e) {
                                    return []
                                }),
                                y = s.addColumn("isHet", function(e) {
                                    return new Int8Array(e)
                                }),
                                b = s.addColumn("atomStartIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                x = s.addColumn("atomEndIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                _ = s.addColumn("chainIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                w = s.addColumn("entityIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                C = (s.addColumn("secondaryStructureIndex", function(e) {
                                    return new Int32Array(e)
                                }), u.addColumn("asymId", function(e) {
                                    return []
                                })),
                                E = u.addColumn("entityId", function(e) {
                                    return []
                                }),
                                S = u.addColumn("authAsymId", function(e) {
                                    return []
                                }),
                                T = u.addColumn("atomStartIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                M = u.addColumn("atomEndIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                A = u.addColumn("residueStartIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                P = u.addColumn("residueEndIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                R = u.addColumn("entityIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                k = l.addColumn("entityId", function(e) {
                                    return []
                                }),
                                I = l.addColumn("entityType", function(e) {
                                    return []
                                }),
                                D = l.addColumn("type", function(e) {
                                    return []
                                }),
                                B = l.addColumn("atomStartIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                L = l.addColumn("atomEndIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                V = l.addColumn("residueStartIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                N = l.addColumn("residueEndIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                O = l.addColumn("chainStartIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                F = l.addColumn("chainEndIndex", function(e) {
                                    return new Int32Array(e)
                                }),
                                U = t.getColumnIndex("_atom_site.label_comp_id"),
                                z = t.getColumnIndex("_atom_site.label_seq_id"),
                                H = t.getColumnIndex("_atom_site.label_asym_id"),
                                j = t.getColumnIndex("_atom_site.auth_comp_id"),
                                G = t.getColumnIndex("_atom_site.auth_seq_id"),
                                q = t.getColumnIndex("_atom_site.auth_asym_id"),
                                W = t.getColumnIndex("_atom_site.group_PDB"),
                                X = t.getColumnIndex("_atom_site.label_entity_id"),
                                Y = t.getColumnIndex("_atom_site.pdbx_PDB_ins_code"),
                                K = 0,
                                Q = 0,
                                Z = 0,
                                $ = 0,
                                J = 0,
                                ee = 0,
                                te = 0,
                                re = 0,
                                ne = 0,
                                ie = 0;
                            for (ie = 0; n > ie; ie++) i[ie] !== i[K] && (c[te] = t.getStringValueFromIndex(U, K), h[te] = t.getIntValueFromIndex(z, K), p[te] = t.getStringValueFromIndex(H, K), d[te] = t.getStringValueFromIndex(j, K), f[te] = t.getIntValueFromIndex(G, K), m[te] = t.getStringValueFromIndex(q, K), v[te] = t.getStringValueFromIndex(Y, K), g[te] = t.getStringValueFromIndex(X, K), y[te] = t.valueEqual(W, K, "HETATM") ? 1 : 0, b[te] = K, x[te] = ie, _[te] = re, w[te] = ne, te++, K = ie), o[ie] !== o[Q] && (C[re] = t.getStringValueFromIndex(H, Q), S[re] = t.getStringValueFromIndex(q, Q), E[re] = t.getStringValueFromIndex(X, Q), A[re] = ee, P[re] = te, T[re] = Q, M[re] = ie, R[re] = ne, re++, Q = ie, ee = te), a[ie] !== a[Z] && (k[ne] = t.getStringValueFromIndex(X, Z), I[ne] = e.Structure.EntityType.Unknown, D[ne] = "unknown", B[ne] = Z, L[ne] = ie, V[ne] = J, N[ne] = te, O[ne] = $, F[ne] = re, ne++, Z = ie, $ = re, J = te);
                            return k[ne] = t.getStringValueFromIndex(X, Z), I[ne] = e.Structure.EntityType.Unknown, D[ne] = "unknown", B[ne] = Z, L[ne] = ie, V[ne] = J, N[ne] = te + 1, O[ne] = $, F[ne] = re + 1, C[re] = t.getStringValueFromIndex(H, Q), S[re] = t.getStringValueFromIndex(q, Q), E[re] = t.getStringValueFromIndex(X, Q), A[re] = ee, P[re] = te + 1, T[re] = Q, M[re] = ie, R[re] = ne, c[te] = t.getStringValueFromIndex(U, K), h[te] = t.getIntValueFromIndex(z, K), p[te] = t.getStringValueFromIndex(H, K), d[te] = t.getStringValueFromIndex(j, K), f[te] = t.getIntValueFromIndex(G, K), m[te] = t.getStringValueFromIndex(q, K), v[te] = t.getStringValueFromIndex(Y, K), b[te] = K, x[te] = ie, _[te] = re, w[te] = ne, y[te] = t.valueEqual(W, K, "HETATM") ? 1 : 0, {
                                residues: s.seal(),
                                chains: u.seal(),
                                entities: l.seal()
                            }
                        }, t.assignEntityTypes = function(t, r) {
                            var n;
                            for (n = 0; n < r.count; n++) r.entityType[n] = e.Structure.EntityType.Unknown;
                            if (t) {
                                var i, o = {},
                                    a = {};
                                for (n = 0; n < t.rowCount; n++) {
                                    var s = (t.getStringValue("_entity.type", n) || "").toLowerCase();
                                    switch (s) {
                                        case "polymer":
                                            i = e.Structure.EntityType.Polymer;
                                            break;
                                        case "non-polymer":
                                            i = e.Structure.EntityType.NonPolymer;
                                            break;
                                        case "water":
                                            i = e.Structure.EntityType.Water;
                                            break;
                                        default:
                                            i = e.Structure.EntityType.Unknown
                                    }
                                    var u = t.getStringValue("_entity.id", n);
                                    o[u] = i, a[u] = "" !== s ? s : "unknown"
                                }
                                for (n = 0; n < r.count; n++) i = o[r.entityId[n]], void 0 !== i && (r.entityType[n] = i, r.type[n] = a[r.entityId[n]])
                            }
                        }, t.residueIdfromColumns = function(t, r, n, i, o) {
                            return new e.Structure.PolyResidueIdentifier(t.getStringValue(n, r), t.getIntValue(i, r), t.getStringValue(o, r))
                        }, t.isResidueAminoSeq = function(t, r, n, i) {
                            if (n.entityType[r.entityIndex[i]] !== e.Structure.EntityType.Polymer) return !1;
                            for (var o = !1, a = !1, s = t.name, u = 0, l = r.atomStartIndex[i], c = r.atomEndIndex[i]; c > l; l++) {
                                var h = s[l];
                                if (o || "CA" !== h ? a || "O" !== h || (a = !0, u++) : (o = !0, u++), 2 === u) break
                            }
                            return o && a || o && !r.isHet[i]
                        }, t.isResidueNucleotide = function(r, n, i, o) {
                            if (t.aminoAcidNames[n.name[o]] || i.entityType[n.entityIndex[o]] !== e.Structure.EntityType.Polymer) return !1;
                            for (var a = !1, s = !1, u = !1, l = r.name, c = 0, h = n.atomStartIndex[o], p = n.atomEndIndex[o]; p > h; h++) {
                                var d = l[h];
                                if (a || "O5'" !== d ? s || "C3'" !== d ? u || "N3" !== d || (u = !0, c++) : (s = !0, c++) : (a = !0, c++), 3 === c) break
                            }
                            return a && s && u
                        }, t.analyzeSecondaryStructure = function(r, n, i, o, a, s) {
                            for (var u = n.asymId, l = n.entityIndex, c = 0, h = o, p = o, d = a; d > h;) {
                                if (t.isResidueNucleotide(r, n, i, h)) {
                                    for (p = h + 1; d > p && u[h] === u[p] && l[h] === l[p] && t.isResidueNucleotide(r, n, i, p);) p++;
                                    c = 5
                                } else if (t.isResidueAminoSeq(r, n, i, h)) {
                                    for (p = h + 1; d > p && u[h] === u[p] && l[h] === l[p] && t.isResidueAminoSeq(r, n, i, p);) p++;
                                    c = 4
                                } else {
                                    for (p = h + 1; d > p && u[h] === u[p] && l[h] === l[p] && !t.isResidueNucleotide(r, n, i, p) && !t.isResidueAminoSeq(r, n, i, p);) p++;
                                    c = 0
                                }
                                var f = new e.Structure.SecondaryStructureElement(c, new e.Structure.PolyResidueIdentifier(n.asymId[h], n.seqNumber[h], n.insCode[h]), new e.Structure.PolyResidueIdentifier(n.asymId[p - 1], n.seqNumber[p - 1], n.insCode[p - 1]));
                                f.startResidueIndex = h, f.endResidueIndex = p, s[s.length] = f, h = p
                            }
                        }, t.splitNonconsecutiveSecondaryStructure = function(t, r) {
                            for (var n = [], i = t.authSeqNumber, o = 0, a = r; o < a.length; o++) {
                                for (var s = a[o], u = s.startResidueIndex, l = s.endResidueIndex - 1, c = s.startResidueIndex; l > c; c++)
                                    if (i[c + 1] - i[c] !== 1) {
                                        var h = new e.Structure.SecondaryStructureElement(s.type, s.startResidueId, s.endResidueId, s.info);
                                        h.startResidueIndex = u, h.endResidueIndex = c + 1, n[n.length] = h, u = c + 1
                                    }
                                if (u === s.startResidueIndex) n[n.length] = s;
                                else {
                                    var h = new e.Structure.SecondaryStructureElement(s.type, s.startResidueId, s.endResidueId, s.info);
                                    h.startResidueIndex = u, h.endResidueIndex = s.endResidueIndex, n[n.length] = h
                                }
                            }
                            return n
                        }, t.updateSSIndicesAndFilterEmpty = function(e, r) {
                            for (var n, i = r.residues, o = i.count, a = i.asymId, s = i.seqNumber, u = i.insCode, l = "", c = new Map, h = new Map, p = 0, d = e; p < d.length; p++) {
                                var f = d[p];
                                l = f.startResidueId.asymId + " " + f.startResidueId.seqNumber, f.startResidueId.insCode && (l += " " + f.startResidueId.insCode), c.set(l, f), l = f.endResidueId.asymId + " " + f.endResidueId.seqNumber, f.endResidueId.insCode && (l += " " + f.endResidueId.insCode), h.set(l, f)
                            }
                            for (var m = 0; o > m; m++) l = a[m] + " " + s[m], u[m] && (l += " " + u[m]), n = c.get(l), n && (n.startResidueIndex = m, n.endResidueIndex = m + 1), n = h.get(l), n && (n.startResidueIndex < 0 && (n.startResidueIndex = m), n.endResidueIndex = m + 1);
                            n && (n.endResidueIndex = o);
                            for (var v = [], g = 0, y = e; g < y.length; g++) {
                                var f = y[g];
                                f.startResidueIndex < 0 || f.endResidueIndex < 0 || 3 === f.type && f.length < 3 || f.endResidueIndex >= 0 && f.startResidueIndex >= 0 && (v[v.length] = f)
                            }
                            v.sort(function(e, t) {
                                return e.startResidueIndex - t.startResidueIndex
                            });
                            for (var m = 0; m < v.length - 1; m++) v[m + 1].startResidueIndex - v[m].endResidueIndex === -1 && v[m + 1].startResidueIndex++;
                            if (!v.length) return v;
                            for (var b = [v[0]], m = 1; m < v.length; m++) {
                                var x = b[b.length - 1],
                                    _ = v[m];
                                _.startResidueIndex < x.endResidueIndex ? t.handleSecondaryStructureCollision(x, _) : b[b.length] = _
                            }
                            return b
                        }, t.handleSecondaryStructureCollision = function(e, t) {
                            t.endResidueIndex > e.endResidueIndex && (e.endResidueIndex = t.endResidueIndex)
                        }, t.getSecondaryStructureInfo = function(r, n, i) {
                            var o, a = [],
                                s = [],
                                u = r.getCategory("_struct_conf"),
                                l = r.getCategory("_struct_sheet_range");
                            if (u) {
                                var c = u.getColumn("_struct_conf.conf_type_id");
                                if (c)
                                    for (o = 0; o < u.rowCount; o++) {
                                        var h = void 0;
                                        switch (c.getString(o).toUpperCase()) {
                                            case "HELX_P":
                                                h = 1;
                                                break;
                                            case "TURN_P":
                                                h = 2
                                        }
                                        h && (a[a.length] = new e.Structure.SecondaryStructureElement(h, t.residueIdfromColumns(u, o, "_struct_conf.beg_label_asym_id", "_struct_conf.beg_label_seq_id", "_struct_conf.pdbx_beg_PDB_ins_code"), t.residueIdfromColumns(u, o, "_struct_conf.end_label_asym_id", "_struct_conf.end_label_seq_id", "_struct_conf.pdbx_end_PDB_ins_code"), {
                                            helixClass: u.getStringValue("_struct_conf.pdbx_PDB_helix_class", o)
                                        }))
                                    }
                            }
                            if (l)
                                for (o = 0; o < l.rowCount; o++) a[a.length] = new e.Structure.SecondaryStructureElement(3, t.residueIdfromColumns(l, o, "_struct_sheet_range.beg_label_asym_id", "_struct_sheet_range.beg_label_seq_id", "_struct_sheet_range.pdbx_beg_PDB_ins_code"), t.residueIdfromColumns(l, o, "_struct_sheet_range.end_label_asym_id", "_struct_sheet_range.end_label_seq_id", "_struct_sheet_range.pdbx_end_PDB_ins_code"), {
                                    symmetry: l.getStringValue("_struct_sheet_range.symmetry", o),
                                    sheetId: l.getStringValue("_struct_sheet_range.sheet_id", o),
                                    id: l.getStringValue("_struct_sheet_range.id", o)
                                });
                            var p = a.length > 0 ? t.updateSSIndicesAndFilterEmpty(a, i) : [],
                                d = i.residues,
                                f = d.count;
                            if (0 === p.length) return t.analyzeSecondaryStructure(n, d, i.entities, 0, f, s), t.splitNonconsecutiveSecondaryStructure(d, s);
                            var m = p.length - 1;
                            for (p[0].startResidueIndex > 0 && t.analyzeSecondaryStructure(n, d, i.entities, 0, p[0].startResidueIndex, s), o = 0; m > o; o++) s[s.length] = p[o], p[o + 1].startResidueIndex - p[o].endResidueIndex > 0 && t.analyzeSecondaryStructure(n, d, i.entities, p[o].endResidueIndex, p[o + 1].startResidueIndex, s);
                            return s[s.length] = p[m], p[m].endResidueIndex < f && t.analyzeSecondaryStructure(n, d, i.entities, p[m].endResidueIndex, f, s), t.splitNonconsecutiveSecondaryStructure(d, s)
                        }, t.assignSecondaryStructureIndex = function(e, t) {
                            for (var r = e.secondaryStructureIndex, n = 0, i = 0, o = t; i < o.length; i++) {
                                for (var a = o[i], s = a.startResidueIndex; s < a.endResidueIndex; s++) r[s] = n;
                                n++
                            }
                            return r
                        }, t.parseOperatorList = function(e) {
                            for (var t, r = /\(?([^\(\)]+)\)?]*/g, n = [], i = []; t = r.exec(e);) n[n.length] = t[1];
                            return n.forEach(function(e) {
                                var t = [];
                                e.split(",").forEach(function(e) {
                                    var r = e.indexOf("-");
                                    if (r > 0)
                                        for (var n = parseInt(e.substring(0, r)), i = parseInt(e.substr(r + 1)), o = n; i >= o; o++) t[t.length] = o.toString();
                                    else t[t.length] = e.trim()
                                }), i[i.length] = t
                            }), i
                        }, t.getAssemblyInfo = function(t) {
                            var r = t.getCategory("_pdbx_struct_assembly"),
                                n = t.getCategory("_pdbx_struct_assembly_gen"),
                                i = t.getCategory("_pdbx_struct_oper_list");
                            if (!r || !n || !i) return null;
                            var o, a = {},
                                s = [],
                                u = new Map;
                            for (o = 0; o < n.rowCount; o++) {
                                var l = n.getStringValue("_pdbx_struct_assembly_gen.assembly_id", o),
                                    c = u.get(l);
                                c || (c = new e.Structure.AssemblyGen(l), u.set(l, c), s.push(c)), c.gens.push(new e.Structure.AssemblyGenEntry(this.parseOperatorList(n.getStringValue("_pdbx_struct_assembly_gen.oper_expression", o)), n.getStringValue("_pdbx_struct_assembly_gen.asym_id_list", o).split(",")))
                            }
                            for (o = 0; o < i.rowCount; o++) {
                                var h = i.getTransform(o, "_pdbx_struct_oper_list.matrix", "_pdbx_struct_oper_list.vector");
                                if (!h) return null;
                                var p = new e.Structure.AssemblyOperator(i.getStringValue("_pdbx_struct_oper_list.id", o), i.getStringValue("_pdbx_struct_oper_list.name", o), h);
                                a[p.id] = p
                            }
                            return new e.Structure.AssemblyInfo(a, s)
                        }, t.getSymmetryInfo = function(t) {
                            var r = t.getCategory("_cell"),
                                n = t.getCategory("_symmetry"),
                                i = t.getCategory("_atom_sites"),
                                o = "",
                                a = [1, 1, 1],
                                s = [90, 90, 90],
                                u = e.Geometry.LinearAlgebra.Matrix4.identity(),
                                l = !1;
                            if (!r || !n) return null;
                            if (o = n.getStringValue("_symmetry.space_group_name_H-M"), a = [r.getFloatValue("_cell.length_a"), r.getFloatValue("_cell.length_b"), r.getFloatValue("_cell.length_c")], s = [r.getFloatValue("_cell.angle_alpha"), r.getFloatValue("_cell.angle_beta"), r.getFloatValue("_cell.angle_gamma")], n.isValueUndefined("_symmetry.space_group_name_H-M") || r.isValueUndefined("_cell.length_a") || r.isValueUndefined("_cell.length_b") || r.isValueUndefined("_cell.length_c") || r.isValueUndefined("_cell.angle_alpha") || r.isValueUndefined("_cell.angle_beta") || r.isValueUndefined("_cell.angle_gamma")) return null;
                            var c = function(e) {
                                    return e * e
                                },
                                h = function(e) {
                                    return e * Math.PI / 180
                                },
                                p = a[0],
                                d = a[1],
                                f = a[2],
                                m = h(s[0]),
                                v = h(s[1]),
                                g = h(s[2]),
                                y = p * d * f * Math.sqrt(1 - c(Math.cos(m)) - c(Math.cos(v)) - c(Math.cos(g)) + 2 * Math.cos(m) * Math.cos(v) * Math.cos(g)),
                                b = e.Geometry.LinearAlgebra.Matrix4.ofRows([
                                    [p, d * Math.cos(g), f * Math.cos(v), 0],
                                    [0, d * Math.sin(g), f * (Math.cos(m) - Math.cos(v) * Math.cos(g)) / Math.sin(g), 0],
                                    [0, 0, y / (p * d * Math.sin(g)), 0],
                                    [0, 0, 0, 1]
                                ]),
                                x = e.Geometry.LinearAlgebra.Matrix4.identity();
                            if (e.Geometry.LinearAlgebra.Matrix4.invert(x, b), i) {
                                var _ = i.getTransform(0, "_atom_sites.fract_transf_matrix", "_atom_sites.fract_transf_vector");
                                _ && (u = _, e.Geometry.LinearAlgebra.Matrix4.areEqual(x, _, 1e-4) || (l = !0))
                            } else u = x;
                            return new e.Structure.SymmetryInfo(o, a, s, u, l)
                        }, t.getComponentBonds = function(t) {
                            if (!t || !t.rowCount) return void 0;
                            for (var r = new e.Structure.ComponentBondInfo, n = t.getColumnIndex("_chem_comp_bond.comp_id"), i = t.getColumnIndex("_chem_comp_bond.atom_id_1"), o = t.getColumnIndex("_chem_comp_bond.atom_id_2"), a = t.getColumnIndex("_chem_comp_bond.value_order"), s = t.rowCount, u = r.newEntry(t.getStringValueFromIndex(n, 0)), l = 0; s > l; l++) {
                                var c = t.getStringValueFromIndex(n, l),
                                    h = t.getStringValueFromIndex(i, l),
                                    p = t.getStringValueFromIndex(o, l),
                                    d = t.getStringValueFromIndex(a, l);
                                u.id !== c && (u = r.newEntry(c));
                                var f = void 0;
                                switch (d.toLowerCase()) {
                                    case "sing":
                                        f = e.Structure.BondOrder.Single;
                                        break;
                                    case "doub":
                                    case "delo":
                                        f = e.Structure.BondOrder.Double;
                                        break;
                                    case "trip":
                                        f = e.Structure.BondOrder.Triple;
                                        break;
                                    case "quad":
                                        f = e.Structure.BondOrder.Quadruple;
                                        break;
                                    default:
                                        f = e.Structure.BondOrder.Single
                                }
                                u.add(h, p, f)
                            }
                            return r
                        }, t.getModel = function(r, n) {
                            var i, o = t.buildModelAtomTable(r, n.getCategory("_atom_site")),
                                a = o.atoms,
                                s = o.modelId,
                                u = o.endRow,
                                l = t.buildStructure(n.getCategory("_atom_site"), a),
                                c = n.getCategory("_entry");
                            i = c && c.getColumnIndex("_entry.id") >= 0 ? c.getStringValue("_entry.id") : n.header, t.assignEntityTypes(n.getCategory("_entity"), l.entities);
                            var h = t.getSecondaryStructureInfo(n, a, l);
                            return t.assignSecondaryStructureIndex(l.residues, h), {
                                model: new e.Structure.MoleculeModel(i, s, a, l.residues, l.chains, l.entities, t.getComponentBonds(n.getCategory("_chem_comp_bond")), h, t.getSymmetryInfo(n), t.getAssemblyInfo(n), void 0, e.Structure.MoleculeModelSource.File, void 0),
                                endRow: u
                            }
                        }, t.ofDataBlock = function(r) {
                            var n = [],
                                i = r.getCategory("_atom_site"),
                                o = 0;
                            if (!i) throw "'_atom_site' category is missing in the input.";
                            var a, s = r.getCategory("_entry");
                            for (a = s && s.getColumnIndex("_entry.id") >= 0 ? s.getStringValue("_entry.id") : r.header; o < i.rowCount;) {
                                var u = t.getModel(o, r),
                                    l = u.model,
                                    c = u.endRow;
                                n.push(l), o = c
                            }
                            return new e.Structure.Molecule(a, n)
                        }, t.aminoAcidNames = {
                            ALA: !0,
                            ARG: !0,
                            ASP: !0,
                            CYS: !0,
                            GLN: !0,
                            GLU: !0,
                            GLY: !0,
                            HIS: !0,
                            ILE: !0,
                            LEU: !0,
                            LYS: !0,
                            MET: !0,
                            PHE: !0,
                            PRO: !0,
                            SER: !0,
                            THR: !0,
                            TRP: !0,
                            TYR: !0,
                            VAL: !0,
                            ASN: !0,
                            PYL: !0,
                            SEC: !0
                        }, t
                    }();
                    t.mmCif = r
                }(r = t.Cif || (t.Cif = {}))
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(t) {
                    function r(e) {
                        return i.parse(e)
                    }
                    var n = function() {
                            function e(e) {
                                this.data = e, this.length = e.length, this.position = 0, this.currentTokenStart = 0, this.currentTokenEnd = 0, this.currentTokenType = 6, this.currentLineNumber = 1, this.isEscaped = !1
                            }
                            return e.prototype.eatValue = function() {
                                for (; this.position < this.length;) switch (this.data.charCodeAt(this.position)) {
                                    case 9:
                                    case 10:
                                    case 13:
                                    case 32:
                                        return void(this.currentTokenEnd = this.position);
                                    default:
                                        ++this.position
                                }
                                this.currentTokenEnd = this.position
                            }, e.prototype.eatEscaped = function(e) {
                                var t, r;
                                for (++this.position; this.position < this.length;)
                                    if (r = this.data.charCodeAt(this.position), r === e) switch (t = this.data.charCodeAt(this.position + 1)) {
                                        case 9:
                                        case 10:
                                        case 13:
                                        case 32:
                                            return this.currentTokenStart++, this.currentTokenEnd = this.position, this.isEscaped = !0, void++this.position;
                                        default:
                                            if (void 0 === t) return this.currentTokenStart++, this.currentTokenEnd = this.position, this.isEscaped = !0, void++this.position;
                                            ++this.position
                                    } else {
                                        if (10 === r || 13 === r) return void(this.currentTokenEnd = this.position);
                                        ++this.position
                                    }
                                    this.currentTokenEnd = this.position
                            }, e.prototype.eatMultiline = function() {
                                for (var e, t = 59, r = this.position + 1; r < this.length;) {
                                    if (e = this.data.charCodeAt(r), 59 === e && (10 === t || 13 === t)) {
                                        for (this.position = r + 1, this.currentTokenStart++, r--, e = this.data.charCodeAt(r); 10 === e || 13 === e;) r--, e = this.data.charCodeAt(r);
                                        return this.currentTokenEnd = r + 1, void(this.isEscaped = !0)
                                    }
                                    13 === e ? this.currentLineNumber++ : 10 === e && 13 !== t && this.currentLineNumber++, t = e, ++r
                                }
                                return this.position = r, t
                            }, e.prototype.skipCommentLine = function() {
                                for (; this.position < this.length;) {
                                    var e = this.data.charCodeAt(this.position);
                                    if (10 === e || 13 === e) return;
                                    ++this.position
                                }
                            }, e.prototype.skipWhitespace = function() {
                                for (var e = 10; this.position < this.length;) {
                                    var t = this.data.charCodeAt(this.position);
                                    switch (t) {
                                        case 9:
                                        case 32:
                                            e = t, ++this.position;
                                            break;
                                        case 10:
                                            13 !== e && ++this.currentLineNumber, e = t, ++this.position;
                                            break;
                                        case 13:
                                            e = t, ++this.position, ++this.currentLineNumber;
                                            break;
                                        default:
                                            return e
                                    }
                                }
                                return e
                            }, e.prototype.isData = function() {
                                var e = this.data.charCodeAt(this.currentTokenStart);
                                return 68 !== e && 100 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 1), 65 !== e && 97 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 2), 84 !== e && 116 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 3), 65 !== e && 97 !== e ? !1 : !0)))
                            }, e.prototype.isSave = function() {
                                var e = this.data.charCodeAt(this.currentTokenStart);
                                return 83 !== e && 115 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 1), 65 !== e && 97 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 2), 86 !== e && 118 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 3), 69 !== e && 101 !== e ? !1 : !0)))
                            }, e.prototype.isLoop = function() {
                                if (this.currentTokenEnd - this.currentTokenStart !== 5) return !1;
                                var e = this.data.charCodeAt(this.currentTokenStart);
                                return 76 !== e && 108 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 1), 79 !== e && 111 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 2), 79 !== e && 111 !== e ? !1 : (e = this.data.charCodeAt(this.currentTokenStart + 3), 80 !== e && 112 !== e ? !1 : !0)))
                            }, e.prototype.isNamespace = function(e, t) {
                                var r, n = t - e,
                                    i = this.currentTokenStart - e,
                                    o = this.currentTokenEnd - this.currentTokenStart;
                                if (n > o) return !1;
                                for (r = e; t > r; ++r)
                                    if (this.data.charCodeAt(r) !== this.data.charCodeAt(r + i)) return !1;
                                return n === o ? !0 : 46 === this.data.charCodeAt(r + i) ? !0 : !1
                            }, e.prototype.getNamespaceEnd = function() {
                                var e;
                                for (e = this.currentTokenStart; e < this.currentTokenEnd; ++e)
                                    if (46 === this.data.charCodeAt(e)) return e;
                                return e
                            }, e.prototype.getNamespace = function(e) {
                                return this.data.substring(this.currentTokenStart, e)
                            }, e.prototype.getTokenString = function() {
                                return this.data.substring(this.currentTokenStart, this.currentTokenEnd)
                            }, e.prototype.moveNextInternal = function() {
                                var e, t = this.skipWhitespace();
                                if (this.position >= this.length) return void(this.currentTokenType = 6);
                                switch (this.currentTokenStart = this.position, this.currentTokenEnd = this.position, this.isEscaped = !1, e = this.data.charCodeAt(this.position)) {
                                    case 35:
                                        this.skipCommentLine(), this.currentTokenType = 5;
                                        break;
                                    case 34:
                                    case 39:
                                        this.eatEscaped(e), this.currentTokenType = 3;
                                        break;
                                    case 59:
                                        10 === t || 13 === t ? this.eatMultiline() : this.eatValue(), this.currentTokenType = 3;
                                        break;
                                    default:
                                        this.eatValue(), this.isEscaped ? this.currentTokenType = 3 : 95 === this.data.charCodeAt(this.currentTokenStart) ? this.currentTokenType = 4 : this.currentTokenEnd - this.currentTokenStart >= 5 && 95 === this.data.charCodeAt(this.currentTokenStart + 4) ? this.isData() ? this.currentTokenType = 0 : this.isSave() ? this.currentTokenType = 1 : this.isLoop() ? this.currentTokenType = 2 : this.currentTokenType = 3 : this.currentTokenType = 3
                                }
                            }, e.prototype.moveNext = function() {
                                for (this.moveNextInternal(); 5 === this.currentTokenType;) this.moveNextInternal()
                            }, e
                        }(),
                        i = function() {
                            function r() {}
                            return r.handleSingle = function(r, n) {
                                for (var i, o = r.currentTokenStart, a = r.getNamespaceEnd(), s = r.getNamespace(a), u = [], l = new e.TokenIndexBuilder(512), c = 0; 4 === r.currentTokenType && r.isNamespace(o, a);) {
                                    if (i = r.getTokenString(), r.moveNext(), 3 !== r.currentTokenType) return {
                                        hasError: !0,
                                        errorLine: r.currentLineNumber,
                                        errorMessage: "Expected value."
                                    };
                                    u[u.length] = i, l.addToken(r.currentTokenStart, r.currentTokenEnd), c++, r.moveNext()
                                }
                                return n.addCategory(new t.Category(n.data, s, o, r.currentTokenStart, u, l.tokens, c)), {
                                    hasError: !1,
                                    errorLine: 0,
                                    errorMessage: ""
                                }
                            }, r.handleLoop = function(r, n) {
                                var i = r.currentTokenStart,
                                    o = r.currentLineNumber;
                                r.moveNext();
                                for (var a = r.getNamespace(r.getNamespaceEnd()), s = [], u = new e.TokenIndexBuilder("_atom_site" === a ? n.data.length / 1.85 | 0 : 1024), l = 0; 4 === r.currentTokenType;) s[s.length] = r.getTokenString(), r.moveNext();
                                for (; 3 === r.currentTokenType;) u.addToken(r.currentTokenStart, r.currentTokenEnd), l++, r.moveNext();
                                return l % s.length !== 0 ? {
                                    hasError: !0,
                                    errorLine: r.currentLineNumber,
                                    errorMessage: "The number of values for loop starting at line " + o + " is not a multiple of the number of columns."
                                } : (n.addCategory(new t.Category(n.data, a, i, r.currentTokenStart, s, u.tokens, l)), {
                                    hasError: !1,
                                    errorLine: 0,
                                    errorMessage: ""
                                })
                            }, r.error = function(t, r) {
                                return e.ParserResult.error(r, t)
                            }, r.result = function(t) {
                                return e.ParserResult.success(t)
                            }, r.parse = function(e) {
                                var i, o, a, s = new n(e),
                                    u = new t.File(e),
                                    l = new t.Block(u, "default"),
                                    c = new t.Block(u, "empty"),
                                    h = !1;
                                for (s.moveNext(); 6 !== s.currentTokenType;) {
                                    var p = s.currentTokenType;
                                    if (0 === p) {
                                        if (h) return r.error(s.currentLineNumber, "Unexpected data block inside a save frame.");
                                        l.categoryList.length > 0 && u.addBlock(l), l = new t.Block(u, e.substring(s.currentTokenStart + 5, s.currentTokenEnd)), s.moveNext()
                                    } else if (1 === p) {
                                        if (o = e.substring(s.currentTokenStart + 5, s.currentTokenEnd), 0 === o.length) c.categoryList.length > 0 && (a = l.additionalData.saveFrames, a || (a = [], l.additionalData.saveFrames = a), a[a.length] = c), h = !1;
                                        else {
                                            if (h) return r.error(s.currentLineNumber, "Save frames cannot be nested.");
                                            h = !0, c = new t.Block(u, o)
                                        }
                                        s.moveNext()
                                    } else if (2 === p) {
                                        if (i = r.handleLoop(s, h ? c : l), i.hasError) return r.error(i.errorLine, i.errorMessage)
                                    } else {
                                        if (4 !== p) return r.error(s.currentLineNumber, "Unexpected token. Expected data_, loop_, or data name.");
                                        if (i = r.handleSingle(s, h ? c : l), i.hasError) return r.error(i.errorLine, i.errorMessage)
                                    }
                                }
                                return h ? r.error(s.currentLineNumber, "Unfinished save frame (`" + c.header + "`).") : (l.categoryList.length > 0 && u.addBlock(l), r.result(u))
                            }, r
                        }();
                    t.Parser = i, t.parse = r
                }(t = e.Cif || (e.Cif = {}))
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function() {
                        function e(e, t, r, n) {
                            this.header = e, this.crystInfo = t, this.models = r, this.data = n
                        }
                        return e.prototype.makeEntities = function() {
                            var e = ["data_ent", "loop_", "_entity.id", "_entity.type", "_entity.src_method", "_entity.pdbx_description", "_entity.formula_weight", "_entity.pdbx_number_of_molecules", "_entity.details", "_entity.pdbx_mutation", "_entity.pdbx_fragment", "_entity.pdbx_ec", "1 polymer man polymer 0.0 0 ? ? ? ?", "2 non-polymer syn non-polymer 0.0 0 ? ? ? ?", "3 water nat water 0.0 0 ? ? ? ?"].join("\n");
                            return t.Cif.parse(e).result.dataBlocks[0].getCategory("_entity")
                        }, e.prototype.toCifFile = function() {
                            var e = {
                                    dot: r.Parser.getDotRange(this.data.length),
                                    question: r.Parser.getQuestionmarkRange(this.data.length),
                                    numberTokens: r.Parser.getNumberRanges(this.data.length),
                                    data: this.data
                                },
                                n = new t.Cif.File(this.data),
                                i = new t.Cif.Block(n, this.header.id);
                            if (n.dataBlocks.push(i), i.addCategory(this.makeEntities()), this.crystInfo) {
                                var o = this.crystInfo.toCifCategory(this.header.id),
                                    a = o.cell,
                                    s = o.symm;
                                i.addCategory(a), i.addCategory(s)
                            }
                            return i.addCategory(this.models.toCifCategory(i, e)), n
                        }, e
                    }();
                    r.MoleculeData = n;
                    var i = function() {
                        function e(e) {
                            this.id = e
                        }
                        return e
                    }();
                    r.Header = i;
                    var o = function() {
                        function e(e) {
                            this.record = e
                        }
                        return e.prototype.toCifCategory = function(e) {
                            var r = ["_cell.entry_id           '" + e + "'", "_cell.length_a           " + this.record.substr(6, 9).trim(), "_cell.length_b           " + this.record.substr(15, 9).trim(), "_cell.length_c           " + this.record.substr(24, 9).trim(), "_cell.angle_alpha        " + this.record.substr(33, 7).trim(), "_cell.angle_beta         " + this.record.substr(40, 7).trim(), "_cell.angle_gamma        " + this.record.substr(48, 7).trim(), "_cell.Z_PDB              " + this.record.substr(66, 4).trim(), "_cell.pdbx_unique_axis   ?", "_symmetry.entry_id                         '" + e + "'", "_symmetry.space_group_name_H-M             '" + this.record.substr(55, 11).trim() + "'", "_symmetry.pdbx_full_space_group_name_H-M   ?", "_symmetry.cell_setting                     ?", "_symmetry.Int_Tables_number                ?", "_symmetry.space_group_name_Hall            ?"].join("\n"),
                                n = t.Cif.parse(r).result.dataBlocks[0];
                            return {
                                cell: n.getCategory("_cell"),
                                symm: n.getCategory("_symmetry")
                            }
                        }, e
                    }();
                    r.CrystStructureInfo = o;
                    var a = function() {
                        function e(e, t) {
                            this.helixTokens = e, this.sheetTokens = t
                        }
                        return e.prototype.toCifCategory = function(e) {
                            return null
                        }, e
                    }();
                    r.SecondaryStructure = a;
                    var s = function() {
                        function e(e, t, r) {
                            this.idToken = e, this.atomTokens = t, this.atomCount = r
                        }
                        return e.prototype.writeToken = function(e, t) {
                            t.add2(this.atomTokens[2 * e], this.atomTokens[2 * e + 1])
                        }, e.prototype.writeTokenCond = function(e, t, r) {
                            var n = this.atomTokens[2 * e],
                                i = this.atomTokens[2 * e + 1];
                            n === i ? t.add2(r.start, r.end) : t.add2(n, i)
                        }, e.prototype.writeRange = function(e, t) {
                            t.add2(e.start, e.end)
                        }, e.prototype.tokenEquals = function(e, t, r, n) {
                            var i = r.length;
                            if (i !== t - e) return !1;
                            for (var o = r.length - 1; o >= 0; o--)
                                if (n.charCodeAt(o + e) !== r.charCodeAt(o)) return !1;
                            return !0
                        }, e.prototype.getEntityType = function(e, t) {
                            var r = 14 * e;
                            if (this.tokenEquals(this.atomTokens[2 * r], this.atomTokens[2 * r + 1], "HETATM", t)) {
                                var n = this.atomTokens[2 * (r + 4)],
                                    i = this.atomTokens[2 * (r + 4) + 1];
                                return this.tokenEquals(n, i, "HOH", t) || this.tokenEquals(n, i, "WTR", t) || this.tokenEquals(n, i, "SOL", t) ? 3 : 2
                            }
                            return 1
                        }, e.prototype.writeCifTokens = function(e, t, r) {
                            for (var n = {
                                    RECORD: 0,
                                    SERIAL: 1,
                                    ATOM_NAME: 2,
                                    ALT_LOC: 3,
                                    RES_NAME: 4,
                                    CHAIN_ID: 5,
                                    RES_SEQN: 6,
                                    INS_CODE: 7,
                                    X: 8,
                                    Y: 9,
                                    Z: 10,
                                    OCCUPANCY: 11,
                                    TEMP_FACTOR: 12,
                                    ELEMENT: 13
                                }, i = 14, o = 0; o < this.atomCount; o++) {
                                var a = o * i;
                                this.writeToken(a + n.RECORD, t), this.writeToken(a + n.SERIAL, t), this.writeToken(a + n.ELEMENT, t), this.writeToken(a + n.ATOM_NAME, t), this.writeTokenCond(a + n.ALT_LOC, t, r.dot), this.writeToken(a + n.RES_NAME, t), this.writeToken(a + n.CHAIN_ID, t), this.writeRange(r.numberTokens.get(this.getEntityType(o, r.data)), t), this.writeToken(a + n.RES_SEQN, t), this.writeTokenCond(a + n.INS_CODE, t, r.dot), this.writeToken(a + n.X, t), this.writeToken(a + n.Y, t), this.writeToken(a + n.Z, t), this.writeToken(a + n.OCCUPANCY, t), this.writeToken(a + n.TEMP_FACTOR, t), this.writeRange(r.question, t), this.writeRange(r.question, t), this.writeRange(r.question, t), this.writeRange(r.question, t), this.writeRange(r.question, t), this.writeRange(r.question, t), this.writeToken(a + n.RES_SEQN, t), this.writeToken(a + n.RES_NAME, t), this.writeToken(a + n.CHAIN_ID, t), this.writeToken(a + n.ATOM_NAME, t), this.writeRange(e, t)
                            }
                        }, e.COLUMNS = ["_atom_site.group_PDB", "_atom_site.id", "_atom_site.type_symbol", "_atom_site.label_atom_id", "_atom_site.label_alt_id", "_atom_site.label_comp_id", "_atom_site.label_asym_id", "_atom_site.label_entity_id", "_atom_site.label_seq_id", "_atom_site.pdbx_PDB_ins_code", "_atom_site.Cartn_x", "_atom_site.Cartn_y", "_atom_site.Cartn_z", "_atom_site.occupancy", "_atom_site.B_iso_or_equiv", "_atom_site.Cartn_x_esd", "_atom_site.Cartn_y_esd", "_atom_site.Cartn_z_esd", "_atom_site.occupancy_esd", "_atom_site.B_iso_or_equiv_esd", "_atom_site.pdbx_formal_charge", "_atom_site.auth_seq_id", "_atom_site.auth_comp_id", "_atom_site.auth_asym_id", "_atom_site.auth_atom_id", "_atom_site.pdbx_PDB_model_num"], e
                    }();
                    r.ModelData = s;
                    var u = function() {
                        function r(e) {
                            this.models = e
                        }
                        return r.prototype.toCifCategory = function(r, n) {
                            for (var i = 0, o = 0, a = this.models; o < a.length; o++) {
                                var u = a[o];
                                i += u.atomCount
                            }
                            for (var l = e.Utils.ArrayBuilder.forTokenIndices(26 * i), c = 0, h = this.models; c < h.length; c++) {
                                var u = h[c];
                                u.writeCifTokens(u.idToken, l, n)
                            }
                            return new t.Cif.Category(r.data, "_atom_site", 0, 0, s.COLUMNS, l.array, 26 * i)
                        }, r
                    }();
                    r.ModelsData = u
                }(r = t.PDB || (t.PDB = {}))
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(t) {
                    function r(e, t) {
                        return i.parse(e, t)
                    }
                    var n = function() {
                            function e(e) {
                                this.data = e, this.trimmedToken = {
                                    start: 0,
                                    end: 0
                                }, this.line = 0, this.position = 0, this.length = e.length
                            }
                            return e.prototype.moveToNextLine = function() {
                                for (; this.position < this.length && 10 !== this.data.charCodeAt(this.position);) this.position++;
                                return this.position++, this.line++, this.position
                            }, e.prototype.moveToEndOfLine = function() {
                                for (; this.position < this.length;) {
                                    var e = this.data.charCodeAt(this.position);
                                    if (10 === e || 13 === e) return this.position;
                                    this.position++
                                }
                                return this.position
                            }, e.prototype.startsWith = function(e, t) {
                                for (var r = t.length - 1; r >= 0; r--)
                                    if (this.data.charCodeAt(r + e) !== t.charCodeAt(r)) return !1;
                                return !0
                            }, e.prototype.trim = function(e, t) {
                                for (; t > e && 32 === this.data.charCodeAt(e);) e++;
                                for (; t > e && 32 === this.data.charCodeAt(t - 1);) t--;
                                this.trimmedToken.start = e, this.trimmedToken.end = t
                            }, e.prototype.tokenizeAtomRecord = function(e) {
                                var t = this.position,
                                    r = this.position,
                                    n = this.moveToEndOfLine(),
                                    i = n - r;
                                return 66 > i ? !1 : (this.trim(r, r + 6), e.addToken(this.trimmedToken.start, this.trimmedToken.end), r = t + 6, this.trim(r, r + 5), e.addToken(this.trimmedToken.start, this.trimmedToken.end), r = t + 12, this.trim(r, r + 4), e.addToken(this.trimmedToken.start, this.trimmedToken.end), 32 === this.data.charCodeAt(t + 16) ? e.addToken(0, 0) : e.addToken(t + 16, t + 17), r = t + 17, this.trim(r, r + 3), e.addToken(this.trimmedToken.start, this.trimmedToken.end), e.addToken(t + 21, t + 22), r = t + 22, this.trim(r, r + 3), e.addToken(this.trimmedToken.start, this.trimmedToken.end), 32 === this.data.charCodeAt(t + 26) ? e.addToken(0, 0) : e.addToken(t + 26, t + 27), r = t + 30, this.trim(r, r + 8), e.addToken(this.trimmedToken.start, this.trimmedToken.end), r = t + 38, this.trim(r, r + 8), e.addToken(this.trimmedToken.start, this.trimmedToken.end), r = t + 46, this.trim(r, r + 8), e.addToken(this.trimmedToken.start, this.trimmedToken.end), r = t + 54, this.trim(r, r + 6), e.addToken(this.trimmedToken.start, this.trimmedToken.end), r = t + 60, this.trim(r, r + 6), e.addToken(this.trimmedToken.start, this.trimmedToken.end), i >= 78 && (r = t + 76, this.trim(r, r + 2), this.trimmedToken.start < this.trimmedToken.end ? e.addToken(this.trimmedToken.start, this.trimmedToken.end) : e.addToken(t + 12, t + 13)), !0)
                            }, e
                        }(),
                        i = function() {
                            function r(e, t) {
                                this.id = e, this.data = t
                            }
                            return r.tokenizeAtom = function(t, r) {
                                return r.tokenizeAtomRecord(t) ? void 0 : new e.ParserError("Invalid ATOM/HETATM record.", r.line)
                            }, r.tokenize = function(i, o) {
                                for (var a = new n(o), s = o.length, u = new e.TokenIndexBuilder(4096), l = 0, c = [], h = void 0, p = {
                                        start: 0,
                                        end: 0
                                    }; a.position < s;) {
                                    var d = !0;
                                    switch (o.charCodeAt(a.position)) {
                                        case 65:
                                            if (a.startsWith(a.position, "ATOM")) {
                                                var f = r.tokenizeAtom(u, a);
                                                if (l++, f) return f
                                            }
                                            break;
                                        case 67:
                                            if (a.startsWith(a.position, "CRYST1")) {
                                                var m = a.position,
                                                    v = a.moveToEndOfLine();
                                                h = new t.CrystStructureInfo(o.substring(m, v))
                                            }
                                            break;
                                        case 69:
                                            if (a.startsWith(a.position, "ENDMDL") && l > 0) 0 === c.length && (p = {
                                                start: o.length + 3,
                                                end: o.length + 4
                                            }), c.push(new t.ModelData(p, u.tokens, l)), l = 0, u = null;
                                            else if (a.startsWith(a.position, "END")) {
                                                var m = a.position,
                                                    v = a.moveToEndOfLine();
                                                a.trim(m, v), a.trimmedToken.end - a.trimmedToken.start === 3 && (d = !1)
                                            }
                                            break;
                                        case 72:
                                            if (a.startsWith(a.position, "HETATM")) {
                                                var f = r.tokenizeAtom(u, a);
                                                if (l++, f) return f
                                            }
                                            break;
                                        case 77:
                                            if (a.startsWith(a.position, "MODEL")) {
                                                l > 0 && (0 === c.length && (p = {
                                                    start: o.length + 3,
                                                    end: o.length + 4
                                                }), c.push(new t.ModelData(p, u.tokens, l)));
                                                var m = a.position + 6,
                                                    v = a.moveToEndOfLine();
                                                a.trim(m, v), p = {
                                                    start: a.trimmedToken.start,
                                                    end: a.trimmedToken.end
                                                }, (l > 0 || !u) && (u = new e.TokenIndexBuilder(4096)), l = 0
                                            }
                                    }
                                    if (a.moveToNextLine(), !d) break
                                }
                                var g = o + ".?0123";
                                return l > 0 && (0 === c.length && (p = {
                                    start: o.length + 3,
                                    end: o.length + 4
                                }), c.push(new t.ModelData(p, u.tokens, l))), new t.MoleculeData(new t.Header(i), h, new t.ModelsData(c), g)
                            }, r.getDotRange = function(e) {
                                return {
                                    start: e - 6,
                                    end: e - 5
                                }
                            }, r.getNumberRanges = function(e) {
                                for (var t = new Map, r = 0; 4 > r; r++) t.set(r, {
                                    start: e - 4 + r,
                                    end: e - 3 + r
                                });
                                return t
                            }, r.getQuestionmarkRange = function(e) {
                                return {
                                    start: e - 5,
                                    end: e - 4
                                }
                            }, r.parse = function(t, n) {
                                var i = r.tokenize(t, n);
                                return i instanceof e.ParserError ? e.ParserResult.error(i.message, i.line) : e.ParserResult.success(i.toCifFile())
                            }, r
                        }();
                    t.Parser = i, t.parse = r
                }(t = e.PDB || (e.PDB = {}))
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t = function() {
                    function e(e, t) {
                        this.data = e, this.dimensions = t, this.len = this.dimensions[0] * this.dimensions[1] * this.dimensions[2], this.nX = this.dimensions[0], this.nY = this.dimensions[1]
                    }
                    return Object.defineProperty(e.prototype, "length", {
                        get: function() {
                            return this.len
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.prototype.getAt = function(e) {
                        return this.data[e]
                    }, e.prototype.setAt = function(e, t) {
                        this.data[e] = t
                    }, e.prototype.get = function(e, t, r) {
                        return this.data[this.nX * (r * this.nY + t) + e | 0]
                    }, e.prototype.set = function(e, t, r, n) {
                        this.data[this.nX * (r * this.nY + t) + e | 0] = n
                    }, e.prototype.fill = function(e) {
                        for (var t = 0; t < this.len; t++) this.data[t] = e
                    }, e
                }();
                e.Field3DZYX = t
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(t) {
                    function r(e) {
                        return i.parse(e)
                    }
                    var n = function() {
                        function e(e, t, r, n, i, o, a, s, u, l) {
                            this.isNormalized = !1, this.cellSize = e, this.cellAngles = t, this.origin = r, this.hasSkewMatrix = n, this.skewMatrix = i, this.data = o, this.basis = s, this.startOffset = u, this.dataDimensions = a, this.valuesInfo = l
                        }
                        return e.prototype.normalize = function() {
                            if (!this.isNormalized) {
                                for (var e = this.data, t = this.valuesInfo, r = t.mean, n = t.sigma, i = Number.POSITIVE_INFINITY, o = Number.NEGATIVE_INFINITY, a = 0, s = e.length; s > a; a++) {
                                    var u = (e.getAt(a) - r) / n;
                                    e.setAt(a, u), i > u && (i = u), u > o && (o = u)
                                }
                                this.valuesInfo.min = i, this.valuesInfo.max = o, this.isNormalized = !0
                            }
                        }, e.prototype.denormalize = function() {
                            if (this.isNormalized) {
                                for (var e = this.data, t = this.valuesInfo, r = t.mean, n = t.sigma, i = Number.POSITIVE_INFINITY, o = Number.NEGATIVE_INFINITY, a = 0, s = e.length; s > a; a++) {
                                    var u = n * e.getAt(a) + r;
                                    e.setAt(a, u),
                                        i > u && (i = u), u > o && (o = u)
                                }
                                this.valuesInfo.min = i, this.valuesInfo.max = o, this.isNormalized = !1
                            }
                        }, e
                    }();
                    t.DensityData = n, t.parse = r;
                    var i = function() {
                        function t() {}
                        return t.getArray = function(e, t, r) {
                            for (var n = [], i = 0; r > i; i++) n[i] = e(t + i);
                            return n
                        }, t.parse = function(r) {
                            var i = 1024,
                                o = !1,
                                a = new DataView(r, 0, i),
                                s = [],
                                u = a.getInt32(12, !1);
                            if (2 !== u && (o = !0, u = a.getInt32(12, !0), 2 !== u)) return e.ParserResult.error("Only CCP4 modes 0 and 2 are supported.");
                            var l = function(e) {
                                    return a.getInt32(4 * e, o)
                                },
                                c = function(e) {
                                    return a.getFloat32(4 * e, o)
                                },
                                h = {
                                    extent: t.getArray(l, 0, 3),
                                    mode: u,
                                    nxyzStart: t.getArray(l, 4, 3),
                                    grid: t.getArray(l, 7, 3),
                                    cellDimensions: t.getArray(c, 10, 3),
                                    cellAngles: t.getArray(c, 13, 3),
                                    crs2xyz: t.getArray(l, 16, 3),
                                    min: c(19),
                                    max: c(20),
                                    mean: c(21),
                                    symBytes: l(23),
                                    skewFlag: l(24),
                                    skewMatrix: t.getArray(c, 25, 9),
                                    skewTranslation: t.getArray(c, 34, 3),
                                    origin2k: t.getArray(c, 49, 3)
                                },
                                p = r.byteLength - 4 * h.extent[0] * h.extent[1] * h.extent[2];
                            if (p !== i + h.symBytes)
                                if (p === i) s.push("File contains bogus symmetry record.");
                                else {
                                    if (i > p) return e.ParserResult.error("File appears truncated and doesn't match header.");
                                    if (!(p > i && 1048576 > p)) return e.ParserResult.error("File is MUCH larger than expected and doesn't match header.");
                                    p = i + h.symBytes, s.push("File is larger than expected and doesn't match header. Continuing file load, good luck!")
                                }
                            0 === h.grid[0] && h.extent[0] > 0 && (h.grid[0] = h.extent[0] - 1, s.push("Fixed X interval count.")), 0 === h.grid[1] && h.extent[1] > 0 && (h.grid[1] = h.extent[1] - 1, s.push("Fixed Y interval count.")), 0 === h.grid[2] && h.extent[2] > 0 && (h.grid[2] = h.extent[2] - 1, s.push("Fixed Z interval count.")), 0 === h.crs2xyz[0] && 0 === h.crs2xyz[1] && 0 === h.crs2xyz[2] && (s.push("All crs2xyz records are zero. Setting crs2xyz to 1, 2, 3."), h.crs2xyz = [1, 2, 3]), 0 === h.cellDimensions[0] && 0 === h.cellDimensions[1] && 0 === h.cellDimensions[2] && (s.push("Cell dimensions are all zero. Setting to 1.0, 1.0, 1.0. Map file will not align with other structures."), h.cellDimensions[0] = 1, h.cellDimensions[1] = 1, h.cellDimensions[2] = 1);
                            var d = Math.PI / 180 * h.cellAngles[0],
                                f = Math.PI / 180 * h.cellAngles[1],
                                m = Math.PI / 180 * h.cellAngles[2],
                                v = h.cellDimensions[0] / h.grid[0],
                                g = h.cellDimensions[1] / h.grid[1],
                                y = h.cellDimensions[2] / h.grid[2],
                                b = Math.cos(f),
                                x = (Math.cos(d) - Math.cos(f) * Math.cos(m)) / Math.sin(m),
                                _ = Math.sqrt(1 - b * b - x * x),
                                w = [v, 0, 0],
                                C = [Math.cos(m) * g, Math.sin(m) * g, 0],
                                E = [b * y, x * y, _ * y],
                                S = [0, 0, 0];
                            S[h.crs2xyz[0] - 1] = 0, S[h.crs2xyz[1] - 1] = 1, S[h.crs2xyz[2] - 1] = 2;
                            var T;
                            T = 0 === h.origin2k[0] && 0 === h.origin2k[1] && 0 === h.origin2k[2] ? [w[0] * h.nxyzStart[S[0]] + C[0] * h.nxyzStart[S[1]] + E[0] * h.nxyzStart[S[2]], C[1] * h.nxyzStart[S[1]] + E[1] * h.nxyzStart[S[2]], E[2] * h.nxyzStart[S[2]]] : [h.origin2k[S[0]], h.origin2k[S[1]], h.origin2k[S[2]]];
                            var M, A, P = [h.extent[S[0]], h.extent[S[1]], h.extent[S[2]]],
                                R = new Float32Array(16);
                            for (M = 0; 3 > M; M++) {
                                for (A = 0; 3 > A; A++) R[4 * A + M] = h.skewMatrix[3 * M + A];
                                R[12 + M] = h.skewTranslation[M]
                            }
                            var k = 13330 === new Uint16Array(new Uint8Array([18, 52]).buffer)[0],
                                I = o === k ? t.readRawData1(new Float32Array(r, i + h.symBytes, P[0] * P[1] * P[2]), o, P, h.extent, S, h.mean) : t.readRawData(new DataView(r, i + h.symBytes), o, P, h.extent, S, h.mean),
                                D = new e.Field3DZYX(I.data, P),
                                B = new n(h.cellDimensions, h.cellAngles, T, 0 !== h.skewFlag, R, D, P, {
                                    x: w,
                                    y: C,
                                    z: E
                                }, [h.nxyzStart[S[0]], h.nxyzStart[S[1]], h.nxyzStart[S[2]]], {
                                    min: h.min,
                                    max: h.max,
                                    mean: h.mean,
                                    sigma: I.sigma
                                });
                            return e.ParserResult.success(B, s)
                        }, t.normalizeData = function(e, t, r) {
                            for (var n = Number.POSITIVE_INFINITY, i = Number.NEGATIVE_INFINITY, o = 0, a = e.length; a > o; o++) {
                                var s = (e[o] - t) / r;
                                e[o] = s, n > s && (n = s), s > i && (i = s)
                            }
                            return {
                                min: n,
                                max: i
                            }
                        }, t.readRawData1 = function(e, t, r, n, i, o) {
                            var a, s, u, l, c, h, p, d, f = new Float32Array(r[0] * r[1] * r[2]),
                                m = [0, 0, 0],
                                v = 0,
                                g = .1,
                                y = 0,
                                b = .1,
                                x = i[0],
                                _ = i[1],
                                w = i[2];
                            for (a = n[0], s = n[1], u = n[2], p = r[0], d = r[0] * r[1], h = 0; u > h; h++)
                                for (m[2] = h, c = 0; s > c; c++)
                                    for (m[1] = c, l = 0; a > l; l++) m[0] = l, g = e[v], b = g - o, y += b * b, f[m[x] + m[_] * p + m[w] * d] = g, v += 1;
                            return y /= a * s * u, y = Math.sqrt(y), {
                                data: f,
                                sigma: y
                            }
                        }, t.readRawData = function(e, t, r, n, i, o) {
                            var a, s, u, l, c, h, p, d, f = new Float32Array(r[0] * r[1] * r[2]),
                                m = [0, 0, 0],
                                v = 0,
                                g = .1,
                                y = 0,
                                b = .1,
                                x = i[0],
                                _ = i[1],
                                w = i[2];
                            for (a = n[0], s = n[1], u = n[2], p = r[0], d = r[0] * r[1], h = 0; u > h; h++)
                                for (m[2] = h, c = 0; s > c; c++)
                                    for (m[1] = c, l = 0; a > l; l++) m[0] = l, g = e.getFloat32(v, t), b = g - o, y += b * b, f[m[x] + m[_] * p + m[w] * d] = g, v += 4;
                            return y /= a * s * u, y = Math.sqrt(y), {
                                data: f,
                                sigma: y
                            }
                        }, t
                    }()
                }(t = e.CCP4 || (e.CCP4 = {}))
            }(t = e.Formats || (e.Formats = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    var t = "undefined" != typeof Float64Array ? function(e) {
                            return new Float64Array(e)
                        } : function(e) {
                            return []
                        },
                        r = function() {
                            function e() {}
                            return e.empty = function() {
                                return t(16)
                            }, e.identity = function() {
                                var e = t(16);
                                return e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
                            }, e.ofRows = function(e) {
                                var r, n, i, o = t(16);
                                for (r = 0; 4 > r; r++)
                                    for (i = e[r], n = 0; 4 > n; n++) o[4 * n + r] = i[n];
                                return o
                            }, e.areEqual = function(e, t, r) {
                                for (var n = 0; 16 > n; n++)
                                    if (Math.abs(e[n] - t[n]) > r) return !1;
                                return !0
                            }, e.setValue = function(e, t, r, n) {
                                e[4 * r + t] = n
                            }, e.copy = function(e, t) {
                                return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = t[12], e[13] = t[13], e[14] = t[14], e[15] = t[15], e
                            }, e.clone = function(t) {
                                return e.copy(e.empty(), t)
                            }, e.invert = function(e, t) {
                                var r = t[0],
                                    n = t[1],
                                    i = t[2],
                                    o = t[3],
                                    a = t[4],
                                    s = t[5],
                                    u = t[6],
                                    l = t[7],
                                    c = t[8],
                                    h = t[9],
                                    p = t[10],
                                    d = t[11],
                                    f = t[12],
                                    m = t[13],
                                    v = t[14],
                                    g = t[15],
                                    y = r * s - n * a,
                                    b = r * u - i * a,
                                    x = r * l - o * a,
                                    _ = n * u - i * s,
                                    w = n * l - o * s,
                                    C = i * l - o * u,
                                    E = c * m - h * f,
                                    S = c * v - p * f,
                                    T = c * g - d * f,
                                    M = h * v - p * m,
                                    A = h * g - d * m,
                                    P = p * g - d * v,
                                    R = y * P - b * A + x * M + _ * T - w * S + C * E;
                                return R ? (R = 1 / R, e[0] = (s * P - u * A + l * M) * R, e[1] = (i * A - n * P - o * M) * R, e[2] = (m * C - v * w + g * _) * R, e[3] = (p * w - h * C - d * _) * R, e[4] = (u * T - a * P - l * S) * R, e[5] = (r * P - i * T + o * S) * R, e[6] = (v * x - f * C - g * b) * R, e[7] = (c * C - p * x + d * b) * R, e[8] = (a * A - s * T + l * E) * R, e[9] = (n * T - r * A - o * E) * R, e[10] = (f * w - m * x + g * y) * R, e[11] = (h * x - c * w - d * y) * R, e[12] = (s * S - a * M - u * E) * R, e[13] = (r * M - n * S + i * E) * R, e[14] = (m * b - f * _ - v * y) * R, e[15] = (c * _ - h * b + p * y) * R, e) : null
                            }, e.mul = function(e, t, r) {
                                var n = t[0],
                                    i = t[1],
                                    o = t[2],
                                    a = t[3],
                                    s = t[4],
                                    u = t[5],
                                    l = t[6],
                                    c = t[7],
                                    h = t[8],
                                    p = t[9],
                                    d = t[10],
                                    f = t[11],
                                    m = t[12],
                                    v = t[13],
                                    g = t[14],
                                    y = t[15],
                                    b = r[0],
                                    x = r[1],
                                    _ = r[2],
                                    w = r[3];
                                return e[0] = b * n + x * s + _ * h + w * m, e[1] = b * i + x * u + _ * p + w * v, e[2] = b * o + x * l + _ * d + w * g, e[3] = b * a + x * c + _ * f + w * y, b = r[4], x = r[5], _ = r[6], w = r[7], e[4] = b * n + x * s + _ * h + w * m, e[5] = b * i + x * u + _ * p + w * v, e[6] = b * o + x * l + _ * d + w * g, e[7] = b * a + x * c + _ * f + w * y, b = r[8], x = r[9], _ = r[10], w = r[11], e[8] = b * n + x * s + _ * h + w * m, e[9] = b * i + x * u + _ * p + w * v, e[10] = b * o + x * l + _ * d + w * g, e[11] = b * a + x * c + _ * f + w * y, b = r[12], x = r[13], _ = r[14], w = r[15], e[12] = b * n + x * s + _ * h + w * m, e[13] = b * i + x * u + _ * p + w * v, e[14] = b * o + x * l + _ * d + w * g, e[15] = b * a + x * c + _ * f + w * y, e
                            }, e.translate = function(e, t, r) {
                                var n, i, o, a, s, u, l, c, h, p, d, f, m = r[0],
                                    v = r[1],
                                    g = r[2];
                                return t === e ? (e[12] = t[0] * m + t[4] * v + t[8] * g + t[12], e[13] = t[1] * m + t[5] * v + t[9] * g + t[13], e[14] = t[2] * m + t[6] * v + t[10] * g + t[14], e[15] = t[3] * m + t[7] * v + t[11] * g + t[15]) : (n = t[0], i = t[1], o = t[2], a = t[3], s = t[4], u = t[5], l = t[6], c = t[7], h = t[8], p = t[9], d = t[10], f = t[11], e[0] = n, e[1] = i, e[2] = o, e[3] = a, e[4] = s, e[5] = u, e[6] = l, e[7] = c, e[8] = h, e[9] = p, e[10] = d, e[11] = f, e[12] = n * m + s * v + h * g + t[12], e[13] = i * m + u * v + p * g + t[13], e[14] = o * m + l * v + d * g + t[14], e[15] = a * m + c * v + f * g + t[15]), e
                            }, e.fromTranslation = function(e, t) {
                                return e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = t[0], e[13] = t[1], e[14] = t[2], e[15] = 1, e
                            }, e.transformVector3 = function(e, t, r) {
                                var n = t.x,
                                    i = t.y,
                                    o = t.z;
                                return e.x = r[0] * n + r[4] * i + r[8] * o + r[12], e.y = r[1] * n + r[5] * i + r[9] * o + r[13], e.z = r[2] * n + r[6] * i + r[10] * o + r[14], e
                            }, e.makeTable = function(e) {
                                for (var t = "", r = 0; 4 > r; r++) {
                                    for (var n = 0; 4 > n; n++) t += e[4 * n + r].toString(), 3 > n && (t += " ");
                                    3 > r && (t += "\n")
                                }
                                return t
                            }, e.determinant = function(e) {
                                var t = e[0],
                                    r = e[1],
                                    n = e[2],
                                    i = e[3],
                                    o = e[4],
                                    a = e[5],
                                    s = e[6],
                                    u = e[7],
                                    l = e[8],
                                    c = e[9],
                                    h = e[10],
                                    p = e[11],
                                    d = e[12],
                                    f = e[13],
                                    m = e[14],
                                    v = e[15],
                                    g = t * a - r * o,
                                    y = t * s - n * o,
                                    b = t * u - i * o,
                                    x = r * s - n * a,
                                    _ = r * u - i * a,
                                    w = n * u - i * s,
                                    C = l * f - c * d,
                                    E = l * m - h * d,
                                    S = l * v - p * d,
                                    T = c * m - h * f,
                                    M = c * v - p * f,
                                    A = h * v - p * m;
                                return g * A - y * M + b * T + x * S - _ * E + w * C
                            }, e
                        }();
                    e.Matrix4 = r;
                    var n = function() {
                        function e() {}
                        return e.create = function() {
                            var e = t(4);
                            return e[0] = 0, e[1] = 0, e[2] = 0, e[3] = 0, e
                        }, e.clone = function(e) {
                            var r = t(4);
                            return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r
                        }, e.fromValues = function(e, r, n, i) {
                            var o = t(4);
                            return o[0] = e, o[1] = r, o[2] = n, o[3] = i, o
                        }, e.set = function(e, t, r, n, i) {
                            return e[0] = t, e[1] = r, e[2] = n, e[3] = i, e
                        }, e.distance = function(e, t) {
                            var r = t[0] - e[0],
                                n = t[1] - e[1],
                                i = t[2] - e[2],
                                o = t[3] - e[3];
                            return Math.sqrt(r * r + n * n + i * i + o * o)
                        }, e.squaredDistance = function(e, t) {
                            var r = t[0] - e[0],
                                n = t[1] - e[1],
                                i = t[2] - e[2],
                                o = t[3] - e[3];
                            return r * r + n * n + i * i + o * o
                        }, e.norm = function(e) {
                            var t = e[0],
                                r = e[1],
                                n = e[2],
                                i = e[3];
                            return Math.sqrt(t * t + r * r + n * n + i * i)
                        }, e.squaredNorm = function(e) {
                            var t = e[0],
                                r = e[1],
                                n = e[2],
                                i = e[3];
                            return t * t + r * r + n * n + i * i
                        }, e.transform = function(e, t, r) {
                            var n = t[0],
                                i = t[1],
                                o = t[2],
                                a = t[3];
                            return e[0] = r[0] * n + r[4] * i + r[8] * o + r[12] * a, e[1] = r[1] * n + r[5] * i + r[9] * o + r[13] * a, e[2] = r[2] * n + r[6] * i + r[10] * o + r[14] * a, e[3] = r[3] * n + r[7] * i + r[11] * o + r[15] * a, e
                        }, e
                    }();
                    e.Vector4 = n
                }(t = e.LinearAlgebra || (e.LinearAlgebra = {}))
            }(t = e.Geometry || (e.Geometry = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t = function() {
                    function e(e) {
                        1 > e && (e = 1), this.indices = new Int32Array(e), this.count = 0, this.capacity = e, this.hasPriorities = !1, this.priorities = void 0
                    }
                    return e.prototype.ensureCapacity = function() {
                        var e, t = 2 * this.capacity + 1,
                            r = new Int32Array(t);
                        if (this.count < 32)
                            for (e = 0; e < this.count; e++) r[e] = this.indices[e];
                        else r.set(this.indices);
                        this.indices = r, this.capacity = t
                    }, e.prototype.add = function(e, t) {
                        this.count + 1 >= this.capacity && this.ensureCapacity(), this.indices[this.count++] = t
                    }, e.prototype.reset = function() {
                        this.count = 0
                    }, e
                }();
                e.SubdivisionTree3DResultIndexBuffer = t;
                var r = function() {
                    function e(e) {
                        1 > e && (e = 1), this.indices = new Int32Array(e), this.count = 0, this.capacity = e, this.hasPriorities = !0, this.priorities = new Float32Array(e)
                    }
                    return e.prototype.ensureCapacity = function() {
                        var e, t = 2 * this.capacity + 1,
                            r = new Int32Array(t),
                            n = new Float32Array(t);
                        if (this.count < 32)
                            for (e = 0; e < this.count; e++) r[e] = this.indices[e], n[e] = this.priorities[e];
                        else r.set(this.indices), n.set(this.priorities);
                        this.indices = r, this.priorities = n, this.capacity = t
                    }, e.prototype.add = function(e, t) {
                        this.count + 1 >= this.capacity && this.ensureCapacity(), this.priorities[this.count] = e, this.indices[this.count++] = t
                    }, e.prototype.reset = function() {
                        this.count = 0
                    }, e
                }();
                e.SubdivisionTree3DResultPriorityBuffer = r;
                var n = function() {
                    function e(e, t) {
                        this.tree = e, this.indices = e.indices, this.positions = e.positions, this.buffer = t, this.pivot = [.1, .1, .1], this.radius = 1.1, this.radiusSq = 1.1 * 1.1
                    }
                    return e.prototype.nearest = function(e, t, r, n) {
                        this.pivot[0] = e, this.pivot[1] = t, this.pivot[2] = r, this.radius = n, this.radiusSq = n * n, this.buffer.reset(), this.tree.root.nearest(this, 0)
                    }, e.prototype.nearestIndex = function(e, t) {
                        this.pivot[0] = this.positions[3 * e], this.pivot[1] = this.positions[3 * e + 1], this.pivot[2] = this.positions[3 * e + 2], this.radius = t, this.radiusSq = t * t, this.buffer.reset(), this.tree.root.nearest(this, 0)
                    }, e
                }();
                e.SubdivisionTree3DQueryContext = n;
                var i = function() {
                    function e(e, t, r) {
                        void 0 === r && (r = 32);
                        var n = new u(e, t, r);
                        this.data = e, this.root = n.build(), this.indices = n.indices, this.positions = n.positions
                    }
                    return e.prototype.createContextRadius = function(e, i) {
                        return void 0 === i && (i = !1), new n(this, i ? new r(Math.max(e * e | 0, 8)) : new t(Math.max(e * e | 0, 8)))
                    }, e
                }();
                e.SubdivisionTree3D = i;
                var o = function() {
                    function e(e) {
                        this.count = 0, this.data = new Float32Array(3 * e | 0), this.bounds = new s, this.boundsMin = this.bounds.min, this.boundsMax = this.bounds.max
                    }
                    return e.prototype.add = function(e, t, r) {
                        this.data[this.count++] = e, this.data[this.count++] = t, this.data[this.count++] = r, this.boundsMin[0] = Math.min(e, this.boundsMin[0]), this.boundsMin[1] = Math.min(t, this.boundsMin[1]), this.boundsMin[2] = Math.min(r, this.boundsMin[2]), this.boundsMax[0] = Math.max(e, this.boundsMax[0]), this.boundsMax[1] = Math.max(t, this.boundsMax[1]), this.boundsMax[2] = Math.max(r, this.boundsMax[2])
                    }, e
                }();
                e.SubdivisionTree3DPositionBuilder = o;
                var a = function() {
                    function e(e, t, r, n, i) {
                        this.splitValue = e, this.startIndex = t, this.endIndex = r, this.left = n, this.right = i
                    }
                    return e.prototype.nearestLeaf = function(e) {
                        var t, r, n, i, o, a, s = e.pivot,
                            u = e.indices,
                            l = e.positions,
                            c = e.radiusSq;
                        for (a = this.startIndex; a < this.endIndex; a++) i = 3 * u[a], t = s[0] - l[i], r = s[1] - l[i + 1], n = s[2] - l[i + 2], o = t * t + r * r + n * n, c >= o && e.buffer.add(o, u[a])
                    }, e.prototype.nearestNode = function(e, t) {
                        var r = e.pivot[t],
                            n = r < this.splitValue;
                        (n ? r + e.radius > this.splitValue : r - e.radius < this.splitValue) ? (this.left.nearest(e, (t + 1) % 3), this.right.nearest(e, (t + 1) % 3)) : n ? this.left.nearest(e, (t + 1) % 3) : this.right.nearest(e, (t + 1) % 3)
                    }, e.prototype.nearest = function(e, t) {
                        this.startIndex !== this.endIndex && (isNaN(this.splitValue) ? this.nearestLeaf(e) : this.nearestNode(e, t))
                    }, e
                }();
                e.SubdivisionTree3DNode = a;
                var s = function() {
                    function e() {
                        this.min = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE], this.max = [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE]
                    }
                    return e
                }();
                e.Box3D = s;
                var u = function() {
                    function e(e, t, r) {
                        var n, i = new o(e.length),
                            s = new Int32Array(e.length);
                        for (n = 0; n < e.length; n++) s[n] = n, t(e[n], i);
                        this.leafSize = r, this.positions = i.data, this.indices = s, this.emptyNode = new a(NaN, -1, -1, null, null), this.bounds = i.bounds
                    }
                    return e.prototype.split = function(e, t, r) {
                        var n = t - e + 1;
                        if (0 >= n) return this.emptyNode;
                        if (n <= this.leafSize) return new a(NaN, e, t + 1, this.emptyNode, this.emptyNode);
                        for (var i, o, s, u = this.bounds.min[r], l = this.bounds.max[r], c = .5 * (u + l), h = 0, p = e, d = t; d > p;) {
                            for (i = this.indices[d], this.indices[d] = this.indices[p], this.indices[p] = i; t >= p && this.positions[3 * this.indices[p] + r] <= c;) p++;
                            for (; d >= e && this.positions[3 * this.indices[d] + r] > c;) d--
                        }
                        return h = p - 1, this.bounds.max[r] = c, o = this.split(e, h, (r + 1) % 3), this.bounds.max[r] = l, this.bounds.min[r] = c, s = this.split(h + 1, t, (r + 1) % 3), this.bounds.min[r] = u, new a(c, e, t + 1, o, s)
                    }, e.prototype.build = function() {
                        return this.split(0, this.indices.length - 1, 0)
                    }, e
                }()
            }(t = e.Geometry || (e.Geometry = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    function n(t) {
                        return e.Computation.create(function(e) {
                            t.normals && e.resolve(t), e.update("Computing normals..."), e.schedule(function() {
                                var r, n, i = new Float32Array(t.vertices.length),
                                    o = t.vertices,
                                    a = t.triangleIndices;
                                a.length;
                                for (n = 0; n < a.length; n += 3) {
                                    var s = 3 * a[n],
                                        u = 3 * a[n + 1],
                                        l = 3 * a[n + 2],
                                        c = o[s + 2] * (o[u + 1] - o[l + 1]) + o[u + 2] * o[l + 1] - o[u + 1] * o[l + 2] + o[s + 1] * (-o[u + 2] + o[l + 2]),
                                        h = -(o[u + 2] * o[l]) + o[s + 2] * (-o[u] + o[l]) + o[s] * (o[u + 2] - o[l + 2]) + o[u] * o[l + 2],
                                        p = o[s + 1] * (o[u] - o[l]) + o[u + 1] * o[l] - o[u] * o[l + 1] + o[s] * (-o[u + 1] + o[u + 1]);
                                    i[s] += c, i[s + 1] += h, i[s + 2] += p, i[u] += c, i[u + 1] += h, i[u + 2] += p, i[l] += c, i[l + 1] += h, i[l + 2] += p
                                }
                                for (n = 0; n < i.length; n += 3) {
                                    var c = i[n],
                                        h = i[n + 1],
                                        p = i[n + 2];
                                    r = 1 / Math.sqrt(c * c + h * h + p * p), i[n] *= r, i[n + 1] *= r, i[n + 2] *= r
                                }
                                t.normals = i, e.resolve(t)
                            })
                        })
                    }

                    function i(e, t, r, n) {
                        r[3 * n] += e[3 * t], r[3 * n + 1] += e[3 * t + 1], r[3 * n + 2] += e[3 * t + 2]
                    }

                    function o(e, t, r) {
                        for (var n = e.triangleIndices.length, o = e.vertices, a = e.triangleIndices, s = 0; n > s; s += 3) {
                            var u = a[s],
                                l = a[s + 1],
                                c = a[s + 2];
                            i(o, l, r, u), i(o, c, r, u), i(o, u, r, l), i(o, c, r, l), i(o, u, r, c), i(o, l, r, c)
                        }
                        for (var s = 0, h = e.vertexCount; h > s; s++) {
                            var p = t[s] + 2;
                            r[3 * s] = (r[3 * s] + 2 * o[3 * s]) / p, r[3 * s + 1] = (r[3 * s + 1] + 2 * o[3 * s + 1]) / p, r[3 * s + 2] = (r[3 * s + 2] + 2 * o[3 * s + 2]) / p
                        }
                    }

                    function a(t, r) {
                        return void 0 === r && (r = 1), 1 > r && (r = 0), 0 === r ? e.Computation.resolve(t) : e.Computation.create(function(e) {
                            e.update("Smoothing surface...");
                            for (var n = new Int32Array(t.vertexCount), i = t.triangleIndices.length, a = t.triangleIndices, s = 0; i > s; s++) n[a[s]] += 2;
                            var u = new Float32Array(t.vertices.length),
                                l = function(i) {
                                    if (i >= r) return void e.resolve(t);
                                    if (i > 0)
                                        for (var a = 0, s = u.length; s > a; a++) u[a] = 0;
                                    t.normals = void 0, o(t, n, u);
                                    var c = t.vertices;
                                    t.vertices = u, u = c, e.update("Smoothing surface...", e.abortRequest, i + 1, r), e.schedule(function() {
                                        return l(i + 1)
                                    })
                                };
                            l(0)
                        })
                    }

                    function s(t) {
                        return e.Computation.create(function(e) {
                            return t.boundingSphere ? void e.resolve(t) : (e.update("Computing bounding sphere..."), void e.schedule(function() {
                                for (var r = t.vertices, n = 0, i = 0, o = 0, a = 0, s = t.vertices.length; s > a; a += 3) n += r[a], i += r[a + 1], o += r[a + 2];
                                n /= t.vertexCount, i /= t.vertexCount, o /= t.vertexCount;
                                for (var u = 0, a = 0, s = r.length; s > a; a += 3) {
                                    var l = n - r[a],
                                        c = i - r[a + 1],
                                        h = o - r[a + 2];
                                    u = Math.max(u, l * l + c * c + h * h)
                                }
                                t.boundingSphere = {
                                    center: {
                                        x: n,
                                        y: i,
                                        z: o
                                    },
                                    radius: Math.sqrt(u)
                                }, e.resolve(t)
                            }))
                        })
                    }

                    function u(r, n) {
                        return e.Computation.create(function(e) {
                            e.update("Updating surface..."), e.schedule(function() {
                                for (var i = {
                                        x: .1,
                                        y: .1,
                                        z: .1
                                    }, o = t.LinearAlgebra.Matrix4.transformVector3, a = r.vertices, s = 0, u = r.vertices.length; u > s; s += 3) i.x = a[s], i.y = a[s + 1], i.z = a[s + 2], o(i, i, n), a[s] = i.x, a[s + 1] = i.y, a[s + 2] = i.z;
                                r.normals = void 0, r.boundingSphere = void 0, e.resolve(r)
                            })
                        })
                    }
                    r.computeNormals = n, r.laplacianSmooth = a, r.computeBoundingSphere = s, r.transform = u
                }(r = t.Surface || (t.Surface = {}))
            }(t = e.Geometry || (e.Geometry = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    function r(t) {
                        return e.Computation.create(function(e) {
                            var r = new n(t, e);
                            r.start()
                        })
                    }
                    t.compute = r;
                    var n = function() {
                            function t(t, r) {
                                var n = this;
                                this.ctx = r, this.chunkSize = 512e3, this.done = 0, this.k = 0, this.minX = 0, this.minY = 0, this.minZ = 0, this.maxX = 0, this.maxY = 0, this.maxZ = 0, this._slice = function() {
                                    try {
                                        n.slice()
                                    } catch (e) {
                                        n.ctx.reject("" + e)
                                    }
                                };
                                var o = e.Utils.extend({}, t);
                                o.bottomLeft || (o.bottomLeft = [0, 0, 0]), o.topRight || (o.topRight = o.scalarField.dimensions), this.state = new i(o), this.minX = o.bottomLeft[0], this.minY = o.bottomLeft[1], this.minZ = o.bottomLeft[2], this.maxX = o.topRight[0] - 1, this.maxY = o.topRight[1] - 1, this.maxZ = o.topRight[2] - 1, this.k = this.minZ, this.size = (this.maxX - this.minX) * (this.maxY - this.minY) * (this.maxZ - this.minZ), this.sliceSize = (this.maxX - this.minX) * (this.maxY - this.minY)
                            }
                            return t.prototype.nextSlice = function() {
                                return this.ctx.abortRequested ? void this.ctx.abort() : (this.done += this.sliceSize, this.ctx.update("Computing surface...", this.ctx.abortRequest, this.done, this.size), void(this.k >= this.maxZ ? this.finish() : this.ctx.schedule(this._slice)))
                            }, t.prototype.slice = function() {
                                for (var e = this.minY; e < this.maxY; e++)
                                    for (var t = this.minX; t < this.maxX; t++) this.state.processCell(t, e, this.k);
                                this.k++, this.nextSlice()
                            }, t.prototype.finish = function() {
                                var e = this.state.vertexBuffer.compact(),
                                    t = this.state.triangleBuffer.compact();
                                this.state.vertexBuffer = null, this.state.verticesOnEdges = null;
                                var r = {
                                    vertexCount: e.length / 3 | 0,
                                    triangleCount: t.length / 3 | 0,
                                    vertices: e,
                                    triangleIndices: t,
                                    annotation: this.state.annotate ? this.state.annotationBuffer.compact() : void 0
                                };
                                this.ctx.resolve(r)
                            }, t.prototype.start = function() {
                                this.ctx.update("Computing surface...", this.ctx.abortRequest, 0, this.size), this.ctx.schedule(this._slice)
                            }, t
                        }(),
                        i = function() {
                            function r(t) {
                                this.vertList = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.i = 0, this.j = 0, this.k = 0, this.nX = t.scalarField.dimensions[0], this.nY = t.scalarField.dimensions[1], this.nZ = t.scalarField.dimensions[2], this.isoLevel = t.isoLevel, this.scalarField = t.scalarField, this.annotationField = t.annotationField;
                                var r = t.topRight[0] - t.bottomLeft[0],
                                    n = t.topRight[1] - t.bottomLeft[1],
                                    i = t.topRight[2] - t.bottomLeft[2],
                                    o = Math.min(262144, 0 | Math.max(r * n * i / 16, 1024)),
                                    a = Math.min(65536, 4 * o);
                                this.vertexBuffer = e.Utils.ChunkedArrayBuilder.forVertex3D(o), this.triangleBuffer = new e.Utils.ChunkedArrayBuilder(function(e) {
                                    return new Uint32Array(e)
                                }, a, 3), this.annotate = !!t.annotationField, this.annotate && (this.annotationBuffer = e.Utils.ChunkedArrayBuilder.forInt32(o)), this.verticesOnEdges = new Int32Array(3 * this.nX * this.nY * this.nZ)
                            }
                            return r.prototype.getAnnotation = function() {
                                return this.annotationField.get(this.i, this.j, this.k)
                            }, r.prototype.getFieldFromIndices = function(e, t, r) {
                                return this.scalarField.get(e, t, r)
                            }, r.prototype.get3dOffsetFromEdgeInfo = function(e) {
                                return this.nX * ((this.k + e.k) * this.nY + this.j + e.j) + this.i + e.i | 0
                            }, r.prototype.interpolate = function(e) {
                                var r = t.EdgeIdInfo[e],
                                    n = 3 * this.get3dOffsetFromEdgeInfo(r) + r.e,
                                    i = this.verticesOnEdges[n];
                                if (i > 0) return i - 1 | 0;
                                var o = t.CubeEdges[e],
                                    a = o.a,
                                    s = o.b,
                                    u = a.i + this.i,
                                    l = a.j + this.j,
                                    c = a.k + this.k,
                                    h = s.i + this.i,
                                    p = s.j + this.j,
                                    d = s.k + this.k,
                                    f = this.getFieldFromIndices(u, l, c),
                                    m = this.getFieldFromIndices(h, p, d),
                                    v = (this.isoLevel - f) / (f - m),
                                    g = 0 | this.vertexBuffer.add3(u + v * (u - h), l + v * (l - p), c + v * (c - d));
                                return this.verticesOnEdges[n] = g + 1, this.annotate && this.annotationBuffer.add(this.getAnnotation()), g
                            }, r.prototype.processCell = function(e, r, n) {
                                var i = 0;
                                if (this.getFieldFromIndices(e, r, n) < this.isoLevel && (i |= 1), this.getFieldFromIndices(e + 1, r, n) < this.isoLevel && (i |= 2), this.getFieldFromIndices(e + 1, r + 1, n) < this.isoLevel && (i |= 4), this.getFieldFromIndices(e, r + 1, n) < this.isoLevel && (i |= 8), this.getFieldFromIndices(e, r, n + 1) < this.isoLevel && (i |= 16), this.getFieldFromIndices(e + 1, r, n + 1) < this.isoLevel && (i |= 32), this.getFieldFromIndices(e + 1, r + 1, n + 1) < this.isoLevel && (i |= 64), this.getFieldFromIndices(e, r + 1, n + 1) < this.isoLevel && (i |= 128), 0 !== i && 255 !== i) {
                                    this.i = e, this.j = r, this.k = n;
                                    var o = t.EdgeTable[i];
                                    (1 & o) > 0 && (this.vertList[0] = this.interpolate(0)), (2 & o) > 0 && (this.vertList[1] = this.interpolate(1)), (4 & o) > 0 && (this.vertList[2] = this.interpolate(2)), (8 & o) > 0 && (this.vertList[3] = this.interpolate(3)), (16 & o) > 0 && (this.vertList[4] = this.interpolate(4)), (32 & o) > 0 && (this.vertList[5] = this.interpolate(5)), (64 & o) > 0 && (this.vertList[6] = this.interpolate(6)), (128 & o) > 0 && (this.vertList[7] = this.interpolate(7)), (256 & o) > 0 && (this.vertList[8] = this.interpolate(8)), (512 & o) > 0 && (this.vertList[9] = this.interpolate(9)), (1024 & o) > 0 && (this.vertList[10] = this.interpolate(10)), (2048 & o) > 0 && (this.vertList[11] = this.interpolate(11));
                                    for (var a = t.TriTable[i], s = 0; s < a.length; s += 3) this.triangleBuffer.add3(this.vertList[a[s]], this.vertList[a[s + 1]], this.vertList[a[s + 2]])
                                }
                            }, r
                        }()
                }(r = t.MarchingCubes || (t.MarchingCubes = {}))
            }(t = e.Geometry || (e.Geometry = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    var t = function() {
                        function e(e, t, r) {
                            this.i = 0 | e, this.j = 0 | t, this.k = 0 | r
                        }
                        return e
                    }();
                    e.Index = t;
                    var r = function() {
                        function e(e, t) {
                            this.a = e, this.b = t
                        }
                        return e
                    }();
                    e.IndexPair = r, e.EdgesXY = [
                        [],
                        [0, 3],
                        [0, 1],
                        [1, 3],
                        [1, 2],
                        [0, 1, 1, 2, 2, 3, 0, 3],
                        [0, 2],
                        [2, 3],
                        [2, 3],
                        [0, 2],
                        [0, 1, 1, 2, 2, 3, 0, 3],
                        [1, 2],
                        [1, 3],
                        [0, 1],
                        [0, 3],
                        []
                    ], e.EdgesXZ = [
                        [],
                        [0, 8],
                        [0, 9],
                        [9, 8],
                        [9, 4],
                        [0, 9, 9, 4, 4, 8, 0, 8],
                        [0, 4],
                        [4, 8],
                        [4, 8],
                        [0, 4],
                        [0, 9, 9, 4, 4, 8, 0, 8],
                        [9, 4],
                        [9, 8],
                        [0, 9],
                        [0, 8],
                        []
                    ], e.EdgesYZ = [
                        [],
                        [3, 8],
                        [3, 11],
                        [11, 8],
                        [11, 7],
                        [3, 11, 11, 7, 7, 8, 3, 8],
                        [3, 7],
                        [7, 8],
                        [7, 8],
                        [3, 7],
                        [3, 11, 11, 7, 7, 8, 3, 8],
                        [11, 7],
                        [11, 8],
                        [3, 11],
                        [3, 8],
                        []
                    ], e.CubeVertices = [new t(0, 0, 0), new t(1, 0, 0), new t(1, 1, 0), new t(0, 1, 0), new t(0, 0, 1), new t(1, 0, 1), new t(1, 1, 1), new t(0, 1, 1)], e.CubeEdges = [new r(e.CubeVertices[0], e.CubeVertices[1]), new r(e.CubeVertices[1], e.CubeVertices[2]), new r(e.CubeVertices[2], e.CubeVertices[3]), new r(e.CubeVertices[3], e.CubeVertices[0]), new r(e.CubeVertices[4], e.CubeVertices[5]), new r(e.CubeVertices[5], e.CubeVertices[6]), new r(e.CubeVertices[6], e.CubeVertices[7]), new r(e.CubeVertices[7], e.CubeVertices[4]), new r(e.CubeVertices[0], e.CubeVertices[4]), new r(e.CubeVertices[1], e.CubeVertices[5]), new r(e.CubeVertices[2], e.CubeVertices[6]), new r(e.CubeVertices[3], e.CubeVertices[7])], e.EdgeIdInfo = [{
                        i: 0,
                        j: 0,
                        k: 0,
                        e: 0
                    }, {
                        i: 1,
                        j: 0,
                        k: 0,
                        e: 1
                    }, {
                        i: 0,
                        j: 1,
                        k: 0,
                        e: 0
                    }, {
                        i: 0,
                        j: 0,
                        k: 0,
                        e: 1
                    }, {
                        i: 0,
                        j: 0,
                        k: 1,
                        e: 0
                    }, {
                        i: 1,
                        j: 0,
                        k: 1,
                        e: 1
                    }, {
                        i: 0,
                        j: 1,
                        k: 1,
                        e: 0
                    }, {
                        i: 0,
                        j: 0,
                        k: 1,
                        e: 1
                    }, {
                        i: 0,
                        j: 0,
                        k: 0,
                        e: 2
                    }, {
                        i: 1,
                        j: 0,
                        k: 0,
                        e: 2
                    }, {
                        i: 1,
                        j: 1,
                        k: 0,
                        e: 2
                    }, {
                        i: 0,
                        j: 1,
                        k: 0,
                        e: 2
                    }], e.EdgeTable = [0, 265, 515, 778, 1030, 1295, 1541, 1804, 2060, 2309, 2575, 2822, 3082, 3331, 3593, 3840, 400, 153, 915, 666, 1430, 1183, 1941, 1692, 2460, 2197, 2975, 2710, 3482, 3219, 3993, 3728, 560, 825, 51, 314, 1590, 1855, 1077, 1340, 2620, 2869, 2111, 2358, 3642, 3891, 3129, 3376, 928, 681, 419, 170, 1958, 1711, 1445, 1196, 2988, 2725, 2479, 2214, 4010, 3747, 3497, 3232, 1120, 1385, 1635, 1898, 102, 367, 613, 876, 3180, 3429, 3695, 3942, 2154, 2403, 2665, 2912, 1520, 1273, 2035, 1786, 502, 255, 1013, 764, 3580, 3317, 4095, 3830, 2554, 2291, 3065, 2800, 1616, 1881, 1107, 1370, 598, 863, 85, 348, 3676, 3925, 3167, 3414, 2650, 2899, 2137, 2384, 1984, 1737, 1475, 1226, 966, 719, 453, 204, 4044, 3781, 3535, 3270, 3018, 2755, 2505, 2240, 2240, 2505, 2755, 3018, 3270, 3535, 3781, 4044, 204, 453, 719, 966, 1226, 1475, 1737, 1984, 2384, 2137, 2899, 2650, 3414, 3167, 3925, 3676, 348, 85, 863, 598, 1370, 1107, 1881, 1616, 2800, 3065, 2291, 2554, 3830, 4095, 3317, 3580, 764, 1013, 255, 502, 1786, 2035, 1273, 1520, 2912, 2665, 2403, 2154, 3942, 3695, 3429, 3180, 876, 613, 367, 102, 1898, 1635, 1385, 1120, 3232, 3497, 3747, 4010, 2214, 2479, 2725, 2988, 1196, 1445, 1711, 1958, 170, 419, 681, 928, 3376, 3129, 3891, 3642, 2358, 2111, 2869, 2620, 1340, 1077, 1855, 1590, 314, 51, 825, 560, 3728, 3993, 3219, 3482, 2710, 2975, 2197, 2460, 1692, 1941, 1183, 1430, 666, 915, 153, 400, 3840, 3593, 3331, 3082, 2822, 2575, 2309, 2060, 1804, 1541, 1295, 1030, 778, 515, 265, 0], e.TriTable = [
                        [],
                        [0, 8, 3],
                        [0, 1, 9],
                        [1, 8, 3, 9, 8, 1],
                        [1, 2, 10],
                        [0, 8, 3, 1, 2, 10],
                        [9, 2, 10, 0, 2, 9],
                        [2, 8, 3, 2, 10, 8, 10, 9, 8],
                        [3, 11, 2],
                        [0, 11, 2, 8, 11, 0],
                        [1, 9, 0, 2, 3, 11],
                        [1, 11, 2, 1, 9, 11, 9, 8, 11],
                        [3, 10, 1, 11, 10, 3],
                        [0, 10, 1, 0, 8, 10, 8, 11, 10],
                        [3, 9, 0, 3, 11, 9, 11, 10, 9],
                        [9, 8, 10, 10, 8, 11],
                        [4, 7, 8],
                        [4, 3, 0, 7, 3, 4],
                        [0, 1, 9, 8, 4, 7],
                        [4, 1, 9, 4, 7, 1, 7, 3, 1],
                        [1, 2, 10, 8, 4, 7],
                        [3, 4, 7, 3, 0, 4, 1, 2, 10],
                        [9, 2, 10, 9, 0, 2, 8, 4, 7],
                        [2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4],
                        [8, 4, 7, 3, 11, 2],
                        [11, 4, 7, 11, 2, 4, 2, 0, 4],
                        [9, 0, 1, 8, 4, 7, 2, 3, 11],
                        [4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1],
                        [3, 10, 1, 3, 11, 10, 7, 8, 4],
                        [1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4],
                        [4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3],
                        [4, 7, 11, 4, 11, 9, 9, 11, 10],
                        [9, 5, 4],
                        [9, 5, 4, 0, 8, 3],
                        [0, 5, 4, 1, 5, 0],
                        [8, 5, 4, 8, 3, 5, 3, 1, 5],
                        [1, 2, 10, 9, 5, 4],
                        [3, 0, 8, 1, 2, 10, 4, 9, 5],
                        [5, 2, 10, 5, 4, 2, 4, 0, 2],
                        [2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8],
                        [9, 5, 4, 2, 3, 11],
                        [0, 11, 2, 0, 8, 11, 4, 9, 5],
                        [0, 5, 4, 0, 1, 5, 2, 3, 11],
                        [2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5],
                        [10, 3, 11, 10, 1, 3, 9, 5, 4],
                        [4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10],
                        [5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3],
                        [5, 4, 8, 5, 8, 10, 10, 8, 11],
                        [9, 7, 8, 5, 7, 9],
                        [9, 3, 0, 9, 5, 3, 5, 7, 3],
                        [0, 7, 8, 0, 1, 7, 1, 5, 7],
                        [1, 5, 3, 3, 5, 7],
                        [9, 7, 8, 9, 5, 7, 10, 1, 2],
                        [10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3],
                        [8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2],
                        [2, 10, 5, 2, 5, 3, 3, 5, 7],
                        [7, 9, 5, 7, 8, 9, 3, 11, 2],
                        [9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11],
                        [2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7],
                        [11, 2, 1, 11, 1, 7, 7, 1, 5],
                        [9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11],
                        [5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0],
                        [11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0],
                        [11, 10, 5, 7, 11, 5],
                        [10, 6, 5],
                        [0, 8, 3, 5, 10, 6],
                        [9, 0, 1, 5, 10, 6],
                        [1, 8, 3, 1, 9, 8, 5, 10, 6],
                        [1, 6, 5, 2, 6, 1],
                        [1, 6, 5, 1, 2, 6, 3, 0, 8],
                        [9, 6, 5, 9, 0, 6, 0, 2, 6],
                        [5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8],
                        [2, 3, 11, 10, 6, 5],
                        [11, 0, 8, 11, 2, 0, 10, 6, 5],
                        [0, 1, 9, 2, 3, 11, 5, 10, 6],
                        [5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11],
                        [6, 3, 11, 6, 5, 3, 5, 1, 3],
                        [0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6],
                        [3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9],
                        [6, 5, 9, 6, 9, 11, 11, 9, 8],
                        [5, 10, 6, 4, 7, 8],
                        [4, 3, 0, 4, 7, 3, 6, 5, 10],
                        [1, 9, 0, 5, 10, 6, 8, 4, 7],
                        [10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4],
                        [6, 1, 2, 6, 5, 1, 4, 7, 8],
                        [1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7],
                        [8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6],
                        [7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9],
                        [3, 11, 2, 7, 8, 4, 10, 6, 5],
                        [5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11],
                        [0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6],
                        [9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6],
                        [8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6],
                        [5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11],
                        [0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7],
                        [6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9],
                        [10, 4, 9, 6, 4, 10],
                        [4, 10, 6, 4, 9, 10, 0, 8, 3],
                        [10, 0, 1, 10, 6, 0, 6, 4, 0],
                        [8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10],
                        [1, 4, 9, 1, 2, 4, 2, 6, 4],
                        [3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4],
                        [0, 2, 4, 4, 2, 6],
                        [8, 3, 2, 8, 2, 4, 4, 2, 6],
                        [10, 4, 9, 10, 6, 4, 11, 2, 3],
                        [0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6],
                        [3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10],
                        [6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1],
                        [9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3],
                        [8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1],
                        [3, 11, 6, 3, 6, 0, 0, 6, 4],
                        [6, 4, 8, 11, 6, 8],
                        [7, 10, 6, 7, 8, 10, 8, 9, 10],
                        [0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10],
                        [10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0],
                        [10, 6, 7, 10, 7, 1, 1, 7, 3],
                        [1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7],
                        [2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9],
                        [7, 8, 0, 7, 0, 6, 6, 0, 2],
                        [7, 3, 2, 6, 7, 2],
                        [2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7],
                        [2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7],
                        [1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11],
                        [11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1],
                        [8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6],
                        [0, 9, 1, 11, 6, 7],
                        [7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0],
                        [7, 11, 6],
                        [7, 6, 11],
                        [3, 0, 8, 11, 7, 6],
                        [0, 1, 9, 11, 7, 6],
                        [8, 1, 9, 8, 3, 1, 11, 7, 6],
                        [10, 1, 2, 6, 11, 7],
                        [1, 2, 10, 3, 0, 8, 6, 11, 7],
                        [2, 9, 0, 2, 10, 9, 6, 11, 7],
                        [6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8],
                        [7, 2, 3, 6, 2, 7],
                        [7, 0, 8, 7, 6, 0, 6, 2, 0],
                        [2, 7, 6, 2, 3, 7, 0, 1, 9],
                        [1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6],
                        [10, 7, 6, 10, 1, 7, 1, 3, 7],
                        [10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8],
                        [0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7],
                        [7, 6, 10, 7, 10, 8, 8, 10, 9],
                        [6, 8, 4, 11, 8, 6],
                        [3, 6, 11, 3, 0, 6, 0, 4, 6],
                        [8, 6, 11, 8, 4, 6, 9, 0, 1],
                        [9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6],
                        [6, 8, 4, 6, 11, 8, 2, 10, 1],
                        [1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6],
                        [4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9],
                        [10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3],
                        [8, 2, 3, 8, 4, 2, 4, 6, 2],
                        [0, 4, 2, 4, 6, 2],
                        [1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8],
                        [1, 9, 4, 1, 4, 2, 2, 4, 6],
                        [8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1],
                        [10, 1, 0, 10, 0, 6, 6, 0, 4],
                        [4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3],
                        [10, 9, 4, 6, 10, 4],
                        [4, 9, 5, 7, 6, 11],
                        [0, 8, 3, 4, 9, 5, 11, 7, 6],
                        [5, 0, 1, 5, 4, 0, 7, 6, 11],
                        [11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5],
                        [9, 5, 4, 10, 1, 2, 7, 6, 11],
                        [6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5],
                        [7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2],
                        [3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6],
                        [7, 2, 3, 7, 6, 2, 5, 4, 9],
                        [9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7],
                        [3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0],
                        [6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8],
                        [9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7],
                        [1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4],
                        [4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10],
                        [7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10],
                        [6, 9, 5, 6, 11, 9, 11, 8, 9],
                        [3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5],
                        [0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11],
                        [6, 11, 3, 6, 3, 5, 5, 3, 1],
                        [1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6],
                        [0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10],
                        [11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5],
                        [6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3],
                        [5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2],
                        [9, 5, 6, 9, 6, 0, 0, 6, 2],
                        [1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8],
                        [1, 5, 6, 2, 1, 6],
                        [1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6],
                        [10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0],
                        [0, 3, 8, 5, 6, 10],
                        [10, 5, 6],
                        [11, 5, 10, 7, 5, 11],
                        [11, 5, 10, 11, 7, 5, 8, 3, 0],
                        [5, 11, 7, 5, 10, 11, 1, 9, 0],
                        [10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1],
                        [11, 1, 2, 11, 7, 1, 7, 5, 1],
                        [0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11],
                        [9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7],
                        [7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2],
                        [2, 5, 10, 2, 3, 5, 3, 7, 5],
                        [8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5],
                        [9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2],
                        [9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2],
                        [1, 3, 5, 3, 7, 5],
                        [0, 8, 7, 0, 7, 1, 1, 7, 5],
                        [9, 0, 3, 9, 3, 5, 5, 3, 7],
                        [9, 8, 7, 5, 9, 7],
                        [5, 8, 4, 5, 10, 8, 10, 11, 8],
                        [5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0],
                        [0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5],
                        [10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4],
                        [2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8],
                        [0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11],
                        [0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5],
                        [9, 4, 5, 2, 11, 3],
                        [2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4],
                        [5, 10, 2, 5, 2, 4, 4, 2, 0],
                        [3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9],
                        [5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2],
                        [8, 4, 5, 8, 5, 3, 3, 5, 1],
                        [0, 4, 5, 1, 0, 5],
                        [8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5],
                        [9, 4, 5],
                        [4, 11, 7, 4, 9, 11, 9, 10, 11],
                        [0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11],
                        [1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11],
                        [3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4],
                        [4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2],
                        [9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3],
                        [11, 7, 4, 11, 4, 2, 2, 4, 0],
                        [11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4],
                        [2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9],
                        [9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7],
                        [3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10],
                        [1, 10, 2, 8, 7, 4],
                        [4, 9, 1, 4, 1, 7, 7, 1, 3],
                        [4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1],
                        [4, 0, 3, 7, 4, 3],
                        [4, 8, 7],
                        [9, 10, 8, 10, 11, 8],
                        [3, 0, 9, 3, 9, 11, 11, 9, 10],
                        [0, 1, 10, 0, 10, 8, 8, 10, 11],
                        [3, 1, 10, 11, 3, 10],
                        [1, 2, 11, 1, 11, 9, 9, 11, 8],
                        [3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9],
                        [0, 2, 11, 8, 0, 11],
                        [3, 2, 11],
                        [2, 3, 8, 2, 8, 10, 10, 8, 9],
                        [9, 10, 2, 0, 9, 2],
                        [2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8],
                        [1, 10, 2],
                        [1, 3, 8, 9, 1, 8],
                        [0, 9, 1],
                        [0, 3, 8],
                        []
                    ]
                }(t = e.MarchingCubes || (e.MarchingCubes = {}))
            }(t = e.Geometry || (e.Geometry = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    function n(t, r) {
                        return e.Computation.resolve({
                            surface: r,
                            usedParameters: t.parameters
                        })
                    }

                    function i(t) {
                        return e.Computation.create(function(e) {
                            var r = new s(t, e);
                            r.start()
                        })
                    }

                    function o(e) {
                        return i(e).bind(function(e) {
                            return t.MarchingCubes.compute(e.data).bind(function(r) {
                                return t.Surface.transform(r, e.transform)
                            }).bind(function(r) {
                                return t.Surface.laplacianSmooth(r, e.inputParameters.parameters.smoothingIterations).bind(function(t) {
                                    return n(e, t)
                                })
                            })
                        })
                    }
                    var a = function() {
                        function t(t) {
                            e.Utils.extend(this, t, {
                                exactBoundary: !1,
                                boundaryDelta: {
                                    dx: 1.5,
                                    dy: 1.5,
                                    dz: 1.5
                                },
                                probeRadius: 1.4,
                                atomRadii: function() {
                                    return 1
                                },
                                density: 1.1,
                                interactive: !1,
                                smoothingIterations: 1
                            }), this.exactBoundary && (this.boundaryDelta = {
                                dx: 0,
                                dy: 0,
                                dz: 0
                            }), this.density < .3 && (this.density = .3)
                        }
                        return t
                    }();
                    r.MolecularIsoSurfaceParameters = a;
                    var s = function() {
                        function r(e, t) {
                            var r = this;
                            this.inputParameters = e, this.ctx = t, this.minX = Number.MAX_VALUE, this.minY = Number.MAX_VALUE, this.minZ = Number.MAX_VALUE, this.maxX = -Number.MAX_VALUE, this.maxY = -Number.MAX_VALUE, this.maxZ = -Number.MAX_VALUE, this.nX = 0, this.nY = 0, this.nZ = 0, this.dX = .1, this.dY = .1, this.dZ = .1, this.field = new Float32Array(0), this.maxField = new Float32Array(0), this.proximityMap = new Int32Array(0), this.minIndex = {
                                i: 0,
                                j: 0,
                                k: 0
                            }, this.maxIndex = {
                                i: 0,
                                j: 0,
                                k: 0
                            }, this.currentAtom = 0, this.chunkSize = 1e4, this._addChunk = function() {
                                try {
                                    r.addChunk()
                                } catch (e) {
                                    r.ctx.reject(e)
                                }
                            }, this.parameters = new a(e.parameters);
                            var n = e.positions;
                            this.x = n.x, this.y = n.y, this.z = n.z, this.atomIndices = e.atomIndices
                        }
                        return r.prototype.findBounds = function() {
                            for (var e = 0, t = this.atomIndices; e < t.length; e++) {
                                var r = t[e],
                                    n = this.parameters.exactBoundary ? 0 : this.parameters.atomRadius(r) + this.parameters.probeRadius,
                                    i = this.x[r],
                                    o = this.y[r],
                                    a = this.z[r];
                                0 > n || (this.minX = Math.min(this.minX, i - n), this.minY = Math.min(this.minY, o - n), this.minZ = Math.min(this.minZ, a - n), this.maxX = Math.max(this.maxX, i + n), this.maxY = Math.max(this.maxY, o + n), this.maxZ = Math.max(this.maxZ, a + n))
                            }
                            this.minX === Number.MAX_VALUE && (this.minX = this.minY = this.minZ = -1, this.maxX = this.maxY = this.maxZ = 1), this.minX -= this.parameters.boundaryDelta.dx, this.minY -= this.parameters.boundaryDelta.dy, this.minZ -= this.parameters.boundaryDelta.dz,
                                this.maxX += this.parameters.boundaryDelta.dx, this.maxY += this.parameters.boundaryDelta.dy, this.maxZ += this.parameters.boundaryDelta.dz, this.nX = Math.floor((this.maxX - this.minX) * this.parameters.density), this.nY = Math.floor((this.maxY - this.minY) * this.parameters.density), this.nZ = Math.floor((this.maxZ - this.minZ) * this.parameters.density), this.nX = Math.min(this.nX, 333), this.nY = Math.min(this.nY, 333), this.nZ = Math.min(this.nZ, 333), this.dX = (this.maxX - this.minX) / (this.nX - 1), this.dY = (this.maxY - this.minY) / (this.nY - 1), this.dZ = (this.maxZ - this.minZ) / (this.nZ - 1)
                        }, r.prototype.initData = function() {
                            var e = this.nX * this.nY * this.nZ;
                            this.field = new Float32Array(e), this.maxField = new Float32Array(e), this.proximityMap = new Int32Array(e);
                            for (var t = -Number.MAX_VALUE, r = 0, n = this.proximityMap.length; n > r; r++) this.maxField[r] = t, this.proximityMap[r] = -1
                        }, r.prototype.updateMinIndex = function(e, t, r) {
                            this.minIndex.i = Math.max(0 | Math.floor((e - this.minX) / this.dX), 0), this.minIndex.j = Math.max(0 | Math.floor((t - this.minY) / this.dY), 0), this.minIndex.k = Math.max(0 | Math.floor((r - this.minZ) / this.dZ), 0)
                        }, r.prototype.updateMaxIndex = function(e, t, r) {
                            this.maxIndex.i = Math.min(0 | Math.ceil((e - this.minX) / this.dX), this.nX), this.maxIndex.j = Math.min(0 | Math.ceil((t - this.minY) / this.dY), this.nY), this.maxIndex.k = Math.min(0 | Math.ceil((r - this.minZ) / this.dZ), this.nZ)
                        }, r.prototype.addBall = function(e, t) {
                            var r = t * t,
                                n = this.x[e],
                                i = this.y[e],
                                o = this.z[e];
                            this.updateMinIndex(n - t, i - t, o - t), this.updateMaxIndex(n + t, i + t, o + t);
                            var a = this.minIndex.i,
                                s = this.minIndex.j,
                                u = this.minIndex.k,
                                l = this.maxIndex.i,
                                c = this.maxIndex.j,
                                h = this.maxIndex.k;
                            n = this.minX - n, i = this.minY - i, o = this.minZ - o;
                            for (var p = u; h > p; p++)
                                for (var d = o + p * this.dZ, f = d * d, m = p * this.nY, v = s; c > v; v++)
                                    for (var g = i + v * this.dY, y = f + g * g, b = this.nX * (m + v), x = a; l > x; x++) {
                                        var _ = n + x * this.dX,
                                            w = y + _ * _,
                                            C = b + x,
                                            E = r / (1e-6 + w) - 1;
                                        E > this.maxField[C] && (this.proximityMap[C] = e, this.maxField[C] = E), E > 0 && (this.field[C] += E)
                                    }
                        }, r.prototype.addChunk = function() {
                            for (var e = this.atomIndices.length, t = 0; this.currentAtom < e; this.currentAtom++) {
                                var r = this.atomIndices[this.currentAtom],
                                    n = this.parameters.atomRadius(r) + this.parameters.probeRadius;
                                if (t++, !(0 > n) && (this.addBall(r, n), t >= this.chunkSize)) return this.ctx.abortRequested ? void this.ctx.abort() : (this.ctx.update("Creating field...", this.ctx.abortRequest, this.currentAtom, this.atomIndices.length), void this.ctx.schedule(this._addChunk))
                            }
                            this.ctx.update("Creating field...", void 0, this.currentAtom, this.atomIndices.length), this.finish()
                        }, r.prototype.finish = function() {
                            this.maxField = null;
                            var r = t.LinearAlgebra.Matrix4.empty();
                            t.LinearAlgebra.Matrix4.fromTranslation(r, [this.minX, this.minY, this.minZ]), r[0] = this.dX, r[5] = this.dY, r[10] = this.dZ;
                            var n = {
                                data: {
                                    scalarField: new e.Formats.Field3DZYX(this.field, [this.nX, this.nY, this.nZ]),
                                    annotationField: new e.Formats.Field3DZYX(this.proximityMap, [this.nX, this.nY, this.nZ]),
                                    isoLevel: .05
                                },
                                bottomLeft: {
                                    x: this.minX,
                                    y: this.minY,
                                    z: this.minZ
                                },
                                topRight: {
                                    x: this.maxX,
                                    y: this.maxY,
                                    z: this.maxZ
                                },
                                transform: r,
                                inputParameters: this.inputParameters,
                                parameters: this.parameters
                            };
                            this.ctx.resolve(n)
                        }, r.prototype.start = function() {
                            var e = this;
                            this.ctx.update("Initializing..."), this.ctx.schedule(function() {
                                try {
                                    e.findBounds(), e.initData()
                                } catch (t) {
                                    return void e.ctx.reject(t)
                                }
                                return e.ctx.abortRequested ? void e.ctx.abort() : (e.ctx.update("Creating field...", e.ctx.abortRequest, 0, e.atomIndices.length), void e.ctx.schedule(e._addChunk))
                            })
                        }, r
                    }();
                    r.createMolecularIsoFieldAsync = i, r.computeMolecularSurfaceAsync = o
                }(r = t.MolecularSurface || (t.MolecularSurface = {}))
            }(t = e.Geometry || (e.Geometry = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function e(e, t) {
                        this.name = e, this.creator = t
                    }
                    return e
                }();
                t.DataTableColumnDescriptor = r;
                var n = function() {
                    function t(t, r) {
                        this.count = t, this.indices = new Int32Array(t), this.columns = [];
                        for (var n = 0; t > n; n++) this.indices[n] = n;
                        if (r)
                            for (var i = 0, o = r.columns; i < o.length; i++) {
                                var a = o[i],
                                    s = r[a.name];
                                s instanceof e.Utils.ChunkedArrayBuilder && (s = s.compact()), Object.defineProperty(this, a.name, {
                                    enumerable: !0,
                                    configurable: !1,
                                    writable: !1,
                                    value: s
                                }), this.columns[this.columns.length] = a
                            }
                    }
                    return t.prototype.clone = function() {
                        for (var e = new i(this.count), t = [], r = 0, n = this.columns; r < n.length; r++) {
                            var o = n[r];
                            t[t.length] = {
                                src: this[o.name],
                                trg: e.addColumn(o.name, o.creator)
                            }
                        }
                        for (var a = 0, s = t; a < s.length; a++)
                            for (var o = s[a], u = o.src, l = o.trg, c = 0, h = this.count; h > c; c++) l[c] = u[c];
                        return e.seal()
                    }, t.prototype.getBuilder = function(e) {
                        for (var t = new i(e), r = 0, n = this.columns; r < n.length; r++) {
                            var o = n[r];
                            t.addColumn(o.name, o.creator)
                        }
                        return t
                    }, t.prototype.getRawData = function() {
                        var e = this;
                        return this.columns.map(function(t) {
                            return e[t.name]
                        })
                    }, t
                }();
                t.DataTable = n;
                var i = function() {
                    function e(e) {
                        this.columns = [], this.count = e
                    }
                    return e.prototype.addColumn = function(e, t) {
                        var n = t(this.count);
                        return Object.defineProperty(this, e, {
                            enumerable: !0,
                            configurable: !1,
                            writable: !1,
                            value: n
                        }), this.columns[this.columns.length] = new r(e, t), n
                    }, e.prototype.getRawData = function() {
                        var e = this;
                        return this.columns.map(function(t) {
                            return e[t.name]
                        })
                    }, e.prototype.seal = function() {
                        return new n(this.count, this)
                    }, e
                }();
                t.DataTableBuilder = i,
                    function(e) {
                        e[e.Polymer = 0] = "Polymer", e[e.NonPolymer = 1] = "NonPolymer", e[e.Water = 2] = "Water", e[e.Unknown = 3] = "Unknown"
                    }(t.EntityType || (t.EntityType = {}));
                t.EntityType;
                ! function(e) {
                    e[e.None = 0] = "None", e[e.Single = 1] = "Single", e[e.Double = 2] = "Double", e[e.Triple = 3] = "Triple", e[e.Quadruple = 4] = "Quadruple"
                }(t.BondOrder || (t.BondOrder = {}));
                var o = (t.BondOrder, function() {
                    function e(e) {
                        this.id = e, this.map = new Map
                    }
                    return e.prototype.add = function(e, t, r, n) {
                        void 0 === n && (n = !0);
                        var i = this.map.get(e);
                        if (void 0 !== i) {
                            var o = i.get(t);
                            void 0 === o && i.set(t, r)
                        } else {
                            var a = new Map;
                            a.set(t, r), this.map.set(e, a)
                        }
                        n && this.add(t, e, r, !1)
                    }, e
                }());
                t.ComponentBondInfoEntry = o;
                var a = function() {
                    function e() {
                        this.entries = new Map
                    }
                    return e.prototype.newEntry = function(e) {
                        var t = new o(e);
                        return this.entries.set(e, t), t
                    }, e
                }();
                t.ComponentBondInfo = a;
                var s = function() {
                    function e(e, t, r) {
                        this.asymId = e, this.seqNumber = t, this.insCode = r
                    }
                    return e.areEqual = function(e, t, r, n, i) {
                        return e.asymId === r[t] && e.seqNumber === n[t] && e.insCode === i[t]
                    }, e.compare = function(e, t) {
                        return e.asymId === t.asymId ? e.seqNumber === t.seqNumber ? e.insCode === t.insCode ? 0 : void 0 === e.insCode ? -1 : void 0 === t.insCode ? 1 : e.insCode < t.insCode ? -1 : 1 : e.seqNumber < t.seqNumber ? -1 : 1 : e.asymId < t.asymId ? -1 : 1
                    }, e.compareResidue = function(e, t, r, n, i) {
                        return e.asymId === r[t] ? e.seqNumber === n[t] ? e.insCode === i[t] ? 0 : void 0 === e.insCode ? -1 : void 0 === i[t] ? 1 : e.insCode < i[t] ? -1 : 1 : e.seqNumber < n[t] ? -1 : 1 : e.asymId < r[t] ? -1 : 1
                    }, e
                }();
                t.PolyResidueIdentifier = s;
                var u = function() {
                    function e(e, t, r, n) {
                        void 0 === n && (n = {}), this.type = e, this.startResidueId = t, this.endResidueId = r, this.info = n, this.startResidueIndex = -1, this.endResidueIndex = -1
                    }
                    return Object.defineProperty(e.prototype, "length", {
                        get: function() {
                            return this.endResidueIndex - this.startResidueIndex
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e
                }();
                t.SecondaryStructureElement = u;
                var l = function() {
                    function e(e, t, r, n, i) {
                        this.spacegroupName = e, this.cellSize = t, this.cellAngles = r, this.toFracTransform = n, this.isNonStandardCrytalFrame = i
                    }
                    return e
                }();
                t.SymmetryInfo = l;
                var c = function() {
                    function e(e, t, r) {
                        this.id = e, this.name = t, this.operator = r
                    }
                    return e
                }();
                t.AssemblyOperator = c;
                var h = function() {
                    function e(e, t) {
                        this.operators = e, this.asymIds = t
                    }
                    return e
                }();
                t.AssemblyGenEntry = h;
                var p = function() {
                    function e(e) {
                        this.name = e, this.gens = []
                    }
                    return e
                }();
                t.AssemblyGen = p;
                var d = function() {
                    function e(e, t) {
                        this.operators = e, this.assemblies = t
                    }
                    return e
                }();
                t.AssemblyInfo = d,
                    function(e) {
                        e[e.File = 0] = "File", e[e.Computed = 1] = "Computed"
                    }(t.MoleculeModelSource || (t.MoleculeModelSource = {}));
                var f = (t.MoleculeModelSource, function() {
                    function t(e, t, r) {
                        this.matrix = e, this.id = t, this.isIdentity = r
                    }
                    return t.prototype.apply = function(t) {
                        e.Geometry.LinearAlgebra.Matrix4.transformVector3(t, t, this.matrix)
                    }, t.applyToModelUnsafe = function(t, r) {
                        for (var n = {
                                x: .1,
                                y: .1,
                                z: .1
                            }, i = r.atoms, o = i.x, a = i.y, s = i.z, u = 0, l = r.atoms.count; l > u; u++) n.x = o[u], n.y = a[u], n.z = s[u], e.Geometry.LinearAlgebra.Matrix4.transformVector3(n, n, t), o[u] = n.x, a[u] = n.y, s[u] = n.z
                    }, t
                }());
                t.Operator = f;
                var m = function() {
                    function e(e, t, r, n, i, o, a, s, u, l, c, h, p) {
                        this.id = e, this.modelId = t, this.atoms = r, this.residues = n, this.chains = i, this.entities = o, this.componentBonds = a, this.secondaryStructure = s, this.symmetryInfo = u, this.assemblyInfo = l, this.parent = c, this.source = h, this.operators = p
                    }
                    return Object.defineProperty(e.prototype, "queryContext", {
                        get: function() {
                            return this._queryContext ? this._queryContext : (this._queryContext = t.Query.Context.ofStructure(this), this._queryContext)
                        },
                        enumerable: !0,
                        configurable: !0
                    }), e.prototype.query = function(e) {
                        return t.Query.Builder.toQuery(e)(this.queryContext)
                    }, e
                }();
                t.MoleculeModel = m;
                var v = function() {
                    function e(e, t) {
                        this.id = e, this.models = t
                    }
                    return e
                }();
                t.Molecule = v
            }(t = e.Structure || (e.Structure = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = e.Geometry.LinearAlgebra.Matrix4,
                    n = e.Geometry.LinearAlgebra.Vector4,
                    i = function() {
                        function e(e) {
                            if (this.info = e, this.temp = r.empty(), this.tempV = new Float64Array(4), void 0 === o.Spacegroup[e.spacegroupName]) throw "'" + e.spacegroupName + "' is not a spacegroup recognized by the library.";
                            this.space = this.getSpace(), this.operators = this.getOperators()
                        }
                        return Object.defineProperty(e.prototype, "operatorCount", {
                            get: function() {
                                return this.operators.length
                            },
                            enumerable: !0,
                            configurable: !0
                        }), e.prototype.getOperatorMatrix = function(e, t, n, i, o) {
                            return this.tempV[0] = t, this.tempV[1] = n, this.tempV[2] = i, r.fromTranslation(this.temp, this.tempV), r.mul(o, r.mul(o, r.mul(o, this.space.fromFrac, this.temp), this.operators[e]), this.space.toFrac), o
                        }, e.prototype.getSpace = function() {
                            var e = this.info.toFracTransform,
                                t = r.empty();
                            return r.invert(t, e), {
                                toFrac: e,
                                fromFrac: t,
                                baseX: n.transform(n.create(), n.fromValues(1, 0, 0, 1), e),
                                baseY: n.transform(n.create(), n.fromValues(0, 1, 0, 1), e),
                                baseZ: n.transform(n.create(), n.fromValues(0, 0, 1, 1), e)
                            }
                        }, e.getOperator = function(e) {
                            var t = o.Transform[e[0]],
                                n = o.Transform[e[1]],
                                i = o.Transform[e[2]];
                            return r.ofRows([t, n, i, [0, 0, 0, 1]])
                        }, e.prototype.getOperators = function() {
                            var t = o.Group[o.Spacegroup[this.info.spacegroupName]];
                            return t.map(function(t) {
                                return e.getOperator(o.Operator[t])
                            })
                        }, e
                    }();
                t.Spacegroup = i;
                var o;
                ! function(e) {
                    e.Transform = [
                            [1, 0, 0, 0],
                            [0, 1, 0, 0],
                            [0, 0, 1, 0],
                            [-1, 0, 0, 0],
                            [0, -1, 0, 0],
                            [0, 0, -1, 0],
                            [0, 1, 0, .5],
                            [1, 0, 0, .5],
                            [-1, 0, 0, .5],
                            [0, 0, 1, .5],
                            [0, -1, 0, .5],
                            [0, 0, -1, .5],
                            [1, 0, 0, .25],
                            [0, -1, 0, .25],
                            [0, 0, 1, .25],
                            [-1, 0, 0, .25],
                            [0, 1, 0, .25],
                            [0, -1, 0, .75],
                            [0, 0, 1, .75],
                            [0, 1, 0, .75],
                            [1, 0, 0, .75],
                            [-1, 0, 0, .75],
                            [0, 0, -1, .25],
                            [0, 0, -1, .75],
                            [1, -1, 0, 0],
                            [-1, 1, 0, 0],
                            [0, 0, 1, .333333333333333],
                            [0, 0, 1, .666666666666667],
                            [1, 0, 0, .666666666666667],
                            [0, 1, 0, .333333333333333],
                            [0, -1, 0, .666666666666667],
                            [1, -1, 0, .333333333333333],
                            [-1, 1, 0, .666666666666667],
                            [-1, 0, 0, .333333333333333],
                            [1, 0, 0, .333333333333333],
                            [0, 1, 0, .666666666666667],
                            [0, -1, 0, .333333333333333],
                            [1, -1, 0, .666666666666667],
                            [-1, 1, 0, .333333333333333],
                            [-1, 0, 0, .666666666666667],
                            [0, 0, -1, .333333333333333],
                            [0, 0, -1, .666666666666667],
                            [0, 0, 1, .833333333333333],
                            [0, 0, 1, .166666666666667],
                            [0, 0, -1, .833333333333333],
                            [0, 0, -1, .166666666666667]
                        ], e.Operator = [
                            [0, 1, 2],
                            [3, 4, 5],
                            [3, 1, 5],
                            [3, 6, 5],
                            [7, 6, 2],
                            [8, 6, 5],
                            [0, 4, 2],
                            [0, 4, 9],
                            [7, 10, 2],
                            [7, 10, 9],
                            [0, 10, 2],
                            [8, 10, 5],
                            [3, 1, 11],
                            [3, 6, 11],
                            [0, 10, 9],
                            [8, 6, 11],
                            [3, 4, 2],
                            [0, 4, 5],
                            [3, 4, 9],
                            [7, 10, 5],
                            [8, 4, 9],
                            [8, 10, 9],
                            [8, 10, 2],
                            [0, 6, 9],
                            [3, 10, 9],
                            [0, 10, 11],
                            [7, 1, 9],
                            [8, 1, 11],
                            [7, 4, 11],
                            [7, 6, 9],
                            [7, 10, 11],
                            [3, 10, 2],
                            [8, 1, 5],
                            [0, 4, 11],
                            [3, 1, 2],
                            [3, 1, 9],
                            [7, 4, 2],
                            [8, 1, 2],
                            [8, 1, 9],
                            [3, 6, 9],
                            [7, 4, 9],
                            [8, 6, 2],
                            [8, 6, 9],
                            [3, 6, 2],
                            [12, 13, 14],
                            [15, 16, 14],
                            [12, 17, 18],
                            [15, 19, 18],
                            [20, 13, 18],
                            [21, 16, 18],
                            [20, 17, 14],
                            [21, 19, 14],
                            [0, 1, 5],
                            [8, 10, 11],
                            [7, 6, 11],
                            [7, 6, 5],
                            [8, 4, 2],
                            [7, 4, 5],
                            [7, 1, 5],
                            [7, 1, 11],
                            [0, 10, 5],
                            [0, 1, 11],
                            [0, 6, 11],
                            [0, 6, 5],
                            [3, 10, 11],
                            [8, 4, 11],
                            [15, 13, 22],
                            [12, 16, 22],
                            [15, 17, 23],
                            [12, 19, 23],
                            [21, 13, 23],
                            [20, 16, 23],
                            [21, 17, 22],
                            [20, 19, 22],
                            [4, 0, 2],
                            [1, 3, 2],
                            [4, 0, 14],
                            [1, 3, 18],
                            [4, 0, 9],
                            [1, 3, 9],
                            [4, 0, 18],
                            [1, 3, 14],
                            [10, 7, 9],
                            [6, 8, 9],
                            [4, 7, 14],
                            [6, 3, 18],
                            [10, 0, 18],
                            [1, 8, 14],
                            [1, 3, 5],
                            [4, 0, 5],
                            [6, 8, 11],
                            [10, 7, 11],
                            [1, 3, 11],
                            [4, 0, 11],
                            [10, 7, 2],
                            [6, 8, 2],
                            [3, 10, 22],
                            [7, 1, 23],
                            [8, 4, 23],
                            [0, 6, 22],
                            [1, 0, 5],
                            [4, 3, 5],
                            [1, 0, 23],
                            [4, 3, 22],
                            [10, 7, 14],
                            [6, 8, 18],
                            [8, 6, 22],
                            [7, 10, 23],
                            [4, 3, 11],
                            [1, 0, 11],
                            [1, 0, 22],
                            [4, 3, 23],
                            [10, 7, 18],
                            [6, 8, 14],
                            [8, 6, 23],
                            [7, 10, 22],
                            [6, 7, 11],
                            [10, 8, 11],
                            [8, 1, 23],
                            [0, 10, 22],
                            [3, 6, 22],
                            [7, 4, 23],
                            [4, 3, 2],
                            [1, 0, 2],
                            [10, 8, 2],
                            [6, 7, 2],
                            [4, 3, 9],
                            [1, 0, 9],
                            [10, 8, 9],
                            [6, 7, 9],
                            [4, 8, 14],
                            [6, 0, 18],
                            [10, 3, 18],
                            [1, 7, 14],
                            [4, 8, 18],
                            [6, 0, 14],
                            [10, 3, 14],
                            [1, 7, 18],
                            [6, 7, 5],
                            [10, 8, 5],
                            [6, 8, 5],
                            [10, 7, 5],
                            [8, 1, 22],
                            [0, 10, 23],
                            [3, 6, 23],
                            [7, 4, 22],
                            [4, 24, 2],
                            [25, 3, 2],
                            [4, 24, 26],
                            [25, 3, 27],
                            [4, 24, 27],
                            [25, 3, 26],
                            [28, 29, 26],
                            [30, 31, 26],
                            [32, 33, 26],
                            [34, 35, 27],
                            [36, 37, 27],
                            [38, 39, 27],
                            [2, 0, 1],
                            [1, 2, 0],
                            [1, 25, 5],
                            [24, 0, 5],
                            [39, 36, 40],
                            [35, 38, 40],
                            [37, 34, 40],
                            [33, 30, 41],
                            [29, 32, 41],
                            [31, 28, 41],
                            [5, 3, 4],
                            [4, 5, 3],
                            [25, 1, 5],
                            [0, 24, 5],
                            [24, 4, 5],
                            [3, 25, 5],
                            [4, 3, 41],
                            [25, 1, 40],
                            [24, 4, 41],
                            [3, 25, 40],
                            [4, 3, 40],
                            [25, 1, 41],
                            [24, 4, 40],
                            [3, 25, 41],
                            [35, 34, 40],
                            [37, 36, 40],
                            [39, 38, 40],
                            [29, 28, 41],
                            [31, 30, 41],
                            [33, 32, 41],
                            [3, 5, 4],
                            [5, 4, 3],
                            [25, 1, 2],
                            [0, 24, 2],
                            [24, 4, 2],
                            [3, 25, 2],
                            [25, 1, 9],
                            [0, 24, 9],
                            [24, 4, 9],
                            [3, 25, 9],
                            [30, 33, 26],
                            [32, 29, 26],
                            [28, 31, 26],
                            [36, 39, 27],
                            [38, 35, 27],
                            [34, 37, 27],
                            [0, 2, 1],
                            [2, 1, 0],
                            [30, 33, 42],
                            [32, 29, 42],
                            [28, 31, 42],
                            [36, 39, 43],
                            [38, 35, 43],
                            [34, 37, 43],
                            [7, 9, 6],
                            [9, 6, 7],
                            [25, 1, 11],
                            [0, 24, 11],
                            [24, 4, 11],
                            [3, 25, 11],
                            [35, 34, 44],
                            [37, 36, 44],
                            [39, 38, 44],
                            [29, 28, 45],
                            [31, 30, 45],
                            [33, 32, 45],
                            [8, 11, 10],
                            [11, 10, 8],
                            [1, 25, 2],
                            [24, 0, 2],
                            [1, 25, 42],
                            [24, 0, 43],
                            [1, 25, 43],
                            [24, 0, 42],
                            [1, 25, 27],
                            [24, 0, 26],
                            [1, 25, 26],
                            [24, 0, 27],
                            [1, 25, 9],
                            [24, 0, 9],
                            [4, 24, 5],
                            [25, 3, 5],
                            [4, 24, 11],
                            [25, 3, 11],
                            [1, 0, 40],
                            [4, 3, 44],
                            [0, 24, 45],
                            [1, 0, 41],
                            [4, 3, 45],
                            [0, 24, 44],
                            [0, 24, 40],
                            [0, 24, 41],
                            [2, 3, 4],
                            [5, 3, 1],
                            [5, 0, 4],
                            [4, 2, 3],
                            [1, 5, 3],
                            [4, 5, 0],
                            [2, 7, 6],
                            [2, 8, 10],
                            [5, 8, 6],
                            [5, 7, 10],
                            [1, 9, 7],
                            [4, 9, 8],
                            [1, 11, 8],
                            [4, 11, 7],
                            [9, 0, 6],
                            [9, 3, 10],
                            [11, 3, 6],
                            [11, 0, 10],
                            [6, 2, 7],
                            [10, 2, 8],
                            [6, 5, 8],
                            [10, 5, 7],
                            [9, 7, 1],
                            [9, 8, 4],
                            [11, 8, 1],
                            [11, 7, 4],
                            [6, 9, 0],
                            [10, 9, 3],
                            [6, 11, 3],
                            [10, 11, 0],
                            [9, 7, 6],
                            [9, 8, 10],
                            [11, 8, 6],
                            [11, 7, 10],
                            [6, 9, 7],
                            [10, 9, 8],
                            [6, 11, 8],
                            [10, 11, 7],
                            [2, 3, 10],
                            [5, 8, 1],
                            [11, 0, 4],
                            [10, 2, 3],
                            [1, 5, 8],
                            [4, 11, 0],
                            [5, 0, 1],
                            [2, 0, 4],
                            [2, 3, 1],
                            [1, 5, 0],
                            [4, 2, 0],
                            [1, 2, 3],
                            [11, 8, 10],
                            [11, 7, 6],
                            [9, 7, 10],
                            [9, 8, 6],
                            [10, 11, 8],
                            [6, 11, 7],
                            [10, 9, 7],
                            [6, 9, 8],
                            [5, 8, 10],
                            [5, 7, 6],
                            [2, 7, 10],
                            [2, 8, 6],
                            [4, 11, 8],
                            [1, 11, 7],
                            [4, 9, 7],
                            [1, 9, 8],
                            [11, 3, 10],
                            [11, 0, 6],
                            [9, 0, 10],
                            [9, 3, 6],
                            [10, 5, 8],
                            [6, 5, 7],
                            [10, 2, 7],
                            [6, 2, 8],
                            [11, 8, 4],
                            [11, 7, 1],
                            [9, 7, 4],
                            [9, 8, 1],
                            [10, 11, 3],
                            [6, 11, 0],
                            [10, 9, 0],
                            [6, 9, 3],
                            [22, 15, 13],
                            [22, 12, 16],
                            [14, 12, 13],
                            [14, 15, 16],
                            [13, 22, 15],
                            [16, 22, 12],
                            [13, 14, 12],
                            [16, 14, 15],
                            [22, 21, 17],
                            [22, 20, 19],
                            [14, 20, 17],
                            [14, 21, 19],
                            [13, 23, 21],
                            [16, 23, 20],
                            [13, 18, 20],
                            [16, 18, 21],
                            [23, 15, 17],
                            [23, 12, 19],
                            [18, 12, 17],
                            [18, 15, 19],
                            [17, 22, 21],
                            [19, 22, 20],
                            [17, 14, 20],
                            [19, 14, 21],
                            [23, 21, 13],
                            [23, 20, 16],
                            [18, 20, 13],
                            [18, 21, 16],
                            [17, 23, 15],
                            [19, 23, 12],
                            [17, 18, 12],
                            [19, 18, 15],
                            [5, 0, 6],
                            [2, 7, 4],
                            [9, 3, 1],
                            [6, 5, 0],
                            [4, 2, 7],
                            [1, 9, 3],
                            [0, 2, 4],
                            [3, 2, 1],
                            [0, 5, 1],
                            [2, 1, 3],
                            [2, 4, 0],
                            [5, 1, 0],
                            [7, 9, 10],
                            [8, 9, 6],
                            [7, 11, 6],
                            [9, 6, 8],
                            [9, 10, 7],
                            [11, 6, 7],
                            [1, 7, 11],
                            [4, 8, 11],
                            [1, 8, 9],
                            [4, 7, 9],
                            [0, 9, 10],
                            [3, 9, 6],
                            [3, 11, 10],
                            [0, 11, 6],
                            [2, 6, 8],
                            [2, 10, 7],
                            [5, 6, 7],
                            [5, 10, 8],
                            [6, 0, 11],
                            [10, 3, 11],
                            [6, 3, 9],
                            [10, 0, 9],
                            [7, 2, 10],
                            [8, 2, 6],
                            [8, 5, 10],
                            [7, 5, 6],
                            [9, 1, 8],
                            [9, 4, 7],
                            [11, 1, 7],
                            [11, 4, 8],
                            [7, 9, 4],
                            [8, 9, 1],
                            [8, 11, 4],
                            [7, 11, 1],
                            [9, 6, 3],
                            [9, 10, 0],
                            [11, 6, 0],
                            [11, 10, 3],
                            [19, 12, 23],
                            [13, 15, 22],
                            [16, 21, 18],
                            [17, 20, 14],
                            [20, 14, 17],
                            [21, 18, 16],
                            [15, 22, 13],
                            [12, 23, 19],
                            [18, 16, 21],
                            [14, 17, 20],
                            [23, 19, 12],
                            [22, 13, 15],
                            [19, 20, 22],
                            [13, 21, 23],
                            [16, 15, 14],
                            [17, 12, 18],
                            [20, 18, 13],
                            [21, 14, 19],
                            [15, 23, 17],
                            [12, 22, 16],
                            [18, 19, 15],
                            [14, 13, 12],
                            [23, 16, 20],
                            [22, 17, 21],
                            [16, 12, 22],
                            [17, 15, 23],
                            [19, 21, 14],
                            [13, 20, 18],
                            [12, 14, 13],
                            [15, 18, 19],
                            [21, 22, 17],
                            [20, 23, 16],
                            [14, 16, 15],
                            [18, 17, 12],
                            [22, 19, 20],
                            [23, 13, 21],
                            [16, 20, 23],
                            [17, 21, 22],
                            [19, 15, 18],
                            [13, 12, 14],
                            [12, 18, 17],
                            [15, 14, 16],
                            [21, 23, 13],
                            [20, 22, 19],
                            [14, 19, 21],
                            [18, 13, 20],
                            [22, 16, 12],
                            [23, 17, 15],
                            [19, 12, 22],
                            [17, 21, 23],
                            [16, 15, 18],
                            [13, 20, 14],
                            [20, 14, 13],
                            [15, 18, 16],
                            [21, 23, 17],
                            [12, 22, 19],
                            [18, 16, 15],
                            [14, 13, 20],
                            [22, 19, 12],
                            [23, 17, 21],
                            [3, 2, 4],
                            [3, 5, 1],
                            [0, 5, 4],
                            [2, 4, 3],
                            [5, 1, 3],
                            [5, 4, 0],
                            [1, 7, 9],
                            [4, 8, 9],
                            [1, 8, 11],
                            [4, 7, 11],
                            [0, 9, 6],
                            [3, 9, 10],
                            [3, 11, 6],
                            [0, 11, 10],
                            [2, 6, 7],
                            [2, 10, 8],
                            [5, 6, 8],
                            [5, 10, 7],
                            [6, 0, 9],
                            [10, 3, 9],
                            [6, 3, 11],
                            [10, 0, 11],
                            [7, 2, 6],
                            [8, 2, 10],
                            [8, 5, 6],
                            [7, 5, 10],
                            [9, 1, 7],
                            [9, 4, 8],
                            [11, 1, 8],
                            [11, 4, 7],
                            [7, 9, 1],
                            [8, 9, 4],
                            [8, 11, 1],
                            [7, 11, 4],
                            [9, 6, 0],
                            [9, 10, 3],
                            [11, 6, 3],
                            [11, 10, 0],
                            [8, 9, 10],
                            [8, 11, 6],
                            [7, 11, 10],
                            [9, 10, 8],
                            [11, 6, 8],
                            [11, 10, 7],
                            [6, 0, 2],
                            [10, 3, 2],
                            [6, 3, 5],
                            [10, 0, 5],
                            [7, 2, 1],
                            [8, 2, 4],
                            [8, 5, 1],
                            [7, 5, 4],
                            [9, 1, 0],
                            [9, 4, 3],
                            [11, 1, 3],
                            [11, 4, 0],
                            [1, 7, 2],
                            [4, 8, 2],
                            [1, 8, 5],
                            [4, 7, 5],
                            [0, 9, 1],
                            [3, 9, 4],
                            [3, 11, 1],
                            [0, 11, 4],
                            [2, 6, 0],
                            [2, 10, 3],
                            [5, 6, 3],
                            [5, 10, 0],
                            [0, 2, 6],
                            [3, 2, 10],
                            [3, 5, 6],
                            [0, 5, 10],
                            [2, 1, 7],
                            [2, 4, 8],
                            [5, 1, 8],
                            [5, 4, 7],
                            [16, 12, 14],
                            [13, 21, 18],
                            [19, 15, 23],
                            [17, 20, 22],
                            [12, 14, 16],
                            [21, 18, 13],
                            [15, 23, 19],
                            [20, 22, 17],
                            [14, 16, 12],
                            [18, 13, 21],
                            [23, 19, 15],
                            [22, 17, 20],
                            [19, 20, 18],
                            [17, 15, 14],
                            [16, 21, 22],
                            [13, 12, 23],
                            [20, 18, 19],
                            [15, 14, 17],
                            [21, 22, 16],
                            [12, 23, 13],
                            [18, 19, 20],
                            [14, 17, 15],
                            [22, 16, 21],
                            [23, 13, 12],
                            [6, 0, 5],
                            [10, 3, 5],
                            [6, 3, 2],
                            [10, 0, 2],
                            [7, 2, 4],
                            [8, 2, 1],
                            [8, 5, 4],
                            [7, 5, 1],
                            [9, 1, 3],
                            [9, 4, 0],
                            [11, 1, 0],
                            [11, 4, 3],
                            [1, 7, 5],
                            [4, 8, 5],
                            [1, 8, 2],
                            [4, 7, 2],
                            [0, 9, 4],
                            [3, 9, 1],
                            [3, 11, 4],
                            [0, 11, 1],
                            [2, 6, 3],
                            [2, 10, 0],
                            [5, 6, 0],
                            [5, 10, 3],
                            [0, 2, 10],
                            [3, 2, 6],
                            [3, 5, 10],
                            [0, 5, 6],
                            [2, 1, 8],
                            [2, 4, 7],
                            [5, 1, 7],
                            [5, 4, 8],
                            [21, 17, 23],
                            [20, 16, 22],
                            [12, 13, 18],
                            [15, 19, 14],
                            [23, 21, 17],
                            [22, 20, 16],
                            [18, 12, 13],
                            [14, 15, 19],
                            [17, 23, 21],
                            [16, 22, 20],
                            [13, 18, 12],
                            [19, 14, 15],
                            [21, 13, 22],
                            [20, 19, 23],
                            [12, 17, 14],
                            [15, 16, 18],
                            [23, 15, 13],
                            [22, 12, 19],
                            [18, 20, 17],
                            [14, 21, 16],
                            [17, 22, 15],
                            [16, 23, 12],
                            [13, 14, 20],
                            [19, 18, 21],
                            [15, 17, 22],
                            [12, 16, 23],
                            [20, 13, 14],
                            [21, 19, 18],
                            [22, 21, 13],
                            [23, 20, 19],
                            [14, 12, 17],
                            [18, 15, 16],
                            [13, 23, 15],
                            [19, 22, 12],
                            [17, 18, 20],
                            [16, 14, 21],
                            [15, 13, 23],
                            [12, 19, 22],
                            [20, 17, 18],
                            [21, 16, 14],
                            [22, 15, 17],
                            [23, 12, 16],
                            [14, 20, 13],
                            [18, 21, 19],
                            [13, 22, 21],
                            [19, 23, 20],
                            [17, 14, 12],
                            [16, 18, 15],
                            [6, 5, 3],
                            [4, 9, 3],
                            [9, 3, 4],
                            [5, 7, 4],
                            [4, 5, 7],
                            [5, 3, 6]
                        ], e.Group = [
                            [0],
                            [0, 1],
                            [0, 2],
                            [0, 3],
                            [0, 2, 4, 5],
                            [0, 6],
                            [0, 7],
                            [0, 6, 4, 8],
                            [0, 7, 4, 9],
                            [0, 6, 2, 1],
                            [0, 3, 1, 10],
                            [0, 6, 2, 1, 4, 8, 5, 11],
                            [0, 12, 1, 7],
                            [0, 1, 13, 14],
                            [0, 12, 1, 7, 4, 15, 11, 9],
                            [0, 16, 2, 17],
                            [0, 18, 12, 17],
                            [0, 16, 5, 19],
                            [0, 20, 13, 19],
                            [0, 18, 12, 17, 4, 21, 15, 19],
                            [0, 16, 2, 17, 4, 22, 5, 19],
                            [0, 16, 2, 17, 23, 24, 13, 25, 26, 20, 27, 28, 4, 22, 5, 19],
                            [0, 16, 17, 2, 29, 21, 30, 15],
                            [0, 20, 13, 19, 29, 31, 32, 33],
                            [0, 16, 6, 34],
                            [0, 18, 7, 34],
                            [0, 16, 7, 35],
                            [0, 16, 36, 37],
                            [0, 18, 36, 38],
                            [0, 16, 14, 39],
                            [0, 20, 40, 34],
                            [0, 16, 8, 41],
                            [0, 18, 8, 42],
                            [0, 16, 9, 42],
                            [0, 16, 6, 34, 4, 22, 8, 41],
                            [0, 18, 7, 34, 4, 21, 9, 41],
                            [0, 16, 7, 35, 4, 22, 9, 42],
                            [0, 16, 6, 34, 23, 24, 14, 39],
                            [0, 16, 10, 43, 23, 24, 7, 35],
                            [0, 16, 36, 37, 23, 24, 9, 42],
                            [0, 16, 8, 41, 23, 24, 40, 38],
                            [0, 16, 6, 34, 23, 24, 14, 39, 26, 20, 40, 38, 4, 22, 8, 41],
                            [0, 16, 44, 45, 23, 24, 46, 47, 26, 20, 48, 49, 4, 22, 50, 51],
                            [0, 16, 6, 34, 29, 21, 9, 42],
                            [0, 16, 8, 41, 29, 21, 7, 35],
                            [0, 16, 36, 37, 29, 21, 14, 39],
                            [0, 16, 2, 17, 1, 52, 6, 34],
                            [0, 16, 2, 17, 53, 54, 9, 42],
                            [0, 16, 12, 33, 1, 52, 7, 35],
                            [0, 16, 2, 17, 11, 55, 8, 41],
                            [0, 56, 2, 57, 1, 58, 6, 37],
                            [0, 56, 15, 25, 1, 58, 9, 39],
                            [0, 20, 27, 17, 1, 59, 40, 34],
                            [0, 56, 12, 28, 1, 58, 7, 38],
                            [0, 16, 5, 19, 1, 52, 8, 41],
                            [0, 22, 13, 28, 1, 55, 14, 38],
                            [0, 18, 13, 60, 1, 61, 14, 43],
                            [0, 16, 15, 30, 1, 52, 9, 42],
                            [0, 16, 5, 19, 11, 55, 6, 34],
                            [0, 21, 12, 19, 1, 54, 7, 41],
                            [0, 20, 13, 19, 1, 59, 14, 41],
                            [0, 20, 3, 30, 1, 59, 10, 42],
                            [0, 18, 12, 17, 1, 61, 7, 34, 4, 21, 15, 19, 11, 54, 9, 41],
                            [0, 24, 13, 17, 1, 62, 14, 34, 4, 20, 27, 19, 11, 59, 40, 41],
                            [0, 16, 2, 17, 1, 52, 6, 34, 4, 22, 5, 19, 11, 55, 8, 41],
                            [0, 16, 12, 33, 1, 52, 7, 35, 4, 22, 15, 30, 11, 55, 9, 42],
                            [0, 31, 3, 17, 1, 63, 10, 34, 4, 56, 32, 19, 11, 58, 36, 41],
                            [0, 22, 2, 19, 64, 59, 14, 38, 4, 16, 5, 17, 65, 62, 40, 39],
                            [0, 16, 2, 17, 1, 52, 6, 34, 23, 24, 13, 25, 64, 62, 14, 39, 26, 20, 27, 28, 65, 59, 40, 38, 4, 22, 5, 19, 11, 55, 8, 41],
                            [0, 16, 2, 17, 66, 67, 44, 45, 23, 24, 13, 25, 68, 69, 46, 47, 26, 20, 27, 28, 70, 71, 48, 49, 4, 22, 5, 19, 72, 73, 50, 51],
                            [0, 16, 2, 17, 1, 52, 6, 34, 29, 21, 15, 30, 53, 54, 9, 42],
                            [0, 16, 5, 19, 1, 52, 8, 41, 29, 21, 12, 33, 53, 54, 7, 35],
                            [0, 20, 13, 19, 1, 59, 14, 41, 29, 31, 32, 33, 53, 63, 36, 35],
                            [0, 31, 3, 17, 1, 63, 10, 34, 29, 20, 27, 30, 53, 59, 40, 42],
                            [0, 16, 74, 75],
                            [0, 18, 76, 77],
                            [0, 16, 78, 79],
                            [0, 18, 80, 81],
                            [0, 16, 74, 75, 29, 21, 82, 83],
                            [0, 21, 84, 85, 29, 16, 86, 87],
                            [0, 16, 88, 89],
                            [0, 16, 88, 89, 29, 21, 90, 91],
                            [0, 16, 74, 75, 1, 52, 88, 89],
                            [0, 16, 78, 79, 1, 52, 92, 93],
                            [0, 16, 94, 95, 11, 55, 88, 89],
                            [0, 16, 82, 83, 53, 54, 88, 89],
                            [0, 16, 74, 75, 1, 52, 88, 89, 29, 21, 82, 83, 53, 54, 90, 91],
                            [0, 21, 84, 85, 96, 97, 88, 91, 29, 16, 86, 87, 98, 99, 90, 89],
                            [0, 16, 74, 75, 2, 17, 100, 101],
                            [0, 16, 94, 95, 5, 19, 100, 101],
                            [0, 18, 76, 77, 2, 33, 102, 103],
                            [0, 18, 104, 105, 106, 107, 100, 108],
                            [0, 16, 78, 79, 2, 17, 109, 108],
                            [0, 16, 82, 83, 15, 30, 100, 101],
                            [0, 18, 80, 81, 2, 33, 110, 111],
                            [0, 18, 112, 113, 114, 115, 100, 108],
                            [0, 16, 74, 75, 2, 17, 100, 101, 29, 21, 82, 83, 15, 30, 116, 117],
                            [0, 21, 84, 85, 118, 119, 116, 101, 29, 16, 86, 87, 120, 121, 100, 117],
                            [0, 16, 74, 75, 6, 34, 122, 123],
                            [0, 16, 74, 75, 8, 41, 124, 125],
                            [0, 16, 78, 79, 7, 35, 122, 123],
                            [0, 16, 82, 83, 9, 42, 122, 123],
                            [0, 16, 74, 75, 7, 35, 126, 127],
                            [0, 16, 74, 75, 9, 42, 128, 129],
                            [0, 16, 78, 79, 6, 34, 126, 127],
                            [0, 16, 78, 79, 8, 41, 128, 129],
                            [0, 16, 74, 75, 6, 34, 122, 123, 29, 21, 82, 83, 9, 42, 128, 129],
                            [0, 16, 74, 75, 7, 35, 126, 127, 29, 21, 82, 83, 8, 41, 124, 125],
                            [0, 21, 84, 85, 6, 42, 130, 131, 29, 16, 86, 87, 9, 34, 132, 133],
                            [0, 21, 84, 85, 7, 41, 134, 135, 29, 16, 86, 87, 8, 35, 136, 137],
                            [0, 16, 89, 88, 2, 17, 122, 123],
                            [0, 16, 89, 88, 12, 33, 126, 127],
                            [0, 16, 89, 88, 5, 19, 124, 125],
                            [0, 16, 89, 88, 15, 30, 128, 129],
                            [0, 16, 88, 89, 6, 34, 100, 101],
                            [0, 16, 89, 88, 7, 35, 109, 108],
                            [0, 16, 89, 88, 8, 41, 138, 139],
                            [0, 16, 89, 88, 9, 42, 116, 117],
                            [0, 16, 89, 88, 6, 34, 100, 101, 29, 21, 91, 90, 9, 42, 116, 117],
                            [0, 16, 89, 88, 7, 35, 109, 108, 29, 21, 91, 90, 8, 41, 138, 139],
                            [0, 16, 89, 88, 2, 17, 122, 123, 29, 21, 91, 90, 15, 30, 128, 129],
                            [0, 16, 89, 88, 118, 121, 132, 131, 29, 21, 91, 90, 120, 119, 130, 133],
                            [0, 16, 74, 75, 2, 17, 100, 101, 1, 52, 88, 89, 6, 34, 122, 123],
                            [0, 16, 74, 75, 12, 33, 109, 108, 1, 52, 88, 89, 7, 35, 126, 127],
                            [0, 16, 74, 75, 2, 17, 100, 101, 11, 55, 140, 141, 8, 41, 124, 125],
                            [0, 16, 74, 75, 2, 17, 100, 101, 53, 54, 90, 91, 9, 42, 128, 129],
                            [0, 16, 74, 75, 5, 19, 138, 139, 1, 52, 88, 89, 8, 41, 124, 125],
                            [0, 16, 74, 75, 15, 30, 116, 117, 1, 52, 88, 89, 9, 42, 128, 129],
                            [0, 16, 94, 95, 5, 19, 100, 101, 11, 55, 88, 89, 6, 34, 124, 125],
                            [0, 16, 94, 95, 15, 30, 109, 108, 11, 55, 88, 89, 7, 35, 128, 129],
                            [0, 16, 78, 79, 2, 17, 109, 108, 1, 52, 92, 93, 6, 34, 126, 127],
                            [0, 16, 78, 79, 12, 33, 100, 101, 1, 52, 92, 93, 7, 35, 122, 123],
                            [0, 16, 82, 83, 12, 33, 138, 139, 53, 54, 88, 89, 8, 41, 126, 127],
                            [0, 16, 82, 83, 2, 17, 116, 117, 53, 54, 88, 89, 9, 42, 122, 123],
                            [0, 16, 78, 79, 5, 19, 116, 117, 1, 52, 92, 93, 8, 41, 128, 129],
                            [0, 16, 82, 83, 15, 30, 100, 101, 1, 52, 90, 91, 9, 42, 122, 123],
                            [0, 16, 82, 83, 15, 30, 100, 101, 53, 54, 88, 89, 6, 34, 128, 129],
                            [0, 16, 82, 83, 5, 19, 109, 108, 53, 54, 88, 89, 7, 35, 124, 125],
                            [0, 16, 74, 75, 2, 17, 100, 101, 1, 52, 88, 89, 6, 34, 122, 123, 29, 21, 82, 83, 15, 30, 116, 117, 53, 54, 90, 91, 9, 42, 128, 129],
                            [0, 16, 74, 75, 12, 33, 109, 108, 1, 52, 88, 89, 7, 35, 126, 127, 29, 21, 82, 83, 5, 19, 138, 139, 53, 54, 90, 91, 8, 41, 124, 125],
                            [0, 21, 84, 85, 118, 119, 116, 101, 96, 97, 88, 91, 9, 34, 132, 133, 29, 16, 86, 87, 120, 121, 100, 117, 98, 99, 90, 89, 6, 42, 130, 131],
                            [0, 21, 84, 85, 142, 143, 138, 108, 96, 97, 88, 91, 8, 35, 136, 137, 29, 16, 86, 87, 144, 145, 109, 139, 98, 99, 90, 89, 7, 41, 134, 135],
                            [0, 146, 147],
                            [0, 148, 149],
                            [0, 150, 151],
                            [0, 146, 147, 152, 153, 154, 155, 156, 157],
                            [0, 158, 159],
                            [0, 146, 147, 1, 160, 161],
                            [0, 146, 147, 1, 160, 161, 152, 153, 154, 162, 163, 164, 155, 156, 157, 165, 166, 167],
                            [0, 158, 159, 1, 168, 169],
                            [0, 146, 147, 101, 170, 171],
                            [0, 146, 147, 100, 172, 173],
                            [0, 148, 149, 174, 175, 171],
                            [0, 148, 149, 100, 176, 177],
                            [0, 150, 151, 178, 179, 171],
                            [0, 150, 151, 100, 180, 181],
                            [0, 146, 147, 100, 172, 173, 152, 153, 154, 182, 183, 184, 155, 156, 157, 185, 186, 187],
                            [0, 158, 159, 101, 188, 189],
                            [0, 146, 147, 122, 190, 191],
                            [0, 146, 147, 123, 192, 193],
                            [0, 146, 147, 126, 194, 195],
                            [0, 146, 147, 127, 196, 197],
                            [0, 146, 147, 122, 190, 191, 152, 153, 154, 198, 199, 200, 155, 156, 157, 201, 202, 203],
                            [0, 158, 159, 123, 204, 205],
                            [0, 146, 147, 126, 194, 195, 152, 153, 154, 206, 207, 208, 155, 156, 157, 209, 210, 211],
                            [0, 158, 159, 129, 212, 213],
                            [0, 146, 147, 101, 170, 171, 1, 160, 161, 123, 192, 193],
                            [0, 146, 147, 108, 214, 215, 1, 160, 161, 127, 196, 197],
                            [0, 146, 147, 100, 172, 173, 1, 160, 161, 122, 190, 191],
                            [0, 146, 147, 109, 216, 217, 1, 160, 161, 126, 194, 195],
                            [0, 146, 147, 100, 172, 173, 1, 160, 161, 122, 190, 191, 152, 153, 154, 182, 183, 184, 162, 163, 164, 198, 199, 200, 155, 156, 157, 185, 186, 187, 165, 166, 167, 201, 202, 203],
                            [0, 158, 159, 101, 188, 189, 1, 168, 169, 123, 204, 205],
                            [0, 146, 147, 109, 216, 217, 1, 160, 161, 126, 194, 195, 152, 153, 154, 218, 219, 220, 162, 163, 164, 206, 207, 208, 155, 156, 157, 221, 222, 223, 165, 166, 167, 209, 210, 211],
                            [0, 158, 159, 117, 224, 225, 1, 168, 169, 129, 212, 213],
                            [0, 146, 147, 16, 226, 227],
                            [0, 148, 149, 18, 228, 229],
                            [0, 150, 151, 18, 230, 231],
                            [0, 150, 151, 16, 232, 233],
                            [0, 148, 149, 16, 234, 235],
                            [0, 146, 147, 18, 236, 237],
                            [0, 146, 147, 52, 238, 239],
                            [0, 146, 147, 16, 226, 227, 1, 160, 161, 52, 238, 239],
                            [0, 146, 147, 18, 236, 237, 1, 160, 161, 61, 240, 241],
                            [0, 146, 147, 16, 226, 227, 100, 172, 173, 101, 170, 171],
                            [0, 148, 149, 18, 228, 229, 242, 172, 181, 243, 214, 244],
                            [0, 150, 151, 18, 230, 231, 245, 172, 177, 246, 214, 247],
                            [0, 150, 151, 16, 232, 233, 245, 172, 177, 174, 170, 248],
                            [0, 148, 149, 16, 234, 235, 242, 172, 181, 178, 170, 249],
                            [0, 146, 147, 18, 236, 237, 100, 172, 173, 108, 214, 215],
                            [0, 146, 147, 16, 226, 227, 122, 190, 191, 123, 192, 193],
                            [0, 146, 147, 16, 226, 227, 126, 194, 195, 127, 196, 197],
                            [0, 146, 147, 18, 236, 237, 126, 194, 195, 123, 192, 193],
                            [0, 146, 147, 18, 236, 237, 122, 190, 191, 127, 196, 197],
                            [0, 146, 147, 52, 238, 239, 122, 190, 191, 101, 170, 171],
                            [0, 146, 147, 61, 240, 241, 126, 194, 195, 101, 170, 171],
                            [0, 146, 147, 52, 238, 239, 100, 172, 173, 123, 192, 193],
                            [0, 146, 147, 61, 240, 241, 100, 172, 173, 127, 196, 197],
                            [0, 146, 147, 16, 226, 227, 100, 172, 173, 101, 170, 171, 1, 160, 161, 52, 239, 238, 122, 190, 191, 123, 192, 193],
                            [0, 146, 147, 16, 226, 227, 109, 216, 217, 108, 214, 215, 1, 160, 161, 52, 239, 238, 126, 194, 195, 127, 196, 197],
                            [0, 146, 147, 18, 236, 237, 109, 216, 217, 101, 170, 171, 1, 160, 161, 61, 241, 240, 126, 194, 195, 123, 192, 193],
                            [0, 146, 147, 18, 236, 237, 100, 172, 173, 108, 214, 215, 1, 160, 161, 61, 241, 240, 122, 190, 191, 127, 196, 197],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 29, 21, 15, 30, 280, 281, 282, 283, 284, 285, 286, 287],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 29, 31, 32, 33, 280, 288, 289, 290, 284, 291, 292, 293],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 53, 54, 9, 42, 300, 301, 302, 303, 304, 305, 306, 307],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 64, 62, 14, 39, 308, 309, 310, 311, 312, 313, 314, 315, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 65, 59, 40, 38, 316, 317, 318, 319, 320, 321, 322, 323, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 11, 55, 8, 41, 324, 325, 326, 327, 328, 329, 330, 331],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 66, 67, 44, 45, 332, 333, 334, 335, 336, 337, 338, 339, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 68, 69, 46, 47, 340, 341, 342, 343, 344, 345, 346, 347, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 70, 71, 48, 49, 348, 349, 350, 351, 352, 353, 354, 355, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 72, 73, 50, 51, 356, 357, 358, 359, 360, 361, 362, 363],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 29, 21, 15, 30, 280, 281, 282, 283, 284, 285, 286, 287, 53, 54, 9, 42, 300, 301, 302, 303, 304, 305, 306, 307],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 1, 59, 14, 41, 168, 325, 318, 311, 169, 313, 330, 323],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 1, 59, 14, 41, 168, 325, 318, 311, 169, 313, 330, 323, 29, 31, 32, 33, 280, 288, 289, 290, 284, 291, 292, 293, 53, 63, 36, 35, 300, 364, 365, 366, 304, 367, 368, 369],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 116, 117, 83, 82, 376, 377, 224, 378, 379, 380, 381, 225],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 138, 139, 95, 94, 406, 407, 408, 409, 410, 411, 412, 413],
                            [0, 24, 5, 28, 158, 265, 258, 275, 159, 277, 270, 263, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 23, 16, 27, 19, 256, 273, 251, 267, 260, 269, 278, 255, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 26, 22, 13, 17, 264, 250, 274, 259, 268, 261, 254, 279, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 4, 20, 2, 25, 272, 257, 266, 252, 276, 253, 262, 271, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189, 29, 21, 15, 30, 280, 281, 282, 283, 284, 285, 286, 287, 116, 117, 83, 82, 376, 377, 224, 378, 379, 380, 381, 225],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 450, 415, 440, 429, 454, 431, 420, 445, 458, 447, 436, 425],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 29, 31, 32, 33, 280, 288, 289, 290, 284, 291, 292, 293, 450, 415, 440, 429, 454, 431, 420, 445, 458, 447, 436, 425],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 123, 122, 88, 89, 204, 474, 475, 476, 205, 477, 478, 479],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 123, 122, 88, 89, 204, 474, 475, 476, 205, 477, 478, 479, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 125, 124, 140, 141, 504, 505, 506, 507, 508, 509, 510, 511],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 123, 122, 88, 89, 204, 474, 475, 476, 205, 477, 478, 479, 29, 21, 15, 30, 280, 281, 282, 283, 284, 285, 286, 287, 129, 128, 90, 91, 212, 512, 513, 514, 213, 515, 516, 517],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 129, 128, 90, 91, 212, 512, 513, 514, 213, 515, 516, 517],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 129, 128, 90, 91, 212, 512, 513, 514, 213, 515, 516, 517, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 127, 126, 92, 93, 542, 543, 544, 545, 546, 547, 548, 549],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 29, 31, 32, 33, 280, 288, 289, 290, 284, 291, 292, 293, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 122, 123, 89, 88, 475, 476, 204, 474, 479, 478, 477, 205],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189, 53, 54, 9, 42, 300, 301, 302, 303, 304, 305, 306, 307, 128, 129, 91, 90, 513, 514, 212, 512, 517, 516, 515, 213],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 116, 117, 83, 82, 376, 377, 224, 378, 379, 380, 381, 225, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 128, 129, 91, 90, 513, 514, 212, 512, 517, 516, 515, 213],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 116, 117, 83, 82, 376, 377, 224, 378, 379, 380, 381, 225, 53, 54, 9, 42, 300, 301, 302, 303, 304, 305, 306, 307, 122, 123, 89, 88, 475, 476, 204, 474, 479, 478, 477, 205],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 122, 123, 89, 88, 475, 476, 204, 474, 479, 478, 477, 205, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 64, 62, 14, 39, 308, 309, 310, 311, 312, 313, 314, 315, 481, 480, 483, 482, 486, 487, 484, 485, 491, 490, 489, 488, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 65, 59, 40, 38, 316, 317, 318, 319, 320, 321, 322, 323, 493, 492, 495, 494, 498, 499, 496, 497, 503, 502, 501, 500, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 138, 139, 95, 94, 406, 407, 408, 409, 410, 411, 412, 413, 11, 55, 8, 41, 324, 325, 326, 327, 328, 329, 330, 331, 124, 125, 141, 140, 506, 507, 504, 505, 511, 510, 509, 508],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 116, 117, 83, 82, 376, 377, 224, 378, 379, 380, 381, 225, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 128, 129, 91, 90, 513, 514, 212, 512, 517, 516, 515, 213, 23, 24, 13, 25, 256, 257, 258, 259, 260, 261, 262, 263, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 64, 62, 14, 39, 308, 309, 310, 311, 312, 313, 314, 315, 519, 518, 521, 520, 524, 525, 522, 523, 529, 528, 527, 526, 26, 20, 27, 28, 264, 265, 266, 267, 268, 269, 270, 271, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 65, 59, 40, 38, 316, 317, 318, 319, 320, 321, 322, 323, 531, 530, 533, 532, 536, 537, 534, 535, 541, 540, 539, 538, 4, 22, 5, 19, 272, 273, 274, 275, 276, 277, 278, 279, 109, 108, 79, 78, 598, 599, 600, 601, 602, 603, 604, 605, 11, 55, 8, 41, 324, 325, 326, 327, 328, 329, 330, 331, 126, 127, 93, 92, 544, 545, 542, 543, 549, 548, 547, 546],
                            [0, 24, 5, 28, 158, 265, 258, 275, 159, 277, 270, 263, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 66, 69, 50, 49, 332, 349, 342, 359, 336, 361, 354, 347, 493, 123, 483, 140, 498, 507, 204, 485, 503, 490, 509, 205, 23, 16, 27, 19, 256, 273, 251, 267, 260, 269, 278, 255, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 68, 67, 48, 51, 340, 357, 334, 351, 344, 353, 362, 339, 124, 480, 89, 494, 506, 499, 484, 474, 511, 478, 501, 488, 26, 22, 13, 17, 264, 250, 274, 259, 268, 261, 254, 279, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 70, 73, 46, 45, 348, 333, 358, 343, 352, 345, 338, 363, 122, 492, 141, 482, 475, 487, 496, 505, 479, 510, 489, 500, 4, 20, 2, 25, 272, 257, 266, 252, 276, 253, 262, 271, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 72, 71, 44, 47, 356, 341, 350, 335, 360, 337, 346, 355, 481, 125, 495, 88, 486, 476, 504, 497, 491, 502, 477, 508],
                            [0, 24, 5, 28, 158, 265, 258, 275, 159, 277, 270, 263, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 531, 129, 521, 92, 536, 545, 212, 523, 541, 528, 547, 213, 23, 16, 27, 19, 256, 273, 251, 267, 260, 269, 278, 255, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 126, 518, 91, 532, 544, 537, 522, 512, 549, 516, 539, 526, 26, 22, 13, 17, 264, 250, 274, 259, 268, 261, 254, 279, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 128, 530, 93, 520, 513, 525, 534, 543, 517, 548, 527, 538, 4, 20, 2, 25, 272, 257, 266, 252, 276, 253, 262, 271, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 519, 127, 533, 90, 524, 514, 542, 535, 529, 540, 515, 546],
                            [0, 16, 2, 17, 158, 250, 251, 252, 159, 253, 254, 255, 100, 101, 75, 74, 370, 371, 188, 372, 373, 374, 375, 189, 1, 52, 6, 34, 168, 294, 295, 296, 169, 297, 298, 299, 122, 123, 89, 88, 475, 476, 204, 474, 479, 478, 477, 205, 29, 21, 15, 30, 280, 281, 282, 283, 284, 285, 286, 287, 116, 117, 83, 82, 376, 377, 224, 378, 379, 380, 381, 225, 53, 54, 9, 42, 300, 301, 302, 303, 304, 305, 306, 307, 128, 129, 91, 90, 513, 514, 212, 512, 517, 516, 515, 213],
                            [0, 20, 13, 19, 158, 273, 266, 259, 159, 261, 278, 271, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 1, 59, 14, 41, 168, 325, 318, 311, 169, 313, 330, 323, 551, 550, 553, 552, 556, 557, 554, 555, 561, 560, 559, 558, 29, 31, 32, 33, 280, 288, 289, 290, 284, 291, 292, 293, 450, 415, 440, 429, 454, 431, 420, 445, 458, 447, 436, 425, 53, 63, 36, 35, 300, 364, 365, 366, 304, 367, 368, 369, 563, 562, 565, 564, 568, 569, 566, 567, 573, 572, 571, 570],
                            [0, 16],
                            [0, 18],
                            [0, 16, 26, 20],
                            [0, 2, 23, 13],
                            [0, 3, 4, 32],
                            [0, 2, 29, 15],
                            [0, 3, 29, 27],
                            [0, 52],
                            [0, 63],
                            [0, 52, 26, 59],
                            [0, 63, 26, 54],
                            [0, 52, 16, 1],
                            [0, 18, 1, 61],
                            [0, 52, 16, 1, 26, 59, 20, 65],
                            [0, 31, 1, 63],
                            [0, 1, 24, 62],
                            [0, 31, 1, 63, 26, 21, 65, 54],
                            [0, 2, 57, 56],
                            [0, 60, 3, 16],
                            [0, 22, 57, 3],
                            [0, 2, 28, 20],
                            [0, 17, 13, 24],
                            [0, 20, 19, 13, 4, 24, 17, 27],
                            [0, 22, 57, 3, 4, 16, 60, 32],
                            [0, 22, 57, 3, 23, 20, 30, 12, 26, 24, 33, 15, 4, 16, 60, 32],
                            [0, 22, 57, 3, 29, 18, 27, 25],
                            [0, 22, 3, 57, 1, 55, 10, 37],
                            [0, 22, 385, 396, 3, 57, 109, 117],
                            [0, 22, 57, 3, 159, 279, 654, 655, 158, 274, 656, 657, 29, 18, 25, 27, 284, 658, 262, 269, 280, 659, 257, 267]
                        ],
                        e.Spacegroup = {
                            "P 1": 0,
                            "P -1": 1,
                            "P 1 2 1": 2,
                            "P 1 21 1": 3,
                            "C 1 2 1": 4,
                            "P 1 m 1": 5,
                            "P 1 c 1": 6,
                            "C 1 m 1": 7,
                            "C 1 c 1": 8,
                            "P 1 2/m 1": 9,
                            "P 1 21/m 1": 10,
                            "C 1 2/m 1": 11,
                            "P 1 2/c 1": 12,
                            "P 1 21/c 1": 13,
                            "C 1 2/c 1": 14,
                            "P 2 2 2": 15,
                            "P 2 2 21": 16,
                            "P 21 21 2": 17,
                            "P 21 21 21": 18,
                            "C 2 2 21": 19,
                            "C 2 2 2": 20,
                            "F 2 2 2": 21,
                            "I 2 2 2": 22,
                            "I 21 21 21": 23,
                            "P m m 2": 24,
                            "P m c 21": 25,
                            "P c c 2": 26,
                            "P m a 2": 27,
                            "P c a 21": 28,
                            "P n c 2": 29,
                            "P m n 21": 30,
                            "P b a 2": 31,
                            "P n a 21": 32,
                            "P n n 2": 33,
                            "C m m 2": 34,
                            "C m c 21": 35,
                            "C c c 2": 36,
                            "A m m 2": 37,
                            "A b m 2": 38,
                            "A m a 2": 39,
                            "A b a 2": 40,
                            "F m m 2": 41,
                            "F d d 2": 42,
                            "I m m 2": 43,
                            "I b a 2": 44,
                            "I m a 2": 45,
                            "P 2/m 2/m 2/m": 46,
                            "P m m m": 46,
                            "P 2/n 2/n 2/n": 47,
                            "P n n n": 47,
                            "P 2/c 2/c 2/m": 48,
                            "P c c m": 48,
                            "P 2/b 2/a 2/n": 49,
                            "P b a n": 49,
                            "P 21/m 2/m 2/a": 50,
                            "P m m a": 50,
                            "P 2/n 21/n 2/a": 51,
                            "P n n a": 51,
                            "P 2/m 2/n 21/a": 52,
                            "P m n a": 52,
                            "P 21/c 2/c 2/a": 53,
                            "P c c a": 53,
                            "P 21/b 21/a 2/m": 54,
                            "P b a m": 54,
                            "P 21/c 21/c 2/n": 55,
                            "P c c n": 55,
                            "P 2/b 21/c 21/m": 56,
                            "P b c m": 56,
                            "P 21/n 21/n 2/m": 57,
                            "P n n m": 57,
                            "P 21/m 21/m 2/n": 58,
                            "P m m n": 58,
                            "P 21/b 2/c 21/n": 59,
                            "P b c n": 59,
                            "P 21/b 21/c 21/a": 60,
                            "P b c a": 60,
                            "P 21/n 21/m 21/a": 61,
                            "P n m a": 61,
                            "C 2/m 2/c 21/m": 62,
                            "C m c m": 62,
                            "C 2/m 2/c 21/a": 63,
                            "C m c a": 63,
                            "C 2/m 2/m 2/m": 64,
                            "C m m m": 64,
                            "C 2/c 2/c 2/m": 65,
                            "C c c m": 65,
                            "C 2/m 2/m 2/a": 66,
                            "C m m a": 66,
                            "C 2/c 2/c 2/a": 67,
                            "C c c a": 67,
                            "F 2/m 2/m 2/m": 68,
                            "F m m m": 68,
                            "F 2/d 2/d 2/d": 69,
                            "F d d d": 69,
                            "I 2/m 2/m 2/m": 70,
                            "I m m m": 70,
                            "I 2/b 2/a 2/m": 71,
                            "I b a m": 71,
                            "I 21/b 21/c 21/a": 72,
                            "I b c a": 72,
                            "I 21/m 21/m 21/a": 73,
                            "I m m a": 73,
                            "P 4": 74,
                            "P 41": 75,
                            "P 42": 76,
                            "P 43": 77,
                            "I 4": 78,
                            "I 41": 79,
                            "P -4": 80,
                            "I -4": 81,
                            "P 4/m": 82,
                            "P 42/m": 83,
                            "P 4/n": 84,
                            "P 42/n": 85,
                            "I 4/m": 86,
                            "I 41/a": 87,
                            "P 4 2 2": 88,
                            "P 4 21 2": 89,
                            "P 41 2 2": 90,
                            "P 41 21 2": 91,
                            "P 42 2 2": 92,
                            "P 42 21 2": 93,
                            "P 43 2 2": 94,
                            "P 43 21 2": 95,
                            "I 4 2 2": 96,
                            "I 41 2 2": 97,
                            "P 4 m m": 98,
                            "P 4 b m": 99,
                            "P 42 c m": 100,
                            "P 42 n m": 101,
                            "P 4 c c": 102,
                            "P 4 n c": 103,
                            "P 42 m c": 104,
                            "P 42 b c": 105,
                            "I 4 m m": 106,
                            "I 4 c m": 107,
                            "I 41 m d": 108,
                            "I 41 c d": 109,
                            "P -4 2 m": 110,
                            "P -4 2 c": 111,
                            "P -4 21 m": 112,
                            "P -4 21 c": 113,
                            "P -4 m 2": 114,
                            "P -4 c 2": 115,
                            "P -4 b 2": 116,
                            "P -4 n 2": 117,
                            "I -4 m 2": 118,
                            "I -4 c 2": 119,
                            "I -4 2 m": 120,
                            "I -4 2 d": 121,
                            "P 4/m 2/m 2/m": 122,
                            "P4/m m m": 122,
                            "P 4/m 2/c 2/c": 123,
                            "P4/m c c": 123,
                            "P 4/n 2/b 2/m": 124,
                            "P4/n b m": 124,
                            "P 4/n 2/n 2/c": 125,
                            "P4/n n c": 125,
                            "P 4/m 21/b 2/m": 126,
                            "P4/m b m": 126,
                            "P 4/m 21/n 2/c": 127,
                            "P4/m n c": 127,
                            "P 4/n 21/m 2/m": 128,
                            "P4/n m m": 128,
                            "P 4/n 2/c 2/c": 129,
                            "P4/n c c": 129,
                            "P 42/m 2/m 2/c": 130,
                            "P42/m m c": 130,
                            "P 42/m 2/c 2/m": 131,
                            "P42/m c m": 131,
                            "P 42/n 2/b 2/c": 132,
                            "P42/n b c": 132,
                            "P 42/n 2/n 2/m": 133,
                            "P42/n n m": 133,
                            "P 42/m 21/b 2/c": 134,
                            "P42/m b c": 134,
                            "P 42/m 21/n 2/m": 135,
                            "P42/m n m": 135,
                            "P 42/n 21/m 2/c": 136,
                            "P42/n m c": 136,
                            "P 42/n 21/c 2/m": 137,
                            "P42/n c m": 137,
                            "I 4/m 2/m 2/m": 138,
                            "I4/m m m": 138,
                            "I 4/m 2/c 2/m": 139,
                            "I4/m c m": 139,
                            "I 41/a 2/m 2/d": 140,
                            "I41/a m d": 140,
                            "I 41/a 2/c 2/d": 141,
                            "I41/a c d": 141,
                            "P 3": 142,
                            "P 31": 143,
                            "P 32": 144,
                            "H 3": 145,
                            "R 3": 146,
                            "P -3": 147,
                            "H -3": 148,
                            "R -3": 149,
                            "P 3 1 2": 150,
                            "P 3 2 1": 151,
                            "P 31 1 2": 152,
                            "P 31 2 1": 153,
                            "P 32 1 2": 154,
                            "P 32 2 1": 155,
                            "H 3 2": 156,
                            "R 3 2": 157,
                            "P 3 m 1": 158,
                            "P 3 1 m": 159,
                            "P 3 c 1": 160,
                            "P 3 1 c": 161,
                            "H 3 m": 162,
                            "R 3 m": 163,
                            "H 3 c": 164,
                            "R 3 c": 165,
                            "P -3 1 2/m": 166,
                            "P -3 1 m": 166,
                            "P -3 1 2/c": 167,
                            "P -3 1 c": 167,
                            "P -3 2/m 1": 168,
                            "P -3 m 1": 168,
                            "P -3 2/c 1": 169,
                            "P -3 c 1": 169,
                            "H -3 2/m": 170,
                            "H -3 m": 170,
                            "R -3 2/m": 171,
                            "R -3 m": 171,
                            "H -3 2/c": 172,
                            "H -3 c": 172,
                            "R -3 2/c": 173,
                            "R -3 c": 173,
                            "P 6": 174,
                            "P 61": 175,
                            "P 65": 176,
                            "P 62": 177,
                            "P 64": 178,
                            "P 63": 179,
                            "P -6": 180,
                            "P 6/m": 181,
                            "P 63/m": 182,
                            "P 6 2 2": 183,
                            "P 61 2 2": 184,
                            "P 65 2 2": 185,
                            "P 62 2 2": 186,
                            "P 64 2 2": 187,
                            "P 63 2 2": 188,
                            "P 6 m m": 189,
                            "P 6 c c": 190,
                            "P 63 c m": 191,
                            "P 63 m c": 192,
                            "P -6 m 2": 193,
                            "P -6 c 2": 194,
                            "P -6 2 m": 195,
                            "P -6 2 c": 196,
                            "P 6/m 2/m 2/m": 197,
                            "P 6/m m m": 197,
                            "P 6/m 2/c 2/c": 198,
                            "P 6/m c c": 198,
                            "P 63/m 2/c 2/m": 199,
                            "P 63/m c m": 199,
                            "P 63/m 2/m 2/c": 200,
                            "P 63/m m c": 200,
                            "P 2 3": 201,
                            "F 2 3": 202,
                            "I 2 3": 203,
                            "P 21 3": 204,
                            "I 21 3": 205,
                            "P 2/m -3": 206,
                            "P m -3": 206,
                            "P 2/n -3": 207,
                            "P n -3": 207,
                            "F 2/m -3": 208,
                            "F m -3": 208,
                            "F 2/d -3": 209,
                            "F d -3": 209,
                            "I 2/m -3": 210,
                            "I m -3": 210,
                            "P 21/a -3": 211,
                            "P a -3": 211,
                            "I 21/a -3": 212,
                            "I a -3": 212,
                            "P 4 3 2": 213,
                            "P 42 3 2": 214,
                            "F 4 3 2": 215,
                            "F 41 3 2": 216,
                            "I 4 3 2": 217,
                            "P 43 3 2": 218,
                            "P 41 3 2": 219,
                            "I 41 3 2": 220,
                            "P -4 3 m": 221,
                            "F -4 3 m": 222,
                            "I -4 3 m": 223,
                            "P -4 3 n": 224,
                            "F -4 3 c": 225,
                            "I -4 3 d": 226,
                            "P 4/m -3 2/m": 227,
                            "P m -3 m": 227,
                            "P 4/n -3 2/n": 228,
                            "P n -3 n": 228,
                            "P 42/m -3 2/n": 229,
                            "P m -3 n": 229,
                            "P 42/n -3 2/m": 230,
                            "P n -3 m": 230,
                            "F 4/m -3 2/m": 231,
                            "F m -3 m": 231,
                            "F 4/m -3 2/c": 232,
                            "F m -3 c": 232,
                            "F 41/d -3 2/m": 233,
                            "F d -3 m": 233,
                            "F 41/d -3 2/c": 234,
                            "F d -3 c": 234,
                            "I 4/m -3 2/m": 235,
                            "I m -3 m": 235,
                            "I 41/a -3 2/d": 236,
                            "I a -3 d": 236,
                            "P 1 1 2": 237,
                            "P 1 1 21": 238,
                            "B 1 1 2": 239,
                            "B 2": 239,
                            "A 1 2 1": 240,
                            "C 1 21 1": 241,
                            "I 1 2 1": 242,
                            "I 2": 242,
                            "I 1 21 1": 243,
                            "P 1 1 m": 244,
                            "P 1 1 b": 245,
                            "B 1 1 m": 246,
                            "B 1 1 b": 247,
                            "P 1 1 2/m": 248,
                            "P 1 1 21/m": 249,
                            "B 1 1 2/m": 250,
                            "P 1 1 2/b": 251,
                            "P 1 1 21/b": 252,
                            "B 1 1 2/b": 253,
                            "P 21 2 2": 254,
                            "P 2 21 2": 255,
                            "P 21 21 2 (a)": 256,
                            "P 21 2 21": 257,
                            "P 2 21 21": 258,
                            "C 2 2 21a)": 259,
                            "C 2 2 2a": 260,
                            "F 2 2 2a": 261,
                            "I 2 2 2a": 262,
                            "P 21/m 21/m 2/n a": 263,
                            "P 42 21 2a": 264,
                            "I 2 3a": 265
                        }
                }(o = t.SpacegroupTables || (t.SpacegroupTables = {}))
            }(t = e.Structure || (e.Structure = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(e, t, r) {
                    return o.buildPivotGroupSymmetry(e, t, r)
                }

                function n(e, t) {
                    return o.buildMates(e, t)
                }

                function i(e, t) {
                    return o.buildAssembly(e, t)
                }
                var o;
                ! function(r) {
                    function n(e, t) {
                        for (var r = e.x, n = e.y, i = e.z, o = {
                                x: 0,
                                y: 0,
                                z: 0
                            }, a = 0, s = t; a < s.length; a++) {
                            var l = s[a];
                            o.x += r[l], o.y += n[l], o.z += i[l]
                        }
                        var c = t.length > 0 ? t.length : 1;
                        o.x /= c, o.y /= c, o.z /= c;
                        for (var h = 0, p = 0, d = t; p < d.length; p++) {
                            var l = d[p];
                            h = Math.max(u(l, o, e), h)
                        }
                        return new S(o, Math.sqrt(h))
                    }

                    function i() {
                        return {
                            x: 0,
                            y: 0,
                            z: 0
                        }
                    }

                    function o(e, t, r) {
                        var n = e.x - r.center.x,
                            i = e.y - r.center.y,
                            o = e.z - r.center.z;
                        return Math.sqrt(n * n + i * i + o * o) - (t + r.radius)
                    }

                    function a(e, t, r, n, i, a) {
                        return a.x = r.x[t], a.y = r.y[t], a.z = r.z[t], E.transformVector3(a, a, n), o(a, r.r[t], e) <= i
                    }

                    function s(e, t, r) {
                        var n = r.x[e] - r.cX[t],
                            i = r.y[e] - r.cY[t],
                            o = r.z[e] - r.cZ[t];
                        return n * n + i * i + o * o
                    }

                    function u(e, t, r) {
                        var n = r.x[e] - t.x,
                            i = r.y[e] - t.y,
                            o = r.z[e] - t.z;
                        return n * n + i * i + o * o
                    }

                    function l(e, r) {
                        for (var n = e.atoms, o = e.residues, a = e.chains, l = e.entities, c = n.x, h = n.y, p = n.z, d = new t.DataTableBuilder(l.count), f = d.addColumn("x", function(e) {
                                return new Float64Array(e)
                            }), m = d.addColumn("y", function(e) {
                                return new Float64Array(e)
                            }), v = d.addColumn("z", function(e) {
                                return new Float64Array(e)
                            }), g = d.addColumn("r", function(e) {
                                return new Float64Array(e)
                            }), y = new t.DataTableBuilder(a.count), b = y.addColumn("x", function(e) {
                                return new Float64Array(e)
                            }), x = y.addColumn("y", function(e) {
                                return new Float64Array(e)
                            }), _ = y.addColumn("z", function(e) {
                                return new Float64Array(e)
                            }), w = y.addColumn("r", function(e) {
                                return new Float64Array(e)
                            }), C = new t.DataTableBuilder(o.count), E = C.addColumn("x", function(e) {
                                return new Float64Array(e)
                            }), M = C.addColumn("y", function(e) {
                                return new Float64Array(e)
                            }), A = C.addColumn("z", function(e) {
                                return new Float64Array(e)
                            }), P = C.addColumn("r", function(e) {
                                return new Float64Array(e)
                            }), R = i(), k = 0, I = i(), D = 0, B = 0, L = i(), V = 0, N = i(), O = 0, F = i(), U = 0, z = 0, H = l.count; H > z; z++) {
                            L.x = 0, L.y = 0, L.z = 0;
                            for (var j = l.chainStartIndex[z], G = l.chainEndIndex[z]; G > j; j++) {
                                N.x = 0, N.y = 0, N.z = 0;
                                for (var q = a.residueStartIndex[j], W = a.residueEndIndex[j]; W > q; q++) {
                                    F.x = 0, F.y = 0, F.z = 0;
                                    for (var X = o.atomStartIndex[q], Y = o.atomEndIndex[q]; Y > X; X++) F.x += c[X], F.y += h[X], F.z += p[X];
                                    R.x += F.x, R.y += F.y, R.z += F.z, B = o.atomEndIndex[q] - o.atomStartIndex[q], N.x += F.x, N.y += F.y, N.z += F.z, E[q] = F.x / B, M[q] = F.y / B, A[q] = F.z / B
                                }
                                L.x += N.x, L.y += N.y, L.z += N.z, B = a.atomEndIndex[j] - a.atomStartIndex[j], b[j] = N.x / B, x[j] = N.y / B, _[j] = N.z / B
                            }
                            B = l.atomEndIndex[z] - l.atomStartIndex[z], f[z] = L.x / B, m[z] = L.y / B, v[z] = L.z / B
                        }
                        R.x /= n.count, R.y /= n.count, R.z /= n.count;
                        for (var K = 0, Q = r; K < Q.length; K++) {
                            var X = Q[K];
                            I.x += c[X], I.y += h[X], I.z += p[X]
                        }
                        var Z = r.length > 0 ? r.length : 1;
                        I.x /= Z, I.y /= Z, I.z /= Z;
                        for (var $ = {
                                x: c,
                                y: h,
                                z: p,
                                cX: f,
                                cY: m,
                                cZ: v
                            }, J = {
                                x: c,
                                y: h,
                                z: p,
                                cX: b,
                                cY: x,
                                cZ: _
                            }, ee = {
                                x: c,
                                y: h,
                                z: p,
                                cX: E,
                                cY: M,
                                cZ: A
                            }, z = 0, H = l.count; H > z; z++) {
                            V = 0;
                            for (var j = l.chainStartIndex[z], G = l.chainEndIndex[z]; G > j; j++) {
                                O = 0;
                                for (var q = a.residueStartIndex[j], W = a.residueEndIndex[j]; W > q; q++) {
                                    U = 0;
                                    for (var X = o.atomStartIndex[q], Y = o.atomEndIndex[q]; Y > X; X++) U = Math.max(U, s(X, q, ee)), O = Math.max(O, s(X, j, J)), V = Math.max(V, s(X, z, $)), k = Math.max(k, u(X, R, ee));
                                    U = Math.sqrt(U), P[q] = U
                                }
                                O = Math.sqrt(O), w[j] = O
                            }
                            V = Math.sqrt(V), g[z] = V
                        }
                        k = Math.sqrt(k);
                        for (var te = 0, re = r; te < re.length; te++) {
                            var X = re[te];
                            D = Math.max(D, u(X, I, ee))
                        }
                        return D = Math.sqrt(D), new T(d.seal(), y.seal(), C.seal(), new S(R, k), new S(I, D))
                    }

                    function c(e) {
                        var t = e.boundingInfo,
                            r = e.spacegroup,
                            n = [];
                        e.transform = E.identity(), n[0] = e.getTransform();
                        for (var i = -3; 3 >= i; i++)
                            for (var a = -3; 3 >= a; a++)
                                for (var s = -3; 3 >= s; s++)
                                    for (var u = 0 === i && 0 === a && 0 === s ? 1 : 0, l = r.operatorCount; l > u; u++) {
                                        r.getOperatorMatrix(u, i, a, s, e.transform), e.i = i, e.k = s, e.j = a, e.op = u;
                                        var c = e.map(t.allAtoms.center),
                                            h = o(c, t.allAtoms.radius, t.target);
                                        h < e.radius && (n[n.length] = e.getTransform())
                                    }
                        return n
                    }

                    function h(t, r) {
                        for (var n = t.boundingInfo, i = t.radius, o = n.target, s = t.model, u = (s.atoms, s.residues), l = s.chains, c = s.entities, h = new e.Utils.ChunkedArrayBuilder(function(e) {
                                return new Int32Array(e)
                            }, t.model.residues.count, 1), p = new e.Utils.ChunkedArrayBuilder(function(e) {
                                return new Int32Array(e)
                            }, t.model.residues.count, 1), d = {
                                x: 0,
                                y: 0,
                                z: 0
                            }, f = 0, m = 0, v = 0, g = 0, y = 0, b = c.count; b > y; y++) {
                            f = 0;
                            for (var x = !1, _ = 0, w = r; _ < w.length; _++) {
                                for (var C = w[_], E = c.chainStartIndex[y], S = c.chainEndIndex[y]; S > E; E++)
                                    if (a(o, E, n.chains, C.transform, i, d)) {
                                        for (var T = !1, M = l.residueStartIndex[E], A = l.residueEndIndex[E]; A > M; M++) a(o, M, n.residues, C.transform, i, d) && (h.add(M), p.add(f), m += u.atomEndIndex[M] - u.atomStartIndex[M], T = !0);
                                        T && (v += 1, x = !0)
                                    }
                                f++
                            }
                            x && g++
                        }
                        return {
                            residues: h.compact(),
                            operators: p.compact(),
                            atomCount: m,
                            chainCount: v,
                            entityCount: g
                        }
                    }

                    function p(e, t, r, n, i) {
                        for (var o = 0; i > o; o++) r[o][n] = e[o][t]
                    }

                    function d(e, r, n) {
                        for (var i, o, a, s, u, l, c, h = e.residues, d = h.chainIndex, m = h.entityIndex, v = h.atomStartIndex, g = h.atomEndIndex, y = e.atoms, b = y.x, x = y.y, _ = y.z, w = new t.DataTableBuilder(r.atomCount), C = [], S = e.entities.getBuilder(r.entityCount), T = S, M = e.entities.getRawData(), A = T.getRawData(), P = T.chainStartIndex, R = T.chainEndIndex, k = T.residueStartIndex, I = T.residueEndIndex, D = T.atomStartIndex, B = T.atomEndIndex, L = 0, V = e.chains.getBuilder(r.chainCount), N = V, O = e.chains.getRawData(), F = N.getRawData(), U = N.residueStartIndex, z = N.residueEndIndex, H = N.atomStartIndex, j = N.atomEndIndex, G = N.asymId, q = N.authAsymId, W = N.entityIndex, X = V.addColumn("sourceChainIndex", function(e) {
                                return new Int32Array(e)
                            }), Y = V.addColumn("operatorIndex", function(e) {
                                return new Int32Array(e)
                            }), K = 0, Q = e.residues.getBuilder(r.residues.length), Z = e.residues.getRawData(), $ = Q.getRawData(), J = Q.atomStartIndex, ee = Q.atomEndIndex, te = Q.asymId, re = Q.authAsymId, ne = Q.chainIndex, ie = Q.entityIndex, oe = 0, ae = e.atoms.columns; oe < ae.length; oe++) {
                            var se = ae[oe],
                                ue = w.addColumn(se.name, se.creator);
                            "x" === se.name ? i = ue : "y" === se.name ? o = ue : "z" === se.name ? a = ue : "residueIndex" === se.name ? u = ue : "chainIndex" === se.name ? l = ue : "entityIndex" === se.name ? c = ue : "id" === se.name ? s = ue : C[C.length] = {
                                src: y[se.name],
                                target: ue
                            }
                        }
                        var le, ce, he = r.residues,
                            pe = r.operators,
                            de = {
                                x: 0,
                                y: 0,
                                z: 0
                            },
                            fe = 0,
                            me = he[0],
                            ve = d[me],
                            ge = m[me],
                            ye = pe[0];
                        p(M, m[me], A, 0, M.length), P[0] = 0, k[0] = 0, D[0] = 0, p(O, d[me], F, 0, O.length), W[0] = 0, U[0] = 0, H[0] = 0, le = e.chains.asymId[d[me]], ce = e.chains.authAsymId[d[me]];
                        var be = n[pe[0]];
                        be && !be.isIdentity && (G[K] = e.chains.asymId[d[me]] + "-" + be.id, q[K] = e.chains.authAsymId[d[me]] + "-" + be.id, X[K] = d[me], Y[K] = ye, le = G[K], ce = q[K]);
                        for (var xe = 0, _e = he.length; _e > xe; xe++) {
                            me = he[xe];
                            var we = pe[xe];
                            be = n[we], p(Z, me, $, xe, $.length);
                            var Ce = m[me],
                                Ee = d[me],
                                Se = !1;
                            Ce !== ge ? (z[K] = xe, j[K] = fe, K += 1, R[L] = K, I[L] = xe, B[L] = fe, L += 1, p(M, Ce, A, L, M.length), P[L] = K, k[L] = xe, D[L] = fe, Se = !0) : Ee !== ve ? (z[K] = xe, j[K] = fe, K += 1, Se = !0) : we !== ye && (z[K] = xe, j[K] = fe, K += 1, Se = !0), Se && (p(O, Ee, F, K, O.length), W[K] = L, U[K] = xe, H[K] = fe, be.isIdentity || (G[K] = e.chains.asymId[Ee] + "-" + be.id, q[K] = e.chains.authAsymId[Ee] + "-" + be.id), X[K] = Ee, Y[K] = we, le = G[K], ce = q[K]), ve = Ee, ge = Ce, ye = we, ne[xe] = K, ie[xe] = L, J[xe] = fe, te[xe] = le, re[xe] = ce;
                            for (var Te = v[me], Me = g[me]; Me > Te; Te++) {
                                de.x = b[Te], de.y = x[Te], de.z = _[Te], E.transformVector3(de, de, be.transform), i[fe] = de.x, o[fe] = de.y, a[fe] = de.z, s[fe] = fe + 1, u[fe] = xe, l[fe] = K, c[fe] = L;
                                for (var Ae = 0, Pe = C; Ae < Pe.length; Ae++) {
                                    var ue = Pe[Ae];
                                    ue.target[fe] = ue.src[Te]
                                }
                                fe++
                            }
                            ee[xe] = fe
                        }
                        R[L] = K + 1, I[L] = he.length, B[L] = fe, z[K] = he.length, j[K] = fe;
                        var Re = w.seal(),
                            ke = Q.seal(),
                            Ie = V.seal(),
                            De = S.seal(),
                            Be = f(e, r, ke);
                        return new t.MoleculeModel(e.id, e.modelId, Re, ke, Ie, De, e.componentBonds, Be, void 0, void 0, e, t.MoleculeModelSource.Computed, n.map(function(e) {
                            return new t.Operator(e.transform, e.id, e.isIdentity)
                        }))
                    }

                    function f(e, r, n) {
                        for (var i = e.residues.secondaryStructureIndex, o = e.secondaryStructure, a = n.asymId, s = n.seqNumber, u = n.insCode, l = n.secondaryStructureIndex, c = r.residues, h = r.operators, p = c.length, d = [], f = 0; p > f;) {
                            for (var m = f, v = i[c[f]], g = h[f]; p > m && h[m] == g && i[c[m]] == v;) m++;
                            var y = o[v],
                                b = new t.SecondaryStructureElement(y.type, new t.PolyResidueIdentifier(a[f], s[f], u[f]), new t.PolyResidueIdentifier(a[m - 1], s[m - 1], u[m - 1]), y.info);
                            b.startResidueIndex = f, b.endResidueIndex = m;
                            for (var x = d.length, _ = f; m > _; _++) l[_] = x;
                            d[x] = b, f = m
                        }
                        return d
                    }

                    function m(e, r, n) {
                        var i = e.symmetryInfo;
                        if (!i || "P 1" === i.spacegroupName || i.cellSize[0] < 1.1 && i.cellSize[1] < 1.1 && i.cellSize[2] < 1.1) return e;
                        var o;
                        o = n ? e.query(n).unionAtomIndices() : e.atoms.indices;
                        var a = l(e, o),
                            s = new t.Spacegroup(e.symmetryInfo),
                            u = new M(e, a, s, r),
                            p = c(u),
                            f = h(u, p);
                        return d(e, f, p)
                    }

                    function v(e, r) {
                        for (var i = n(e.atoms, e.atoms.indices), a = new t.Spacegroup(e.symmetryInfo), s = E.empty(), u = {
                                x: 0,
                                y: 0,
                                z: 0
                            }, l = [], c = -3; 3 >= c; c++)
                            for (var h = -3; 3 >= h; h++)
                                for (var p = -3; 3 >= p; p++)
                                    for (var d = 0; d < a.operatorCount; d++)
                                        if (a.getOperatorMatrix(d, c, h, p, s), E.transformVector3(u, i.center, s), !(o(u, i.radius, i) > r)) {
                                            var f = E.empty();
                                            E.copy(f, s), l.push(new A(c, h, p, d, f))
                                        }
                        return l
                    }

                    function g(t, r) {
                        for (var n = t.atoms, i = (t.residues, t.chains), o = t.entities, a = new e.Utils.ArrayBuilder(function(e) {
                                return new Int32Array(e)
                            }, t.residues.count * r.length, 1), s = new e.Utils.ArrayBuilder(function(e) {
                                return new Int32Array(e)
                            }, t.residues.count * r.length, 1), u = 0, l = r.length * n.count, c = r.length * i.count, h = t.entities.count, p = 0, d = o.count; d > p; p++) {
                            u = 0;
                            for (var f = 0, m = r; f < m.length; f++) {
                                for (var v = (m[f], o.chainStartIndex[p]), g = o.chainEndIndex[p]; g > v; v++)
                                    for (var y = i.residueStartIndex[v], b = i.residueEndIndex[v]; b > y; y++) a.add(y), s.add(u);
                                u++
                            }
                        }
                        return {
                            residues: a.array,
                            operators: s.array,
                            atomCount: l,
                            chainCount: c,
                            entityCount: h
                        }
                    }

                    function y(e, t) {
                        var r = e.symmetryInfo;
                        if (!r || "P 1" === r.spacegroupName || r.cellSize[0] < 1.1 && r.cellSize[1] < 1.1 && r.cellSize[2] < 1.1) return e;
                        var n = v(e, t),
                            i = g(e, n);
                        return d(e, i, n)
                    }

                    function b(e, t, r, n) {
                        if (0 > r) return void(t[t.length] = n.slice(0));
                        for (var i = e[r], o = i.length, a = 0; o > a; a++) n[r] = i[a], b(e, t, r - 1, n)
                    }

                    function x(e, t) {
                        for (var r = e.assemblyInfo, n = [], i = (E.empty(), 0), o = 0, a = t; o < a.length; o++) {
                            for (var s = a[o], u = E.identity(), l = 0; l < s.length; l++) E.mul(u, u, r.operators[s[l]].operator);
                            i++, n[n.length] = new P(i, u)
                        }
                        return n
                    }

                    function _(e, t, r, n) {
                        for (var i = (e.atoms, e.residues), o = e.chains, a = e.entities, s = n.residueIndices, u = n.operatorIndices, l = 0, c = 0, h = 0, p = 0, d = 0, f = a.count; f > d; d++) {
                            l = n.transformsOffset;
                            for (var m = !1, v = 0, g = r; v < g.length; v++) {
                                for (var y = (g[v], a.chainStartIndex[d]), b = a.chainEndIndex[d]; b > y; y++) {
                                    for (var x = !1, _ = o.residueStartIndex[y], w = o.residueEndIndex[y]; w > _; _++) t[_] && (s.add(_), u.add(l), c += i.atomEndIndex[_] - i.atomStartIndex[_], x = !0);
                                    x && (h += 1, m = !0)
                                }
                                l++
                            }
                            m && p++
                        }
                        n.atomCount += c, n.chainCount += h, n.entityCount += p
                    }

                    function w(e, t, r) {
                        for (var n = [], i = [], o = 0; o < t.operators.length; o++) i[o] = "";
                        b(t.operators, n, t.operators.length - 1, i);
                        var a = x(e, n);
                        r.transformsOffset += r.transforms.length, (p = r.transforms).push.apply(p, a);
                        var s = new Set;
                        t.asymIds.forEach(function(e) {
                            return s.add(e)
                        });
                        for (var u = e.residues.asymId, l = e.residues.count, c = r.mask, h = 0; l > h; h++) c[h] = s.has(u[h]);
                        _(e, c, a, r);
                        var p
                    }

                    function C(t, r) {
                        for (var n = {
                                atomCount: 0,
                                chainCount: 0,
                                entityCount: 0,
                                transforms: [],
                                transformsOffset: 0,
                                mask: new Int8Array(t.residues.count),
                                residueIndices: new e.Utils.ChunkedArrayBuilder(function(e) {
                                    return new Int32Array(e)
                                }, t.residues.count, 1),
                                operatorIndices: new e.Utils.ChunkedArrayBuilder(function(e) {
                                    return new Int32Array(e)
                                }, t.residues.count, 1)
                            }, i = 0, o = r.gens; i < o.length; i++) {
                            var a = o[i];
                            w(t, a, n)
                        }
                        var s = {
                            residues: n.residueIndices.compact(),
                            operators: n.operatorIndices.compact(),
                            atomCount: n.atomCount,
                            chainCount: n.chainCount,
                            entityCount: n.entityCount
                        };
                        return d(t, s, n.transforms)
                    }
                    var E = e.Geometry.LinearAlgebra.Matrix4,
                        S = function() {
                            function e(e, t) {
                                this.center = e, this.radius = t
                            }
                            return e
                        }(),
                        T = function() {
                            function e(e, t, r, n, i) {
                                this.entities = e, this.chains = t, this.residues = r, this.allAtoms = n, this.target = i
                            }
                            return e
                        }(),
                        M = function() {
                            function e(e, t, r, n) {
                                this.model = e, this.boundingInfo = t, this.spacegroup = r, this.radius = n, this.transform = E.empty(), this.transformed = {
                                    x: 0,
                                    y: 0,
                                    z: 0
                                }, this.i = 0, this.j = 0, this.k = 0, this.op = 0
                            }
                            return e.prototype.map = function(e) {
                                return E.transformVector3(this.transformed, e, this.transform)
                            }, e.prototype.getTransform = function() {
                                return new A(this.i, this.j, this.k, this.op, E.clone(this.transform))
                            }, e
                        }(),
                        A = function() {
                            function e(e, t, r, n, i) {
                                this.i = e, this.j = t, this.k = r, this.opIndex = n, this.transform = i, this._id = null, this.isIdentity = !(e || t || r || n)
                            }
                            return Object.defineProperty(e.prototype, "id", {
                                get: function() {
                                    return this._id ? this._id : (this._id = this.opIndex + 1 + "_" + (5 + this.i) + (5 + this.j) + (5 + this.k), this._id)
                                },
                                enumerable: !0,
                                configurable: !0
                            }), e
                        }(),
                        P = function() {
                            function e(e, t) {
                                this.i = e, this.transform = t, this.isIdentity = this._isIdentity(), this.id = e.toString()
                            }
                            return e.prototype._isIdentity = function() {
                                for (var e = 0; 4 > e; e++)
                                    for (var t = 0; 4 > t; t++) {
                                        var r = this.transform[4 * t + e];
                                        if (e === t) {
                                            if (Math.abs(r - 1) > 1e-7) return !1
                                        } else if (Math.abs(r) > 1e-7) return !1
                                    }
                                return !0
                            }, e
                        }();
                    r.buildPivotGroupSymmetry = m, r.buildMates = y, r.buildAssemblyEntry = w, r.buildAssembly = C
                }(o || (o = {})), t.buildPivotGroupSymmetry = r, t.buildSymmetryMates = n, t.buildAssembly = i
            }(t = e.Structure || (e.Structure = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    var r = function() {
                        function t(e, t) {
                            this.structure = e, this.mask = t
                        }
                        return Object.defineProperty(t.prototype, "atomCount", {
                            get: function() {
                                return this.mask.size
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "isComplete", {
                            get: function() {
                                return this.mask.size === this.structure.atoms.count
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "tree", {
                            get: function() {
                                return this.lazyTree || this.makeTree(), this.lazyTree
                            },
                            enumerable: !0,
                            configurable: !0
                        }), t.prototype.hasAtom = function(e) {
                            return !!this.mask.has(e)
                        }, t.prototype.hasRange = function(e, t) {
                            for (var r = e; t > r; r++)
                                if (this.mask.has(r)) return !0;
                            return !1
                        }, t.ofStructure = function(e) {
                            return new t(e, t.Mask.ofStructure(e))
                        }, t.ofFragments = function(e) {
                            return new t(e.context.structure, t.Mask.ofFragments(e))
                        }, t.ofAtomIndices = function(e, r) {
                            return new t(e, t.Mask.ofIndices(e, r))
                        }, t.prototype.makeTree = function() {
                            for (var t = new Int32Array(this.mask.size), r = 0, n = this.structure.atoms, i = n.x, o = n.y, a = n.z, s = 0; s < t.length; s++) this.mask.has(s) && (t[r++] = s);
                            this.lazyTree = new e.Geometry.SubdivisionTree3D(t, function(e, t) {
                                return t.add(i[e], o[e], a[e])
                            })
                        }, t
                    }();
                    t.Context = r;
                    var r;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            function t(e) {
                                return new o(e.atoms.count)
                            }

                            function r(e, t) {
                                var r = t.length / e.atoms.count;
                                if (.25 > r) {
                                    for (var n = new Set, o = 0, a = t; o < a.length; o++) {
                                        var s = a[o];
                                        n.add(s)
                                    }
                                    return n
                                }
                                for (var u = new Int8Array(e.atoms.count), l = 0, c = t; l < c.length; l++) {
                                    var s = c[l];
                                    u[s] = 1
                                }
                                return new i(u, t.length)
                            }

                            function n(e) {
                                for (var t = 0, r = 0, n = e.fragments; r < n.length; r++) {
                                    var o = n[r];
                                    t += o.atomCount
                                }
                                var a = e.context.structure.atoms.count;
                                if (.25 > t / a) {
                                    for (var s = new Set, u = 0, l = e.fragments; u < l.length; u++)
                                        for (var o = l[u], c = 0, h = o.atomIndices; c < h.length; c++) {
                                            var p = h[c];
                                            s.add(p)
                                        }
                                    return s
                                }
                                for (var s = new Int8Array(a), d = 0, f = e.fragments; d < f.length; d++)
                                    for (var o = f[d], m = 0, v = o.atomIndices; m < v.length; m++) {
                                        var p = v[m];
                                        s[p] = 1
                                    }
                                for (var g = 0, p = 0; a > p; p++) 0 !== s[p] && g++;
                                return new i(s, g)
                            }
                            var i = function() {
                                    function e(e, t) {
                                        this.mask = e, this.size = t
                                    }
                                    return e.prototype.has = function(e) {
                                        return this.mask[e]
                                    }, e
                                }(),
                                o = function() {
                                    function e(e) {
                                        this.size = e
                                    }
                                    return e.prototype.has = function(e) {
                                        return !0
                                    }, e
                                }();
                            e.ofStructure = t, e.ofIndices = r, e.ofFragments = n
                        }(t = e.Mask || (e.Mask = {}))
                    }(r = t.Context || (t.Context = {}));
                    var n = function() {
                        function t(e, t, r) {
                            this._hashCode = 0, this._hashComputed = !1, this.context = e, this.tag = t, this.atomIndices = r
                        }
                        return Object.defineProperty(t.prototype, "hashCode", {
                            get: function() {
                                if (this._hashComputed) return this._hashCode;
                                for (var e = 23, t = 0, r = this.atomIndices; t < r.length; t++) {
                                    var n = r[t];
                                    e = 31 * e + n | 0
                                }
                                return this._hashCode = e, this._hashComputed = !0, e
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "id", {
                            get: function() {
                                return this.context.structure.id + "_" + this.tag
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "atomCount", {
                            get: function() {
                                return this.atomIndices.length
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "isHet", {
                            get: function() {
                                var e = this.context.structure.atoms.residueIndex[this.tag];
                                return this.context.structure.residues.isHet[e]
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "fingerprint", {
                            get: function() {
                                if (this._fingerprint) return this._fingerprint;
                                var e = this.residueIndices,
                                    t = (this.context.structure, this.context.structure.residues),
                                    r = t.name,
                                    n = t.asymId,
                                    i = t.seqNumber,
                                    o = t.insCode,
                                    a = [];
                                return e.forEach(function(e) {
                                    var t = r[e] + " " + n[e] + " " + i[e];
                                    o[e] && (t += " i:" + o[e]), a[a.length] = t
                                }), a.join("-")
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "authFingerprint", {
                            get: function() {
                                if (this._authFingerprint) return this._authFingerprint;
                                var e = this.residueIndices,
                                    t = (this.context.structure, this.context.structure.residues),
                                    r = t.authName,
                                    n = t.authAsymId,
                                    i = t.authSeqNumber,
                                    o = t.insCode,
                                    a = [];
                                return e.forEach(function(e) {
                                    var t = r[e] + " " + n[e] + " " + i[e];
                                    o[e] && (t += " i:" + o[e]), a[a.length] = t
                                }), a.join("-")
                            },
                            enumerable: !0,
                            configurable: !0
                        }), t.prototype.computeIndices = function() {
                            if (!this._residueIndices) {
                                for (var t = new Set, r = new Set, n = new Set, i = this.context.structure.atoms.residueIndex, o = this.context.structure.residues.chainIndex, a = this.context.structure.chains.entityIndex, s = 0, u = this.atomIndices; s < u.length; s++) {
                                    var l = u[s];
                                    t.add(i[l])
                                }
                                this._residueIndices = e.Utils.integerSetToSortedTypedArray(t);
                                for (var c = 0, h = this._residueIndices; c < h.length; c++) {
                                    var l = h[c];
                                    r.add(o[l])
                                }
                                this._chainIndices = e.Utils.integerSetToSortedTypedArray(r);
                                for (var p = 0, d = this._chainIndices; p < d.length; p++) {
                                    var l = d[p];
                                    n.add(a[l])
                                }
                                this._entityIndices = e.Utils.integerSetToSortedTypedArray(n)
                            }
                        }, Object.defineProperty(t.prototype, "residueIndices", {
                            get: function() {
                                return this.computeIndices(), this._residueIndices
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "chainIndices", {
                            get: function() {
                                return this.computeIndices(), this._chainIndices
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(t.prototype, "entityIndices", {
                            get: function() {
                                return this.computeIndices(), this._entityIndices
                            },
                            enumerable: !0,
                            configurable: !0
                        }), t.areEqual = function(e, t) {
                            if (e.atomCount !== t.atomCount) return !1;
                            for (var r = e.atomIndices, n = t.atomIndices, i = 0; i < r.length; i++)
                                if (r[i] !== n[i]) return !1;
                            return e.tag === t.tag
                        }, t.ofSet = function(e, r) {
                            var n = new Int32Array(r.size);
                            return r.forEach(function(e) {
                                this.array[this.index++] = e
                            }, {
                                array: n,
                                index: 0
                            }), Array.prototype.sort.call(n, function(e, t) {
                                return e - t
                            }), new t(e, n[0], n)
                        }, t.ofArray = function(e, r, n) {
                            return new t(e, r, n)
                        }, t.ofIndex = function(e, r) {
                            var n = new Int32Array(1);
                            return n[0] = r, new t(e, r, n)
                        }, t.ofIndexRange = function(e, r, n) {
                            for (var i = 0, o = r; n > o; o++) e.hasAtom(o) && i++;
                            for (var a = new Int32Array(i), s = 0, o = r; n > o; o++) e.hasAtom(o) && (a[s++] = o);
                            return new t(e, r, a)
                        }, t
                    }();
                    t.Fragment = n;
                    var i = function() {
                        function e(e, t) {
                            this.context = e, this.fragments = t
                        }
                        return e.empty = function(t) {
                            return new e(t, [])
                        }, Object.defineProperty(e.prototype, "length", {
                            get: function() {
                                return this.fragments.length
                            },
                            enumerable: !0,
                            configurable: !0
                        }), e.prototype.unionAtomIndices = function() {
                            if (!this.length) return [];
                            if (1 === this.length) return this.fragments[0].atomIndices;
                            for (var e = new Int8Array(this.context.structure.atoms.count), t = 0, r = 0, n = this.fragments; r < n.length; r++)
                                for (var i = n[r], o = 0, a = i.atomIndices; o < a.length; o++) {
                                    var s = a[o];
                                    e[s] = 1
                                }
                            for (var u = 0, l = e; u < l.length; u++) {
                                var s = l[u];
                                t += s
                            }
                            for (var c = new Int32Array(t), h = 0, s = 0, p = e.length; p > s; s++) e[s] && (c[h++] = s);
                            return c
                        }, e.prototype.unionFragment = function() {
                            if (!this.length) return new n(this.context, 0, new Int32Array(0));
                            if (1 === this.length) return this.fragments[0];
                            var e = this.unionAtomIndices();
                            return new n(this.context, e[0], e)
                        }, e
                    }();
                    t.FragmentSeq = i;
                    var o = function() {
                        function e(e) {
                            this.ctx = e, this.fragments = []
                        }
                        return e.prototype.add = function(e) {
                            this.fragments[this.fragments.length] = e
                        }, e.prototype.getSeq = function() {
                            return new i(this.ctx, this.fragments)
                        }, e
                    }();
                    t.FragmentSeqBuilder = o;
                    var a = function() {
                        function e(e) {
                            this.ctx = e, this.fragments = [], this.byHash = new Map
                        }
                        return e.prototype.add = function(e) {
                            var t = e.hashCode;
                            if (this.byHash.has(t)) {
                                for (var r = this.byHash.get(t), i = 0, o = r; i < o.length; i++) {
                                    var a = o[i];
                                    if (n.areEqual(e, a)) return this
                                }
                                this.fragments[this.fragments.length] = e, r[r.length] = e
                            } else this.fragments[this.fragments.length] = e, this.byHash.set(t, [e]);
                            return this
                        }, e.prototype.getSeq = function() {
                            return new i(this.ctx, this.fragments)
                        }, e
                    }();
                    t.HashFragmentSeqBuilder = a
                }(r = t.Query || (t.Query = {}))
            }(t = e.Structure || (e.Structure = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(t) {
                    function r() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                        return C.build(function() {
                            return E.compileAtomRanges(!1, e, function(e) {
                                return e.residues
                            })
                        })
                    }

                    function n() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                        return C.build(function() {
                            return E.compileAtomRanges(!1, e, function(e) {
                                return e.chains
                            })
                        })
                    }

                    function i() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                        return C.build(function() {
                            return E.compileAtomRanges(!1, e, function(e) {
                                return e.entities
                            })
                        })
                    }

                    function o() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                        return C.build(function() {
                            return E.compileAtomRanges(!0, e, function(e) {
                                return e.entities
                            })
                        })
                    }

                    function a() {
                        return C.build(function() {
                            return E.compileEverything()
                        })
                    }

                    function s(e) {
                        return C.build(function() {
                            return E.compileFromIndices(!1, e, function(e) {
                                return e.entities
                            })
                        })
                    }

                    function u(e) {
                        return C.build(function() {
                            return E.compileFromIndices(!1, e, function(e) {
                                return e.chains
                            })
                        })
                    }

                    function l(e) {
                        return C.build(function() {
                            return E.compileFromIndices(!1, e, function(e) {
                                return e.residues
                            })
                        })
                    }

                    function c(e) {
                        return C.build(function() {
                            return E.compileAtomIndices(e)
                        })
                    }

                    function h(e, t, r, n) {
                        return C.build(function() {
                            return E.compileSequence(e, t, r, n)
                        })
                    }

                    function p() {
                        return C.build(function() {
                            return E.compileHetGroups()
                        })
                    }

                    function d() {
                        return C.build(function() {
                            return E.compileNonHetPolymer()
                        })
                    }

                    function f() {
                        return y(C.build(function() {
                            return E.compilePolymerNames(["CA", "O", "O5'", "C3'", "N3"], !1)
                        }), p(), i({
                            type: "water"
                        }))
                    }

                    function m() {
                        return C.build(function() {
                            return E.compilePolymerNames(["N", "CA", "C", "O", "P", "OP1", "OP2", "O3'", "O5'", "C3'", "C5'", "C4"], !1)
                        })
                    }

                    function v() {
                        return C.build(function() {
                            return E.compilePolymerNames(["N", "CA", "C", "O", "P", "OP1", "OP2", "O3'", "O5'", "C3'", "C5'", "C4"], !0)
                        })
                    }

                    function g(e, t) {
                        return C.build(function() {
                            return E.compileAtomsInBox(e, t)
                        })
                    }

                    function y() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                        return C.build(function() {
                            return E.compileOr(e)
                        })
                    }

                    function b(e, t) {
                        return C.build(function() {
                            return E.compileAmbientResidues(e, t)
                        })
                    }

                    function x(e) {
                        return C.build(function() {
                            return E.compileWholeResidues(e)
                        })
                    }

                    function _(e) {
                        return C.build(function() {
                            return E.compileUnion(e)
                        })
                    }

                    function w(e, t) {
                        return C.build(function() {
                            return E.compileInside(e, t)
                        })
                    }
                    var C;
                    ! function(e) {
                        function t(t, r) {
                            e.BuilderPrototype[t] = function() {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                                return r.call.apply(r, [void 0, this].concat(e))
                            }
                        }

                        function r(t) {
                            return Object.create(e.BuilderPrototype, {
                                compile: {
                                    writable: !1,
                                    configurable: !1,
                                    value: t
                                }
                            })
                        }

                        function n(e) {
                            return !!e.compile
                        }

                        function i(e) {
                            if ("undefined" == typeof window) throw "parse can only be called from a browser.";
                            (0, eval)("with (LiteMol.Core.Structure.Query) { window.__LiteMol_query = " + e + "; }");
                            var t = window.__LiteMol_query;
                            return window.__LiteMol_query = void 0, t.compile()
                        }

                        function o(e) {
                            var t;
                            return t = n(e) ? e.compile() : "string" == typeof e || e instanceof String ? i(e) : e
                        }
                        e.BuilderPrototype = {}, e.registerModifier = t, e.build = r, e.parse = i, e.toQuery = o
                    }(C = t.Builder || (t.Builder = {})), t.residues = r, t.chains = n, t.entities = i, t.notEntities = o, t.everything = a, t.entitiesFromIndices = s, t.chainsFromIndices = u, t.residuesFromIndices = l, t.atomsFromIndices = c, t.sequence = h, t.hetGroups = p, t.nonHetPolymer = d, t.cartoons = f, t.backbone = m, t.sidechain = v, t.atomsInBox = g, t.or = y, C.registerModifier("ambientResidues", b), t.ambientResidues = b, C.registerModifier("wholeResidues", x), t.wholeResidues = x, C.registerModifier("union", _), t.union = _, C.registerModifier("inside", w), t.inside = w;
                    var E;
                    ! function(r) {
                        function n() {
                            return function(e) {
                                if (e.isComplete) {
                                    var r = e.structure.atoms.indices;
                                    return new t.FragmentSeq(e, [new t.Fragment(e, r[0], r)])
                                }
                                for (var n = new Int32Array(e.atomCount), i = 0, o = 0, a = e.structure.atoms.indices; o < a.length; o++) {
                                    var s = a[o];
                                    e.hasAtom(s) && (n[i++] = s)
                                }
                                return new t.FragmentSeq(e, [t.Fragment.ofArray(e, n[0], n)])
                            }
                        }

                        function i(e) {
                            return function(r) {
                                for (var n = 0, i = 0, o = e; i < o.length; i++) {
                                    var a = o[i];
                                    r.hasAtom(a) && n++
                                }
                                if (!n) return t.FragmentSeq.empty(r);
                                for (var s = 0, u = new Int32Array(n), l = 0, c = e; l < c.length; l++) {
                                    var a = c[l];
                                    r.hasAtom(a) && (u[s++] = a)
                                }
                                return new t.FragmentSeq(r, [t.Fragment.ofArray(r, u[0], u)])
                            }
                        }

                        function o(e, r, n) {
                            return function(i) {
                                var o = n(i.structure),
                                    a = o.atomStartIndex,
                                    s = o.atomEndIndex,
                                    u = new t.FragmentSeqBuilder(i);
                                if (e)
                                    for (var l = new Set(r), c = o.count, h = 0; c > h; h++) l.has(h) || i.hasRange(a[h], s[h]) && u.add(t.Fragment.ofIndexRange(i, a[h], s[h]));
                                else
                                    for (var p = 0, d = r; p < d.length; p++) {
                                        var h = d[p];
                                        i.hasRange(a[h], s[h]) && u.add(t.Fragment.ofIndexRange(i, a[h], s[h]))
                                    }
                                return u.getSeq()
                            }
                        }

                        function a(e, r, n) {
                            return function(i) {
                                for (var o = n(i.structure), a = o.atomStartIndex, s = o.atomEndIndex, u = new t.FragmentSeqBuilder(i), l = o.count, c = !1, h = r.map(function(e) {
                                        return new y(e, o)
                                    }), p = 0 === h.length, d = 0; l > d; d++)
                                    if (i.hasRange(a[d], s[d])) {
                                        c = p;
                                        for (var f = 0, m = h; f < m.length; f++) {
                                            var v = m[f];
                                            if (v.isSatisfied(d)) {
                                                c = !0;
                                                break
                                            }
                                        }
                                        e && (c = !c), c && u.add(t.Fragment.ofIndexRange(i, a[d], s[d]))
                                    }
                                return u.getSeq()
                            }
                        }

                        function s(e, r, n, i) {
                            return function(o) {
                                for (var a = o.structure.residues, s = o.structure.chains, u = a.seqNumber, l = (a.insCode, a.chainIndex, a.atomStartIndex), c = a.atomEndIndex, h = s.entityId, p = s.asymId, d = s.count, f = s.residueStartIndex, m = s.residueEndIndex, v = new t.FragmentSeqBuilder(o), g = o.structure.parent, y = o.structure.chains.sourceChainIndex, b = g ? g.chains.asymId : void 0, x = g && y, _ = 0; d > _; _++) {
                                    var w = x ? b[y[_]] : p[_];
                                    if (h[_] === e && w === r) {
                                        for (var C = f[_], E = m[_], S = -1, T = -1; E > C; C++)
                                            if (u[C] >= n.seqNumber) {
                                                S = C;
                                                break
                                            }
                                        if (C !== E) {
                                            for (C = S; E > C && !(u[C] >= i.seqNumber); C++);
                                            T = C, o.hasRange(l[S], c[T]) && v.add(t.Fragment.ofIndexRange(o, l[S], c[T]))
                                        }
                                    }
                                }
                                return v.getSeq()
                            }
                        }

                        function u() {
                            return function(r) {
                                for (var n = r.structure.residues, i = n.atomStartIndex, o = n.atomEndIndex, a = n.isHet, s = n.entityIndex, u = n.count, l = r.structure.entities.entityType, c = e.EntityType.Water, h = new t.FragmentSeqBuilder(r), p = 0; u > p; p++) r.hasRange(i[p], o[p]) && l[s[p]] !== c && a[p] && h.add(t.Fragment.ofIndexRange(r, i[p], o[p]));
                                return h.getSeq()
                            }
                        }

                        function l() {
                            return function(r) {
                                for (var n = r.structure.residues, i = n.atomStartIndex, o = n.atomEndIndex, a = (n.isHet, n.entityIndex, n.count, r.structure.entities), s = a.entityType, u = a.count, l = a.residueStartIndex, c = a.residueEndIndex, h = e.EntityType.Polymer, p = 0, d = 0; u > d; d++)
                                    if (s[d] === h)
                                        for (var f = l[d], m = c[d]; m > f; f++)
                                            for (var v = i[f], g = o[f]; g > v; v++) r.hasAtom(v) && p++;
                                if (!p) return t.FragmentSeq.empty(r);
                                for (var y = new Int32Array(p), b = 0, d = 0; u > d; d++)
                                    if (s[d] === h)
                                        for (var f = l[d], m = c[d]; m > f; f++)
                                            for (var v = i[f], g = o[f]; g > v; v++) r.hasAtom(v) && (y[b++] = v);
                                return new t.FragmentSeq(r, [t.Fragment.ofArray(r, y[0], y)])
                            }
                        }

                        function c(e, r) {
                            return function(n) {
                                for (var i = n.structure.atoms, o = i.x, a = i.y, s = i.z, u = i.count, l = [], c = 0; u > c; c++)
                                    if (n.hasAtom(c)) {
                                        var h = o[c],
                                            p = a[c],
                                            d = s[c];
                                        h >= e.x && h <= r.x && p >= e.y && p <= r.y && d >= e.z && d <= r.z && (l[l.length] = c)
                                    }
                                return l.length ? new t.FragmentSeq(n, [new t.Fragment(n, l[0], l)]) : t.FragmentSeq.empty(n)
                            }
                        }

                        function h(e, r) {
                            var n = C.toQuery(e),
                                i = C.toQuery(r);
                            return function(e) {
                                return new t.FragmentSeq(e, n(t.Context.ofFragments(i(e))).fragments)
                            }
                        }

                        function p(e, r) {
                            var n = C.toQuery(e);
                            return function(e) {
                                for (var i, o = n(e).fragments, a = new t.FragmentSeqBuilder(e), s = 0; s < o.length; s++) i = o[s], r(i) && a.add(i);
                                return a.getSeq()
                            }
                        }

                        function d(e) {
                            var r = e.map(function(e) {
                                return C.toQuery(e)
                            });
                            return function(e) {
                                for (var n = new t.HashFragmentSeqBuilder(e), i = 0, o = r; i < o.length; i++)
                                    for (var a = o[i], s = a(e), u = 0, l = s.fragments; u < l.length; u++) {
                                        var c = l[u];
                                        n.add(c)
                                    }
                                return n.getSeq()
                            }
                        }

                        function f(e) {
                            var r = C.toQuery(e);
                            return function(e) {
                                for (var n, i = r(e).fragments, o = new Set, a = 0, s = 0; s < i.length; s++)
                                    for (n = i[s].atomIndices, a = 0; a < n.length; a++) o.add(n[a]);
                                return 0 === o.size ? t.FragmentSeq.empty(e) : new t.FragmentSeq(e, [t.Fragment.ofSet(e, o)])
                            }
                        }

                        function m(r, n) {
                            return function(i) {
                                var o = i.structure,
                                    a = o.atoms.name,
                                    s = [],
                                    u = 0,
                                    l = new Set(r);
                                if (n) {
                                    for (var c = 0; c < o.entities.count; c++)
                                        if (o.entities.entityType[c] === e.EntityType.Polymer)
                                            for (var h = o.entities.atomStartIndex[c], p = o.entities.atomEndIndex[c], d = h; p > d; d++) i.hasAtom(d) && !l.has(a[d]) && (s[u++] = d)
                                } else
                                    for (var c = 0; c < o.entities.count; c++)
                                        if (o.entities.entityType[c] === e.EntityType.Polymer)
                                            for (var h = o.entities.atomStartIndex[c], p = o.entities.atomEndIndex[c], d = h; p > d; d++) i.hasAtom(d) && l.has(a[d]) && (s[u++] = d); return s.length ? new t.FragmentSeq(i, [t.Fragment.ofArray(i, s[0], new Int32Array(s))]) : t.FragmentSeq.empty(i)
                            }
                        }

                        function v(e, r) {
                            var n = C.toQuery(e);
                            return function(e) {
                                for (var i = n(e), o = e.tree, a = o.createContextRadius(r, !1), s = a.buffer, u = new t.HashFragmentSeqBuilder(e), l = e.structure.atoms.x, c = e.structure.atoms.y, h = e.structure.atoms.z, p = e.structure.atoms.residueIndex, d = e.structure.residues.atomStartIndex, f = e.structure.residues.atomEndIndex, m = new Set, v = o.data, g = 0, y = i.fragments; g < y.length; g++) {
                                    var b = y[g];
                                    m.clear();
                                    for (var x = 0, _ = b.atomIndices; x < _.length; x++) {
                                        var w = _[x];
                                        m.add(p[w]), a.nearest(l[w], c[w], h[w], r);
                                        for (var C = 0, E = s.count; E > C; C++) m.add(p[v[s.indices[C]]])
                                    }
                                    var S = {
                                        count: 0,
                                        start: d,
                                        end: f
                                    };
                                    m.forEach(function(e) {
                                        this.count += this.end[e] - this.start[e]
                                    }, S);
                                    var T = new Int32Array(S.count),
                                        M = {
                                            indices: T,
                                            offset: 0,
                                            start: d,
                                            end: f
                                        };
                                    m.forEach(function(e) {
                                        for (var t = this.start[e], r = this.end[e]; r > t; t++) this.indices[this.offset++] = t
                                    }, M), Array.prototype.sort.call(T, function(e, t) {
                                        return e - t
                                    }), u.add(t.Fragment.ofArray(e, T[0], T))
                                }
                                return u.getSeq()
                            }
                        }

                        function g(e) {
                            var r = C.toQuery(e);
                            return function(e) {
                                for (var n = r(e), i = new t.HashFragmentSeqBuilder(e), o = e.structure.atoms.residueIndex, a = e.structure.residues.atomStartIndex, s = e.structure.residues.atomEndIndex, u = new Set, l = 0, c = n.fragments; l < c.length; l++) {
                                    var h = c[l];
                                    u.clear();
                                    for (var p = 0, d = h.atomIndices; p < d.length; p++) {
                                        var f = d[p];
                                        u.add(o[f])
                                    }
                                    var m = {
                                        count: 0,
                                        start: a,
                                        end: s
                                    };
                                    u.forEach(function(e) {
                                        this.count += this.end[e] - this.start[e]
                                    }, m);
                                    var v = new Int32Array(m.count),
                                        g = {
                                            indices: v,
                                            offset: 0,
                                            start: a,
                                            end: s
                                        };
                                    u.forEach(function(e) {
                                        for (var t = this.start[e], r = this.end[e]; r > t; t++) this.indices[this.offset++] = t
                                    }, g), Array.prototype.sort.call(v, function(e, t) {
                                        return e - t
                                    }), i.add(t.Fragment.ofArray(e, v[0], v))
                                }
                                return i.getSeq()
                            }
                        }
                        var y = function() {
                            function e(e, t) {
                                this.columns = [];
                                for (var r = 0, n = Object.keys(e); r < n.length; r++) {
                                    var i = n[r];
                                    void 0 !== e[i] && t[i] && this.columns.push({
                                        value: e[i],
                                        array: t[i]
                                    })
                                }
                            }
                            return e.prototype.isSatisfied = function(e) {
                                for (var t = 0, r = this.columns; t < r.length; t++) {
                                    var n = r[t];
                                    if (n.value !== n.array[e]) return !1
                                }
                                return !0
                            }, e
                        }();
                        r.compileEverything = n, r.compileAtomIndices = i, r.compileFromIndices = o, r.compileAtomRanges = a, r.compileSequence = s, r.compileHetGroups = u, r.compileNonHetPolymer = l, r.compileAtomsInBox = c, r.compileInside = h, r.compileFilter = p, r.compileOr = d, r.compileUnion = f, r.compilePolymerNames = m, r.compileAmbientResidues = v, r.compileWholeResidues = g
                    }(E = t.Compiler || (t.Compiler = {}))
                }(t = e.Query || (e.Query = {}))
            }(t = e.Structure || (e.Structure = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                function t(e, t, r) {
                    for (var n, i = t, o = e, a = r, s = 0, u = Object.keys(t); s < u.length; s++) {
                        var l = u[s];
                        n = i[l], void 0 !== n ? o[l] = n : r && (o[l] = a[l])
                    }
                    if (r)
                        for (var c = 0, h = Object.keys(r); c < h.length; c++) {
                            var l = h[c];
                            n = o[l], void 0 === n && (o[l] = a[l])
                        }
                    return e
                }

                function r(e, t) {
                    var r, n, i, o, a, s, u, l = 0,
                        c = 0,
                        h = !0,
                        p = !1;
                    t = Math.max(0, t) || 0;
                    var d = function() {
                            var c = t - (performance.now() - o);
                            if (0 >= c) {
                                n && clearTimeout(n);
                                var h = u;
                                n = s = u = void 0, h && (l = performance.now(), i = e.apply(a, r), s || n || (r = a = null))
                            } else s = setTimeout(d, c)
                        },
                        f = function() {
                            s && clearTimeout(s), n = s = u = void 0, (h || c !== t) && (l = performance.now(), i = e.apply(a, r), s || n || (r = a = null))
                        };
                    return function() {
                        r = arguments, o = performance.now(), a = this, u = h && (s || !p);
                        var m = !1,
                            v = !1;
                        if (0 === c);
                        else {
                            n || p || (l = o);
                            var g = c - (o - l),
                                y = 0 >= g;
                            y ? (n && (n = clearTimeout(n)), l = o, i = e.apply(a, r)) : n || (n = setTimeout(f, g))
                        }
                        return m && s ? s = clearTimeout(s) : s || t === c || (s = setTimeout(d, t)), v && (m = !0, i = e.apply(a, r)), !m || s || n || (r = a = null), i
                    }
                }
                e.extend = t, e.debounce = r
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                function t(e) {
                    var t = new Int32Array(e.size);
                    return e.forEach(function(e) {
                        this.array[this.index++] = e
                    }, {
                        array: t,
                        index: 0
                    }), Array.prototype.sort.call(t, function(e, t) {
                        return e - t
                    }), t
                }

                function r(e) {
                    for (var t = [], r = 0; e > r; r++) t[r] = 0;
                    return t
                }

                function n(e) {
                    var t = [];
                    if (!e) return t;
                    t[0] = .1;
                    for (var r = 0; e > r; r++) t[r] = 0;
                    return t
                }
                e.integerSetToSortedTypedArray = t, e.makeNativeIntArray = r, e.makeNativeFloatArray = n;
                var i = function() {
                    function e(e, t, r) {
                        t = 0 | t, 0 >= t && (t = 1), this.elementSize = r, this.chunkSize = t * r, this.creator = e, this.current = e(this.chunkSize), this.parts = [this.current], this.currentIndex = 0, this.elementCount = 0
                    }
                    return e.prototype.add4 = function(e, t, r, n) {
                        return this.currentIndex >= this.chunkSize && (this.currentIndex = 0, this.current = this.creator(this.chunkSize), this.parts[this.parts.length] = this.current), this.current[this.currentIndex++] = e, this.current[this.currentIndex++] = t, this.current[this.currentIndex++] = r, this.current[this.currentIndex++] = n, this.elementCount++
                    }, e.prototype.add3 = function(e, t, r) {
                        return this.currentIndex >= this.chunkSize && (this.currentIndex = 0, this.current = this.creator(this.chunkSize), this.parts[this.parts.length] = this.current), this.current[this.currentIndex++] = e, this.current[this.currentIndex++] = t, this.current[this.currentIndex++] = r, this.elementCount++
                    }, e.prototype.add2 = function(e, t) {
                        return this.currentIndex >= this.chunkSize && (this.currentIndex = 0, this.current = this.creator(this.chunkSize), this.parts[this.parts.length] = this.current), this.current[this.currentIndex++] = e, this.current[this.currentIndex++] = t, this.elementCount++
                    }, e.prototype.add = function(e) {
                        return this.currentIndex >= this.chunkSize && (this.currentIndex = 0, this.current = this.creator(this.chunkSize), this.parts[this.parts.length] = this.current), this.current[this.currentIndex++] = e, this.elementCount++
                    }, e.prototype.compact = function() {
                        var e, t, r, n = this.creator(this.elementSize * this.elementCount),
                            i = (this.parts.length - 1) * this.chunkSize,
                            o = 0;
                        if (this.parts.length > 1)
                            if (this.parts[0].buffer)
                                for (e = 0; e < this.parts.length - 1; e++) n.set(this.parts[e], this.chunkSize * e);
                            else
                                for (e = 0; e < this.parts.length - 1; e++)
                                    for (o = this.chunkSize * e, r = this.parts[e], t = 0; t < this.chunkSize; t++) n[o + t] = r[t];
                        if (this.current.buffer && this.currentIndex >= this.chunkSize) n.set(this.current, this.chunkSize * (this.parts.length - 1));
                        else
                            for (e = 0; e < this.currentIndex; e++) n[i + e] = this.current[e];
                        return n
                    }, e.forVertex3D = function(t) {
                        return void 0 === t && (t = 262144), new e(function(e) {
                            return new Float32Array(e)
                        }, t, 3)
                    }, e.forIndexBuffer = function(t) {
                        return void 0 === t && (t = 262144), new e(function(e) {
                            return new Uint32Array(e)
                        }, t, 3)
                    }, e.forTokenIndices = function(t) {
                        return void 0 === t && (t = 131072), new e(function(e) {
                            return new Int32Array(e)
                        }, t, 2)
                    }, e.forIndices = function(t) {
                        return void 0 === t && (t = 131072), new e(function(e) {
                            return new Int32Array(e)
                        }, t, 1)
                    }, e.forInt32 = function(t) {
                        return void 0 === t && (t = 131072), new e(function(e) {
                            return new Int32Array(e)
                        }, t, 1)
                    }, e.forFloat32 = function(t) {
                        return void 0 === t && (t = 131072), new e(function(e) {
                            return new Float32Array(e)
                        }, t, 1)
                    }, e.forArray = function(t) {
                        return void 0 === t && (t = 131072), new e(function(e) {
                            return []
                        }, t, 1)
                    }, e
                }();
                e.ChunkedArrayBuilder = i;
                var o = function() {
                    function e(e, t, r) {
                        t = 0 | t, this.array = e(t * r), this.currentIndex = 0, this.elementCount = 0
                    }
                    return e.prototype.add3 = function(e, t, r) {
                        this.array[this.currentIndex++] = e, this.array[this.currentIndex++] = t, this.array[this.currentIndex++] = r, this.elementCount++
                    }, e.prototype.add2 = function(e, t) {
                        this.array[this.currentIndex++] = e, this.array[this.currentIndex++] = t, this.elementCount++
                    }, e.prototype.add = function(e) {
                        this.array[this.currentIndex++] = e, this.elementCount++
                    }, e.forVertex3D = function(t) {
                        return new e(function(e) {
                            return new Float32Array(e)
                        }, t, 3)
                    }, e.forIndexBuffer = function(t) {
                        return new e(function(e) {
                            return new Int32Array(e)
                        }, t, 3)
                    }, e.forTokenIndices = function(t) {
                        return new e(function(e) {
                            return new Int32Array(e)
                        }, t, 2)
                    }, e.forIndices = function(t) {
                        return new e(function(e) {
                            return new Int32Array(e)
                        }, t, 1)
                    }, e.forInt32 = function(t) {
                        return new e(function(e) {
                            return new Int32Array(e)
                        }, t, 1)
                    }, e.forFloat32 = function(t) {
                        return new e(function(e) {
                            return new Float32Array(e)
                        }, t, 1)
                    }, e.forArray = function(t) {
                        return new e(function(e) {
                            return []
                        }, t, 1)
                    }, e
                }();
                e.ArrayBuilder = o
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t = function() {
                    function e() {}
                    return e.parseInt = function(e, t, r) {
                        var n = 0,
                            i = 1;
                        for (45 === e.charCodeAt(t) && (i = -1, t++); r > t; t++) {
                            var o = e.charCodeAt(t) - 48;
                            if (o > 9 || 0 > o) return i * n | 0;
                            n = 10 * n + o | 0
                        }
                        return i * n
                    }, e.parseScientific = function(t, r, n, i) {
                        return t * Math.pow(10, e.parseInt(r, n, i))
                    }, e.parseFloat = function(t, r, n) {
                        var i = 1,
                            o = 0,
                            a = 0,
                            s = 1;
                        for (45 === t.charCodeAt(r) && (i = -1, ++r); n > r;) {
                            var u = t.charCodeAt(r) - 48;
                            if (!(u >= 0 && 10 > u)) {
                                if (-2 === u) {
                                    for (++r; n > r;) {
                                        if (u = t.charCodeAt(r) - 48, !(u >= 0 && 10 > u)) return 53 === u || 21 === u ? e.parseScientific(i * (o + a / s), t, r + 1, n) : i * (o + a / s);
                                        a = 10 * a + u, s = 10 * s, ++r
                                    }
                                    return i * (o + a / s)
                                }
                                if (53 === u || 21 === u) return e.parseScientific(i * o, t, r + 1, n);
                                break
                            }
                            o = 10 * o + u, ++r
                        }
                        return i * o
                    }, e
                }();
                e.FastNumberParsers = t
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    e.perfGetTime = function() {
                        return "undefined" != typeof window && window.performance ? function() {
                            return window.performance.now()
                        } : "undefined" != typeof process && "undefined" !== process.hrtime ? function() {
                            var e = process.hrtime();
                            return 1e3 * e[0] + e[1] / 1e6
                        } : function() {
                            return +new Date
                        }
                    }()
                }(t || (t = {}));
                var r = function() {
                    function e() {
                        this.starts = new Map, this.ends = new Map
                    }
                    return e.currentTime = function() {
                        return t.perfGetTime()
                    }, e.prototype.start = function(e) {
                        this.starts.set(e, t.perfGetTime())
                    }, e.prototype.end = function(e) {
                        this.ends.set(e, t.perfGetTime())
                    }, e.format = function(e) {
                        if (isNaN(e)) return "n/a";
                        for (var t = Math.floor(e / 36e5), r = Math.floor(e / 6e4 % 60), n = Math.floor(e / 1e3 % 60), i = Math.floor(e % 1e3).toString(); i.length < 3;) i = "0" + i;
                        return t > 0 ? t + "h" + r + "m" + n + "." + i + "s" : r > 0 ? r + "m" + n + "." + i + "s" : n > 0 ? n + "." + i + "s" : e.toFixed(0) + "ms"
                    }, e.prototype.formatTime = function(t) {
                        return e.format(this.time(t))
                    }, e.prototype.formatTimeSum = function() {
                        for (var t = [], r = 0; r < arguments.length; r++) t[r - 0] = arguments[r];
                        return e.format(this.timeSum.apply(this, t))
                    }, e.prototype.time = function(e) {
                        var t = this.starts.get(e),
                            r = this.ends.get(e);
                        return this.starts["delete"](e), this.ends["delete"](e), r - t
                    }, e.prototype.timeSum = function() {
                        for (var e = this, t = [], r = 0; r < arguments.length; r++) t[r - 0] = arguments[r];
                        for (var n = 0, i = 0, o = t.map(function(t) {
                                return e.ends.get(t) - e.starts.get(t)
                            }); i < o.length; i++) {
                            var a = o[i];
                            n += a
                        }
                        return n
                    }, e
                }();
                e.PerformanceMonitor = r
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Core || (e.Core = {}))
    }(o || (o = {}));
    var o, s = function() {
            var e = {
                REVISION: "71"
            };
            return void 0 === Math.sign && (Math.sign = function(e) {
                    return 0 > e ? -1 : e > 0 ? 1 : +e
                }), e.log = function() {
                    console.log.apply(console, arguments)
                }, e.warn = function() {
                    console.warn.apply(console, arguments)
                }, e.error = function() {
                    console.error.apply(console, arguments)
                }, e.MOUSE = {
                    LEFT: 0,
                    MIDDLE: 1,
                    RIGHT: 2
                }, e.CullFaceNone = 0, e.CullFaceBack = 1, e.CullFaceFront = 2, e.CullFaceFrontBack = 3, e.FrontFaceDirectionCW = 0, e.FrontFaceDirectionCCW = 1, e.BasicShadowMap = 0, e.PCFShadowMap = 1, e.PCFSoftShadowMap = 2, e.FrontSide = 0, e.BackSide = 1, e.DoubleSide = 2, e.NoShading = 0, e.FlatShading = 1, e.SmoothShading = 2, e.NoColors = 0, e.FaceColors = 1, e.VertexColors = 2, e.NoBlending = 0, e.NormalBlending = 1, e.AdditiveBlending = 2, e.SubtractiveBlending = 3, e.MultiplyBlending = 4, e.CustomBlending = 5, e.AddEquation = 100, e.SubtractEquation = 101, e.ReverseSubtractEquation = 102, e.MinEquation = 103, e.MaxEquation = 104, e.ZeroFactor = 200, e.OneFactor = 201, e.SrcColorFactor = 202, e.OneMinusSrcColorFactor = 203, e.SrcAlphaFactor = 204, e.OneMinusSrcAlphaFactor = 205, e.DstAlphaFactor = 206, e.OneMinusDstAlphaFactor = 207, e.DstColorFactor = 208, e.OneMinusDstColorFactor = 209, e.SrcAlphaSaturateFactor = 210, e.MultiplyOperation = 0, e.MixOperation = 1, e.AddOperation = 2, e.UVMapping = 300, e.CubeReflectionMapping = 301, e.CubeRefractionMapping = 302, e.EquirectangularReflectionMapping = 303, e.EquirectangularRefractionMapping = 304, e.SphericalReflectionMapping = 305, e.RepeatWrapping = 1e3, e.ClampToEdgeWrapping = 1001, e.MirroredRepeatWrapping = 1002, e.NearestFilter = 1003, e.NearestMipMapNearestFilter = 1004, e.NearestMipMapLinearFilter = 1005, e.LinearFilter = 1006, e.LinearMipMapNearestFilter = 1007, e.LinearMipMapLinearFilter = 1008, e.UnsignedByteType = 1009, e.ByteType = 1010, e.ShortType = 1011, e.UnsignedShortType = 1012, e.IntType = 1013, e.UnsignedIntType = 1014, e.FloatType = 1015, e.HalfFloatType = 1025, e.UnsignedShort4444Type = 1016, e.UnsignedShort5551Type = 1017, e.UnsignedShort565Type = 1018, e.AlphaFormat = 1019, e.RGBFormat = 1020, e.RGBAFormat = 1021, e.LuminanceFormat = 1022, e.LuminanceAlphaFormat = 1023, e.RGBEFormat = e.RGBAFormat, e.RGB_S3TC_DXT1_Format = 2001, e.RGBA_S3TC_DXT1_Format = 2002, e.RGBA_S3TC_DXT3_Format = 2003, e.RGBA_S3TC_DXT5_Format = 2004, e.RGB_PVRTC_4BPPV1_Format = 2100, e.RGB_PVRTC_2BPPV1_Format = 2101, e.RGBA_PVRTC_4BPPV1_Format = 2102, e.RGBA_PVRTC_2BPPV1_Format = 2103, e.Projector = function() {
                    e.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function(t, r) {
                        e.warn("THREE.Projector: .projectVector() is now vector.project()."), t.project(r)
                    }, this.unprojectVector = function(t, r) {
                        e.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), t.unproject(r)
                    }, this.pickingRay = function(t, r) {
                        e.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
                    }
                }, e.CanvasRenderer = function() {
                    e.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElement("canvas"), this.clear = function() {}, this.render = function() {}, this.setClearColor = function() {}, this.setSize = function() {}
                }, e.Color = function(e) {
                    return 3 === arguments.length ? this.setRGB(arguments[0], arguments[1], arguments[2]) : this.set(e)
                }, e.Color.prototype = {
                    constructor: e.Color,
                    r: 1,
                    g: 1,
                    b: 1,
                    set: function(t) {
                        return t instanceof e.Color ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t), this
                    },
                    setHex: function(e) {
                        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
                    },
                    setRGB: function(e, t, r) {
                        return this.r = e, this.g = t, this.b = r, this
                    },
                    setHSL: function(e, t, r) {
                        if (0 === t) this.r = this.g = this.b = r;
                        else {
                            var n = function(e, t, r) {
                                    return 0 > r && (r += 1), r > 1 && (r -= 1), 1 / 6 > r ? e + 6 * (t - e) * r : .5 > r ? t : 2 / 3 > r ? e + 6 * (t - e) * (2 / 3 - r) : e
                                },
                                i = .5 >= r ? r * (1 + t) : r + t - r * t,
                                o = 2 * r - i;
                            this.r = n(o, i, e + 1 / 3), this.g = n(o, i, e), this.b = n(o, i, e - 1 / 3)
                        }
                        return this
                    },
                    setStyle: function(t) {
                        if (/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t)) {
                            var r = /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t);
                            return this.r = Math.min(255, parseInt(r[1], 10)) / 255, this.g = Math.min(255, parseInt(r[2], 10)) / 255, this.b = Math.min(255, parseInt(r[3], 10)) / 255, this
                        }
                        if (/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t)) {
                            var r = /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t);
                            return this.r = Math.min(100, parseInt(r[1], 10)) / 100, this.g = Math.min(100, parseInt(r[2], 10)) / 100, this.b = Math.min(100, parseInt(r[3], 10)) / 100, this
                        }
                        if (/^\#([0-9a-f]{6})$/i.test(t)) {
                            var r = /^\#([0-9a-f]{6})$/i.exec(t);
                            return this.setHex(parseInt(r[1], 16)), this
                        }
                        if (/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t)) {
                            var r = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t);
                            return this.setHex(parseInt(r[1] + r[1] + r[2] + r[2] + r[3] + r[3], 16)), this
                        }
                        return /^(\w+)$/i.test(t) ? (this.setHex(e.ColorKeywords[t]), this) : void 0
                    },
                    copy: function(e) {
                        return this.r = e.r, this.g = e.g, this.b = e.b, this
                    },
                    copyGammaToLinear: function(e, t) {
                        return void 0 === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this
                    },
                    copyLinearToGamma: function(e, t) {
                        void 0 === t && (t = 2);
                        var r = t > 0 ? 1 / t : 1;
                        return this.r = Math.pow(e.r, r), this.g = Math.pow(e.g, r), this.b = Math.pow(e.b, r), this
                    },
                    convertGammaToLinear: function() {
                        var e = this.r,
                            t = this.g,
                            r = this.b;
                        return this.r = e * e, this.g = t * t, this.b = r * r, this
                    },
                    convertLinearToGamma: function() {
                        return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this
                    },
                    getHex: function() {
                        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                    },
                    getHexString: function() {
                        return ("000000" + this.getHex().toString(16)).slice(-6)
                    },
                    getHSL: function(e) {
                        var t, r, n = e || {
                                h: 0,
                                s: 0,
                                l: 0
                            },
                            i = this.r,
                            o = this.g,
                            a = this.b,
                            s = Math.max(i, o, a),
                            u = Math.min(i, o, a),
                            l = (u + s) / 2;
                        if (u === s) t = 0, r = 0;
                        else {
                            var c = s - u;
                            switch (r = .5 >= l ? c / (s + u) : c / (2 - s - u), s) {
                                case i:
                                    t = (o - a) / c + (a > o ? 6 : 0);
                                    break;
                                case o:
                                    t = (a - i) / c + 2;
                                    break;
                                case a:
                                    t = (i - o) / c + 4
                            }
                            t /= 6
                        }
                        return n.h = t, n.s = r, n.l = l, n
                    },
                    getStyle: function() {
                        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                    },
                    offsetHSL: function(e, t, r) {
                        var n = this.getHSL();
                        return n.h += e, n.s += t, n.l += r, this.setHSL(n.h, n.s, n.l), this
                    },
                    add: function(e) {
                        return this.r += e.r, this.g += e.g, this.b += e.b, this
                    },
                    addColors: function(e, t) {
                        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
                    },
                    addScalar: function(e) {
                        return this.r += e, this.g += e, this.b += e, this
                    },
                    multiply: function(e) {
                        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
                    },
                    multiplyScalar: function(e) {
                        return this.r *= e, this.g *= e, this.b *= e, this
                    },
                    lerp: function(e, t) {
                        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
                    },
                    equals: function(e) {
                        return e.r === this.r && e.g === this.g && e.b === this.b
                    },
                    fromArray: function(e) {
                        return this.r = e[0], this.g = e[1], this.b = e[2], this
                    },
                    toArray: function(e, t) {
                        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e
                    },
                    clone: function() {
                        return (new e.Color).setRGB(this.r, this.g, this.b)
                    }
                }, e.ColorKeywords = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074
                }, e.Quaternion = function(e, t, r, n) {
                    this._x = e || 0, this._y = t || 0, this._z = r || 0, this._w = void 0 !== n ? n : 1
                }, e.Quaternion.prototype = {
                    constructor: e.Quaternion,
                    _x: 0,
                    _y: 0,
                    _z: 0,
                    _w: 0,
                    get x() {
                        return this._x
                    },
                    set x(e) {
                        this._x = e, this.onChangeCallback()
                    },
                    get y() {
                        return this._y
                    },
                    set y(e) {
                        this._y = e, this.onChangeCallback()
                    },
                    get z() {
                        return this._z
                    },
                    set z(e) {
                        this._z = e, this.onChangeCallback()
                    },
                    get w() {
                        return this._w
                    },
                    set w(e) {
                        this._w = e, this.onChangeCallback()
                    },
                    set: function(e, t, r, n) {
                        return this._x = e, this._y = t, this._z = r, this._w = n, this.onChangeCallback(), this
                    },
                    copy: function(e) {
                        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this.onChangeCallback(), this
                    },
                    setFromEuler: function(t, r) {
                        if (t instanceof e.Euler == !1) throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                        var n = Math.cos(t._x / 2),
                            i = Math.cos(t._y / 2),
                            o = Math.cos(t._z / 2),
                            a = Math.sin(t._x / 2),
                            s = Math.sin(t._y / 2),
                            u = Math.sin(t._z / 2);
                        return "XYZ" === t.order ? (this._x = a * i * o + n * s * u, this._y = n * s * o - a * i * u, this._z = n * i * u + a * s * o, this._w = n * i * o - a * s * u) : "YXZ" === t.order ? (this._x = a * i * o + n * s * u, this._y = n * s * o - a * i * u, this._z = n * i * u - a * s * o, this._w = n * i * o + a * s * u) : "ZXY" === t.order ? (this._x = a * i * o - n * s * u, this._y = n * s * o + a * i * u, this._z = n * i * u + a * s * o, this._w = n * i * o - a * s * u) : "ZYX" === t.order ? (this._x = a * i * o - n * s * u, this._y = n * s * o + a * i * u, this._z = n * i * u - a * s * o, this._w = n * i * o + a * s * u) : "YZX" === t.order ? (this._x = a * i * o + n * s * u, this._y = n * s * o + a * i * u, this._z = n * i * u - a * s * o, this._w = n * i * o - a * s * u) : "XZY" === t.order && (this._x = a * i * o - n * s * u, this._y = n * s * o - a * i * u, this._z = n * i * u + a * s * o, this._w = n * i * o + a * s * u), r !== !1 && this.onChangeCallback(), this
                    },
                    setFromAxisAngle: function(e, t) {
                        var r = t / 2,
                            n = Math.sin(r);
                        return this._x = e.x * n, this._y = e.y * n, this._z = e.z * n, this._w = Math.cos(r), this.onChangeCallback(), this
                    },
                    setFromRotationMatrix: function(e) {
                        var t, r = e.elements,
                            n = r[0],
                            i = r[4],
                            o = r[8],
                            a = r[1],
                            s = r[5],
                            u = r[9],
                            l = r[2],
                            c = r[6],
                            h = r[10],
                            p = n + s + h;
                        return p > 0 ? (t = .5 / Math.sqrt(p + 1), this._w = .25 / t, this._x = (c - u) * t, this._y = (o - l) * t, this._z = (a - i) * t) : n > s && n > h ? (t = 2 * Math.sqrt(1 + n - s - h), this._w = (c - u) / t, this._x = .25 * t, this._y = (i + a) / t, this._z = (o + l) / t) : s > h ? (t = 2 * Math.sqrt(1 + s - n - h), this._w = (o - l) / t, this._x = (i + a) / t, this._y = .25 * t, this._z = (u + c) / t) : (t = 2 * Math.sqrt(1 + h - n - s), this._w = (a - i) / t, this._x = (o + l) / t, this._y = (u + c) / t, this._z = .25 * t), this.onChangeCallback(), this
                    },
                    setFromUnitVectors: function() {
                        var t, r, n = 1e-6;
                        return function(i, o) {
                            return void 0 === t && (t = new e.Vector3), r = i.dot(o) + 1, n > r ? (r = 0, Math.abs(i.x) > Math.abs(i.z) ? t.set(-i.y, i.x, 0) : t.set(0, -i.z, i.y)) : t.crossVectors(i, o), this._x = t.x, this._y = t.y, this._z = t.z, this._w = r, this.normalize(), this
                        }
                    }(),
                    inverse: function() {
                        return this.conjugate().normalize(), this
                    },
                    conjugate: function() {
                        return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this
                    },
                    dot: function(e) {
                        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                    },
                    lengthSq: function() {
                        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                    },
                    length: function() {
                        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                    },
                    normalize: function() {
                        var e = this.length();
                        return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this.onChangeCallback(), this
                    },
                    multiply: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(t, r)) : this.multiplyQuaternions(this, t)
                    },
                    multiplyQuaternions: function(e, t) {
                        var r = e._x,
                            n = e._y,
                            i = e._z,
                            o = e._w,
                            a = t._x,
                            s = t._y,
                            u = t._z,
                            l = t._w;
                        return this._x = r * l + o * a + n * u - i * s, this._y = n * l + o * s + i * a - r * u, this._z = i * l + o * u + r * s - n * a, this._w = o * l - r * a - n * s - i * u, this.onChangeCallback(), this
                    },
                    multiplyVector3: function(t) {
                        return e.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), t.applyQuaternion(this)
                    },
                    slerp: function(e, t) {
                        if (0 === t) return this;
                        if (1 === t) return this.copy(e);
                        var r = this._x,
                            n = this._y,
                            i = this._z,
                            o = this._w,
                            a = o * e._w + r * e._x + n * e._y + i * e._z;
                        if (0 > a ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = r, this._y = n, this._z = i, this;
                        var s = Math.acos(a),
                            u = Math.sqrt(1 - a * a);
                        if (Math.abs(u) < .001) return this._w = .5 * (o + this._w), this._x = .5 * (r + this._x), this._y = .5 * (n + this._y), this._z = .5 * (i + this._z), this;
                        var l = Math.sin((1 - t) * s) / u,
                            c = Math.sin(t * s) / u;
                        return this._w = o * l + this._w * c, this._x = r * l + this._x * c, this._y = n * l + this._y * c, this._z = i * l + this._z * c, this.onChangeCallback(), this
                    },
                    equals: function(e) {
                        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                    },
                    fromArray: function(e, t) {
                        return void 0 === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this.onChangeCallback(), this
                    },
                    toArray: function(e, t) {
                        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e
                    },
                    onChange: function(e) {
                        return this.onChangeCallback = e, this
                    },
                    onChangeCallback: function() {},
                    clone: function() {
                        return new e.Quaternion(this._x, this._y, this._z, this._w)
                    }
                }, e.Quaternion.slerp = function(e, t, r, n) {
                    return r.copy(e).slerp(t, n)
                }, e.Vector2 = function(e, t) {
                    this.x = e || 0, this.y = t || 0
                }, e.Vector2.prototype = {
                    constructor: e.Vector2,
                    set: function(e, t) {
                        return this.x = e, this.y = t, this
                    },
                    setX: function(e) {
                        return this.x = e, this
                    },
                    setY: function(e) {
                        return this.y = e, this
                    },
                    setComponent: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    },
                    getComponent: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    },
                    copy: function(e) {
                        return this.x = e.x, this.y = e.y, this
                    },
                    add: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, r)) : (this.x += t.x, this.y += t.y, this)
                    },
                    addScalar: function(e) {
                        return this.x += e, this.y += e, this
                    },
                    addVectors: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this
                    },
                    sub: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, r)) : (this.x -= t.x, this.y -= t.y, this)
                    },
                    subScalar: function(e) {
                        return this.x -= e, this.y -= e, this
                    },
                    subVectors: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this
                    },
                    multiply: function(e) {
                        return this.x *= e.x, this.y *= e.y, this
                    },
                    multiplyScalar: function(e) {
                        return this.x *= e, this.y *= e, this
                    },
                    divide: function(e) {
                        return this.x /= e.x, this.y /= e.y, this
                    },
                    divideScalar: function(e) {
                        if (0 !== e) {
                            var t = 1 / e;
                            this.x *= t, this.y *= t
                        } else this.x = 0, this.y = 0;
                        return this
                    },
                    min: function(e) {
                        return this.x > e.x && (this.x = e.x), this.y > e.y && (this.y = e.y), this
                    },
                    max: function(e) {
                        return this.x < e.x && (this.x = e.x), this.y < e.y && (this.y = e.y), this
                    },
                    clamp: function(e, t) {
                        return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x), this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y), this
                    },
                    clampScalar: function() {
                        var t, r;
                        return function(n, i) {
                            return void 0 === t && (t = new e.Vector2, r = new e.Vector2), t.set(n, n), r.set(i, i), this.clamp(t, r)
                        }
                    }(),
                    floor: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
                    },
                    ceil: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
                    },
                    round: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this
                    },
                    roundToZero: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
                    },
                    negate: function() {
                        return this.x = -this.x, this.y = -this.y, this
                    },
                    dot: function(e) {
                        return this.x * e.x + this.y * e.y
                    },
                    lengthSq: function() {
                        return this.x * this.x + this.y * this.y
                    },
                    length: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y)
                    },
                    normalize: function() {
                        return this.divideScalar(this.length())
                    },
                    distanceTo: function(e) {
                        return Math.sqrt(this.distanceToSquared(e))
                    },
                    distanceToSquared: function(e) {
                        var t = this.x - e.x,
                            r = this.y - e.y;
                        return t * t + r * r
                    },
                    setLength: function(e) {
                        var t = this.length();
                        return 0 !== t && e !== t && this.multiplyScalar(e / t), this
                    },
                    lerp: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
                    },
                    lerpVectors: function(e, t, r) {
                        return this.subVectors(t, e).multiplyScalar(r).add(e), this
                    },
                    equals: function(e) {
                        return e.x === this.x && e.y === this.y
                    },
                    fromArray: function(e, t) {
                        return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this
                    },
                    toArray: function(e, t) {
                        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e
                    },
                    fromAttribute: function(e, t, r) {
                        return void 0 === r && (r = 0), t = t * e.itemSize + r, this.x = e.array[t], this.y = e.array[t + 1], this
                    },
                    clone: function() {
                        return new e.Vector2(this.x, this.y)
                    }
                }, e.Vector3 = function(e, t, r) {
                    this.x = e || 0, this.y = t || 0, this.z = r || 0
                }, e.Vector3.prototype = {
                    constructor: e.Vector3,
                    set: function(e, t, r) {
                        return this.x = e, this.y = t, this.z = r, this
                    },
                    setX: function(e) {
                        return this.x = e, this
                    },
                    setY: function(e) {
                        return this.y = e, this
                    },
                    setZ: function(e) {
                        return this.z = e, this
                    },
                    setComponent: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            case 2:
                                this.z = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    },
                    getComponent: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    },
                    copy: function(e) {
                        return this.x = e.x, this.y = e.y, this.z = e.z, this
                    },
                    add: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, r)) : (this.x += t.x, this.y += t.y, this.z += t.z, this)
                    },
                    addScalar: function(e) {
                        return this.x += e, this.y += e, this.z += e, this
                    },
                    addVectors: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
                    },
                    sub: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, r)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this)
                    },
                    subScalar: function(e) {
                        return this.x -= e, this.y -= e, this.z -= e, this
                    },
                    subVectors: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
                    },
                    multiply: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(t, r)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this)
                    },
                    multiplyScalar: function(e) {
                        return this.x *= e, this.y *= e, this.z *= e, this
                    },
                    multiplyVectors: function(e, t) {
                        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
                    },
                    applyEuler: function() {
                        var t;
                        return function(r) {
                            return r instanceof e.Euler == !1 && e.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."), void 0 === t && (t = new e.Quaternion), this.applyQuaternion(t.setFromEuler(r)), this
                        }
                    }(),
                    applyAxisAngle: function() {
                        var t;
                        return function(r, n) {
                            return void 0 === t && (t = new e.Quaternion), this.applyQuaternion(t.setFromAxisAngle(r, n)), this
                        }
                    }(),
                    applyMatrix3: function(e) {
                        var t = this.x,
                            r = this.y,
                            n = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[3] * r + i[6] * n, this.y = i[1] * t + i[4] * r + i[7] * n, this.z = i[2] * t + i[5] * r + i[8] * n, this
                    },
                    applyMatrix4: function(e) {
                        var t = this.x,
                            r = this.y,
                            n = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[4] * r + i[8] * n + i[12], this.y = i[1] * t + i[5] * r + i[9] * n + i[13], this.z = i[2] * t + i[6] * r + i[10] * n + i[14], this
                    },
                    applyProjection: function(e) {
                        var t = this.x,
                            r = this.y,
                            n = this.z,
                            i = e.elements,
                            o = 1 / (i[3] * t + i[7] * r + i[11] * n + i[15]);
                        return this.x = (i[0] * t + i[4] * r + i[8] * n + i[12]) * o, this.y = (i[1] * t + i[5] * r + i[9] * n + i[13]) * o, this.z = (i[2] * t + i[6] * r + i[10] * n + i[14]) * o, this
                    },
                    applyQuaternion: function(e) {
                        var t = this.x,
                            r = this.y,
                            n = this.z,
                            i = e.x,
                            o = e.y,
                            a = e.z,
                            s = e.w,
                            u = s * t + o * n - a * r,
                            l = s * r + a * t - i * n,
                            c = s * n + i * r - o * t,
                            h = -i * t - o * r - a * n;
                        return this.x = u * s + h * -i + l * -a - c * -o, this.y = l * s + h * -o + c * -i - u * -a, this.z = c * s + h * -a + u * -o - l * -i, this
                    },
                    project: function() {
                        var t;
                        return function(r) {
                            return void 0 === t && (t = new e.Matrix4),
                                t.multiplyMatrices(r.projectionMatrix, t.getInverse(r.matrixWorld)), this.applyProjection(t)
                        }
                    }(),
                    unproject: function() {
                        var t;
                        return function(r) {
                            return void 0 === t && (t = new e.Matrix4), t.multiplyMatrices(r.matrixWorld, t.getInverse(r.projectionMatrix)), this.applyProjection(t)
                        }
                    }(),
                    transformDirection: function(e) {
                        var t = this.x,
                            r = this.y,
                            n = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[4] * r + i[8] * n, this.y = i[1] * t + i[5] * r + i[9] * n, this.z = i[2] * t + i[6] * r + i[10] * n, this.normalize(), this
                    },
                    divide: function(e) {
                        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
                    },
                    divideScalar: function(e) {
                        if (0 !== e) {
                            var t = 1 / e;
                            this.x *= t, this.y *= t, this.z *= t
                        } else this.x = 0, this.y = 0, this.z = 0;
                        return this
                    },
                    min: function(e) {
                        return this.x > e.x && (this.x = e.x), this.y > e.y && (this.y = e.y), this.z > e.z && (this.z = e.z), this
                    },
                    max: function(e) {
                        return this.x < e.x && (this.x = e.x), this.y < e.y && (this.y = e.y), this.z < e.z && (this.z = e.z), this
                    },
                    clamp: function(e, t) {
                        return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x), this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y), this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z), this
                    },
                    clampScalar: function() {
                        var t, r;
                        return function(n, i) {
                            return void 0 === t && (t = new e.Vector3, r = new e.Vector3), t.set(n, n, n), r.set(i, i, i), this.clamp(t, r)
                        }
                    }(),
                    floor: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
                    },
                    ceil: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
                    },
                    round: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
                    },
                    roundToZero: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
                    },
                    negate: function() {
                        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
                    },
                    dot: function(e) {
                        return this.x * e.x + this.y * e.y + this.z * e.z
                    },
                    lengthSq: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z
                    },
                    length: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                    },
                    lengthManhattan: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                    },
                    normalize: function() {
                        return this.divideScalar(this.length())
                    },
                    setLength: function(e) {
                        var t = this.length();
                        return 0 !== t && e !== t && this.multiplyScalar(e / t), this
                    },
                    lerp: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
                    },
                    lerpVectors: function(e, t, r) {
                        return this.subVectors(t, e).multiplyScalar(r).add(e), this
                    },
                    cross: function(t, r) {
                        if (void 0 !== r) return e.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(t, r);
                        var n = this.x,
                            i = this.y,
                            o = this.z;
                        return this.x = i * t.z - o * t.y, this.y = o * t.x - n * t.z, this.z = n * t.y - i * t.x, this
                    },
                    crossVectors: function(e, t) {
                        var r = e.x,
                            n = e.y,
                            i = e.z,
                            o = t.x,
                            a = t.y,
                            s = t.z;
                        return this.x = n * s - i * a, this.y = i * o - r * s, this.z = r * a - n * o, this
                    },
                    projectOnVector: function() {
                        var t, r;
                        return function(n) {
                            return void 0 === t && (t = new e.Vector3), t.copy(n).normalize(), r = this.dot(t), this.copy(t).multiplyScalar(r)
                        }
                    }(),
                    projectOnPlane: function() {
                        var t;
                        return function(r) {
                            return void 0 === t && (t = new e.Vector3), t.copy(this).projectOnVector(r), this.sub(t)
                        }
                    }(),
                    reflect: function() {
                        var t;
                        return function(r) {
                            return void 0 === t && (t = new e.Vector3), this.sub(t.copy(r).multiplyScalar(2 * this.dot(r)))
                        }
                    }(),
                    angleTo: function(t) {
                        var r = this.dot(t) / (this.length() * t.length());
                        return Math.acos(e.Math.clamp(r, -1, 1))
                    },
                    distanceTo: function(e) {
                        return Math.sqrt(this.distanceToSquared(e))
                    },
                    distanceToSquared: function(e) {
                        var t = this.x - e.x,
                            r = this.y - e.y,
                            n = this.z - e.z;
                        return t * t + r * r + n * n
                    },
                    setEulerFromRotationMatrix: function(t, r) {
                        e.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
                    },
                    setEulerFromQuaternion: function(t, r) {
                        e.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
                    },
                    getPositionFromMatrix: function(t) {
                        return e.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(t)
                    },
                    getScaleFromMatrix: function(t) {
                        return e.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(t)
                    },
                    getColumnFromMatrix: function(t, r) {
                        return e.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, r)
                    },
                    setFromMatrixPosition: function(e) {
                        return this.x = e.elements[12], this.y = e.elements[13], this.z = e.elements[14], this
                    },
                    setFromMatrixScale: function(e) {
                        var t = this.set(e.elements[0], e.elements[1], e.elements[2]).length(),
                            r = this.set(e.elements[4], e.elements[5], e.elements[6]).length(),
                            n = this.set(e.elements[8], e.elements[9], e.elements[10]).length();
                        return this.x = t, this.y = r, this.z = n, this
                    },
                    setFromMatrixColumn: function(e, t) {
                        var r = 4 * e,
                            n = t.elements;
                        return this.x = n[r], this.y = n[r + 1], this.z = n[r + 2], this
                    },
                    equals: function(e) {
                        return e.x === this.x && e.y === this.y && e.z === this.z
                    },
                    fromArray: function(e, t) {
                        return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this
                    },
                    toArray: function(e, t) {
                        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e
                    },
                    fromAttribute: function(e, t, r) {
                        return void 0 === r && (r = 0), t = t * e.itemSize + r, this.x = e.array[t], this.y = e.array[t + 1], this.z = e.array[t + 2], this
                    },
                    clone: function() {
                        return new e.Vector3(this.x, this.y, this.z)
                    }
                }, e.Vector4 = function(e, t, r, n) {
                    this.x = e || 0, this.y = t || 0, this.z = r || 0, this.w = void 0 !== n ? n : 1
                }, e.Vector4.prototype = {
                    constructor: e.Vector4,
                    set: function(e, t, r, n) {
                        return this.x = e, this.y = t, this.z = r, this.w = n, this
                    },
                    setX: function(e) {
                        return this.x = e, this
                    },
                    setY: function(e) {
                        return this.y = e, this
                    },
                    setZ: function(e) {
                        return this.z = e, this
                    },
                    setW: function(e) {
                        return this.w = e, this
                    },
                    setComponent: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            case 2:
                                this.z = t;
                                break;
                            case 3:
                                this.w = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    },
                    getComponent: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            case 3:
                                return this.w;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    },
                    copy: function(e) {
                        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
                    },
                    add: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, r)) : (this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this)
                    },
                    addScalar: function(e) {
                        return this.x += e, this.y += e, this.z += e, this.w += e, this
                    },
                    addVectors: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
                    },
                    sub: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, r)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this)
                    },
                    subScalar: function(e) {
                        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this
                    },
                    subVectors: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
                    },
                    multiplyScalar: function(e) {
                        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this
                    },
                    applyMatrix4: function(e) {
                        var t = this.x,
                            r = this.y,
                            n = this.z,
                            i = this.w,
                            o = e.elements;
                        return this.x = o[0] * t + o[4] * r + o[8] * n + o[12] * i, this.y = o[1] * t + o[5] * r + o[9] * n + o[13] * i, this.z = o[2] * t + o[6] * r + o[10] * n + o[14] * i, this.w = o[3] * t + o[7] * r + o[11] * n + o[15] * i, this
                    },
                    divideScalar: function(e) {
                        if (0 !== e) {
                            var t = 1 / e;
                            this.x *= t, this.y *= t, this.z *= t, this.w *= t
                        } else this.x = 0, this.y = 0, this.z = 0, this.w = 1;
                        return this
                    },
                    setAxisAngleFromQuaternion: function(e) {
                        this.w = 2 * Math.acos(e.w);
                        var t = Math.sqrt(1 - e.w * e.w);
                        return 1e-4 > t ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
                    },
                    setAxisAngleFromRotationMatrix: function(e) {
                        var t, r, n, i, o = .01,
                            a = .1,
                            s = e.elements,
                            u = s[0],
                            l = s[4],
                            c = s[8],
                            h = s[1],
                            p = s[5],
                            d = s[9],
                            f = s[2],
                            m = s[6],
                            v = s[10];
                        if (Math.abs(l - h) < o && Math.abs(c - f) < o && Math.abs(d - m) < o) {
                            if (Math.abs(l + h) < a && Math.abs(c + f) < a && Math.abs(d + m) < a && Math.abs(u + p + v - 3) < a) return this.set(1, 0, 0, 0), this;
                            t = Math.PI;
                            var g = (u + 1) / 2,
                                y = (p + 1) / 2,
                                b = (v + 1) / 2,
                                x = (l + h) / 4,
                                _ = (c + f) / 4,
                                w = (d + m) / 4;
                            return g > y && g > b ? o > g ? (r = 0, n = .707106781, i = .707106781) : (r = Math.sqrt(g), n = x / r, i = _ / r) : y > b ? o > y ? (r = .707106781, n = 0, i = .707106781) : (n = Math.sqrt(y), r = x / n, i = w / n) : o > b ? (r = .707106781, n = .707106781, i = 0) : (i = Math.sqrt(b), r = _ / i, n = w / i), this.set(r, n, i, t), this
                        }
                        var C = Math.sqrt((m - d) * (m - d) + (c - f) * (c - f) + (h - l) * (h - l));
                        return Math.abs(C) < .001 && (C = 1), this.x = (m - d) / C, this.y = (c - f) / C, this.z = (h - l) / C, this.w = Math.acos((u + p + v - 1) / 2), this
                    },
                    min: function(e) {
                        return this.x > e.x && (this.x = e.x), this.y > e.y && (this.y = e.y), this.z > e.z && (this.z = e.z), this.w > e.w && (this.w = e.w), this
                    },
                    max: function(e) {
                        return this.x < e.x && (this.x = e.x), this.y < e.y && (this.y = e.y), this.z < e.z && (this.z = e.z), this.w < e.w && (this.w = e.w), this
                    },
                    clamp: function(e, t) {
                        return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x), this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y), this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z), this.w < e.w ? this.w = e.w : this.w > t.w && (this.w = t.w), this
                    },
                    clampScalar: function() {
                        var t, r;
                        return function(n, i) {
                            return void 0 === t && (t = new e.Vector4, r = new e.Vector4), t.set(n, n, n, n), r.set(i, i, i, i), this.clamp(t, r)
                        }
                    }(),
                    floor: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
                    },
                    ceil: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
                    },
                    round: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
                    },
                    roundToZero: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
                    },
                    negate: function() {
                        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
                    },
                    dot: function(e) {
                        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                    },
                    lengthSq: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                    },
                    length: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                    },
                    lengthManhattan: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                    },
                    normalize: function() {
                        return this.divideScalar(this.length())
                    },
                    setLength: function(e) {
                        var t = this.length();
                        return 0 !== t && e !== t && this.multiplyScalar(e / t), this
                    },
                    lerp: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
                    },
                    lerpVectors: function(e, t, r) {
                        return this.subVectors(t, e).multiplyScalar(r).add(e), this
                    },
                    equals: function(e) {
                        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                    },
                    fromArray: function(e, t) {
                        return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this
                    },
                    toArray: function(e, t) {
                        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e
                    },
                    fromAttribute: function(e, t, r) {
                        return void 0 === r && (r = 0), t = t * e.itemSize + r, this.x = e.array[t], this.y = e.array[t + 1], this.z = e.array[t + 2], this.w = e.array[t + 3], this
                    },
                    clone: function() {
                        return new e.Vector4(this.x, this.y, this.z, this.w)
                    }
                }, e.Euler = function(t, r, n, i) {
                    this._x = t || 0, this._y = r || 0, this._z = n || 0, this._order = i || e.Euler.DefaultOrder
                }, e.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], e.Euler.DefaultOrder = "XYZ", e.Euler.prototype = {
                    constructor: e.Euler,
                    _x: 0,
                    _y: 0,
                    _z: 0,
                    _order: e.Euler.DefaultOrder,
                    get x() {
                        return this._x
                    },
                    set x(e) {
                        this._x = e, this.onChangeCallback()
                    },
                    get y() {
                        return this._y
                    },
                    set y(e) {
                        this._y = e, this.onChangeCallback()
                    },
                    get z() {
                        return this._z
                    },
                    set z(e) {
                        this._z = e, this.onChangeCallback()
                    },
                    get order() {
                        return this._order
                    },
                    set order(e) {
                        this._order = e, this.onChangeCallback()
                    },
                    set: function(e, t, r, n) {
                        return this._x = e, this._y = t, this._z = r, this._order = n || this._order, this.onChangeCallback(), this
                    },
                    copy: function(e) {
                        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this.onChangeCallback(), this
                    },
                    setFromRotationMatrix: function(t, r, n) {
                        var i = e.Math.clamp,
                            o = t.elements,
                            a = o[0],
                            s = o[4],
                            u = o[8],
                            l = o[1],
                            c = o[5],
                            h = o[9],
                            p = o[2],
                            d = o[6],
                            f = o[10];
                        return r = r || this._order, "XYZ" === r ? (this._y = Math.asin(i(u, -1, 1)), Math.abs(u) < .99999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-s, a)) : (this._x = Math.atan2(d, c), this._z = 0)) : "YXZ" === r ? (this._x = Math.asin(-i(h, -1, 1)), Math.abs(h) < .99999 ? (this._y = Math.atan2(u, f), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-p, a), this._z = 0)) : "ZXY" === r ? (this._x = Math.asin(i(d, -1, 1)), Math.abs(d) < .99999 ? (this._y = Math.atan2(-p, f), this._z = Math.atan2(-s, c)) : (this._y = 0, this._z = Math.atan2(l, a))) : "ZYX" === r ? (this._y = Math.asin(-i(p, -1, 1)), Math.abs(p) < .99999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(l, a)) : (this._x = 0, this._z = Math.atan2(-s, c))) : "YZX" === r ? (this._z = Math.asin(i(l, -1, 1)), Math.abs(l) < .99999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-p, a)) : (this._x = 0, this._y = Math.atan2(u, f))) : "XZY" === r ? (this._z = Math.asin(-i(s, -1, 1)), Math.abs(s) < .99999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(u, a)) : (this._x = Math.atan2(-h, f), this._y = 0)) : e.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + r), this._order = r, n !== !1 && this.onChangeCallback(), this
                    },
                    setFromQuaternion: function() {
                        var t;
                        return function(r, n, i) {
                            return void 0 === t && (t = new e.Matrix4), t.makeRotationFromQuaternion(r), this.setFromRotationMatrix(t, n, i), this
                        }
                    }(),
                    setFromVector3: function(e, t) {
                        return this.set(e.x, e.y, e.z, t || this._order)
                    },
                    reorder: function() {
                        var t = new e.Quaternion;
                        return function(e) {
                            t.setFromEuler(this), this.setFromQuaternion(t, e)
                        }
                    }(),
                    equals: function(e) {
                        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                    },
                    fromArray: function(e) {
                        return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this.onChangeCallback(), this
                    },
                    toArray: function(e, t) {
                        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e
                    },
                    toVector3: function(t) {
                        return t ? t.set(this._x, this._y, this._z) : new e.Vector3(this._x, this._y, this._z)
                    },
                    onChange: function(e) {
                        return this.onChangeCallback = e, this
                    },
                    onChangeCallback: function() {},
                    clone: function() {
                        return new e.Euler(this._x, this._y, this._z, this._order)
                    }
                }, e.Line3 = function(t, r) {
                    this.start = void 0 !== t ? t : new e.Vector3, this.end = void 0 !== r ? r : new e.Vector3
                }, e.Line3.prototype = {
                    constructor: e.Line3,
                    set: function(e, t) {
                        return this.start.copy(e), this.end.copy(t), this
                    },
                    copy: function(e) {
                        return this.start.copy(e.start), this.end.copy(e.end), this
                    },
                    center: function(t) {
                        var r = t || new e.Vector3;
                        return r.addVectors(this.start, this.end).multiplyScalar(.5)
                    },
                    delta: function(t) {
                        var r = t || new e.Vector3;
                        return r.subVectors(this.end, this.start)
                    },
                    distanceSq: function() {
                        return this.start.distanceToSquared(this.end)
                    },
                    distance: function() {
                        return this.start.distanceTo(this.end)
                    },
                    at: function(t, r) {
                        var n = r || new e.Vector3;
                        return this.delta(n).multiplyScalar(t).add(this.start)
                    },
                    closestPointToPointParameter: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3;
                        return function(n, i) {
                            t.subVectors(n, this.start), r.subVectors(this.end, this.start);
                            var o = r.dot(r),
                                a = r.dot(t),
                                s = a / o;
                            return i && (s = e.Math.clamp(s, 0, 1)), s
                        }
                    }(),
                    closestPointToPoint: function(t, r, n) {
                        var i = this.closestPointToPointParameter(t, r),
                            o = n || new e.Vector3;
                        return this.delta(o).multiplyScalar(i).add(this.start)
                    },
                    applyMatrix4: function(e) {
                        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                    },
                    equals: function(e) {
                        return e.start.equals(this.start) && e.end.equals(this.end)
                    },
                    clone: function() {
                        return (new e.Line3).copy(this)
                    }
                }, e.Box2 = function(t, r) {
                    this.min = void 0 !== t ? t : new e.Vector2(1 / 0, 1 / 0), this.max = void 0 !== r ? r : new e.Vector2(-(1 / 0), -(1 / 0))
                }, e.Box2.prototype = {
                    constructor: e.Box2,
                    set: function(e, t) {
                        return this.min.copy(e), this.max.copy(t), this
                    },
                    setFromPoints: function(e) {
                        this.makeEmpty();
                        for (var t = 0, r = e.length; r > t; t++) this.expandByPoint(e[t]);
                        return this
                    },
                    setFromCenterAndSize: function() {
                        var t = new e.Vector2;
                        return function(e, r) {
                            var n = t.copy(r).multiplyScalar(.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                        }
                    }(),
                    copy: function(e) {
                        return this.min.copy(e.min), this.max.copy(e.max), this
                    },
                    makeEmpty: function() {
                        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -(1 / 0), this
                    },
                    empty: function() {
                        return this.max.x < this.min.x || this.max.y < this.min.y
                    },
                    center: function(t) {
                        var r = t || new e.Vector2;
                        return r.addVectors(this.min, this.max).multiplyScalar(.5)
                    },
                    size: function(t) {
                        var r = t || new e.Vector2;
                        return r.subVectors(this.max, this.min)
                    },
                    expandByPoint: function(e) {
                        return this.min.min(e), this.max.max(e), this
                    },
                    expandByVector: function(e) {
                        return this.min.sub(e), this.max.add(e), this
                    },
                    expandByScalar: function(e) {
                        return this.min.addScalar(-e), this.max.addScalar(e), this
                    },
                    containsPoint: function(e) {
                        return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y ? !1 : !0
                    },
                    containsBox: function(e) {
                        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y ? !0 : !1
                    },
                    getParameter: function(t, r) {
                        var n = r || new e.Vector2;
                        return n.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
                    },
                    isIntersectionBox: function(e) {
                        return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y ? !1 : !0
                    },
                    clampPoint: function(t, r) {
                        var n = r || new e.Vector2;
                        return n.copy(t).clamp(this.min, this.max)
                    },
                    distanceToPoint: function() {
                        var t = new e.Vector2;
                        return function(e) {
                            var r = t.copy(e).clamp(this.min, this.max);
                            return r.sub(e).length()
                        }
                    }(),
                    intersect: function(e) {
                        return this.min.max(e.min), this.max.min(e.max), this
                    },
                    union: function(e) {
                        return this.min.min(e.min), this.max.max(e.max), this
                    },
                    translate: function(e) {
                        return this.min.add(e), this.max.add(e), this
                    },
                    equals: function(e) {
                        return e.min.equals(this.min) && e.max.equals(this.max)
                    },
                    clone: function() {
                        return (new e.Box2).copy(this)
                    }
                }, e.Box3 = function(t, r) {
                    this.min = void 0 !== t ? t : new e.Vector3(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== r ? r : new e.Vector3(-(1 / 0), -(1 / 0), -(1 / 0))
                }, e.Box3.prototype = {
                    constructor: e.Box3,
                    set: function(e, t) {
                        return this.min.copy(e), this.max.copy(t), this
                    },
                    setFromPoints: function(e) {
                        this.makeEmpty();
                        for (var t = 0, r = e.length; r > t; t++) this.expandByPoint(e[t]);
                        return this
                    },
                    setFromCenterAndSize: function() {
                        var t = new e.Vector3;
                        return function(e, r) {
                            var n = t.copy(r).multiplyScalar(.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                        }
                    }(),
                    setFromObject: function() {
                        var t = new e.Vector3;
                        return function(r) {
                            var n = this;
                            return r.updateMatrixWorld(!0), this.makeEmpty(), r.traverse(function(r) {
                                var i = r.geometry;
                                if (void 0 !== i)
                                    if (i instanceof e.Geometry)
                                        for (var o = i.vertices, a = 0, s = o.length; s > a; a++) t.copy(o[a]), t.applyMatrix4(r.matrixWorld), n.expandByPoint(t);
                                    else if (i instanceof e.BufferGeometry && void 0 !== i.attributes.position)
                                    for (var u = i.attributes.position.array, a = 0, s = u.length; s > a; a += 3) t.set(u[a], u[a + 1], u[a + 2]), t.applyMatrix4(r.matrixWorld), n.expandByPoint(t)
                            }), this
                        }
                    }(),
                    copy: function(e) {
                        return this.min.copy(e.min), this.max.copy(e.max), this
                    },
                    makeEmpty: function() {
                        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -(1 / 0), this
                    },
                    empty: function() {
                        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                    },
                    center: function(t) {
                        var r = t || new e.Vector3;
                        return r.addVectors(this.min, this.max).multiplyScalar(.5)
                    },
                    size: function(t) {
                        var r = t || new e.Vector3;
                        return r.subVectors(this.max, this.min)
                    },
                    expandByPoint: function(e) {
                        return this.min.min(e), this.max.max(e), this
                    },
                    expandByVector: function(e) {
                        return this.min.sub(e), this.max.add(e), this
                    },
                    expandByScalar: function(e) {
                        return this.min.addScalar(-e), this.max.addScalar(e), this
                    },
                    containsPoint: function(e) {
                        return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z ? !1 : !0
                    },
                    containsBox: function(e) {
                        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z ? !0 : !1
                    },
                    getParameter: function(t, r) {
                        var n = r || new e.Vector3;
                        return n.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
                    },
                    isIntersectionBox: function(e) {
                        return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z ? !1 : !0
                    },
                    clampPoint: function(t, r) {
                        var n = r || new e.Vector3;
                        return n.copy(t).clamp(this.min, this.max)
                    },
                    distanceToPoint: function() {
                        var t = new e.Vector3;
                        return function(e) {
                            var r = t.copy(e).clamp(this.min, this.max);
                            return r.sub(e).length()
                        }
                    }(),
                    getBoundingSphere: function() {
                        var t = new e.Vector3;
                        return function(r) {
                            var n = r || new e.Sphere;
                            return n.center = this.center(), n.radius = .5 * this.size(t).length(), n
                        }
                    }(),
                    intersect: function(e) {
                        return this.min.max(e.min), this.max.min(e.max), this
                    },
                    union: function(e) {
                        return this.min.min(e.min), this.max.max(e.max), this
                    },
                    applyMatrix4: function() {
                        var t = [new e.Vector3, new e.Vector3, new e.Vector3, new e.Vector3, new e.Vector3, new e.Vector3, new e.Vector3, new e.Vector3];
                        return function(e) {
                            return t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.makeEmpty(), this.setFromPoints(t), this
                        }
                    }(),
                    translate: function(e) {
                        return this.min.add(e), this.max.add(e), this
                    },
                    equals: function(e) {
                        return e.min.equals(this.min) && e.max.equals(this.max)
                    },
                    clone: function() {
                        return (new e.Box3).copy(this)
                    }
                }, e.Matrix3 = function() {
                    this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]), arguments.length > 0 && e.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
                }, e.Matrix3.prototype = {
                    constructor: e.Matrix3,
                    set: function(e, t, r, n, i, o, a, s, u) {
                        var l = this.elements;
                        return l[0] = e, l[3] = t, l[6] = r, l[1] = n, l[4] = i, l[7] = o, l[2] = a, l[5] = s, l[8] = u, this
                    },
                    identity: function() {
                        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
                    },
                    copy: function(e) {
                        var t = e.elements;
                        return this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]), this
                    },
                    multiplyVector3: function(t) {
                        return e.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), t.applyMatrix3(this)
                    },
                    multiplyVector3Array: function(t) {
                        return e.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(t)
                    },
                    applyToVector3Array: function() {
                        var t = new e.Vector3;
                        return function(e, r, n) {
                            void 0 === r && (r = 0), void 0 === n && (n = e.length);
                            for (var i = 0, o = r; n > i; i += 3, o += 3) t.x = e[o], t.y = e[o + 1], t.z = e[o + 2], t.applyMatrix3(this), e[o] = t.x, e[o + 1] = t.y, e[o + 2] = t.z;
                            return e
                        }
                    }(),
                    multiplyScalar: function(e) {
                        var t = this.elements;
                        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
                    },
                    determinant: function() {
                        var e = this.elements,
                            t = e[0],
                            r = e[1],
                            n = e[2],
                            i = e[3],
                            o = e[4],
                            a = e[5],
                            s = e[6],
                            u = e[7],
                            l = e[8];
                        return t * o * l - t * a * u - r * i * l + r * a * s + n * i * u - n * o * s
                    },
                    getInverse: function(t, r) {
                        var n = t.elements,
                            i = this.elements;
                        i[0] = n[10] * n[5] - n[6] * n[9], i[1] = -n[10] * n[1] + n[2] * n[9], i[2] = n[6] * n[1] - n[2] * n[5], i[3] = -n[10] * n[4] + n[6] * n[8], i[4] = n[10] * n[0] - n[2] * n[8], i[5] = -n[6] * n[0] + n[2] * n[4], i[6] = n[9] * n[4] - n[5] * n[8], i[7] = -n[9] * n[0] + n[1] * n[8], i[8] = n[5] * n[0] - n[1] * n[4];
                        var o = n[0] * i[0] + n[1] * i[3] + n[2] * i[6];
                        if (0 === o) {
                            var a = "Matrix3.getInverse(): can't invert matrix, determinant is 0";
                            if (r) throw new Error(a);
                            return e.warn(a), this.identity(), this
                        }
                        return this.multiplyScalar(1 / o), this
                    },
                    transpose: function() {
                        var e, t = this.elements;
                        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
                    },
                    flattenToArrayOffset: function(e, t) {
                        var r = this.elements;
                        return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e
                    },
                    getNormalMatrix: function(e) {
                        return this.getInverse(e).transpose(), this
                    },
                    transposeIntoArray: function(e) {
                        var t = this.elements;
                        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
                    },
                    fromArray: function(e) {
                        return this.elements.set(e), this
                    },
                    toArray: function() {
                        var e = this.elements;
                        return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8]]
                    },
                    clone: function() {
                        return (new e.Matrix3).fromArray(this.elements)
                    }
                }, e.Matrix4 = function() {
                    this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), arguments.length > 0 && e.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
                }, e.Matrix4.prototype = {
                    constructor: e.Matrix4,
                    set: function(e, t, r, n, i, o, a, s, u, l, c, h, p, d, f, m) {
                        var v = this.elements;
                        return v[0] = e, v[4] = t, v[8] = r, v[12] = n, v[1] = i, v[5] = o, v[9] = a, v[13] = s, v[2] = u, v[6] = l, v[10] = c, v[14] = h, v[3] = p, v[7] = d, v[11] = f, v[15] = m, this
                    },
                    identity: function() {
                        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                    },
                    copy: function(e) {
                        return this.elements.set(e.elements), this
                    },
                    extractPosition: function(t) {
                        return e.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(t)
                    },
                    copyPosition: function(e) {
                        var t = this.elements,
                            r = e.elements;
                        return t[12] = r[12], t[13] = r[13], t[14] = r[14], this
                    },
                    extractBasis: function(e, t, r) {
                        var n = this.elements;
                        return e.set(n[0], n[1], n[2]), t.set(n[4], n[5], n[6]), r.set(n[8], n[9], n[10]), this
                    },
                    makeBasis: function(e, t, r) {
                        return this.set(e.x, t.x, r.x, 0, e.y, t.y, r.y, 0, e.z, t.z, r.z, 0, 0, 0, 0, 1), this
                    },
                    extractRotation: function() {
                        var t = new e.Vector3;
                        return function(e) {
                            var r = this.elements,
                                n = e.elements,
                                i = 1 / t.set(n[0], n[1], n[2]).length(),
                                o = 1 / t.set(n[4], n[5], n[6]).length(),
                                a = 1 / t.set(n[8], n[9], n[10]).length();
                            return r[0] = n[0] * i, r[1] = n[1] * i, r[2] = n[2] * i, r[4] = n[4] * o, r[5] = n[5] * o, r[6] = n[6] * o, r[8] = n[8] * a, r[9] = n[9] * a, r[10] = n[10] * a, this
                        }
                    }(),
                    makeRotationFromEuler: function(t) {
                        t instanceof e.Euler == !1 && e.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                        var r = this.elements,
                            n = t.x,
                            i = t.y,
                            o = t.z,
                            a = Math.cos(n),
                            s = Math.sin(n),
                            u = Math.cos(i),
                            l = Math.sin(i),
                            c = Math.cos(o),
                            h = Math.sin(o);
                        if ("XYZ" === t.order) {
                            var p = a * c,
                                d = a * h,
                                f = s * c,
                                m = s * h;
                            r[0] = u * c, r[4] = -u * h, r[8] = l, r[1] = d + f * l, r[5] = p - m * l, r[9] = -s * u, r[2] = m - p * l, r[6] = f + d * l, r[10] = a * u
                        } else if ("YXZ" === t.order) {
                            var v = u * c,
                                g = u * h,
                                y = l * c,
                                b = l * h;
                            r[0] = v + b * s, r[4] = y * s - g, r[8] = a * l, r[1] = a * h, r[5] = a * c, r[9] = -s, r[2] = g * s - y, r[6] = b + v * s, r[10] = a * u
                        } else if ("ZXY" === t.order) {
                            var v = u * c,
                                g = u * h,
                                y = l * c,
                                b = l * h;
                            r[0] = v - b * s, r[4] = -a * h, r[8] = y + g * s, r[1] = g + y * s, r[5] = a * c, r[9] = b - v * s, r[2] = -a * l, r[6] = s, r[10] = a * u
                        } else if ("ZYX" === t.order) {
                            var p = a * c,
                                d = a * h,
                                f = s * c,
                                m = s * h;
                            r[0] = u * c, r[4] = f * l - d, r[8] = p * l + m, r[1] = u * h, r[5] = m * l + p, r[9] = d * l - f, r[2] = -l, r[6] = s * u, r[10] = a * u
                        } else if ("YZX" === t.order) {
                            var x = a * u,
                                _ = a * l,
                                w = s * u,
                                C = s * l;
                            r[0] = u * c, r[4] = C - x * h, r[8] = w * h + _, r[1] = h, r[5] = a * c, r[9] = -s * c, r[2] = -l * c, r[6] = _ * h + w, r[10] = x - C * h
                        } else if ("XZY" === t.order) {
                            var x = a * u,
                                _ = a * l,
                                w = s * u,
                                C = s * l;
                            r[0] = u * c, r[4] = -h, r[8] = l * c, r[1] = x * h + C, r[5] = a * c, r[9] = _ * h - w, r[2] = w * h - _, r[6] = s * c, r[10] = C * h + x
                        }
                        return r[3] = 0, r[7] = 0, r[11] = 0, r[12] = 0, r[13] = 0, r[14] = 0, r[15] = 1, this
                    },
                    setRotationFromQuaternion: function(t) {
                        return e.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(t)
                    },
                    makeRotationFromQuaternion: function(e) {
                        var t = this.elements,
                            r = e.x,
                            n = e.y,
                            i = e.z,
                            o = e.w,
                            a = r + r,
                            s = n + n,
                            u = i + i,
                            l = r * a,
                            c = r * s,
                            h = r * u,
                            p = n * s,
                            d = n * u,
                            f = i * u,
                            m = o * a,
                            v = o * s,
                            g = o * u;
                        return t[0] = 1 - (p + f), t[4] = c - g, t[8] = h + v, t[1] = c + g, t[5] = 1 - (l + f), t[9] = d - m, t[2] = h - v, t[6] = d + m, t[10] = 1 - (l + p), t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                    },
                    lookAt: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3,
                            n = new e.Vector3;
                        return function(e, i, o) {
                            var a = this.elements;
                            return n.subVectors(e, i).normalize(), 0 === n.length() && (n.z = 1), t.crossVectors(o, n).normalize(), 0 === t.length() && (n.x += 1e-4, t.crossVectors(o, n).normalize()), r.crossVectors(n, t), a[0] = t.x, a[4] = r.x, a[8] = n.x, a[1] = t.y, a[5] = r.y, a[9] = n.y, a[2] = t.z, a[6] = r.z, a[10] = n.z, this
                        }
                    }(),
                    multiply: function(t, r) {
                        return void 0 !== r ? (e.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(t, r)) : this.multiplyMatrices(this, t)
                    },
                    multiplyMatrices: function(e, t) {
                        var r = e.elements,
                            n = t.elements,
                            i = this.elements,
                            o = r[0],
                            a = r[4],
                            s = r[8],
                            u = r[12],
                            l = r[1],
                            c = r[5],
                            h = r[9],
                            p = r[13],
                            d = r[2],
                            f = r[6],
                            m = r[10],
                            v = r[14],
                            g = r[3],
                            y = r[7],
                            b = r[11],
                            x = r[15],
                            _ = n[0],
                            w = n[4],
                            C = n[8],
                            E = n[12],
                            S = n[1],
                            T = n[5],
                            M = n[9],
                            A = n[13],
                            P = n[2],
                            R = n[6],
                            k = n[10],
                            I = n[14],
                            D = n[3],
                            B = n[7],
                            L = n[11],
                            V = n[15];
                        return i[0] = o * _ + a * S + s * P + u * D, i[4] = o * w + a * T + s * R + u * B, i[8] = o * C + a * M + s * k + u * L, i[12] = o * E + a * A + s * I + u * V, i[1] = l * _ + c * S + h * P + p * D, i[5] = l * w + c * T + h * R + p * B, i[9] = l * C + c * M + h * k + p * L, i[13] = l * E + c * A + h * I + p * V, i[2] = d * _ + f * S + m * P + v * D, i[6] = d * w + f * T + m * R + v * B, i[10] = d * C + f * M + m * k + v * L, i[14] = d * E + f * A + m * I + v * V, i[3] = g * _ + y * S + b * P + x * D, i[7] = g * w + y * T + b * R + x * B, i[11] = g * C + y * M + b * k + x * L, i[15] = g * E + y * A + b * I + x * V, this
                    },
                    multiplyToArray: function(e, t, r) {
                        var n = this.elements;
                        return this.multiplyMatrices(e, t), r[0] = n[0], r[1] = n[1], r[2] = n[2], r[3] = n[3], r[4] = n[4], r[5] = n[5], r[6] = n[6], r[7] = n[7], r[8] = n[8], r[9] = n[9], r[10] = n[10], r[11] = n[11], r[12] = n[12], r[13] = n[13], r[14] = n[14], r[15] = n[15], this
                    },
                    multiplyScalar: function(e) {
                        var t = this.elements;
                        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
                    },
                    multiplyVector3: function(t) {
                        return e.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."), t.applyProjection(this)
                    },
                    multiplyVector4: function(t) {
                        return e.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
                    },
                    multiplyVector3Array: function(t) {
                        return e.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(t)
                    },
                    applyToVector3Array: function() {
                        var t = new e.Vector3;
                        return function(e, r, n) {
                            void 0 === r && (r = 0), void 0 === n && (n = e.length);
                            for (var i = 0, o = r; n > i; i += 3, o += 3) t.x = e[o], t.y = e[o + 1], t.z = e[o + 2], t.applyMatrix4(this), e[o] = t.x, e[o + 1] = t.y, e[o + 2] = t.z;
                            return e
                        }
                    }(),
                    rotateAxis: function(t) {
                        e.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), t.transformDirection(this)
                    },
                    crossVector: function(t) {
                        return e.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
                    },
                    determinant: function() {
                        var e = this.elements,
                            t = e[0],
                            r = e[4],
                            n = e[8],
                            i = e[12],
                            o = e[1],
                            a = e[5],
                            s = e[9],
                            u = e[13],
                            l = e[2],
                            c = e[6],
                            h = e[10],
                            p = e[14],
                            d = e[3],
                            f = e[7],
                            m = e[11],
                            v = e[15];
                        return d * (+i * s * c - n * u * c - i * a * h + r * u * h + n * a * p - r * s * p) + f * (+t * s * p - t * u * h + i * o * h - n * o * p + n * u * l - i * s * l) + m * (+t * u * c - t * a * p - i * o * c + r * o * p + i * a * l - r * u * l) + v * (-n * a * l - t * s * c + t * a * h + n * o * c - r * o * h + r * s * l)
                    },
                    transpose: function() {
                        var e, t = this.elements;
                        return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this
                    },
                    flattenToArrayOffset: function(e, t) {
                        var r = this.elements;
                        return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e[t + 9] = r[9], e[t + 10] = r[10], e[t + 11] = r[11], e[t + 12] = r[12], e[t + 13] = r[13], e[t + 14] = r[14], e[t + 15] = r[15], e
                    },
                    getPosition: function() {
                        var t = new e.Vector3;
                        return function() {
                            e.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
                            var r = this.elements;
                            return t.set(r[12], r[13], r[14])
                        }
                    }(),
                    setPosition: function(e) {
                        var t = this.elements;
                        return t[12] = e.x, t[13] = e.y, t[14] = e.z, this
                    },
                    getInverse: function(t, r) {
                        var n = this.elements,
                            i = t.elements,
                            o = i[0],
                            a = i[4],
                            s = i[8],
                            u = i[12],
                            l = i[1],
                            c = i[5],
                            h = i[9],
                            p = i[13],
                            d = i[2],
                            f = i[6],
                            m = i[10],
                            v = i[14],
                            g = i[3],
                            y = i[7],
                            b = i[11],
                            x = i[15];
                        n[0] = h * v * y - p * m * y + p * f * b - c * v * b - h * f * x + c * m * x, n[4] = u * m * y - s * v * y - u * f * b + a * v * b + s * f * x - a * m * x, n[8] = s * p * y - u * h * y + u * c * b - a * p * b - s * c * x + a * h * x, n[12] = u * h * f - s * p * f - u * c * m + a * p * m + s * c * v - a * h * v, n[1] = p * m * g - h * v * g - p * d * b + l * v * b + h * d * x - l * m * x, n[5] = s * v * g - u * m * g + u * d * b - o * v * b - s * d * x + o * m * x, n[9] = u * h * g - s * p * g - u * l * b + o * p * b + s * l * x - o * h * x, n[13] = s * p * d - u * h * d + u * l * m - o * p * m - s * l * v + o * h * v, n[2] = c * v * g - p * f * g + p * d * y - l * v * y - c * d * x + l * f * x, n[6] = u * f * g - a * v * g - u * d * y + o * v * y + a * d * x - o * f * x, n[10] = a * p * g - u * c * g + u * l * y - o * p * y - a * l * x + o * c * x, n[14] = u * c * d - a * p * d - u * l * f + o * p * f + a * l * v - o * c * v, n[3] = h * f * g - c * m * g - h * d * y + l * m * y + c * d * b - l * f * b, n[7] = a * m * g - s * f * g + s * d * y - o * m * y - a * d * b + o * f * b, n[11] = s * c * g - a * h * g - s * l * y + o * h * y + a * l * b - o * c * b, n[15] = a * h * d - s * c * d + s * l * f - o * h * f - a * l * m + o * c * m;
                        var _ = o * n[0] + l * n[4] + d * n[8] + g * n[12];
                        if (0 == _) {
                            var w = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                            if (r) throw new Error(w);
                            return e.warn(w), this.identity(), this
                        }
                        return this.multiplyScalar(1 / _), this
                    },
                    translate: function(t) {
                        e.error("THREE.Matrix4: .translate() has been removed.")
                    },
                    rotateX: function(t) {
                        e.error("THREE.Matrix4: .rotateX() has been removed.")
                    },
                    rotateY: function(t) {
                        e.error("THREE.Matrix4: .rotateY() has been removed.");
                    },
                    rotateZ: function(t) {
                        e.error("THREE.Matrix4: .rotateZ() has been removed.")
                    },
                    rotateByAxis: function(t, r) {
                        e.error("THREE.Matrix4: .rotateByAxis() has been removed.")
                    },
                    scale: function(e) {
                        var t = this.elements,
                            r = e.x,
                            n = e.y,
                            i = e.z;
                        return t[0] *= r, t[4] *= n, t[8] *= i, t[1] *= r, t[5] *= n, t[9] *= i, t[2] *= r, t[6] *= n, t[10] *= i, t[3] *= r, t[7] *= n, t[11] *= i, this
                    },
                    getMaxScaleOnAxis: function() {
                        var e = this.elements,
                            t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                            r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                            n = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                        return Math.sqrt(Math.max(t, Math.max(r, n)))
                    },
                    makeTranslation: function(e, t, r) {
                        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, r, 0, 0, 0, 1), this
                    },
                    makeRotationX: function(e) {
                        var t = Math.cos(e),
                            r = Math.sin(e);
                        return this.set(1, 0, 0, 0, 0, t, -r, 0, 0, r, t, 0, 0, 0, 0, 1), this
                    },
                    makeRotationY: function(e) {
                        var t = Math.cos(e),
                            r = Math.sin(e);
                        return this.set(t, 0, r, 0, 0, 1, 0, 0, -r, 0, t, 0, 0, 0, 0, 1), this
                    },
                    makeRotationZ: function(e) {
                        var t = Math.cos(e),
                            r = Math.sin(e);
                        return this.set(t, -r, 0, 0, r, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                    },
                    makeRotationAxis: function(e, t) {
                        var r = Math.cos(t),
                            n = Math.sin(t),
                            i = 1 - r,
                            o = e.x,
                            a = e.y,
                            s = e.z,
                            u = i * o,
                            l = i * a;
                        return this.set(u * o + r, u * a - n * s, u * s + n * a, 0, u * a + n * s, l * a + r, l * s - n * o, 0, u * s - n * a, l * s + n * o, i * s * s + r, 0, 0, 0, 0, 1), this
                    },
                    makeScale: function(e, t, r) {
                        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this
                    },
                    compose: function(e, t, r) {
                        return this.makeRotationFromQuaternion(t), this.scale(r), this.setPosition(e), this
                    },
                    decompose: function() {
                        var t = new e.Vector3,
                            r = new e.Matrix4;
                        return function(e, n, i) {
                            var o = this.elements,
                                a = t.set(o[0], o[1], o[2]).length(),
                                s = t.set(o[4], o[5], o[6]).length(),
                                u = t.set(o[8], o[9], o[10]).length(),
                                l = this.determinant();
                            0 > l && (a = -a), e.x = o[12], e.y = o[13], e.z = o[14], r.elements.set(this.elements);
                            var c = 1 / a,
                                h = 1 / s,
                                p = 1 / u;
                            return r.elements[0] *= c, r.elements[1] *= c, r.elements[2] *= c, r.elements[4] *= h, r.elements[5] *= h, r.elements[6] *= h, r.elements[8] *= p, r.elements[9] *= p, r.elements[10] *= p, n.setFromRotationMatrix(r), i.x = a, i.y = s, i.z = u, this
                        }
                    }(),
                    makeFrustum: function(e, t, r, n, i, o) {
                        var a = this.elements,
                            s = 2 * i / (t - e),
                            u = 2 * i / (n - r),
                            l = (t + e) / (t - e),
                            c = (n + r) / (n - r),
                            h = -(o + i) / (o - i),
                            p = -2 * o * i / (o - i);
                        return a[0] = s, a[4] = 0, a[8] = l, a[12] = 0, a[1] = 0, a[5] = u, a[9] = c, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = h, a[14] = p, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this
                    },
                    makePerspective: function(t, r, n, i) {
                        var o = n * Math.tan(e.Math.degToRad(.5 * t)),
                            a = -o,
                            s = a * r,
                            u = o * r;
                        return this.makeFrustum(s, u, a, o, n, i)
                    },
                    makeOrthographic: function(e, t, r, n, i, o) {
                        var a = this.elements,
                            s = t - e,
                            u = r - n,
                            l = o - i,
                            c = (t + e) / s,
                            h = (r + n) / u,
                            p = (o + i) / l;
                        return a[0] = 2 / s, a[4] = 0, a[8] = 0, a[12] = -c, a[1] = 0, a[5] = 2 / u, a[9] = 0, a[13] = -h, a[2] = 0, a[6] = 0, a[10] = -2 / l, a[14] = -p, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this
                    },
                    fromArray: function(e) {
                        return this.elements.set(e), this
                    },
                    toArray: function() {
                        var e = this.elements;
                        return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]]
                    },
                    clone: function() {
                        return (new e.Matrix4).fromArray(this.elements)
                    }
                }, e.Ray = function(t, r) {
                    this.origin = void 0 !== t ? t : new e.Vector3, this.direction = void 0 !== r ? r : new e.Vector3
                }, e.Ray.prototype = {
                    constructor: e.Ray,
                    set: function(e, t) {
                        return this.origin.copy(e), this.direction.copy(t), this
                    },
                    copy: function(e) {
                        return this.origin.copy(e.origin), this.direction.copy(e.direction), this
                    },
                    at: function(t, r) {
                        var n = r || new e.Vector3;
                        return n.copy(this.direction).multiplyScalar(t).add(this.origin)
                    },
                    recast: function() {
                        var t = new e.Vector3;
                        return function(e) {
                            return this.origin.copy(this.at(e, t)), this
                        }
                    }(),
                    closestPointToPoint: function(t, r) {
                        var n = r || new e.Vector3;
                        n.subVectors(t, this.origin);
                        var i = n.dot(this.direction);
                        return 0 > i ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(i).add(this.origin)
                    },
                    distanceToPoint: function() {
                        var t = new e.Vector3;
                        return function(e) {
                            var r = t.subVectors(e, this.origin).dot(this.direction);
                            return 0 > r ? this.origin.distanceTo(e) : (t.copy(this.direction).multiplyScalar(r).add(this.origin), t.distanceTo(e))
                        }
                    }(),
                    distanceSqToSegment: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3,
                            n = new e.Vector3;
                        return function(e, i, o, a) {
                            t.copy(e).add(i).multiplyScalar(.5), r.copy(i).sub(e).normalize(), n.copy(this.origin).sub(t);
                            var s, u, l, c, h = .5 * e.distanceTo(i),
                                p = -this.direction.dot(r),
                                d = n.dot(this.direction),
                                f = -n.dot(r),
                                m = n.lengthSq(),
                                v = Math.abs(1 - p * p);
                            if (v > 0)
                                if (s = p * f - d, u = p * d - f, c = h * v, s >= 0)
                                    if (u >= -c)
                                        if (c >= u) {
                                            var g = 1 / v;
                                            s *= g, u *= g, l = s * (s + p * u + 2 * d) + u * (p * s + u + 2 * f) + m
                                        } else u = h, s = Math.max(0, -(p * u + d)), l = -s * s + u * (u + 2 * f) + m;
                            else u = -h, s = Math.max(0, -(p * u + d)), l = -s * s + u * (u + 2 * f) + m;
                            else -c >= u ? (s = Math.max(0, -(-p * h + d)), u = s > 0 ? -h : Math.min(Math.max(-h, -f), h), l = -s * s + u * (u + 2 * f) + m) : c >= u ? (s = 0, u = Math.min(Math.max(-h, -f), h), l = u * (u + 2 * f) + m) : (s = Math.max(0, -(p * h + d)), u = s > 0 ? h : Math.min(Math.max(-h, -f), h), l = -s * s + u * (u + 2 * f) + m);
                            else u = p > 0 ? -h : h, s = Math.max(0, -(p * u + d)), l = -s * s + u * (u + 2 * f) + m;
                            return o && o.copy(this.direction).multiplyScalar(s).add(this.origin), a && a.copy(r).multiplyScalar(u).add(t), l
                        }
                    }(),
                    isIntersectionSphere: function(e) {
                        return this.distanceToPoint(e.center) <= e.radius
                    },
                    intersectSphere: function() {
                        var t = new e.Vector3;
                        return function(e, r) {
                            t.subVectors(e.center, this.origin);
                            var n = t.dot(this.direction),
                                i = t.dot(t) - n * n,
                                o = e.radius * e.radius;
                            if (i > o) return null;
                            var a = Math.sqrt(o - i),
                                s = n - a,
                                u = n + a;
                            return 0 > s && 0 > u ? null : 0 > s ? this.at(u, r) : this.at(s, r)
                        }
                    }(),
                    isIntersectionPlane: function(e) {
                        var t = e.distanceToPoint(this.origin);
                        if (0 === t) return !0;
                        var r = e.normal.dot(this.direction);
                        return 0 > r * t ? !0 : !1
                    },
                    distanceToPlane: function(e) {
                        var t = e.normal.dot(this.direction);
                        if (0 == t) return 0 == e.distanceToPoint(this.origin) ? 0 : null;
                        var r = -(this.origin.dot(e.normal) + e.constant) / t;
                        return r >= 0 ? r : null
                    },
                    intersectPlane: function(e, t) {
                        var r = this.distanceToPlane(e);
                        return null === r ? null : this.at(r, t)
                    },
                    isIntersectionBox: function() {
                        var t = new e.Vector3;
                        return function(e) {
                            return null !== this.intersectBox(e, t)
                        }
                    }(),
                    intersectBox: function(e, t) {
                        var r, n, i, o, a, s, u = 1 / this.direction.x,
                            l = 1 / this.direction.y,
                            c = 1 / this.direction.z,
                            h = this.origin;
                        return u >= 0 ? (r = (e.min.x - h.x) * u, n = (e.max.x - h.x) * u) : (r = (e.max.x - h.x) * u, n = (e.min.x - h.x) * u), l >= 0 ? (i = (e.min.y - h.y) * l, o = (e.max.y - h.y) * l) : (i = (e.max.y - h.y) * l, o = (e.min.y - h.y) * l), r > o || i > n ? null : ((i > r || r !== r) && (r = i), (n > o || n !== n) && (n = o), c >= 0 ? (a = (e.min.z - h.z) * c, s = (e.max.z - h.z) * c) : (a = (e.max.z - h.z) * c, s = (e.min.z - h.z) * c), r > s || a > n ? null : ((a > r || r !== r) && (r = a), (n > s || n !== n) && (n = s), 0 > n ? null : this.at(r >= 0 ? r : n, t)))
                    },
                    intersectTriangle: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3,
                            n = new e.Vector3,
                            i = new e.Vector3;
                        return function(e, o, a, s, u) {
                            r.subVectors(o, e), n.subVectors(a, e), i.crossVectors(r, n);
                            var l, c = this.direction.dot(i);
                            if (c > 0) {
                                if (s) return null;
                                l = 1
                            } else {
                                if (!(0 > c)) return null;
                                l = -1, c = -c
                            }
                            t.subVectors(this.origin, e);
                            var h = l * this.direction.dot(n.crossVectors(t, n));
                            if (0 > h) return null;
                            var p = l * this.direction.dot(r.cross(t));
                            if (0 > p) return null;
                            if (h + p > c) return null;
                            var d = -l * t.dot(i);
                            return 0 > d ? null : this.at(d / c, u)
                        }
                    }(),
                    applyMatrix4: function(e) {
                        return this.direction.add(this.origin).applyMatrix4(e), this.origin.applyMatrix4(e), this.direction.sub(this.origin), this.direction.normalize(), this
                    },
                    equals: function(e) {
                        return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                    },
                    clone: function() {
                        return (new e.Ray).copy(this)
                    }
                }, e.Sphere = function(t, r) {
                    this.center = void 0 !== t ? t : new e.Vector3, this.radius = void 0 !== r ? r : 0
                }, e.Sphere.prototype = {
                    constructor: e.Sphere,
                    set: function(e, t) {
                        return this.center.copy(e), this.radius = t, this
                    },
                    setFromPoints: function() {
                        var t = new e.Box3;
                        return function(e, r) {
                            var n = this.center;
                            void 0 !== r ? n.copy(r) : t.setFromPoints(e).center(n);
                            for (var i = 0, o = 0, a = e.length; a > o; o++) i = Math.max(i, n.distanceToSquared(e[o]));
                            return this.radius = Math.sqrt(i), this
                        }
                    }(),
                    copy: function(e) {
                        return this.center.copy(e.center), this.radius = e.radius, this
                    },
                    empty: function() {
                        return this.radius <= 0
                    },
                    containsPoint: function(e) {
                        return e.distanceToSquared(this.center) <= this.radius * this.radius
                    },
                    distanceToPoint: function(e) {
                        return e.distanceTo(this.center) - this.radius
                    },
                    intersectsSphere: function(e) {
                        var t = this.radius + e.radius;
                        return e.center.distanceToSquared(this.center) <= t * t
                    },
                    clampPoint: function(t, r) {
                        var n = this.center.distanceToSquared(t),
                            i = r || new e.Vector3;
                        return i.copy(t), n > this.radius * this.radius && (i.sub(this.center).normalize(), i.multiplyScalar(this.radius).add(this.center)), i
                    },
                    getBoundingBox: function(t) {
                        var r = t || new e.Box3;
                        return r.set(this.center, this.center), r.expandByScalar(this.radius), r
                    },
                    applyMatrix4: function(e) {
                        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
                    },
                    translate: function(e) {
                        return this.center.add(e), this
                    },
                    equals: function(e) {
                        return e.center.equals(this.center) && e.radius === this.radius
                    },
                    clone: function() {
                        return (new e.Sphere).copy(this)
                    }
                }, e.Frustum = function(t, r, n, i, o, a) {
                    this.planes = [void 0 !== t ? t : new e.Plane, void 0 !== r ? r : new e.Plane, void 0 !== n ? n : new e.Plane, void 0 !== i ? i : new e.Plane, void 0 !== o ? o : new e.Plane, void 0 !== a ? a : new e.Plane]
                }, e.Frustum.prototype = {
                    constructor: e.Frustum,
                    set: function(e, t, r, n, i, o) {
                        var a = this.planes;
                        return a[0].copy(e), a[1].copy(t), a[2].copy(r), a[3].copy(n), a[4].copy(i), a[5].copy(o), this
                    },
                    copy: function(e) {
                        for (var t = this.planes, r = 0; 6 > r; r++) t[r].copy(e.planes[r]);
                        return this
                    },
                    setFromMatrix: function(e) {
                        var t = this.planes,
                            r = e.elements,
                            n = r[0],
                            i = r[1],
                            o = r[2],
                            a = r[3],
                            s = r[4],
                            u = r[5],
                            l = r[6],
                            c = r[7],
                            h = r[8],
                            p = r[9],
                            d = r[10],
                            f = r[11],
                            m = r[12],
                            v = r[13],
                            g = r[14],
                            y = r[15];
                        return t[0].setComponents(a - n, c - s, f - h, y - m).normalize(), t[1].setComponents(a + n, c + s, f + h, y + m).normalize(), t[2].setComponents(a + i, c + u, f + p, y + v).normalize(), t[3].setComponents(a - i, c - u, f - p, y - v).normalize(), t[4].setComponents(a - o, c - l, f - d, y - g).normalize(), t[5].setComponents(a + o, c + l, f + d, y + g).normalize(), this
                    },
                    intersectsObject: function() {
                        var t = new e.Sphere;
                        return function(e) {
                            var r = e.geometry;
                            return null === r.boundingSphere && r.computeBoundingSphere(), t.copy(r.boundingSphere), t.applyMatrix4(e.matrixWorld), this.intersectsSphere(t)
                        }
                    }(),
                    intersectsSphere: function(e) {
                        for (var t = this.planes, r = e.center, n = -e.radius, i = 0; 6 > i; i++) {
                            var o = t[i].distanceToPoint(r);
                            if (n > o) return !1
                        }
                        return !0
                    },
                    intersectsBox: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3;
                        return function(e) {
                            for (var n = this.planes, i = 0; 6 > i; i++) {
                                var o = n[i];
                                t.x = o.normal.x > 0 ? e.min.x : e.max.x, r.x = o.normal.x > 0 ? e.max.x : e.min.x, t.y = o.normal.y > 0 ? e.min.y : e.max.y, r.y = o.normal.y > 0 ? e.max.y : e.min.y, t.z = o.normal.z > 0 ? e.min.z : e.max.z, r.z = o.normal.z > 0 ? e.max.z : e.min.z;
                                var a = o.distanceToPoint(t),
                                    s = o.distanceToPoint(r);
                                if (0 > a && 0 > s) return !1
                            }
                            return !0
                        }
                    }(),
                    containsPoint: function(e) {
                        for (var t = this.planes, r = 0; 6 > r; r++)
                            if (t[r].distanceToPoint(e) < 0) return !1;
                        return !0
                    },
                    clone: function() {
                        return (new e.Frustum).copy(this)
                    }
                }, e.Plane = function(t, r) {
                    this.normal = void 0 !== t ? t : new e.Vector3(1, 0, 0), this.constant = void 0 !== r ? r : 0
                }, e.Plane.prototype = {
                    constructor: e.Plane,
                    set: function(e, t) {
                        return this.normal.copy(e), this.constant = t, this
                    },
                    setComponents: function(e, t, r, n) {
                        return this.normal.set(e, t, r), this.constant = n, this
                    },
                    setFromNormalAndCoplanarPoint: function(e, t) {
                        return this.normal.copy(e), this.constant = -t.dot(this.normal), this
                    },
                    setFromCoplanarPoints: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3;
                        return function(e, n, i) {
                            var o = t.subVectors(i, n).cross(r.subVectors(e, n)).normalize();
                            return this.setFromNormalAndCoplanarPoint(o, e), this
                        }
                    }(),
                    copy: function(e) {
                        return this.normal.copy(e.normal), this.constant = e.constant, this
                    },
                    normalize: function() {
                        var e = 1 / this.normal.length();
                        return this.normal.multiplyScalar(e), this.constant *= e, this
                    },
                    negate: function() {
                        return this.constant *= -1, this.normal.negate(), this
                    },
                    distanceToPoint: function(e) {
                        return this.normal.dot(e) + this.constant
                    },
                    distanceToSphere: function(e) {
                        return this.distanceToPoint(e.center) - e.radius
                    },
                    projectPoint: function(e, t) {
                        return this.orthoPoint(e, t).sub(e).negate()
                    },
                    orthoPoint: function(t, r) {
                        var n = this.distanceToPoint(t),
                            i = r || new e.Vector3;
                        return i.copy(this.normal).multiplyScalar(n)
                    },
                    isIntersectionLine: function(e) {
                        var t = this.distanceToPoint(e.start),
                            r = this.distanceToPoint(e.end);
                        return 0 > t && r > 0 || 0 > r && t > 0
                    },
                    intersectLine: function() {
                        var t = new e.Vector3;
                        return function(r, n) {
                            var i = n || new e.Vector3,
                                o = r.delta(t),
                                a = this.normal.dot(o);
                            if (0 == a) return 0 == this.distanceToPoint(r.start) ? i.copy(r.start) : void 0;
                            var s = -(r.start.dot(this.normal) + this.constant) / a;
                            return 0 > s || s > 1 ? void 0 : i.copy(o).multiplyScalar(s).add(r.start)
                        }
                    }(),
                    coplanarPoint: function(t) {
                        var r = t || new e.Vector3;
                        return r.copy(this.normal).multiplyScalar(-this.constant)
                    },
                    applyMatrix4: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3,
                            n = new e.Matrix3;
                        return function(e, i) {
                            var o = i || n.getNormalMatrix(e),
                                a = t.copy(this.normal).applyMatrix3(o),
                                s = this.coplanarPoint(r);
                            return s.applyMatrix4(e), this.setFromNormalAndCoplanarPoint(a, s), this
                        }
                    }(),
                    translate: function(e) {
                        return this.constant = this.constant - e.dot(this.normal), this
                    },
                    equals: function(e) {
                        return e.normal.equals(this.normal) && e.constant == this.constant
                    },
                    clone: function() {
                        return (new e.Plane).copy(this)
                    }
                }, e.Math = {
                    generateUUID: function() {
                        var e, t = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                            r = new Array(36),
                            n = 0;
                        return function() {
                            for (var i = 0; 36 > i; i++) 8 == i || 13 == i || 18 == i || 23 == i ? r[i] = "-" : 14 == i ? r[i] = "4" : (2 >= n && (n = 33554432 + 16777216 * Math.random() | 0), e = 15 & n, n >>= 4, r[i] = t[19 == i ? 3 & e | 8 : e]);
                            return r.join("")
                        }
                    }(),
                    clamp: function(e, t, r) {
                        return t > e ? t : e > r ? r : e
                    },
                    clampBottom: function(e, t) {
                        return t > e ? t : e
                    },
                    mapLinear: function(e, t, r, n, i) {
                        return n + (e - t) * (i - n) / (r - t)
                    },
                    smoothstep: function(e, t, r) {
                        return t >= e ? 0 : e >= r ? 1 : (e = (e - t) / (r - t), e * e * (3 - 2 * e))
                    },
                    smootherstep: function(e, t, r) {
                        return t >= e ? 0 : e >= r ? 1 : (e = (e - t) / (r - t), e * e * e * (e * (6 * e - 15) + 10))
                    },
                    random16: function() {
                        return (65280 * Math.random() + 255 * Math.random()) / 65535
                    },
                    randInt: function(e, t) {
                        return Math.floor(this.randFloat(e, t))
                    },
                    randFloat: function(e, t) {
                        return e + Math.random() * (t - e)
                    },
                    randFloatSpread: function(e) {
                        return e * (.5 - Math.random())
                    },
                    degToRad: function() {
                        var e = Math.PI / 180;
                        return function(t) {
                            return t * e
                        }
                    }(),
                    radToDeg: function() {
                        var e = 180 / Math.PI;
                        return function(t) {
                            return t * e
                        }
                    }(),
                    isPowerOfTwo: function(e) {
                        return 0 === (e & e - 1) && 0 !== e
                    },
                    nextPowerOfTwo: function(e) {
                        return e--, e |= e >> 1, e |= e >> 2, e |= e >> 4, e |= e >> 8, e |= e >> 16, e++, e
                    }
                }, e.Spline = function(t) {
                    function r(e, t, r, n, i, o, a) {
                        var s = .5 * (r - e),
                            u = .5 * (n - t);
                        return (2 * (t - r) + s + u) * a + (-3 * (t - r) - 2 * s - u) * o + s * i + t
                    }
                    this.points = t;
                    var n, i, o, a, s, u, l, c, h, p = [],
                        d = {
                            x: 0,
                            y: 0,
                            z: 0
                        };
                    this.initFromArray = function(e) {
                        this.points = [];
                        for (var t = 0; t < e.length; t++) this.points[t] = {
                            x: e[t][0],
                            y: e[t][1],
                            z: e[t][2]
                        }
                    }, this.getPoint = function(e) {
                        return n = (this.points.length - 1) * e, i = Math.floor(n), o = n - i, p[0] = 0 === i ? i : i - 1, p[1] = i, p[2] = i > this.points.length - 2 ? this.points.length - 1 : i + 1, p[3] = i > this.points.length - 3 ? this.points.length - 1 : i + 2, u = this.points[p[0]], l = this.points[p[1]], c = this.points[p[2]], h = this.points[p[3]], a = o * o, s = o * a, d.x = r(u.x, l.x, c.x, h.x, o, a, s), d.y = r(u.y, l.y, c.y, h.y, o, a, s), d.z = r(u.z, l.z, c.z, h.z, o, a, s), d
                    }, this.getControlPointsArray = function() {
                        var e, t, r = this.points.length,
                            n = [];
                        for (e = 0; r > e; e++) t = this.points[e], n[e] = [t.x, t.y, t.z];
                        return n
                    }, this.getLength = function(t) {
                        var r, n, i, o, a = 0,
                            s = 0,
                            u = 0,
                            l = new e.Vector3,
                            c = new e.Vector3,
                            h = [],
                            p = 0;
                        for (h[0] = 0, t || (t = 100), i = this.points.length * t, l.copy(this.points[0]), r = 1; i > r; r++) n = r / i, o = this.getPoint(n), c.copy(o), p += c.distanceTo(l), l.copy(o), a = (this.points.length - 1) * n, s = Math.floor(a), s != u && (h[s] = p, u = s);
                        return h[h.length] = p, {
                            chunks: h,
                            total: p
                        }
                    }, this.reparametrizeByArcLength = function(t) {
                        var r, n, i, o, a, s, u, l, c = [],
                            h = new e.Vector3,
                            p = this.getLength();
                        for (c.push(h.copy(this.points[0]).clone()), r = 1; r < this.points.length; r++) {
                            for (s = p.chunks[r] - p.chunks[r - 1], u = Math.ceil(t * s / p.total), o = (r - 1) / (this.points.length - 1), a = r / (this.points.length - 1), n = 1; u - 1 > n; n++) i = o + n * (1 / u) * (a - o), l = this.getPoint(i), c.push(h.copy(l).clone());
                            c.push(h.copy(this.points[r]).clone())
                        }
                        this.points = c
                    }
                }, e.Triangle = function(t, r, n) {
                    this.a = void 0 !== t ? t : new e.Vector3, this.b = void 0 !== r ? r : new e.Vector3, this.c = void 0 !== n ? n : new e.Vector3
                }, e.Triangle.normal = function() {
                    var t = new e.Vector3;
                    return function(r, n, i, o) {
                        var a = o || new e.Vector3;
                        a.subVectors(i, n), t.subVectors(r, n), a.cross(t);
                        var s = a.lengthSq();
                        return s > 0 ? a.multiplyScalar(1 / Math.sqrt(s)) : a.set(0, 0, 0)
                    }
                }(), e.Triangle.barycoordFromPoint = function() {
                    var t = new e.Vector3,
                        r = new e.Vector3,
                        n = new e.Vector3;
                    return function(i, o, a, s, u) {
                        t.subVectors(s, o), r.subVectors(a, o), n.subVectors(i, o);
                        var l = t.dot(t),
                            c = t.dot(r),
                            h = t.dot(n),
                            p = r.dot(r),
                            d = r.dot(n),
                            f = l * p - c * c,
                            m = u || new e.Vector3;
                        if (0 == f) return m.set(-2, -1, -1);
                        var v = 1 / f,
                            g = (p * h - c * d) * v,
                            y = (l * d - c * h) * v;
                        return m.set(1 - g - y, y, g)
                    }
                }(), e.Triangle.containsPoint = function() {
                    var t = new e.Vector3;
                    return function(r, n, i, o) {
                        var a = e.Triangle.barycoordFromPoint(r, n, i, o, t);
                        return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
                    }
                }(), e.Triangle.prototype = {
                    constructor: e.Triangle,
                    set: function(e, t, r) {
                        return this.a.copy(e), this.b.copy(t), this.c.copy(r), this
                    },
                    setFromPointsAndIndices: function(e, t, r, n) {
                        return this.a.copy(e[t]), this.b.copy(e[r]), this.c.copy(e[n]), this
                    },
                    copy: function(e) {
                        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                    },
                    area: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3;
                        return function() {
                            return t.subVectors(this.c, this.b), r.subVectors(this.a, this.b), .5 * t.cross(r).length()
                        }
                    }(),
                    midpoint: function(t) {
                        var r = t || new e.Vector3;
                        return r.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                    },
                    normal: function(t) {
                        return e.Triangle.normal(this.a, this.b, this.c, t)
                    },
                    plane: function(t) {
                        var r = t || new e.Plane;
                        return r.setFromCoplanarPoints(this.a, this.b, this.c)
                    },
                    barycoordFromPoint: function(t, r) {
                        return e.Triangle.barycoordFromPoint(t, this.a, this.b, this.c, r)
                    },
                    containsPoint: function(t) {
                        return e.Triangle.containsPoint(t, this.a, this.b, this.c)
                    },
                    equals: function(e) {
                        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                    },
                    clone: function() {
                        return (new e.Triangle).copy(this)
                    }
                }, e.Clock = function(e) {
                    this.autoStart = void 0 !== e ? e : !0, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
                }, e.Clock.prototype = {
                    constructor: e.Clock,
                    start: function() {
                        this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(), this.oldTime = this.startTime, this.running = !0
                    },
                    stop: function() {
                        this.getElapsedTime(), this.running = !1
                    },
                    getElapsedTime: function() {
                        return this.getDelta(), this.elapsedTime
                    },
                    getDelta: function() {
                        var e = 0;
                        if (this.autoStart && !this.running && this.start(), this.running) {
                            var t = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now();
                            e = .001 * (t - this.oldTime), this.oldTime = t, this.elapsedTime += e
                        }
                        return e
                    }
                }, e.EventDispatcher = function() {}, e.EventDispatcher.prototype = {
                    constructor: e.EventDispatcher,
                    apply: function(t) {
                        t.addEventListener = e.EventDispatcher.prototype.addEventListener, t.hasEventListener = e.EventDispatcher.prototype.hasEventListener, t.removeEventListener = e.EventDispatcher.prototype.removeEventListener, t.dispatchEvent = e.EventDispatcher.prototype.dispatchEvent
                    },
                    addEventListener: function(e, t) {
                        void 0 === this._listeners && (this._listeners = {});
                        var r = this._listeners;
                        void 0 === r[e] && (r[e] = []), -1 === r[e].indexOf(t) && r[e].push(t)
                    },
                    hasEventListener: function(e, t) {
                        if (void 0 === this._listeners) return !1;
                        var r = this._listeners;
                        return void 0 !== r[e] && -1 !== r[e].indexOf(t) ? !0 : !1
                    },
                    removeEventListener: function(e, t) {
                        if (void 0 !== this._listeners) {
                            var r = this._listeners,
                                n = r[e];
                            if (void 0 !== n) {
                                var i = n.indexOf(t); - 1 !== i && n.splice(i, 1)
                            }
                        }
                    },
                    dispatchEvent: function(e) {
                        if (void 0 !== this._listeners) {
                            var t = this._listeners,
                                r = t[e.type];
                            if (void 0 !== r) {
                                e.target = this;
                                for (var n = [], i = r.length, o = 0; i > o; o++) n[o] = r[o];
                                for (var o = 0; i > o; o++) n[o].call(this, e)
                            }
                        }
                    }
                },
                function(e) {
                    e.Raycaster = function(t, r, n, i) {
                        this.ray = new e.Ray(t, r), this.near = n || 0, this.far = i || 1 / 0, this.params = {
                            Sprite: {},
                            Mesh: {},
                            PointCloud: {
                                threshold: 1
                            },
                            LOD: {},
                            Line: {}
                        }
                    };
                    var t = function(e, t) {
                            return e.distance - t.distance
                        },
                        r = function(e, t, n, i) {
                            if (e.raycast(t, n), i === !0)
                                for (var o = e.children, a = 0, s = o.length; s > a; a++) r(o[a], t, n, !0)
                        };
                    e.Raycaster.prototype = {
                        constructor: e.Raycaster,
                        precision: 1e-4,
                        linePrecision: 1,
                        set: function(e, t) {
                            this.ray.set(e, t)
                        },
                        setFromCamera: function(t, r) {
                            r instanceof e.PerspectiveCamera ? (this.ray.origin.copy(r.position), this.ray.direction.set(t.x, t.y, .5).unproject(r).sub(r.position).normalize()) : r instanceof e.OrthographicCamera ? (this.ray.origin.set(t.x, t.y, -1).unproject(r), this.ray.direction.set(0, 0, -1).transformDirection(r.matrixWorld)) : e.error("THREE.Raycaster: Unsupported camera type.")
                        },
                        intersectObject: function(e, n) {
                            var i = [];
                            return r(e, this, i, n), i.sort(t), i
                        },
                        intersectObjects: function(n, i) {
                            var o = [];
                            if (n instanceof Array == !1) return e.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), o;
                            for (var a = 0, s = n.length; s > a; a++) r(n[a], this, o, i);
                            return o.sort(t), o
                        }
                    }
                }(e), e.Object3D = function() {
                    Object.defineProperty(this, "id", {
                        value: e.Object3DIdCount++
                    }), this.uuid = e.Math.generateUUID(), this.name = "", this.type = "Object3D", this.parent = void 0, this.children = [], this.up = e.Object3D.DefaultUp.clone();
                    var t = new e.Vector3,
                        r = new e.Euler,
                        n = new e.Quaternion,
                        i = new e.Vector3(1, 1, 1),
                        o = function() {
                            n.setFromEuler(r, !1)
                        },
                        a = function() {
                            r.setFromQuaternion(n, void 0, !1)
                        };
                    r.onChange(o), n.onChange(a), Object.defineProperties(this, {
                        position: {
                            enumerable: !0,
                            value: t
                        },
                        rotation: {
                            enumerable: !0,
                            value: r
                        },
                        quaternion: {
                            enumerable: !0,
                            value: n
                        },
                        scale: {
                            enumerable: !0,
                            value: i
                        }
                    }), this.rotationAutoUpdate = !0, this.matrix = new e.Matrix4, this.matrixWorld = new e.Matrix4, this.matrixAutoUpdate = !0, this.matrixWorldNeedsUpdate = !1, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
                }, e.Object3D.DefaultUp = new e.Vector3(0, 1, 0), e.Object3D.prototype = {
                    constructor: e.Object3D,
                    get eulerOrder() {
                        return e.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."), this.rotation.order
                    },
                    set eulerOrder(t) {
                        e.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."), this.rotation.order = t
                    },
                    get useQuaternion() {
                        e.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set useQuaternion(t) {
                        e.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    applyMatrix: function(e) {
                        this.matrix.multiplyMatrices(e, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale)
                    },
                    setRotationFromAxisAngle: function(e, t) {
                        this.quaternion.setFromAxisAngle(e, t)
                    },
                    setRotationFromEuler: function(e) {
                        this.quaternion.setFromEuler(e, !0)
                    },
                    setRotationFromMatrix: function(e) {
                        this.quaternion.setFromRotationMatrix(e)
                    },
                    setRotationFromQuaternion: function(e) {
                        this.quaternion.copy(e)
                    },
                    rotateOnAxis: function() {
                        var t = new e.Quaternion;
                        return function(e, r) {
                            return t.setFromAxisAngle(e, r), this.quaternion.multiply(t), this
                        }
                    }(),
                    rotateX: function() {
                        var t = new e.Vector3(1, 0, 0);
                        return function(e) {
                            return this.rotateOnAxis(t, e)
                        }
                    }(),
                    rotateY: function() {
                        var t = new e.Vector3(0, 1, 0);
                        return function(e) {
                            return this.rotateOnAxis(t, e)
                        }
                    }(),
                    rotateZ: function() {
                        var t = new e.Vector3(0, 0, 1);
                        return function(e) {
                            return this.rotateOnAxis(t, e)
                        }
                    }(),
                    translateOnAxis: function() {
                        var t = new e.Vector3;
                        return function(e, r) {
                            return t.copy(e).applyQuaternion(this.quaternion), this.position.add(t.multiplyScalar(r)), this
                        }
                    }(),
                    translate: function(t, r) {
                        return e.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(r, t)
                    },
                    translateX: function() {
                        var t = new e.Vector3(1, 0, 0);
                        return function(e) {
                            return this.translateOnAxis(t, e)
                        }
                    }(),
                    translateY: function() {
                        var t = new e.Vector3(0, 1, 0);
                        return function(e) {
                            return this.translateOnAxis(t, e)
                        }
                    }(),
                    translateZ: function() {
                        var t = new e.Vector3(0, 0, 1);
                        return function(e) {
                            return this.translateOnAxis(t, e)
                        }
                    }(),
                    localToWorld: function(e) {
                        return e.applyMatrix4(this.matrixWorld)
                    },
                    worldToLocal: function() {
                        var t = new e.Matrix4;
                        return function(e) {
                            return e.applyMatrix4(t.getInverse(this.matrixWorld))
                        }
                    }(),
                    lookAt: function() {
                        var t = new e.Matrix4;
                        return function(e) {
                            t.lookAt(e, this.position, this.up), this.quaternion.setFromRotationMatrix(t)
                        }
                    }(),
                    add: function(t) {
                        if (arguments.length > 1) {
                            for (var r = 0; r < arguments.length; r++) this.add(arguments[r]);
                            return this
                        }
                        return t === this ? (e.error("THREE.Object3D.add: object can't be added as a child of itself.", t), this) : (t instanceof e.Object3D ? (void 0 !== t.parent && t.parent.remove(t), t.parent = this, t.dispatchEvent({
                            type: "added"
                        }), this.children.push(t)) : e.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t), this)
                    },
                    remove: function(e) {
                        if (arguments.length > 1)
                            for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
                        var r = this.children.indexOf(e); - 1 !== r && (e.parent = void 0, e.dispatchEvent({
                            type: "removed"
                        }), this.children.splice(r, 1))
                    },
                    getChildByName: function(t) {
                        return e.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(t)
                    },
                    getObjectById: function(e) {
                        return this.getObjectByProperty("id", e)
                    },
                    getObjectByName: function(e) {
                        return this.getObjectByProperty("name", e)
                    },
                    getObjectByProperty: function(e, t) {
                        if (this[e] === t) return this;
                        for (var r = 0, n = this.children.length; n > r; r++) {
                            var i = this.children[r],
                                o = i.getObjectByProperty(e, t);
                            if (void 0 !== o) return o
                        }
                        return void 0
                    },
                    getWorldPosition: function(t) {
                        var r = t || new e.Vector3;
                        return this.updateMatrixWorld(!0), r.setFromMatrixPosition(this.matrixWorld)
                    },
                    getWorldQuaternion: function() {
                        var t = new e.Vector3,
                            r = new e.Vector3;
                        return function(n) {
                            var i = n || new e.Quaternion;
                            return this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, i, r), i
                        }
                    }(),
                    getWorldRotation: function() {
                        var t = new e.Quaternion;
                        return function(r) {
                            var n = r || new e.Euler;
                            return this.getWorldQuaternion(t), n.setFromQuaternion(t, this.rotation.order, !1)
                        }
                    }(),
                    getWorldScale: function() {
                        var t = new e.Vector3,
                            r = new e.Quaternion;
                        return function(n) {
                            var i = n || new e.Vector3;
                            return this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, r, i), i
                        }
                    }(),
                    getWorldDirection: function() {
                        var t = new e.Quaternion;
                        return function(r) {
                            var n = r || new e.Vector3;
                            return this.getWorldQuaternion(t), n.set(0, 0, 1).applyQuaternion(t)
                        }
                    }(),
                    raycast: function() {},
                    traverse: function(e) {
                        e(this);
                        for (var t = 0, r = this.children.length; r > t; t++) this.children[t].traverse(e)
                    },
                    traverseVisible: function(e) {
                        if (this.visible !== !1) {
                            e(this);
                            for (var t = 0, r = this.children.length; r > t; t++) this.children[t].traverseVisible(e)
                        }
                    },
                    traverseAncestors: function(e) {
                        this.parent && (e(this.parent), this.parent.traverseAncestors(e))
                    },
                    updateMatrix: function() {
                        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
                    },
                    updateMatrixWorld: function(e) {
                        this.matrixAutoUpdate === !0 && this.updateMatrix(), (this.matrixWorldNeedsUpdate === !0 || e === !0) && (void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                        for (var t = 0, r = this.children.length; r > t; t++) this.children[t].updateMatrixWorld(e)
                    },
                    toJSON: function() {
                        var t = {
                                metadata: {
                                    version: 4.3,
                                    type: "Object",
                                    generator: "ObjectExporter"
                                }
                            },
                            r = {},
                            n = function(e) {
                                if (void 0 === t.geometries && (t.geometries = []), void 0 === r[e.uuid]) {
                                    var n = e.toJSON();
                                    delete n.metadata, r[e.uuid] = n, t.geometries.push(n)
                                }
                                return e.uuid
                            },
                            i = {},
                            o = function(e) {
                                if (void 0 === t.materials && (t.materials = []), void 0 === i[e.uuid]) {
                                    var r = e.toJSON();
                                    delete r.metadata, i[e.uuid] = r, t.materials.push(r)
                                }
                                return e.uuid
                            },
                            a = function(t) {
                                var r = {};
                                if (r.uuid = t.uuid, r.type = t.type, "" !== t.name && (r.name = t.name), "{}" !== JSON.stringify(t.userData) && (r.userData = t.userData), t.visible !== !0 && (r.visible = t.visible), t instanceof e.PerspectiveCamera ? (r.fov = t.fov, r.aspect = t.aspect, r.near = t.near, r.far = t.far) : t instanceof e.OrthographicCamera ? (r.left = t.left, r.right = t.right, r.top = t.top, r.bottom = t.bottom, r.near = t.near, r.far = t.far) : t instanceof e.AmbientLight ? r.color = t.color.getHex() : t instanceof e.DirectionalLight ? (r.color = t.color.getHex(), r.intensity = t.intensity) : t instanceof e.PointLight ? (r.color = t.color.getHex(), r.intensity = t.intensity, r.distance = t.distance, r.decay = t.decay) : t instanceof e.SpotLight ? (r.color = t.color.getHex(), r.intensity = t.intensity, r.distance = t.distance, r.angle = t.angle, r.exponent = t.exponent, r.decay = t.decay) : t instanceof e.HemisphereLight ? (r.color = t.color.getHex(), r.groundColor = t.groundColor.getHex()) : t instanceof e.Mesh || t instanceof e.Line || t instanceof e.PointCloud ? (r.geometry = n(t.geometry), r.material = o(t.material), t instanceof e.Line && (r.mode = t.mode)) : t instanceof e.Sprite && (r.material = o(t.material)), r.matrix = t.matrix.toArray(), t.children.length > 0) {
                                    r.children = [];
                                    for (var i = 0; i < t.children.length; i++) r.children.push(a(t.children[i]))
                                }
                                return r
                            };
                        return t.object = a(this), t
                    },
                    clone: function(t, r) {
                        if (void 0 === t && (t = new e.Object3D), void 0 === r && (r = !0), t.name = this.name, t.up.copy(this.up), t.position.copy(this.position), t.quaternion.copy(this.quaternion), t.scale.copy(this.scale), t.rotationAutoUpdate = this.rotationAutoUpdate, t.matrix.copy(this.matrix), t.matrixWorld.copy(this.matrixWorld), t.matrixAutoUpdate = this.matrixAutoUpdate, t.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate, t.visible = this.visible, t.castShadow = this.castShadow, t.receiveShadow = this.receiveShadow, t.frustumCulled = this.frustumCulled, t.userData = JSON.parse(JSON.stringify(this.userData)), r === !0)
                            for (var n = 0; n < this.children.length; n++) {
                                var i = this.children[n];
                                t.add(i.clone())
                            }
                        return t
                    }
                }, e.EventDispatcher.prototype.apply(e.Object3D.prototype), e.Object3DIdCount = 0, e.Face3 = function(t, r, n, i, o, a) {
                    this.a = t, this.b = r, this.c = n, this.normal = i instanceof e.Vector3 ? i : new e.Vector3, this.vertexNormals = i instanceof Array ? i : [], this.color = o instanceof e.Color ? o : new e.Color, this.vertexColors = o instanceof Array ? o : [], this.vertexTangents = [], this.materialIndex = void 0 !== a ? a : 0
                }, e.Face3.prototype = {
                    constructor: e.Face3,
                    clone: function() {
                        var t = new e.Face3(this.a, this.b, this.c);
                        t.normal.copy(this.normal), t.color.copy(this.color), t.materialIndex = this.materialIndex;
                        for (var r = 0, n = this.vertexNormals.length; n > r; r++) t.vertexNormals[r] = this.vertexNormals[r].clone();
                        for (var r = 0, n = this.vertexColors.length; n > r; r++) t.vertexColors[r] = this.vertexColors[r].clone();
                        for (var r = 0, n = this.vertexTangents.length; n > r; r++) t.vertexTangents[r] = this.vertexTangents[r].clone();
                        return t
                    }
                }, e.Face4 = function(t, r, n, i, o, a, s) {
                    return e.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new e.Face3(t, r, n, o, a, s)
                }, e.BufferAttribute = function(e, t) {
                    this.array = e, this.itemSize = t, this.needsUpdate = !1
                }, e.BufferAttribute.prototype = {
                    constructor: e.BufferAttribute,
                    get length() {
                        return this.array.length
                    },
                    copyAt: function(e, t, r) {
                        e *= this.itemSize, r *= t.itemSize;
                        for (var n = 0, i = this.itemSize; i > n; n++) this.array[e + n] = t.array[r + n];
                        return this
                    },
                    set: function(e, t) {
                        return void 0 === t && (t = 0), this.array.set(e, t), this
                    },
                    setX: function(e, t) {
                        return this.array[e * this.itemSize] = t, this
                    },
                    setY: function(e, t) {
                        return this.array[e * this.itemSize + 1] = t, this
                    },
                    setZ: function(e, t) {
                        return this.array[e * this.itemSize + 2] = t, this
                    },
                    setXY: function(e, t, r) {
                        return e *= this.itemSize, this.array[e] = t, this.array[e + 1] = r, this
                    },
                    setXYZ: function(e, t, r, n) {
                        return e *= this.itemSize, this.array[e] = t, this.array[e + 1] = r, this.array[e + 2] = n, this
                    },
                    setXYZW: function(e, t, r, n, i) {
                        return e *= this.itemSize, this.array[e] = t, this.array[e + 1] = r, this.array[e + 2] = n, this.array[e + 3] = i, this
                    },
                    clone: function() {
                        return new e.BufferAttribute(new this.array.constructor(this.array), this.itemSize)
                    }
                }, e.Int8Attribute = function(t, r) {
                    return e.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Uint8Attribute = function(t, r) {
                    return e.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Uint8ClampedAttribute = function(t, r) {
                    return e.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Int16Attribute = function(t, r) {
                    return e.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Uint16Attribute = function(t, r) {
                    return e.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Int32Attribute = function(t, r) {
                    return e.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Uint32Attribute = function(t, r) {
                    return e.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Float32Attribute = function(t, r) {
                    return e.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.Float64Attribute = function(t, r) {
                    return e.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."), new e.BufferAttribute(t, r)
                }, e.DynamicBufferAttribute = function(t, r) {
                    e.BufferAttribute.call(this, t, r), this.updateRange = {
                        offset: 0,
                        count: -1
                    }
                }, e.DynamicBufferAttribute.prototype = Object.create(e.BufferAttribute.prototype),
                e.DynamicBufferAttribute.prototype.constructor = e.DynamicBufferAttribute, e.DynamicBufferAttribute.prototype.clone = function() {
                    return new e.DynamicBufferAttribute(new this.array.constructor(this.array), this.itemSize)
                }, e.BufferGeometry = function() {
                    Object.defineProperty(this, "id", {
                        value: e.GeometryIdCount++
                    }), this.uuid = e.Math.generateUUID(), this.name = "", this.type = "BufferGeometry", this.attributes = {}, this.attributesKeys = [], this.drawcalls = [], this.offsets = this.drawcalls, this.boundingBox = null, this.boundingSphere = null
                }, e.BufferGeometry.prototype = {
                    constructor: e.BufferGeometry,
                    addAttribute: function(t, r) {
                        return r instanceof e.BufferAttribute == !1 ? (e.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), void(this.attributes[t] = {
                            array: arguments[1],
                            itemSize: arguments[2]
                        })) : (this.attributes[t] = r, void(this.attributesKeys = Object.keys(this.attributes)))
                    },
                    getAttribute: function(e) {
                        return this.attributes[e]
                    },
                    addDrawCall: function(e, t, r) {
                        this.drawcalls.push({
                            start: e,
                            count: t,
                            index: void 0 !== r ? r : 0
                        })
                    },
                    applyMatrix: function(t) {
                        var r = this.attributes.position;
                        void 0 !== r && (t.applyToVector3Array(r.array), r.needsUpdate = !0);
                        var n = this.attributes.normal;
                        if (void 0 !== n) {
                            var i = (new e.Matrix3).getNormalMatrix(t);
                            i.applyToVector3Array(n.array), n.needsUpdate = !0
                        }
                        null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere()
                    },
                    center: function() {
                        this.computeBoundingBox();
                        var t = this.boundingBox.center().negate();
                        return this.applyMatrix((new e.Matrix4).setPosition(t)), t
                    },
                    fromGeometry: function(t, r) {
                        r = r || {
                            vertexColors: e.NoColors
                        };
                        var n = t.vertices,
                            i = t.faces,
                            o = t.faceVertexUvs,
                            a = r.vertexColors,
                            s = o[0].length > 0,
                            u = 3 == i[0].vertexNormals.length,
                            l = new Float32Array(3 * i.length * 3);
                        this.addAttribute("position", new e.BufferAttribute(l, 3));
                        var c = new Float32Array(3 * i.length * 3);
                        if (this.addAttribute("normal", new e.BufferAttribute(c, 3)), a !== e.NoColors) {
                            var h = new Float32Array(3 * i.length * 3);
                            this.addAttribute("color", new e.BufferAttribute(h, 3))
                        }
                        if (s === !0) {
                            var p = new Float32Array(3 * i.length * 2);
                            this.addAttribute("uv", new e.BufferAttribute(p, 2))
                        }
                        for (var d = 0, f = 0, m = 0; d < i.length; d++, f += 6, m += 9) {
                            var v = i[d],
                                g = n[v.a],
                                y = n[v.b],
                                b = n[v.c];
                            if (l[m] = g.x, l[m + 1] = g.y, l[m + 2] = g.z, l[m + 3] = y.x, l[m + 4] = y.y, l[m + 5] = y.z, l[m + 6] = b.x, l[m + 7] = b.y, l[m + 8] = b.z, u === !0) {
                                var x = v.vertexNormals[0],
                                    _ = v.vertexNormals[1],
                                    w = v.vertexNormals[2];
                                c[m] = x.x, c[m + 1] = x.y, c[m + 2] = x.z, c[m + 3] = _.x, c[m + 4] = _.y, c[m + 5] = _.z, c[m + 6] = w.x, c[m + 7] = w.y, c[m + 8] = w.z
                            } else {
                                var C = v.normal;
                                c[m] = C.x, c[m + 1] = C.y, c[m + 2] = C.z, c[m + 3] = C.x, c[m + 4] = C.y, c[m + 5] = C.z, c[m + 6] = C.x, c[m + 7] = C.y, c[m + 8] = C.z
                            }
                            if (a === e.FaceColors) {
                                var E = v.color;
                                h[m] = E.r, h[m + 1] = E.g, h[m + 2] = E.b, h[m + 3] = E.r, h[m + 4] = E.g, h[m + 5] = E.b, h[m + 6] = E.r, h[m + 7] = E.g, h[m + 8] = E.b
                            } else if (a === e.VertexColors) {
                                var S = v.vertexColors[0],
                                    T = v.vertexColors[1],
                                    M = v.vertexColors[2];
                                h[m] = S.r, h[m + 1] = S.g, h[m + 2] = S.b, h[m + 3] = T.r, h[m + 4] = T.g, h[m + 5] = T.b, h[m + 6] = M.r, h[m + 7] = M.g, h[m + 8] = M.b
                            }
                            if (s === !0) {
                                var A = o[0][d][0],
                                    P = o[0][d][1],
                                    R = o[0][d][2];
                                p[f] = A.x, p[f + 1] = A.y, p[f + 2] = P.x, p[f + 3] = P.y, p[f + 4] = R.x, p[f + 5] = R.y
                            }
                        }
                        return this.computeBoundingSphere(), this
                    },
                    computeBoundingBox: function() {
                        var t = new e.Vector3;
                        return function() {
                            null === this.boundingBox && (this.boundingBox = new e.Box3);
                            var r = this.attributes.position.array;
                            if (r) {
                                var n = this.boundingBox;
                                n.makeEmpty();
                                for (var i = 0, o = r.length; o > i; i += 3) t.set(r[i], r[i + 1], r[i + 2]), n.expandByPoint(t)
                            }(void 0 === r || 0 === r.length) && (this.boundingBox.min.set(0, 0, 0), this.boundingBox.max.set(0, 0, 0)), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && e.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')
                        }
                    }(),
                    computeBoundingSphere: function() {
                        var t = new e.Box3,
                            r = new e.Vector3;
                        return function() {
                            null === this.boundingSphere && (this.boundingSphere = new e.Sphere);
                            var n = this.attributes.position.array;
                            if (n) {
                                t.makeEmpty();
                                for (var i = this.boundingSphere.center, o = 0, a = n.length; a > o; o += 3) r.set(n[o], n[o + 1], n[o + 2]), t.expandByPoint(r);
                                t.center(i);
                                for (var s = 0, o = 0, a = n.length; a > o; o += 3) r.set(n[o], n[o + 1], n[o + 2]), s = Math.max(s, i.distanceToSquared(r));
                                this.boundingSphere.radius = Math.sqrt(s), isNaN(this.boundingSphere.radius) && e.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')
                            }
                        }
                    }(),
                    computeFaceNormals: function() {},
                    computeVertexNormals: function() {
                        var t = this.attributes;
                        if (t.position) {
                            var r = t.position.array;
                            if (void 0 === t.normal) this.addAttribute("normal", new e.BufferAttribute(new Float32Array(r.length), 3));
                            else
                                for (var n = t.normal.array, i = 0, o = n.length; o > i; i++) n[i] = 0;
                            var a, s, u, n = t.normal.array,
                                l = new e.Vector3,
                                c = new e.Vector3,
                                h = new e.Vector3,
                                p = new e.Vector3,
                                d = new e.Vector3;
                            if (t.index)
                                for (var f = t.index.array, m = this.offsets.length > 0 ? this.offsets : [{
                                        start: 0,
                                        count: f.length,
                                        index: 0
                                    }], v = 0, g = m.length; g > v; ++v)
                                    for (var y = m[v].start, b = m[v].count, x = m[v].index, i = y, o = y + b; o > i; i += 3) a = 3 * (x + f[i]), s = 3 * (x + f[i + 1]), u = 3 * (x + f[i + 2]), l.fromArray(r, a), c.fromArray(r, s), h.fromArray(r, u), p.subVectors(h, c), d.subVectors(l, c), p.cross(d), n[a] += p.x, n[a + 1] += p.y, n[a + 2] += p.z, n[s] += p.x, n[s + 1] += p.y, n[s + 2] += p.z, n[u] += p.x, n[u + 1] += p.y, n[u + 2] += p.z;
                            else
                                for (var i = 0, o = r.length; o > i; i += 9) l.fromArray(r, i), c.fromArray(r, i + 3), h.fromArray(r, i + 6), p.subVectors(h, c), d.subVectors(l, c), p.cross(d), n[i] = p.x, n[i + 1] = p.y, n[i + 2] = p.z, n[i + 3] = p.x, n[i + 4] = p.y, n[i + 5] = p.z, n[i + 6] = p.x, n[i + 7] = p.y, n[i + 8] = p.z;
                            this.normalizeNormals(), t.normal.needsUpdate = !0
                        }
                    },
                    computeTangents: function() {
                        function t(e, t, r) {
                            R.fromArray(i, 3 * e), k.fromArray(i, 3 * t), I.fromArray(i, 3 * r), D.fromArray(a, 2 * e), B.fromArray(a, 2 * t), L.fromArray(a, 2 * r), p = k.x - R.x, d = I.x - R.x, f = k.y - R.y, m = I.y - R.y, v = k.z - R.z, g = I.z - R.z, y = B.x - D.x, b = L.x - D.x, x = B.y - D.y, _ = L.y - D.y, w = 1 / (y * _ - b * x), V.set((_ * p - x * d) * w, (_ * f - x * m) * w, (_ * v - x * g) * w), N.set((y * d - b * p) * w, (y * m - b * f) * w, (y * g - b * v) * w), l[e].add(V), l[t].add(V), l[r].add(V), c[e].add(N), c[t].add(N), c[r].add(N)
                        }

                        function r(e) {
                            X.fromArray(o, 3 * e), Y.copy(X), j = l[e], q.copy(j), q.sub(X.multiplyScalar(X.dot(j))).normalize(), W.crossVectors(Y, j), G = W.dot(c[e]), H = 0 > G ? -1 : 1, u[4 * e] = q.x, u[4 * e + 1] = q.y, u[4 * e + 2] = q.z, u[4 * e + 3] = H
                        }
                        if (void 0 === this.attributes.index || void 0 === this.attributes.position || void 0 === this.attributes.normal || void 0 === this.attributes.uv) return void e.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");
                        var n = this.attributes.index.array,
                            i = this.attributes.position.array,
                            o = this.attributes.normal.array,
                            a = this.attributes.uv.array,
                            s = i.length / 3;
                        void 0 === this.attributes.tangent && this.addAttribute("tangent", new e.BufferAttribute(new Float32Array(4 * s), 4));
                        for (var u = this.attributes.tangent.array, l = [], c = [], h = 0; s > h; h++) l[h] = new e.Vector3, c[h] = new e.Vector3;
                        var p, d, f, m, v, g, y, b, x, _, w, C, E, S, T, M, A, P, R = new e.Vector3,
                            k = new e.Vector3,
                            I = new e.Vector3,
                            D = new e.Vector2,
                            B = new e.Vector2,
                            L = new e.Vector2,
                            V = new e.Vector3,
                            N = new e.Vector3;
                        0 === this.drawcalls.length && this.addDrawCall(0, n.length, 0);
                        var O = this.drawcalls;
                        for (S = 0, T = O.length; T > S; ++S) {
                            var F = O[S].start,
                                U = O[S].count,
                                z = O[S].index;
                            for (C = F, E = F + U; E > C; C += 3) M = z + n[C], A = z + n[C + 1], P = z + n[C + 2], t(M, A, P)
                        }
                        var H, j, G, q = new e.Vector3,
                            W = new e.Vector3,
                            X = new e.Vector3,
                            Y = new e.Vector3;
                        for (S = 0, T = O.length; T > S; ++S) {
                            var F = O[S].start,
                                U = O[S].count,
                                z = O[S].index;
                            for (C = F, E = F + U; E > C; C += 3) M = z + n[C], A = z + n[C + 1], P = z + n[C + 2], r(M), r(A), r(P)
                        }
                    },
                    computeOffsets: function(e) {
                        void 0 === e && (e = 65535);
                        for (var t = this.attributes.index.array, r = this.attributes.position.array, n = t.length / 3, i = new Uint16Array(t.length), o = 0, a = 0, s = [{
                                start: 0,
                                count: 0,
                                index: 0
                            }], u = s[0], l = 0, c = 0, h = new Int32Array(6), p = new Int32Array(r.length), d = new Int32Array(r.length), f = 0; f < r.length; f++) p[f] = -1, d[f] = -1;
                        for (var m = 0; n > m; m++) {
                            c = 0;
                            for (var v = 0; 3 > v; v++) {
                                var g = t[3 * m + v]; - 1 == p[g] ? (h[2 * v] = g, h[2 * v + 1] = -1, c++) : p[g] < u.index ? (h[2 * v] = g, h[2 * v + 1] = -1, l++) : (h[2 * v] = g, h[2 * v + 1] = p[g])
                            }
                            var y = a + c;
                            if (y > u.index + e) {
                                var b = {
                                    start: o,
                                    count: 0,
                                    index: a
                                };
                                s.push(b), u = b;
                                for (var x = 0; 6 > x; x += 2) {
                                    var _ = h[x + 1];
                                    _ > -1 && _ < u.index && (h[x + 1] = -1)
                                }
                            }
                            for (var x = 0; 6 > x; x += 2) {
                                var g = h[x],
                                    _ = h[x + 1]; - 1 === _ && (_ = a++), p[g] = _, d[_] = g, i[o++] = _ - u.index, u.count++
                            }
                        }
                        return this.reorderBuffers(i, d, a), this.offsets = s, this.drawcalls = s, s
                    },
                    merge: function(t, r) {
                        if (t instanceof e.BufferGeometry == !1) return void e.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
                        void 0 === r && (r = 0);
                        var n = this.attributes;
                        for (var i in n)
                            if (void 0 !== t.attributes[i])
                                for (var o = n[i], a = o.array, s = t.attributes[i], u = s.array, l = s.itemSize, c = 0, h = l * r; c < u.length; c++, h++) a[h] = u[c];
                        return this
                    },
                    normalizeNormals: function() {
                        for (var e, t, r, n, i = this.attributes.normal.array, o = 0, a = i.length; a > o; o += 3) e = i[o], t = i[o + 1], r = i[o + 2], n = 1 / Math.sqrt(e * e + t * t + r * r), i[o] *= n, i[o + 1] *= n, i[o + 2] *= n
                    },
                    reorderBuffers: function(e, t, r) {
                        var n = {};
                        for (var i in this.attributes)
                            if ("index" != i) {
                                var o = this.attributes[i].array;
                                n[i] = new o.constructor(this.attributes[i].itemSize * r)
                            }
                        for (var a = 0; r > a; a++) {
                            var s = t[a];
                            for (var i in this.attributes)
                                if ("index" != i)
                                    for (var u = this.attributes[i].array, l = this.attributes[i].itemSize, c = n[i], h = 0; l > h; h++) c[a * l + h] = u[s * l + h]
                        }
                        this.attributes.index.array = e;
                        for (var i in this.attributes) "index" != i && (this.attributes[i].array = n[i], this.attributes[i].numItems = this.attributes[i].itemSize * r)
                    },
                    toJSON: function() {
                        var e = {
                                metadata: {
                                    version: 4,
                                    type: "BufferGeometry",
                                    generator: "BufferGeometryExporter"
                                },
                                uuid: this.uuid,
                                type: this.type,
                                data: {
                                    attributes: {}
                                }
                            },
                            t = this.attributes,
                            r = this.offsets,
                            n = this.boundingSphere;
                        for (var i in t) {
                            var o = t[i],
                                a = Array.prototype.slice.call(o.array);
                            e.data.attributes[i] = {
                                itemSize: o.itemSize,
                                type: o.array.constructor.name,
                                array: a
                            }
                        }
                        return r.length > 0 && (e.data.offsets = JSON.parse(JSON.stringify(r))), null !== n && (e.data.boundingSphere = {
                            center: n.center.toArray(),
                            radius: n.radius
                        }), e
                    },
                    clone: function() {
                        var t = new e.BufferGeometry;
                        for (var r in this.attributes) {
                            var n = this.attributes[r];
                            t.addAttribute(r, n.clone())
                        }
                        for (var i = 0, o = this.offsets.length; o > i; i++) {
                            var a = this.offsets[i];
                            t.offsets.push({
                                start: a.start,
                                index: a.index,
                                count: a.count
                            })
                        }
                        return t
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }, e.EventDispatcher.prototype.apply(e.BufferGeometry.prototype), e.Geometry = function() {
                    Object.defineProperty(this, "id", {
                        value: e.GeometryIdCount++
                    }), this.uuid = e.Math.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
                        []
                    ], this.morphTargets = [], this.morphColors = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.hasTangents = !1, this.dynamic = !0, this.verticesNeedUpdate = !1, this.elementsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.tangentsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1
                }, e.Geometry.prototype = {
                    constructor: e.Geometry,
                    applyMatrix: function(t) {
                        for (var r = (new e.Matrix3).getNormalMatrix(t), n = 0, i = this.vertices.length; i > n; n++) {
                            var o = this.vertices[n];
                            o.applyMatrix4(t)
                        }
                        for (var n = 0, i = this.faces.length; i > n; n++) {
                            var a = this.faces[n];
                            a.normal.applyMatrix3(r).normalize();
                            for (var s = 0, u = a.vertexNormals.length; u > s; s++) a.vertexNormals[s].applyMatrix3(r).normalize()
                        }
                        null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0
                    },
                    fromBufferGeometry: function(t) {
                        for (var r = this, n = t.attributes, i = n.position.array, o = void 0 !== n.index ? n.index.array : void 0, a = void 0 !== n.normal ? n.normal.array : void 0, s = void 0 !== n.color ? n.color.array : void 0, u = void 0 !== n.uv ? n.uv.array : void 0, l = [], c = [], h = 0, p = 0; h < i.length; h += 3, p += 2) r.vertices.push(new e.Vector3(i[h], i[h + 1], i[h + 2])), void 0 !== a && l.push(new e.Vector3(a[h], a[h + 1], a[h + 2])), void 0 !== s && r.colors.push(new e.Color(s[h], s[h + 1], s[h + 2])), void 0 !== u && c.push(new e.Vector2(u[p], u[p + 1]));
                        var d = function(t, n, i) {
                            var o = void 0 !== a ? [l[t].clone(), l[n].clone(), l[i].clone()] : [],
                                h = void 0 !== s ? [r.colors[t].clone(), r.colors[n].clone(), r.colors[i].clone()] : [];
                            r.faces.push(new e.Face3(t, n, i, o, h)), void 0 !== u && r.faceVertexUvs[0].push([c[t].clone(), c[n].clone(), c[i].clone()])
                        };
                        if (void 0 !== o) {
                            var f = t.drawcalls;
                            if (f.length > 0)
                                for (var h = 0; h < f.length; h++)
                                    for (var m = f[h], v = m.start, g = m.count, y = m.index, p = v, b = v + g; b > p; p += 3) d(y + o[p], y + o[p + 1], y + o[p + 2]);
                            else
                                for (var h = 0; h < o.length; h += 3) d(o[h], o[h + 1], o[h + 2])
                        } else
                            for (var h = 0; h < i.length / 3; h += 3) d(h, h + 1, h + 2);
                        return this.computeFaceNormals(), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), this
                    },
                    center: function() {
                        this.computeBoundingBox();
                        var t = this.boundingBox.center().negate();
                        return this.applyMatrix((new e.Matrix4).setPosition(t)), t
                    },
                    computeFaceNormals: function() {
                        for (var t = new e.Vector3, r = new e.Vector3, n = 0, i = this.faces.length; i > n; n++) {
                            var o = this.faces[n],
                                a = this.vertices[o.a],
                                s = this.vertices[o.b],
                                u = this.vertices[o.c];
                            t.subVectors(u, s), r.subVectors(a, s), t.cross(r), t.normalize(), o.normal.copy(t)
                        }
                    },
                    computeVertexNormals: function(t) {
                        var r, n, i, o, a, s;
                        for (s = new Array(this.vertices.length), r = 0, n = this.vertices.length; n > r; r++) s[r] = new e.Vector3;
                        if (t) {
                            var u, l, c, h = new e.Vector3,
                                p = new e.Vector3;
                            for (i = 0, o = this.faces.length; o > i; i++) a = this.faces[i], u = this.vertices[a.a], l = this.vertices[a.b], c = this.vertices[a.c], h.subVectors(c, l), p.subVectors(u, l), h.cross(p), s[a.a].add(h), s[a.b].add(h), s[a.c].add(h)
                        } else
                            for (i = 0, o = this.faces.length; o > i; i++) a = this.faces[i], s[a.a].add(a.normal), s[a.b].add(a.normal), s[a.c].add(a.normal);
                        for (r = 0, n = this.vertices.length; n > r; r++) s[r].normalize();
                        for (i = 0, o = this.faces.length; o > i; i++) a = this.faces[i], a.vertexNormals[0] = s[a.a].clone(), a.vertexNormals[1] = s[a.b].clone(), a.vertexNormals[2] = s[a.c].clone()
                    },
                    computeMorphNormals: function() {
                        var t, r, n, i, o;
                        for (n = 0, i = this.faces.length; i > n; n++)
                            for (o = this.faces[n], o.__originalFaceNormal ? o.__originalFaceNormal.copy(o.normal) : o.__originalFaceNormal = o.normal.clone(), o.__originalVertexNormals || (o.__originalVertexNormals = []), t = 0, r = o.vertexNormals.length; r > t; t++) o.__originalVertexNormals[t] ? o.__originalVertexNormals[t].copy(o.vertexNormals[t]) : o.__originalVertexNormals[t] = o.vertexNormals[t].clone();
                        var a = new e.Geometry;
                        for (a.faces = this.faces, t = 0, r = this.morphTargets.length; r > t; t++) {
                            if (!this.morphNormals[t]) {
                                this.morphNormals[t] = {}, this.morphNormals[t].faceNormals = [], this.morphNormals[t].vertexNormals = [];
                                var s, u, l = this.morphNormals[t].faceNormals,
                                    c = this.morphNormals[t].vertexNormals;
                                for (n = 0, i = this.faces.length; i > n; n++) s = new e.Vector3, u = {
                                    a: new e.Vector3,
                                    b: new e.Vector3,
                                    c: new e.Vector3
                                }, l.push(s), c.push(u)
                            }
                            var h = this.morphNormals[t];
                            a.vertices = this.morphTargets[t].vertices, a.computeFaceNormals(), a.computeVertexNormals();
                            var s, u;
                            for (n = 0, i = this.faces.length; i > n; n++) o = this.faces[n], s = h.faceNormals[n], u = h.vertexNormals[n], s.copy(o.normal), u.a.copy(o.vertexNormals[0]), u.b.copy(o.vertexNormals[1]), u.c.copy(o.vertexNormals[2])
                        }
                        for (n = 0, i = this.faces.length; i > n; n++) o = this.faces[n], o.normal = o.__originalFaceNormal, o.vertexNormals = o.__originalVertexNormals
                    },
                    computeTangents: function() {
                        function t(e, t, r, n, i, o, a) {
                            c = e.vertices[t], h = e.vertices[r], p = e.vertices[n], d = l[i], f = l[o], m = l[a], v = h.x - c.x, g = p.x - c.x, y = h.y - c.y, b = p.y - c.y, x = h.z - c.z, _ = p.z - c.z, w = f.x - d.x, C = m.x - d.x, E = f.y - d.y, S = m.y - d.y, T = 1 / (w * S - C * E), I.set((S * v - E * g) * T, (S * y - E * b) * T, (S * x - E * _) * T), D.set((w * g - C * v) * T, (w * b - C * y) * T, (w * _ - C * x) * T), R[t].add(I), R[r].add(I), R[n].add(I), k[t].add(D), k[r].add(D), k[n].add(D)
                        }
                        var r, n, i, o, a, s, u, l, c, h, p, d, f, m, v, g, y, b, x, _, w, C, E, S, T, M, A, P, R = [],
                            k = [],
                            I = new e.Vector3,
                            D = new e.Vector3,
                            B = new e.Vector3,
                            L = new e.Vector3,
                            V = new e.Vector3;
                        for (i = 0, o = this.vertices.length; o > i; i++) R[i] = new e.Vector3, k[i] = new e.Vector3;
                        for (r = 0, n = this.faces.length; n > r; r++) u = this.faces[r], l = this.faceVertexUvs[0][r], t(this, u.a, u.b, u.c, 0, 1, 2);
                        var N = ["a", "b", "c", "d"];
                        for (r = 0, n = this.faces.length; n > r; r++)
                            for (u = this.faces[r], a = 0; a < Math.min(u.vertexNormals.length, 3); a++) V.copy(u.vertexNormals[a]), s = u[N[a]], M = R[s], B.copy(M), B.sub(V.multiplyScalar(V.dot(M))).normalize(), L.crossVectors(u.vertexNormals[a], M), A = L.dot(k[s]), P = 0 > A ? -1 : 1, u.vertexTangents[a] = new e.Vector4(B.x, B.y, B.z, P);
                        this.hasTangents = !0
                    },
                    computeLineDistances: function() {
                        for (var e = 0, t = this.vertices, r = 0, n = t.length; n > r; r++) r > 0 && (e += t[r].distanceTo(t[r - 1])), this.lineDistances[r] = e
                    },
                    computeBoundingBox: function() {
                        null === this.boundingBox && (this.boundingBox = new e.Box3), this.boundingBox.setFromPoints(this.vertices)
                    },
                    computeBoundingSphere: function() {
                        null === this.boundingSphere && (this.boundingSphere = new e.Sphere), this.boundingSphere.setFromPoints(this.vertices)
                    },
                    merge: function(t, r, n) {
                        if (t instanceof e.Geometry == !1) return void e.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
                        var i, o = this.vertices.length,
                            a = this.vertices,
                            s = t.vertices,
                            u = this.faces,
                            l = t.faces,
                            c = this.faceVertexUvs[0],
                            h = t.faceVertexUvs[0];
                        void 0 === n && (n = 0), void 0 !== r && (i = (new e.Matrix3).getNormalMatrix(r));
                        for (var p = 0, d = s.length; d > p; p++) {
                            var f = s[p],
                                m = f.clone();
                            void 0 !== r && m.applyMatrix4(r), a.push(m)
                        }
                        for (p = 0, d = l.length; d > p; p++) {
                            var v, g, y, b = l[p],
                                x = b.vertexNormals,
                                _ = b.vertexColors;
                            v = new e.Face3(b.a + o, b.b + o, b.c + o), v.normal.copy(b.normal), void 0 !== i && v.normal.applyMatrix3(i).normalize();
                            for (var w = 0, C = x.length; C > w; w++) g = x[w].clone(), void 0 !== i && g.applyMatrix3(i).normalize(), v.vertexNormals.push(g);
                            v.color.copy(b.color);
                            for (var w = 0, C = _.length; C > w; w++) y = _[w], v.vertexColors.push(y.clone());
                            v.materialIndex = b.materialIndex + n, u.push(v)
                        }
                        for (p = 0, d = h.length; d > p; p++) {
                            var E = h[p],
                                S = [];
                            if (void 0 !== E) {
                                for (var w = 0, C = E.length; C > w; w++) S.push(E[w].clone());
                                c.push(S)
                            }
                        }
                    },
                    mergeMesh: function(t) {
                        return t instanceof e.Mesh == !1 ? void e.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t) : (t.matrixAutoUpdate && t.updateMatrix(), void this.merge(t.geometry, t.matrix))
                    },
                    mergeVertices: function() {
                        var e, t, r, n, i, o, a, s, u = {},
                            l = [],
                            c = [],
                            h = 4,
                            p = Math.pow(10, h);
                        for (r = 0, n = this.vertices.length; n > r; r++) e = this.vertices[r], t = Math.round(e.x * p) + "_" + Math.round(e.y * p) + "_" + Math.round(e.z * p), void 0 === u[t] ? (u[t] = r, l.push(this.vertices[r]), c[r] = l.length - 1) : c[r] = c[u[t]];
                        var d = [];
                        for (r = 0, n = this.faces.length; n > r; r++) {
                            i = this.faces[r], i.a = c[i.a], i.b = c[i.b], i.c = c[i.c], o = [i.a, i.b, i.c];
                            for (var f = -1, m = 0; 3 > m; m++)
                                if (o[m] == o[(m + 1) % 3]) {
                                    f = m, d.push(r);
                                    break
                                }
                        }
                        for (r = d.length - 1; r >= 0; r--) {
                            var v = d[r];
                            for (this.faces.splice(v, 1), a = 0, s = this.faceVertexUvs.length; s > a; a++) this.faceVertexUvs[a].splice(v, 1)
                        }
                        var g = this.vertices.length - l.length;
                        return this.vertices = l, g
                    },
                    toJSON: function() {
                        function e(e, t, r) {
                            return r ? e | 1 << t : e & ~(1 << t)
                        }

                        function t(e) {
                            var t = e.x.toString() + e.y.toString() + e.z.toString();
                            return void 0 !== p[t] ? p[t] : (p[t] = h.length / 3, h.push(e.x, e.y, e.z), p[t])
                        }

                        function r(e) {
                            var t = e.r.toString() + e.g.toString() + e.b.toString();
                            return void 0 !== f[t] ? f[t] : (f[t] = d.length, d.push(e.getHex()), f[t])
                        }

                        function n(e) {
                            var t = e.x.toString() + e.y.toString();
                            return void 0 !== v[t] ? v[t] : (v[t] = m.length / 2, m.push(e.x, e.y), v[t])
                        }
                        var i = {
                            metadata: {
                                version: 4,
                                type: "BufferGeometry",
                                generator: "BufferGeometryExporter"
                            },
                            uuid: this.uuid,
                            type: this.type
                        };
                        if ("" !== this.name && (i.name = this.name), void 0 !== this.parameters) {
                            var o = this.parameters;
                            for (var a in o) void 0 !== o[a] && (i[a] = o[a]);
                            return i
                        }
                        for (var s = [], u = 0; u < this.vertices.length; u++) {
                            var l = this.vertices[u];
                            s.push(l.x, l.y, l.z)
                        }
                        for (var c = [], h = [], p = {}, d = [], f = {}, m = [], v = {}, u = 0; u < this.faces.length; u++) {
                            var g = this.faces[u],
                                y = !1,
                                b = !1,
                                x = void 0 !== this.faceVertexUvs[0][u],
                                _ = g.normal.length() > 0,
                                w = g.vertexNormals.length > 0,
                                C = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b,
                                E = g.vertexColors.length > 0,
                                S = 0;
                            if (S = e(S, 0, 0), S = e(S, 1, y), S = e(S, 2, b), S = e(S, 3, x), S = e(S, 4, _), S = e(S, 5, w), S = e(S, 6, C), S = e(S, 7, E), c.push(S), c.push(g.a, g.b, g.c), x) {
                                var T = this.faceVertexUvs[0][u];
                                c.push(n(T[0]), n(T[1]), n(T[2]))
                            }
                            if (_ && c.push(t(g.normal)), w) {
                                var M = g.vertexNormals;
                                c.push(t(M[0]), t(M[1]), t(M[2]))
                            }
                            if (C && c.push(r(g.color)), E) {
                                var A = g.vertexColors;
                                c.push(r(A[0]), r(A[1]), r(A[2]))
                            }
                        }
                        return i.data = {}, i.data.vertices = s, i.data.normals = h, d.length > 0 && (i.data.colors = d), m.length > 0 && (i.data.uvs = [m]), i.data.faces = c, i
                    },
                    clone: function() {
                        for (var t = new e.Geometry, r = this.vertices, n = 0, i = r.length; i > n; n++) t.vertices.push(r[n].clone());
                        for (var o = this.faces, n = 0, i = o.length; i > n; n++) t.faces.push(o[n].clone());
                        for (var n = 0, i = this.faceVertexUvs.length; i > n; n++) {
                            var a = this.faceVertexUvs[n];
                            void 0 === t.faceVertexUvs[n] && (t.faceVertexUvs[n] = []);
                            for (var s = 0, u = a.length; u > s; s++) {
                                for (var l = a[s], c = [], h = 0, p = l.length; p > h; h++) {
                                    var d = l[h];
                                    c.push(d.clone())
                                }
                                t.faceVertexUvs[n].push(c)
                            }
                        }
                        return t
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }, e.EventDispatcher.prototype.apply(e.Geometry.prototype), e.GeometryIdCount = 0, e.Camera = function() {
                    e.Object3D.call(this), this.type = "Camera", this.matrixWorldInverse = new e.Matrix4, this.projectionMatrix = new e.Matrix4
                }, e.Camera.prototype = Object.create(e.Object3D.prototype), e.Camera.prototype.constructor = e.Camera, e.Camera.prototype.getWorldDirection = function() {
                    var t = new e.Quaternion;
                    return function(r) {
                        var n = r || new e.Vector3;
                        return this.getWorldQuaternion(t), n.set(0, 0, -1).applyQuaternion(t)
                    }
                }(), e.Camera.prototype.lookAt = function() {
                    var t = new e.Matrix4;
                    return function(e) {
                        t.lookAt(this.position, e, this.up), this.quaternion.setFromRotationMatrix(t)
                    }
                }(), e.Camera.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.Camera), e.Object3D.prototype.clone.call(this, t), t.matrixWorldInverse.copy(this.matrixWorldInverse), t.projectionMatrix.copy(this.projectionMatrix), t
                }, e.CubeCamera = function(t, r, n) {
                    e.Object3D.call(this), this.type = "CubeCamera";
                    var i = 90,
                        o = 1,
                        a = new e.PerspectiveCamera(i, o, t, r);
                    a.up.set(0, -1, 0), a.lookAt(new e.Vector3(1, 0, 0)), this.add(a);
                    var s = new e.PerspectiveCamera(i, o, t, r);
                    s.up.set(0, -1, 0), s.lookAt(new e.Vector3(-1, 0, 0)), this.add(s);
                    var u = new e.PerspectiveCamera(i, o, t, r);
                    u.up.set(0, 0, 1), u.lookAt(new e.Vector3(0, 1, 0)), this.add(u);
                    var l = new e.PerspectiveCamera(i, o, t, r);
                    l.up.set(0, 0, -1), l.lookAt(new e.Vector3(0, -1, 0)), this.add(l);
                    var c = new e.PerspectiveCamera(i, o, t, r);
                    c.up.set(0, -1, 0), c.lookAt(new e.Vector3(0, 0, 1)), this.add(c);
                    var h = new e.PerspectiveCamera(i, o, t, r);
                    h.up.set(0, -1, 0), h.lookAt(new e.Vector3(0, 0, -1)), this.add(h), this.renderTarget = new e.WebGLRenderTargetCube(n, n, {
                        format: e.RGBFormat,
                        magFilter: e.LinearFilter,
                        minFilter: e.LinearFilter
                    }), this.updateCubeMap = function(e, t) {
                        var r = this.renderTarget,
                            n = r.generateMipmaps;
                        r.generateMipmaps = !1, r.activeCubeFace = 0, e.render(t, a, r), r.activeCubeFace = 1, e.render(t, s, r), r.activeCubeFace = 2, e.render(t, u, r), r.activeCubeFace = 3, e.render(t, l, r), r.activeCubeFace = 4, e.render(t, c, r), r.generateMipmaps = n, r.activeCubeFace = 5, e.render(t, h, r)
                    }
                }, e.CubeCamera.prototype = Object.create(e.Object3D.prototype), e.CubeCamera.prototype.constructor = e.CubeCamera, e.OrthographicCamera = function(t, r, n, i, o, a) {
                    e.Camera.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.left = t, this.right = r, this.top = n, this.bottom = i, this.near = void 0 !== o ? o : .1, this.far = void 0 !== a ? a : 2e3, this.updateProjectionMatrix()
                }, e.OrthographicCamera.prototype = Object.create(e.Camera.prototype), e.OrthographicCamera.prototype.constructor = e.OrthographicCamera, e.OrthographicCamera.prototype.updateProjectionMatrix = function() {
                    var e = (this.right - this.left) / (2 * this.zoom),
                        t = (this.top - this.bottom) / (2 * this.zoom),
                        r = (this.right + this.left) / 2,
                        n = (this.top + this.bottom) / 2;
                    this.projectionMatrix.makeOrthographic(r - e, r + e, n + t, n - t, this.near, this.far)
                }, e.OrthographicCamera.prototype.clone = function() {
                    var t = new e.OrthographicCamera;
                    return e.Camera.prototype.clone.call(this, t), t.zoom = this.zoom, t.left = this.left, t.right = this.right, t.top = this.top, t.bottom = this.bottom, t.near = this.near, t.far = this.far, t.projectionMatrix.copy(this.projectionMatrix), t
                }, e.PerspectiveCamera = function(t, r, n, i) {
                    e.Camera.call(this), this.type = "PerspectiveCamera", this.zoom = 1, this.fov = void 0 !== t ? t : 50, this.aspect = void 0 !== r ? r : 1, this.near = void 0 !== n ? n : .1, this.far = void 0 !== i ? i : 2e3, this.updateProjectionMatrix()
                }, e.PerspectiveCamera.prototype = Object.create(e.Camera.prototype), e.PerspectiveCamera.prototype.constructor = e.PerspectiveCamera, e.PerspectiveCamera.prototype.setLens = function(t, r) {
                    void 0 === r && (r = 24), this.fov = 2 * e.Math.radToDeg(Math.atan(r / (2 * t))), this.updateProjectionMatrix()
                }, e.PerspectiveCamera.prototype.setViewOffset = function(e, t, r, n, i, o) {
                    this.fullWidth = e, this.fullHeight = t, this.x = r, this.y = n, this.width = i, this.height = o, this.updateProjectionMatrix()
                }, e.PerspectiveCamera.prototype.updateProjectionMatrix = function() {
                    var t = e.Math.radToDeg(2 * Math.atan(Math.tan(.5 * e.Math.degToRad(this.fov)) / this.zoom));
                    if (this.fullWidth) {
                        var r = this.fullWidth / this.fullHeight,
                            n = Math.tan(e.Math.degToRad(.5 * t)) * this.near,
                            i = -n,
                            o = r * i,
                            a = r * n,
                            s = Math.abs(a - o),
                            u = Math.abs(n - i);
                        this.projectionMatrix.makeFrustum(o + this.x * s / this.fullWidth, o + (this.x + this.width) * s / this.fullWidth, n - (this.y + this.height) * u / this.fullHeight, n - this.y * u / this.fullHeight, this.near, this.far)
                    } else this.projectionMatrix.makePerspective(t, this.aspect, this.near, this.far)
                }, e.PerspectiveCamera.prototype.clone = function() {
                    var t = new e.PerspectiveCamera;
                    return e.Camera.prototype.clone.call(this, t), t.zoom = this.zoom, t.fov = this.fov, t.aspect = this.aspect, t.near = this.near, t.far = this.far, t.projectionMatrix.copy(this.projectionMatrix), t
                }, e.Light = function(t) {
                    e.Object3D.call(this), this.type = "Light", this.color = new e.Color(t)
                }, e.Light.prototype = Object.create(e.Object3D.prototype), e.Light.prototype.constructor = e.Light, e.Light.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.Light), e.Object3D.prototype.clone.call(this, t), t.color.copy(this.color), t
                }, e.AmbientLight = function(t) {
                    e.Light.call(this, t), this.type = "AmbientLight"
                }, e.AmbientLight.prototype = Object.create(e.Light.prototype), e.AmbientLight.prototype.constructor = e.AmbientLight, e.AmbientLight.prototype.clone = function() {
                    var t = new e.AmbientLight;
                    return e.Light.prototype.clone.call(this, t), t
                }, e.AreaLight = function(t, r) {
                    e.Light.call(this, t), this.type = "AreaLight", this.normal = new e.Vector3(0, -1, 0), this.right = new e.Vector3(1, 0, 0), this.intensity = void 0 !== r ? r : 1, this.width = 1, this.height = 1, this.constantAttenuation = 1.5, this.linearAttenuation = .5, this.quadraticAttenuation = .1
                }, e.AreaLight.prototype = Object.create(e.Light.prototype), e.AreaLight.prototype.constructor = e.AreaLight, e.DirectionalLight = function(t, r) {
                    e.Light.call(this, t), this.type = "DirectionalLight", this.position.set(0, 1, 0), this.target = new e.Object3D, this.intensity = void 0 !== r ? r : 1, this.castShadow = !1, this.onlyShadow = !1, this.shadowCameraNear = 50, this.shadowCameraFar = 5e3, this.shadowCameraLeft = -500, this.shadowCameraRight = 500, this.shadowCameraTop = 500, this.shadowCameraBottom = -500, this.shadowCameraVisible = !1, this.shadowBias = 0, this.shadowDarkness = .5, this.shadowMapWidth = 512, this.shadowMapHeight = 512, this.shadowCascade = !1, this.shadowCascadeOffset = new e.Vector3(0, 0, -1e3), this.shadowCascadeCount = 2, this.shadowCascadeBias = [0, 0, 0], this.shadowCascadeWidth = [512, 512, 512], this.shadowCascadeHeight = [512, 512, 512], this.shadowCascadeNearZ = [-1, .99, .998], this.shadowCascadeFarZ = [.99, .998, 1], this.shadowCascadeArray = [], this.shadowMap = null, this.shadowMapSize = null, this.shadowCamera = null, this.shadowMatrix = null
                }, e.DirectionalLight.prototype = Object.create(e.Light.prototype), e.DirectionalLight.prototype.constructor = e.DirectionalLight, e.DirectionalLight.prototype.clone = function() {
                    var t = new e.DirectionalLight;
                    return e.Light.prototype.clone.call(this, t), t.target = this.target.clone(), t.intensity = this.intensity, t.castShadow = this.castShadow, t.onlyShadow = this.onlyShadow, t.shadowCameraNear = this.shadowCameraNear, t.shadowCameraFar = this.shadowCameraFar, t.shadowCameraLeft = this.shadowCameraLeft, t.shadowCameraRight = this.shadowCameraRight, t.shadowCameraTop = this.shadowCameraTop, t.shadowCameraBottom = this.shadowCameraBottom, t.shadowCameraVisible = this.shadowCameraVisible, t.shadowBias = this.shadowBias, t.shadowDarkness = this.shadowDarkness, t.shadowMapWidth = this.shadowMapWidth, t.shadowMapHeight = this.shadowMapHeight, t.shadowCascade = this.shadowCascade, t.shadowCascadeOffset.copy(this.shadowCascadeOffset), t.shadowCascadeCount = this.shadowCascadeCount, t.shadowCascadeBias = this.shadowCascadeBias.slice(0), t.shadowCascadeWidth = this.shadowCascadeWidth.slice(0), t.shadowCascadeHeight = this.shadowCascadeHeight.slice(0), t.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0), t.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0), t
                }, e.HemisphereLight = function(t, r, n) {
                    e.Light.call(this, t), this.type = "HemisphereLight", this.position.set(0, 100, 0), this.groundColor = new e.Color(r), this.intensity = void 0 !== n ? n : 1
                }, e.HemisphereLight.prototype = Object.create(e.Light.prototype), e.HemisphereLight.prototype.constructor = e.HemisphereLight, e.HemisphereLight.prototype.clone = function() {
                    var t = new e.HemisphereLight;
                    return e.Light.prototype.clone.call(this, t), t.groundColor.copy(this.groundColor), t.intensity = this.intensity, t
                }, e.PointLight = function(t, r, n, i) {
                    e.Light.call(this, t), this.type = "PointLight", this.intensity = void 0 !== r ? r : 1, this.distance = void 0 !== n ? n : 0, this.decay = void 0 !== i ? i : 1
                }, e.PointLight.prototype = Object.create(e.Light.prototype), e.PointLight.prototype.constructor = e.PointLight, e.PointLight.prototype.clone = function() {
                    var t = new e.PointLight;
                    return e.Light.prototype.clone.call(this, t), t.intensity = this.intensity, t.distance = this.distance, t.decay = this.decay, t
                }, e.SpotLight = function(t, r, n, i, o, a) {
                    e.Light.call(this, t), this.type = "SpotLight", this.position.set(0, 1, 0), this.target = new e.Object3D, this.intensity = void 0 !== r ? r : 1, this.distance = void 0 !== n ? n : 0, this.angle = void 0 !== i ? i : Math.PI / 3, this.exponent = void 0 !== o ? o : 10, this.decay = void 0 !== a ? a : 1, this.castShadow = !1, this.onlyShadow = !1, this.shadowCameraNear = 50, this.shadowCameraFar = 5e3, this.shadowCameraFov = 50, this.shadowCameraVisible = !1, this.shadowBias = 0, this.shadowDarkness = .5, this.shadowMapWidth = 512, this.shadowMapHeight = 512, this.shadowMap = null, this.shadowMapSize = null, this.shadowCamera = null, this.shadowMatrix = null
                }, e.SpotLight.prototype = Object.create(e.Light.prototype), e.SpotLight.prototype.constructor = e.SpotLight, e.SpotLight.prototype.clone = function() {
                    var t = new e.SpotLight;
                    return e.Light.prototype.clone.call(this, t), t.target = this.target.clone(), t.intensity = this.intensity, t.distance = this.distance, t.angle = this.angle, t.exponent = this.exponent, t.decay = this.decay, t.castShadow = this.castShadow, t.onlyShadow = this.onlyShadow, t.shadowCameraNear = this.shadowCameraNear, t.shadowCameraFar = this.shadowCameraFar, t.shadowCameraFov = this.shadowCameraFov, t.shadowCameraVisible = this.shadowCameraVisible, t.shadowBias = this.shadowBias, t.shadowDarkness = this.shadowDarkness, t.shadowMapWidth = this.shadowMapWidth, t.shadowMapHeight = this.shadowMapHeight, t
                }, e.Cache = {
                    files: {},
                    add: function(e, t) {
                        this.files[e] = t
                    },
                    get: function(e) {
                        return this.files[e]
                    },
                    remove: function(e) {
                        delete this.files[e]
                    },
                    clear: function() {
                        this.files = {}
                    }
                }, e.Loader = function(t) {
                    this.showStatus = t, this.statusDomElement = t ? e.Loader.prototype.addStatusElement() : null, this.imageLoader = new e.ImageLoader, this.onLoadStart = function() {}, this.onLoadProgress = function() {}, this.onLoadComplete = function() {}
                }, e.Loader.prototype = {
                    constructor: e.Loader,
                    crossOrigin: void 0,
                    addStatusElement: function() {
                        var e = document.createElement("div");
                        return e.style.position = "absolute", e.style.right = "0px", e.style.top = "0px", e.style.fontSize = "0.8em", e.style.textAlign = "left", e.style.background = "rgba(0,0,0,0.25)", e.style.color = "#fff", e.style.width = "120px", e.style.padding = "0.5em 0.5em 0.5em 0.5em", e.style.zIndex = 1e3, e.innerHTML = "Loading ...", e
                    },
                    updateProgress: function(e) {
                        var t = "Loaded ";
                        t += e.total ? (100 * e.loaded / e.total).toFixed(0) + "%" : (e.loaded / 1024).toFixed(2) + " KB", this.statusDomElement.innerHTML = t
                    },
                    extractUrlBase: function(e) {
                        var t = e.split("/");
                        return 1 === t.length ? "./" : (t.pop(), t.join("/") + "/")
                    },
                    initMaterials: function(e, t) {
                        for (var r = [], n = 0; n < e.length; ++n) r[n] = this.createMaterial(e[n], t);
                        return r
                    },
                    needsTangents: function(t) {
                        for (var r = 0, n = t.length; n > r; r++) {
                            var i = t[r];
                            if (i instanceof e.ShaderMaterial) return !0
                        }
                        return !1
                    },
                    createMaterial: function(t, r) {
                        function n(e) {
                            var t = Math.log(e) / Math.LN2;
                            return Math.pow(2, Math.round(t))
                        }

                        function i(t, i, o, s, u, l, c) {
                            var h, p = r + o,
                                d = e.Loader.Handlers.get(p);
                            if (null !== d ? h = d.load(p) : (h = new e.Texture, d = a.imageLoader, d.crossOrigin = a.crossOrigin, d.load(p, function(t) {
                                    if (e.Math.isPowerOfTwo(t.width) === !1 || e.Math.isPowerOfTwo(t.height) === !1) {
                                        var r = n(t.width),
                                            i = n(t.height),
                                            o = document.createElement("canvas");
                                        o.width = r, o.height = i;
                                        var a = o.getContext("2d");
                                        a.drawImage(t, 0, 0, r, i), h.image = o
                                    } else h.image = t;
                                    h.needsUpdate = !0
                                })), h.sourceFile = o, s && (h.repeat.set(s[0], s[1]), 1 !== s[0] && (h.wrapS = e.RepeatWrapping), 1 !== s[1] && (h.wrapT = e.RepeatWrapping)), u && h.offset.set(u[0], u[1]),
                                l) {
                                var f = {
                                    repeat: e.RepeatWrapping,
                                    mirror: e.MirroredRepeatWrapping
                                };
                                void 0 !== f[l[0]] && (h.wrapS = f[l[0]]), void 0 !== f[l[1]] && (h.wrapT = f[l[1]])
                            }
                            c && (h.anisotropy = c), t[i] = h
                        }

                        function o(e) {
                            return (255 * e[0] << 16) + (255 * e[1] << 8) + 255 * e[2]
                        }
                        var a = this,
                            s = "MeshLambertMaterial",
                            u = {
                                color: 15658734,
                                opacity: 1,
                                map: null,
                                lightMap: null,
                                normalMap: null,
                                bumpMap: null,
                                wireframe: !1
                            };
                        if (t.shading) {
                            var l = t.shading.toLowerCase();
                            "phong" === l ? s = "MeshPhongMaterial" : "basic" === l && (s = "MeshBasicMaterial")
                        }
                        void 0 !== t.blending && void 0 !== e[t.blending] && (u.blending = e[t.blending]), void 0 !== t.transparent && (u.transparent = t.transparent), void 0 !== t.opacity && t.opacity < 1 && (u.transparent = !0), void 0 !== t.depthTest && (u.depthTest = t.depthTest), void 0 !== t.depthWrite && (u.depthWrite = t.depthWrite), void 0 !== t.visible && (u.visible = t.visible), void 0 !== t.flipSided && (u.side = e.BackSide), void 0 !== t.doubleSided && (u.side = e.DoubleSide), void 0 !== t.wireframe && (u.wireframe = t.wireframe), void 0 !== t.vertexColors && ("face" === t.vertexColors ? u.vertexColors = e.FaceColors : t.vertexColors && (u.vertexColors = e.VertexColors)), t.colorDiffuse ? u.color = o(t.colorDiffuse) : t.DbgColor && (u.color = t.DbgColor), t.colorSpecular && (u.specular = o(t.colorSpecular)), t.colorEmissive && (u.emissive = o(t.colorEmissive)), void 0 !== t.transparency && (console.warn("THREE.Loader: transparency has been renamed to opacity"), t.opacity = t.transparency), void 0 !== t.opacity && (u.opacity = t.opacity), t.specularCoef && (u.shininess = t.specularCoef), t.mapDiffuse && r && i(u, "map", t.mapDiffuse, t.mapDiffuseRepeat, t.mapDiffuseOffset, t.mapDiffuseWrap, t.mapDiffuseAnisotropy), t.mapLight && r && i(u, "lightMap", t.mapLight, t.mapLightRepeat, t.mapLightOffset, t.mapLightWrap, t.mapLightAnisotropy), t.mapBump && r && i(u, "bumpMap", t.mapBump, t.mapBumpRepeat, t.mapBumpOffset, t.mapBumpWrap, t.mapBumpAnisotropy), t.mapNormal && r && i(u, "normalMap", t.mapNormal, t.mapNormalRepeat, t.mapNormalOffset, t.mapNormalWrap, t.mapNormalAnisotropy), t.mapSpecular && r && i(u, "specularMap", t.mapSpecular, t.mapSpecularRepeat, t.mapSpecularOffset, t.mapSpecularWrap, t.mapSpecularAnisotropy), t.mapAlpha && r && i(u, "alphaMap", t.mapAlpha, t.mapAlphaRepeat, t.mapAlphaOffset, t.mapAlphaWrap, t.mapAlphaAnisotropy), t.mapBumpScale && (u.bumpScale = t.mapBumpScale), t.mapNormalFactor && (u.normalScale = new e.Vector2(t.mapNormalFactor, t.mapNormalFactor));
                        var c = new e[s](u);
                        return void 0 !== t.DbgName && (c.name = t.DbgName), c
                    }
                }, e.Loader.Handlers = {
                    handlers: [],
                    add: function(e, t) {
                        this.handlers.push(e, t)
                    },
                    get: function(e) {
                        for (var t = 0, r = this.handlers.length; r > t; t += 2) {
                            var n = this.handlers[t],
                                i = this.handlers[t + 1];
                            if (n.test(e)) return i
                        }
                        return null
                    }
                }, e.XHRLoader = function(t) {
                    this.manager = void 0 !== t ? t : e.DefaultLoadingManager
                }, e.XHRLoader.prototype = {
                    constructor: e.XHRLoader,
                    load: function(t, r, n, i) {
                        var o = this,
                            a = e.Cache.get(t);
                        if (void 0 !== a) return void(r && r(a));
                        var s = new XMLHttpRequest;
                        s.open("GET", t, !0), s.addEventListener("load", function(n) {
                            e.Cache.add(t, this.response), r && r(this.response), o.manager.itemEnd(t)
                        }, !1), void 0 !== n && s.addEventListener("progress", function(e) {
                            n(e)
                        }, !1), void 0 !== i && s.addEventListener("error", function(e) {
                            i(e)
                        }, !1), void 0 !== this.crossOrigin && (s.crossOrigin = this.crossOrigin), void 0 !== this.responseType && (s.responseType = this.responseType), s.send(null), o.manager.itemStart(t)
                    },
                    setResponseType: function(e) {
                        this.responseType = e
                    },
                    setCrossOrigin: function(e) {
                        this.crossOrigin = e
                    }
                }, e.ImageLoader = function(t) {
                    this.manager = void 0 !== t ? t : e.DefaultLoadingManager
                }, e.ImageLoader.prototype = {
                    constructor: e.ImageLoader,
                    load: function(t, r, n, i) {
                        var o = this,
                            a = e.Cache.get(t);
                        if (void 0 !== a) return void r(a);
                        var s = document.createElement("img");
                        return s.addEventListener("load", function(n) {
                            e.Cache.add(t, this), r && r(this), o.manager.itemEnd(t)
                        }, !1), void 0 !== n && s.addEventListener("progress", function(e) {
                            n(e)
                        }, !1), void 0 !== i && s.addEventListener("error", function(e) {
                            i(e)
                        }, !1), void 0 !== this.crossOrigin && (s.crossOrigin = this.crossOrigin), s.src = t, o.manager.itemStart(t), s
                    },
                    setCrossOrigin: function(e) {
                        this.crossOrigin = e
                    }
                }, e.JSONLoader = function(t) {
                    e.Loader.call(this, t), this.withCredentials = !1
                }, e.JSONLoader.prototype = Object.create(e.Loader.prototype), e.JSONLoader.prototype.constructor = e.JSONLoader, e.JSONLoader.prototype.load = function(e, t, r) {
                    r = r && "string" == typeof r ? r : this.extractUrlBase(e), this.onLoadStart(), this.loadAjaxJSON(this, e, t, r)
                }, e.JSONLoader.prototype.loadAjaxJSON = function(t, r, n, i, o) {
                    var a = new XMLHttpRequest,
                        s = 0;
                    a.onreadystatechange = function() {
                        if (a.readyState === a.DONE)
                            if (200 === a.status || 0 === a.status) {
                                if (a.responseText) {
                                    var u = JSON.parse(a.responseText),
                                        l = u.metadata;
                                    if (void 0 !== l) {
                                        if ("object" === l.type) return void e.error("THREE.JSONLoader: " + r + " should be loaded with THREE.ObjectLoader instead.");
                                        if ("scene" === l.type) return void e.error("THREE.JSONLoader: " + r + " seems to be a Scene. Use THREE.SceneLoader instead.")
                                    }
                                    var c = t.parse(u, i);
                                    n(c.geometry, c.materials)
                                } else e.error("THREE.JSONLoader: " + r + " seems to be unreachable or the file is empty.");
                                t.onLoadComplete()
                            } else e.error("THREE.JSONLoader: Couldn't load " + r + " (" + a.status + ")");
                        else a.readyState === a.LOADING ? o && (0 === s && (s = a.getResponseHeader("Content-Length")), o({
                            total: s,
                            loaded: a.responseText.length
                        })) : a.readyState === a.HEADERS_RECEIVED && void 0 !== o && (s = a.getResponseHeader("Content-Length"))
                    }, a.open("GET", r, !0), a.withCredentials = this.withCredentials, a.send(null)
                }, e.JSONLoader.prototype.parse = function(t, r) {
                    function n(r) {
                        function n(e, t) {
                            return e & 1 << t
                        }
                        var i, o, s, u, l, c, h, p, d, f, m, v, g, y, b, x, _, w, C, E, S, T, M, A, P, R, k, I = t.faces,
                            D = t.vertices,
                            B = t.normals,
                            L = t.colors,
                            V = 0;
                        if (void 0 !== t.uvs) {
                            for (i = 0; i < t.uvs.length; i++) t.uvs[i].length && V++;
                            for (i = 0; V > i; i++) a.faceVertexUvs[i] = []
                        }
                        for (u = 0, l = D.length; l > u;) w = new e.Vector3, w.x = D[u++] * r, w.y = D[u++] * r, w.z = D[u++] * r, a.vertices.push(w);
                        for (u = 0, l = I.length; l > u;)
                            if (f = I[u++], m = n(f, 0), v = n(f, 1), g = n(f, 3), y = n(f, 4), b = n(f, 5), x = n(f, 6), _ = n(f, 7), m) {
                                if (E = new e.Face3, E.a = I[u], E.b = I[u + 1], E.c = I[u + 3], S = new e.Face3, S.a = I[u + 1], S.b = I[u + 2], S.c = I[u + 3], u += 4, v && (d = I[u++], E.materialIndex = d, S.materialIndex = d), s = a.faces.length, g)
                                    for (i = 0; V > i; i++)
                                        for (A = t.uvs[i], a.faceVertexUvs[i][s] = [], a.faceVertexUvs[i][s + 1] = [], o = 0; 4 > o; o++) p = I[u++], R = A[2 * p], k = A[2 * p + 1], P = new e.Vector2(R, k), 2 !== o && a.faceVertexUvs[i][s].push(P), 0 !== o && a.faceVertexUvs[i][s + 1].push(P);
                                if (y && (h = 3 * I[u++], E.normal.set(B[h++], B[h++], B[h]), S.normal.copy(E.normal)), b)
                                    for (i = 0; 4 > i; i++) h = 3 * I[u++], M = new e.Vector3(B[h++], B[h++], B[h]), 2 !== i && E.vertexNormals.push(M), 0 !== i && S.vertexNormals.push(M);
                                if (x && (c = I[u++], T = L[c], E.color.setHex(T), S.color.setHex(T)), _)
                                    for (i = 0; 4 > i; i++) c = I[u++], T = L[c], 2 !== i && E.vertexColors.push(new e.Color(T)), 0 !== i && S.vertexColors.push(new e.Color(T));
                                a.faces.push(E), a.faces.push(S)
                            } else {
                                if (C = new e.Face3, C.a = I[u++], C.b = I[u++], C.c = I[u++], v && (d = I[u++], C.materialIndex = d), s = a.faces.length, g)
                                    for (i = 0; V > i; i++)
                                        for (A = t.uvs[i], a.faceVertexUvs[i][s] = [], o = 0; 3 > o; o++) p = I[u++], R = A[2 * p], k = A[2 * p + 1], P = new e.Vector2(R, k), a.faceVertexUvs[i][s].push(P);
                                if (y && (h = 3 * I[u++], C.normal.set(B[h++], B[h++], B[h])), b)
                                    for (i = 0; 3 > i; i++) h = 3 * I[u++], M = new e.Vector3(B[h++], B[h++], B[h]), C.vertexNormals.push(M);
                                if (x && (c = I[u++], C.color.setHex(L[c])), _)
                                    for (i = 0; 3 > i; i++) c = I[u++], C.vertexColors.push(new e.Color(L[c]));
                                a.faces.push(C)
                            }
                    }

                    function i() {
                        var r = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                        if (t.skinWeights)
                            for (var n = 0, i = t.skinWeights.length; i > n; n += r) {
                                var o = t.skinWeights[n],
                                    s = r > 1 ? t.skinWeights[n + 1] : 0,
                                    u = r > 2 ? t.skinWeights[n + 2] : 0,
                                    l = r > 3 ? t.skinWeights[n + 3] : 0;
                                a.skinWeights.push(new e.Vector4(o, s, u, l))
                            }
                        if (t.skinIndices)
                            for (var n = 0, i = t.skinIndices.length; i > n; n += r) {
                                var c = t.skinIndices[n],
                                    h = r > 1 ? t.skinIndices[n + 1] : 0,
                                    p = r > 2 ? t.skinIndices[n + 2] : 0,
                                    d = r > 3 ? t.skinIndices[n + 3] : 0;
                                a.skinIndices.push(new e.Vector4(c, h, p, d))
                            }
                        a.bones = t.bones, a.bones && a.bones.length > 0 && (a.skinWeights.length !== a.skinIndices.length || a.skinIndices.length !== a.vertices.length) && e.warn("THREE.JSONLoader: When skinning, number of vertices (" + a.vertices.length + "), skinIndices (" + a.skinIndices.length + "), and skinWeights (" + a.skinWeights.length + ") should match."), a.animation = t.animation, a.animations = t.animations
                    }

                    function o(r) {
                        if (void 0 !== t.morphTargets) {
                            var n, i, o, s, u, l;
                            for (n = 0, i = t.morphTargets.length; i > n; n++)
                                for (a.morphTargets[n] = {}, a.morphTargets[n].name = t.morphTargets[n].name, a.morphTargets[n].vertices = [], u = a.morphTargets[n].vertices, l = t.morphTargets[n].vertices, o = 0, s = l.length; s > o; o += 3) {
                                    var c = new e.Vector3;
                                    c.x = l[o] * r, c.y = l[o + 1] * r, c.z = l[o + 2] * r, u.push(c)
                                }
                        }
                        if (void 0 !== t.morphColors) {
                            var n, i, h, p, d, f, m;
                            for (n = 0, i = t.morphColors.length; i > n; n++)
                                for (a.morphColors[n] = {}, a.morphColors[n].name = t.morphColors[n].name, a.morphColors[n].colors = [], d = a.morphColors[n].colors, f = t.morphColors[n].colors, h = 0, p = f.length; p > h; h += 3) m = new e.Color(16755200), m.setRGB(f[h], f[h + 1], f[h + 2]), d.push(m)
                        }
                    }
                    var a = new e.Geometry,
                        s = void 0 !== t.scale ? 1 / t.scale : 1;
                    if (n(s), i(), o(s), a.computeFaceNormals(), a.computeBoundingSphere(), void 0 === t.materials || 0 === t.materials.length) return {
                        geometry: a
                    };
                    var u = this.initMaterials(t.materials, r);
                    return this.needsTangents(u) && a.computeTangents(), {
                        geometry: a,
                        materials: u
                    }
                }, e.LoadingManager = function(e, t, r) {
                    var n = this,
                        i = 0,
                        o = 0;
                    this.onLoad = e, this.onProgress = t, this.onError = r, this.itemStart = function(e) {
                        o++
                    }, this.itemEnd = function(e) {
                        i++, void 0 !== n.onProgress && n.onProgress(e, i, o), i === o && void 0 !== n.onLoad && n.onLoad()
                    }
                }, e.DefaultLoadingManager = new e.LoadingManager, e.BufferGeometryLoader = function(t) {
                    this.manager = void 0 !== t ? t : e.DefaultLoadingManager
                }, e.BufferGeometryLoader.prototype = {
                    constructor: e.BufferGeometryLoader,
                    load: function(t, r, n, i) {
                        var o = this,
                            a = new e.XHRLoader(o.manager);
                        a.setCrossOrigin(this.crossOrigin), a.load(t, function(e) {
                            r(o.parse(JSON.parse(e)))
                        }, n, i)
                    },
                    setCrossOrigin: function(e) {
                        this.crossOrigin = e
                    },
                    parse: function(t) {
                        var r = new e.BufferGeometry,
                            n = t.data.attributes;
                        for (var i in n) {
                            var o = n[i],
                                a = new self[o.type](o.array);
                            r.addAttribute(i, new e.BufferAttribute(a, o.itemSize))
                        }
                        var s = t.data.offsets;
                        void 0 !== s && (r.offsets = JSON.parse(JSON.stringify(s)));
                        var u = t.data.boundingSphere;
                        if (void 0 !== u) {
                            var l = new e.Vector3;
                            void 0 !== u.center && l.fromArray(u.center), r.boundingSphere = new e.Sphere(l, u.radius)
                        }
                        return r
                    }
                }, e.MaterialLoader = function(t) {
                    this.manager = void 0 !== t ? t : e.DefaultLoadingManager
                }, e.MaterialLoader.prototype = {
                    constructor: e.MaterialLoader,
                    load: function(t, r, n, i) {
                        var o = this,
                            a = new e.XHRLoader(o.manager);
                        a.setCrossOrigin(this.crossOrigin), a.load(t, function(e) {
                            r(o.parse(JSON.parse(e)))
                        }, n, i)
                    },
                    setCrossOrigin: function(e) {
                        this.crossOrigin = e
                    },
                    parse: function(t) {
                        var r = new e[t.type];
                        if (void 0 !== t.color && r.color.setHex(t.color), void 0 !== t.emissive && r.emissive.setHex(t.emissive), void 0 !== t.specular && r.specular.setHex(t.specular), void 0 !== t.shininess && (r.shininess = t.shininess), void 0 !== t.uniforms && (r.uniforms = t.uniforms), void 0 !== t.vertexShader && (r.vertexShader = t.vertexShader), void 0 !== t.fragmentShader && (r.fragmentShader = t.fragmentShader), void 0 !== t.vertexColors && (r.vertexColors = t.vertexColors), void 0 !== t.shading && (r.shading = t.shading), void 0 !== t.blending && (r.blending = t.blending), void 0 !== t.side && (r.side = t.side), void 0 !== t.opacity && (r.opacity = t.opacity), void 0 !== t.transparent && (r.transparent = t.transparent), void 0 !== t.wireframe && (r.wireframe = t.wireframe), void 0 !== t.size && (r.size = t.size), void 0 !== t.sizeAttenuation && (r.sizeAttenuation = t.sizeAttenuation), void 0 !== t.materials)
                            for (var n = 0, i = t.materials.length; i > n; n++) r.materials.push(this.parse(t.materials[n]));
                        return r
                    }
                }, e.ObjectLoader = function(t) {
                    this.manager = void 0 !== t ? t : e.DefaultLoadingManager, this.texturePath = ""
                }, e.ObjectLoader.prototype = {
                    constructor: e.ObjectLoader,
                    load: function(t, r, n, i) {
                        "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
                        var o = this,
                            a = new e.XHRLoader(o.manager);
                        a.setCrossOrigin(this.crossOrigin), a.load(t, function(e) {
                            o.parse(JSON.parse(e), r)
                        }, n, i)
                    },
                    setTexturePath: function(e) {
                        this.texturePath = e
                    },
                    setCrossOrigin: function(e) {
                        this.crossOrigin = e
                    },
                    parse: function(e, t) {
                        var r = this.parseGeometries(e.geometries),
                            n = this.parseImages(e.images, function() {
                                void 0 !== t && t(a)
                            }),
                            i = this.parseTextures(e.textures, n),
                            o = this.parseMaterials(e.materials, i),
                            a = this.parseObject(e.object, r, o);
                        return (void 0 === e.images || 0 === e.images.length) && void 0 !== t && t(a), a
                    },
                    parseGeometries: function(t) {
                        var r = {};
                        if (void 0 !== t)
                            for (var n = new e.JSONLoader, i = new e.BufferGeometryLoader, o = 0, a = t.length; a > o; o++) {
                                var s, u = t[o];
                                switch (u.type) {
                                    case "PlaneGeometry":
                                    case "PlaneBufferGeometry":
                                        s = new e[u.type](u.width, u.height, u.widthSegments, u.heightSegments);
                                        break;
                                    case "BoxGeometry":
                                    case "CubeGeometry":
                                        s = new e.BoxGeometry(u.width, u.height, u.depth, u.widthSegments, u.heightSegments, u.depthSegments);
                                        break;
                                    case "CircleGeometry":
                                        s = new e.CircleGeometry(u.radius, u.segments);
                                        break;
                                    case "CylinderGeometry":
                                        s = new e.CylinderGeometry(u.radiusTop, u.radiusBottom, u.height, u.radialSegments, u.heightSegments, u.openEnded);
                                        break;
                                    case "SphereGeometry":
                                        s = new e.SphereGeometry(u.radius, u.widthSegments, u.heightSegments, u.phiStart, u.phiLength, u.thetaStart, u.thetaLength);
                                        break;
                                    case "IcosahedronGeometry":
                                        s = new e.IcosahedronGeometry(u.radius, u.detail);
                                        break;
                                    case "TorusGeometry":
                                        s = new e.TorusGeometry(u.radius, u.tube, u.radialSegments, u.tubularSegments, u.arc);
                                        break;
                                    case "TorusKnotGeometry":
                                        s = new e.TorusKnotGeometry(u.radius, u.tube, u.radialSegments, u.tubularSegments, u.p, u.q, u.heightScale);
                                        break;
                                    case "BufferGeometry":
                                        s = i.parse(u);
                                        break;
                                    case "Geometry":
                                        s = n.parse(u.data).geometry
                                }
                                s.uuid = u.uuid, void 0 !== u.name && (s.name = u.name), r[u.uuid] = s
                            }
                        return r
                    },
                    parseMaterials: function(t, r) {
                        var n = {};
                        if (void 0 !== t)
                            for (var i = function(t) {
                                    return void 0 === r[t] && e.warn("THREE.ObjectLoader: Undefined texture", t), r[t]
                                }, o = new e.MaterialLoader, a = 0, s = t.length; s > a; a++) {
                                var u = t[a],
                                    l = o.parse(u);
                                l.uuid = u.uuid, void 0 !== u.name && (l.name = u.name), void 0 !== u.map && (l.map = i(u.map)), void 0 !== u.bumpMap && (l.bumpMap = i(u.bumpMap), u.bumpScale && (l.bumpScale = new e.Vector2(u.bumpScale, u.bumpScale))), void 0 !== u.alphaMap && (l.alphaMap = i(u.alphaMap)), void 0 !== u.envMap && (l.envMap = i(u.envMap)), void 0 !== u.normalMap && (l.normalMap = i(u.normalMap), u.normalScale && (l.normalScale = new e.Vector2(u.normalScale, u.normalScale))), void 0 !== u.lightMap && (l.lightMap = i(u.lightMap)), void 0 !== u.specularMap && (l.specularMap = i(u.specularMap)), n[u.uuid] = l
                            }
                        return n
                    },
                    parseImages: function(t, r) {
                        var n = this,
                            i = {};
                        if (void 0 !== t && t.length > 0) {
                            var o = new e.LoadingManager(r),
                                a = new e.ImageLoader(o);
                            a.setCrossOrigin(this.crossOrigin);
                            for (var s = function(e) {
                                    return n.manager.itemStart(e), a.load(e, function() {
                                        n.manager.itemEnd(e)
                                    })
                                }, u = 0, l = t.length; l > u; u++) {
                                var c = t[u],
                                    h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.texturePath + c.url;
                                i[c.uuid] = s(h)
                            }
                        }
                        return i
                    },
                    parseTextures: function(t, r) {
                        var n = {};
                        if (void 0 !== t)
                            for (var i = 0, o = t.length; o > i; i++) {
                                var a = t[i];
                                void 0 === a.image && e.warn('THREE.ObjectLoader: No "image" speficied for', a.uuid), void 0 === r[a.image] && e.warn("THREE.ObjectLoader: Undefined image", a.image);
                                var s = new e.Texture(r[a.image]);
                                s.needsUpdate = !0, s.uuid = a.uuid, void 0 !== a.name && (s.name = a.name), void 0 !== a.repeat && (s.repeat = new e.Vector2(a.repeat[0], a.repeat[1])), void 0 !== a.minFilter && (s.minFilter = e[a.minFilter]), void 0 !== a.magFilter && (s.magFilter = e[a.magFilter]), void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy), a.wrap instanceof Array && (s.wrapS = e[a.wrap[0]], s.wrapT = e[a.wrap[1]]), n[a.uuid] = s
                            }
                        return n
                    },
                    parseObject: function() {
                        var t = new e.Matrix4;
                        return function(r, n, i) {
                            var o, a = function(t) {
                                    return void 0 === n[t] && e.warn("THREE.ObjectLoader: Undefined geometry", t), n[t]
                                },
                                s = function(t) {
                                    return void 0 === i[t] && e.warn("THREE.ObjectLoader: Undefined material", t), i[t]
                                };
                            switch (r.type) {
                                case "Scene":
                                    o = new e.Scene;
                                    break;
                                case "PerspectiveCamera":
                                    o = new e.PerspectiveCamera(r.fov, r.aspect, r.near, r.far);
                                    break;
                                case "OrthographicCamera":
                                    o = new e.OrthographicCamera(r.left, r.right, r.top, r.bottom, r.near, r.far);
                                    break;
                                case "AmbientLight":
                                    o = new e.AmbientLight(r.color);
                                    break;
                                case "DirectionalLight":
                                    o = new e.DirectionalLight(r.color, r.intensity);
                                    break;
                                case "PointLight":
                                    o = new e.PointLight(r.color, r.intensity, r.distance, r.decay);
                                    break;
                                case "SpotLight":
                                    o = new e.SpotLight(r.color, r.intensity, r.distance, r.angle, r.exponent, r.decay);
                                    break;
                                case "HemisphereLight":
                                    o = new e.HemisphereLight(r.color, r.groundColor, r.intensity);
                                    break;
                                case "Mesh":
                                    o = new e.Mesh(a(r.geometry), s(r.material));
                                    break;
                                case "Line":
                                    o = new e.Line(a(r.geometry), s(r.material), r.mode);
                                    break;
                                case "PointCloud":
                                    o = new e.PointCloud(a(r.geometry), s(r.material));
                                    break;
                                case "Sprite":
                                    o = new e.Sprite(s(r.material));
                                    break;
                                case "Group":
                                    o = new e.Group;
                                    break;
                                default:
                                    o = new e.Object3D
                            }
                            if (o.uuid = r.uuid, void 0 !== r.name && (o.name = r.name), void 0 !== r.matrix ? (t.fromArray(r.matrix), t.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== r.position && o.position.fromArray(r.position), void 0 !== r.rotation && o.rotation.fromArray(r.rotation), void 0 !== r.scale && o.scale.fromArray(r.scale)), void 0 !== r.visible && (o.visible = r.visible), void 0 !== r.userData && (o.userData = r.userData), void 0 !== r.children)
                                for (var u in r.children) o.add(this.parseObject(r.children[u], n, i));
                            return o
                        }
                    }()
                }, e.TextureLoader = function(t) {
                    this.manager = void 0 !== t ? t : e.DefaultLoadingManager
                }, e.TextureLoader.prototype = {
                    constructor: e.TextureLoader,
                    load: function(t, r, n, i) {
                        var o = this,
                            a = new e.ImageLoader(o.manager);
                        a.setCrossOrigin(this.crossOrigin), a.load(t, function(t) {
                            var n = new e.Texture(t);
                            n.needsUpdate = !0, void 0 !== r && r(n)
                        }, n, i)
                    },
                    setCrossOrigin: function(e) {
                        this.crossOrigin = e
                    }
                }, e.DataTextureLoader = e.BinaryTextureLoader = function() {
                    this._parser = null
                }, e.BinaryTextureLoader.prototype = {
                    constructor: e.BinaryTextureLoader,
                    load: function(t, r, n, i) {
                        var o = this,
                            a = new e.DataTexture,
                            s = new e.XHRLoader;
                        return s.setResponseType("arraybuffer"), s.load(t, function(t) {
                            var n = o._parser(t);
                            n && (void 0 !== n.image ? a.image = n.image : void 0 !== n.data && (a.image.width = n.width, a.image.height = n.height, a.image.data = n.data), a.wrapS = void 0 !== n.wrapS ? n.wrapS : e.ClampToEdgeWrapping, a.wrapT = void 0 !== n.wrapT ? n.wrapT : e.ClampToEdgeWrapping, a.magFilter = void 0 !== n.magFilter ? n.magFilter : e.LinearFilter, a.minFilter = void 0 !== n.minFilter ? n.minFilter : e.LinearMipMapLinearFilter, a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.format && (a.format = n.format), void 0 !== n.type && (a.type = n.type), void 0 !== n.mipmaps && (a.mipmaps = n.mipmaps), 1 === n.mipmapCount && (a.minFilter = e.LinearFilter), a.needsUpdate = !0, r && r(a, n))
                        }, n, i), a
                    }
                }, e.CompressedTextureLoader = function() {
                    this._parser = null
                }, e.CompressedTextureLoader.prototype = {
                    constructor: e.CompressedTextureLoader,
                    load: function(t, r, n) {
                        var i = this,
                            o = [],
                            a = new e.CompressedTexture;
                        a.image = o;
                        var s = new e.XHRLoader;
                        if (s.setResponseType("arraybuffer"), t instanceof Array)
                            for (var u = 0, l = function(n) {
                                    s.load(t[n], function(t) {
                                        var s = i._parser(t, !0);
                                        o[n] = {
                                            width: s.width,
                                            height: s.height,
                                            format: s.format,
                                            mipmaps: s.mipmaps
                                        }, u += 1, 6 === u && (1 == s.mipmapCount && (a.minFilter = e.LinearFilter), a.format = s.format, a.needsUpdate = !0, r && r(a))
                                    })
                                }, c = 0, h = t.length; h > c; ++c) l(c);
                        else s.load(t, function(t) {
                            var n = i._parser(t, !0);
                            if (n.isCubemap)
                                for (var s = n.mipmaps.length / n.mipmapCount, u = 0; s > u; u++) {
                                    o[u] = {
                                        mipmaps: []
                                    };
                                    for (var l = 0; l < n.mipmapCount; l++) o[u].mipmaps.push(n.mipmaps[u * n.mipmapCount + l]), o[u].format = n.format, o[u].width = n.width, o[u].height = n.height
                                } else a.image.width = n.width, a.image.height = n.height, a.mipmaps = n.mipmaps;
                            1 === n.mipmapCount && (a.minFilter = e.LinearFilter), a.format = n.format, a.needsUpdate = !0, r && r(a)
                        });
                        return a
                    }
                }, e.Material = function() {
                    Object.defineProperty(this, "id", {
                        value: e.MaterialIdCount++
                    }), this.uuid = e.Math.generateUUID(), this.name = "", this.type = "Material", this.side = e.FrontSide, this.opacity = 1, this.transparent = !1, this.blending = e.NormalBlending, this.blendSrc = e.SrcAlphaFactor, this.blendDst = e.OneMinusSrcAlphaFactor, this.blendEquation = e.AddEquation, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthTest = !0, this.depthWrite = !0, this.colorWrite = !0, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.alphaTest = 0, this.overdraw = 0, this.visible = !0, this._needsUpdate = !0
                }, e.Material.prototype = {
                    constructor: e.Material,
                    get needsUpdate() {
                        return this._needsUpdate
                    },
                    set needsUpdate(e) {
                        e === !0 && this.update(), this._needsUpdate = e
                    },
                    setValues: function(t) {
                        if (void 0 !== t)
                            for (var r in t) {
                                var n = t[r];
                                if (void 0 !== n) {
                                    if (r in this) {
                                        var i = this[r];
                                        i instanceof e.Color ? i.set(n) : i instanceof e.Vector3 && n instanceof e.Vector3 ? i.copy(n) : "overdraw" == r ? this[r] = Number(n) : this[r] = n
                                    }
                                } else e.warn("THREE.Material: '" + r + "' parameter is undefined.")
                            }
                    },
                    toJSON: function() {
                        var t = {
                            metadata: {
                                version: 4.2,
                                type: "material",
                                generator: "MaterialExporter"
                            },
                            uuid: this.uuid,
                            type: this.type
                        };
                        return "" !== this.name && (t.name = this.name), this instanceof e.MeshBasicMaterial ? (t.color = this.color.getHex(), this.vertexColors !== e.NoColors && (t.vertexColors = this.vertexColors), this.blending !== e.NormalBlending && (t.blending = this.blending), this.side !== e.FrontSide && (t.side = this.side)) : this instanceof e.MeshLambertMaterial ? (t.color = this.color.getHex(), t.emissive = this.emissive.getHex(), this.vertexColors !== e.NoColors && (t.vertexColors = this.vertexColors), this.shading !== e.SmoothShading && (t.shading = this.shading), this.blending !== e.NormalBlending && (t.blending = this.blending), this.side !== e.FrontSide && (t.side = this.side)) : this instanceof e.MeshPhongMaterial ? (t.color = this.color.getHex(), t.emissive = this.emissive.getHex(), t.specular = this.specular.getHex(), t.shininess = this.shininess, this.vertexColors !== e.NoColors && (t.vertexColors = this.vertexColors), this.shading !== e.SmoothShading && (t.shading = this.shading), this.blending !== e.NormalBlending && (t.blending = this.blending), this.side !== e.FrontSide && (t.side = this.side)) : this instanceof e.MeshNormalMaterial ? (this.blending !== e.NormalBlending && (t.blending = this.blending), this.side !== e.FrontSide && (t.side = this.side)) : this instanceof e.MeshDepthMaterial ? (this.blending !== e.NormalBlending && (t.blending = this.blending), this.side !== e.FrontSide && (t.side = this.side)) : this instanceof e.PointCloudMaterial ? (t.size = this.size, t.sizeAttenuation = this.sizeAttenuation, t.color = this.color.getHex(), this.vertexColors !== e.NoColors && (t.vertexColors = this.vertexColors), this.blending !== e.NormalBlending && (t.blending = this.blending)) : this instanceof e.ShaderMaterial ? (t.uniforms = this.uniforms, t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader) : this instanceof e.SpriteMaterial && (t.color = this.color.getHex()), this.opacity < 1 && (t.opacity = this.opacity), this.transparent !== !1 && (t.transparent = this.transparent), this.wireframe !== !1 && (t.wireframe = this.wireframe), t
                    },
                    clone: function(t) {
                        return void 0 === t && (t = new e.Material), t.name = this.name, t.side = this.side, t.opacity = this.opacity, t.transparent = this.transparent, t.blending = this.blending, t.blendSrc = this.blendSrc, t.blendDst = this.blendDst, t.blendEquation = this.blendEquation, t.blendSrcAlpha = this.blendSrcAlpha, t.blendDstAlpha = this.blendDstAlpha, t.blendEquationAlpha = this.blendEquationAlpha, t.depthTest = this.depthTest, t.depthWrite = this.depthWrite, t.polygonOffset = this.polygonOffset, t.polygonOffsetFactor = this.polygonOffsetFactor, t.polygonOffsetUnits = this.polygonOffsetUnits, t.alphaTest = this.alphaTest, t.overdraw = this.overdraw, t.visible = this.visible, t
                    },
                    update: function() {
                        this.dispatchEvent({
                            type: "update"
                        })
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }, e.EventDispatcher.prototype.apply(e.Material.prototype), e.MaterialIdCount = 0, e.LineBasicMaterial = function(t) {
                    e.Material.call(this), this.type = "LineBasicMaterial", this.color = new e.Color(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.vertexColors = e.NoColors, this.fog = !0, this.setValues(t)
                }, e.LineBasicMaterial.prototype = Object.create(e.Material.prototype), e.LineBasicMaterial.prototype.constructor = e.LineBasicMaterial, e.LineBasicMaterial.prototype.clone = function() {
                    var t = new e.LineBasicMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.linewidth = this.linewidth, t.linecap = this.linecap, t.linejoin = this.linejoin, t.vertexColors = this.vertexColors, t.fog = this.fog, t
                }, e.LineDashedMaterial = function(t) {
                    e.Material.call(this), this.type = "LineDashedMaterial", this.color = new e.Color(16777215), this.linewidth = 1, this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.vertexColors = !1, this.fog = !0, this.setValues(t)
                }, e.LineDashedMaterial.prototype = Object.create(e.Material.prototype), e.LineDashedMaterial.prototype.constructor = e.LineDashedMaterial, e.LineDashedMaterial.prototype.clone = function() {
                    var t = new e.LineDashedMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.linewidth = this.linewidth, t.scale = this.scale, t.dashSize = this.dashSize, t.gapSize = this.gapSize, t.vertexColors = this.vertexColors, t.fog = this.fog, t
                }, e.MeshBasicMaterial = function(t) {
                    e.Material.call(this), this.type = "MeshBasicMaterial", this.color = new e.Color(16777215), this.map = null, this.lightMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = e.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = e.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = e.NoColors, this.skinning = !1, this.morphTargets = !1, this.setValues(t)
                }, e.MeshBasicMaterial.prototype = Object.create(e.Material.prototype), e.MeshBasicMaterial.prototype.constructor = e.MeshBasicMaterial, e.MeshBasicMaterial.prototype.clone = function() {
                    var t = new e.MeshBasicMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.map = this.map, t.lightMap = this.lightMap, t.specularMap = this.specularMap, t.alphaMap = this.alphaMap, t.envMap = this.envMap, t.combine = this.combine, t.reflectivity = this.reflectivity, t.refractionRatio = this.refractionRatio, t.fog = this.fog, t.shading = this.shading, t.wireframe = this.wireframe, t.wireframeLinewidth = this.wireframeLinewidth, t.wireframeLinecap = this.wireframeLinecap, t.wireframeLinejoin = this.wireframeLinejoin, t.vertexColors = this.vertexColors, t.skinning = this.skinning, t.morphTargets = this.morphTargets, t
                }, e.MeshLambertMaterial = function(t) {
                    e.Material.call(this), this.type = "MeshLambertMaterial", this.color = new e.Color(16777215), this.emissive = new e.Color(0), this.wrapAround = !1, this.wrapRGB = new e.Vector3(1, 1, 1), this.map = null, this.lightMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = e.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = e.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = e.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
                }, e.MeshLambertMaterial.prototype = Object.create(e.Material.prototype), e.MeshLambertMaterial.prototype.constructor = e.MeshLambertMaterial, e.MeshLambertMaterial.prototype.clone = function() {
                    var t = new e.MeshLambertMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.emissive.copy(this.emissive), t.wrapAround = this.wrapAround, t.wrapRGB.copy(this.wrapRGB), t.map = this.map, t.lightMap = this.lightMap, t.specularMap = this.specularMap, t.alphaMap = this.alphaMap, t.envMap = this.envMap, t.combine = this.combine, t.reflectivity = this.reflectivity, t.refractionRatio = this.refractionRatio, t.fog = this.fog, t.shading = this.shading, t.wireframe = this.wireframe, t.wireframeLinewidth = this.wireframeLinewidth, t.wireframeLinecap = this.wireframeLinecap, t.wireframeLinejoin = this.wireframeLinejoin, t.vertexColors = this.vertexColors, t.skinning = this.skinning, t.morphTargets = this.morphTargets, t.morphNormals = this.morphNormals, t
                }, e.MeshPhongMaterial = function(t) {
                    e.Material.call(this), this.type = "MeshPhongMaterial", this.color = new e.Color(16777215), this.emissive = new e.Color(0), this.specular = new e.Color(1118481), this.shininess = 30, this.metal = !1, this.wrapAround = !1, this.wrapRGB = new e.Vector3(1, 1, 1), this.map = null, this.lightMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new e.Vector2(1, 1), this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = e.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = e.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = e.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(t)
                }, e.MeshPhongMaterial.prototype = Object.create(e.Material.prototype), e.MeshPhongMaterial.prototype.constructor = e.MeshPhongMaterial, e.MeshPhongMaterial.prototype.clone = function() {
                    var t = new e.MeshPhongMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.emissive.copy(this.emissive), t.specular.copy(this.specular), t.shininess = this.shininess, t.metal = this.metal, t.wrapAround = this.wrapAround, t.wrapRGB.copy(this.wrapRGB), t.map = this.map, t.lightMap = this.lightMap, t.bumpMap = this.bumpMap, t.bumpScale = this.bumpScale, t.normalMap = this.normalMap, t.normalScale.copy(this.normalScale), t.specularMap = this.specularMap, t.alphaMap = this.alphaMap, t.envMap = this.envMap, t.combine = this.combine, t.reflectivity = this.reflectivity, t.refractionRatio = this.refractionRatio, t.fog = this.fog, t.shading = this.shading, t.wireframe = this.wireframe, t.wireframeLinewidth = this.wireframeLinewidth, t.wireframeLinecap = this.wireframeLinecap, t.wireframeLinejoin = this.wireframeLinejoin, t.vertexColors = this.vertexColors, t.skinning = this.skinning, t.morphTargets = this.morphTargets, t.morphNormals = this.morphNormals, t
                }, e.MeshDepthMaterial = function(t) {
                    e.Material.call(this), this.type = "MeshDepthMaterial", this.morphTargets = !1, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(t)
                }, e.MeshDepthMaterial.prototype = Object.create(e.Material.prototype), e.MeshDepthMaterial.prototype.constructor = e.MeshDepthMaterial, e.MeshDepthMaterial.prototype.clone = function() {
                    var t = new e.MeshDepthMaterial;
                    return e.Material.prototype.clone.call(this, t), t.wireframe = this.wireframe, t.wireframeLinewidth = this.wireframeLinewidth, t
                }, e.MeshNormalMaterial = function(t) {
                    e.Material.call(this, t), this.type = "MeshNormalMaterial", this.wireframe = !1, this.wireframeLinewidth = 1, this.morphTargets = !1, this.setValues(t)
                }, e.MeshNormalMaterial.prototype = Object.create(e.Material.prototype), e.MeshNormalMaterial.prototype.constructor = e.MeshNormalMaterial, e.MeshNormalMaterial.prototype.clone = function() {
                    var t = new e.MeshNormalMaterial;
                    return e.Material.prototype.clone.call(this, t), t.wireframe = this.wireframe, t.wireframeLinewidth = this.wireframeLinewidth, t
                }, e.MeshFaceMaterial = function(t) {
                    this.uuid = e.Math.generateUUID(), this.type = "MeshFaceMaterial", this.materials = t instanceof Array ? t : []
                }, e.MeshFaceMaterial.prototype = {
                    constructor: e.MeshFaceMaterial,
                    toJSON: function() {
                        for (var e = {
                                metadata: {
                                    version: 4.2,
                                    type: "material",
                                    generator: "MaterialExporter"
                                },
                                uuid: this.uuid,
                                type: this.type,
                                materials: []
                            }, t = 0, r = this.materials.length; r > t; t++) e.materials.push(this.materials[t].toJSON());
                        return e
                    },
                    clone: function() {
                        for (var t = new e.MeshFaceMaterial, r = 0; r < this.materials.length; r++) t.materials.push(this.materials[r].clone());
                        return t
                    }
                }, e.PointCloudMaterial = function(t) {
                    e.Material.call(this), this.type = "PointCloudMaterial", this.color = new e.Color(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.vertexColors = e.NoColors, this.fog = !0, this.setValues(t)
                }, e.PointCloudMaterial.prototype = Object.create(e.Material.prototype), e.PointCloudMaterial.prototype.constructor = e.PointCloudMaterial, e.PointCloudMaterial.prototype.clone = function() {
                    var t = new e.PointCloudMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.map = this.map, t.size = this.size, t.sizeAttenuation = this.sizeAttenuation, t.vertexColors = this.vertexColors, t.fog = this.fog, t
                }, e.ParticleBasicMaterial = function(t) {
                    return e.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."), new e.PointCloudMaterial(t)
                }, e.ParticleSystemMaterial = function(t) {
                    return e.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."), new e.PointCloudMaterial(t)
                }, e.ShaderMaterial = function(t) {
                    e.Material.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.attributes = null, this.vertexShader = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.shading = e.SmoothShading, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.vertexColors = e.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.defaultAttributeValues = {
                        color: [1, 1, 1],
                        uv: [0, 0],
                        uv2: [0, 0]
                    }, this.index0AttributeName = void 0, this.setValues(t)
                }, e.ShaderMaterial.prototype = Object.create(e.Material.prototype),
                e.ShaderMaterial.prototype.constructor = e.ShaderMaterial, e.ShaderMaterial.prototype.clone = function() {
                    var t = new e.ShaderMaterial;
                    return e.Material.prototype.clone.call(this, t), t.fragmentShader = this.fragmentShader, t.vertexShader = this.vertexShader, t.uniforms = e.UniformsUtils.clone(this.uniforms), t.attributes = this.attributes, t.defines = this.defines, t.shading = this.shading, t.wireframe = this.wireframe, t.wireframeLinewidth = this.wireframeLinewidth, t.fog = this.fog, t.lights = this.lights, t.vertexColors = this.vertexColors, t.skinning = this.skinning, t.morphTargets = this.morphTargets, t.morphNormals = this.morphNormals, t
                }, e.RawShaderMaterial = function(t) {
                    e.ShaderMaterial.call(this, t), this.type = "RawShaderMaterial"
                }, e.RawShaderMaterial.prototype = Object.create(e.ShaderMaterial.prototype), e.RawShaderMaterial.prototype.constructor = e.RawShaderMaterial, e.RawShaderMaterial.prototype.clone = function() {
                    var t = new e.RawShaderMaterial;
                    return e.ShaderMaterial.prototype.clone.call(this, t), t
                }, e.SpriteMaterial = function(t) {
                    e.Material.call(this), this.type = "SpriteMaterial", this.color = new e.Color(16777215), this.map = null, this.rotation = 0, this.fog = !1, this.setValues(t)
                }, e.SpriteMaterial.prototype = Object.create(e.Material.prototype), e.SpriteMaterial.prototype.constructor = e.SpriteMaterial, e.SpriteMaterial.prototype.clone = function() {
                    var t = new e.SpriteMaterial;
                    return e.Material.prototype.clone.call(this, t), t.color.copy(this.color), t.map = this.map, t.rotation = this.rotation, t.fog = this.fog, t
                }, e.Texture = function(t, r, n, i, o, a, s, u, l) {
                    Object.defineProperty(this, "id", {
                        value: e.TextureIdCount++
                    }), this.uuid = e.Math.generateUUID(), this.name = "", this.sourceFile = "", this.image = void 0 !== t ? t : e.Texture.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== r ? r : e.Texture.DEFAULT_MAPPING, this.wrapS = void 0 !== n ? n : e.ClampToEdgeWrapping, this.wrapT = void 0 !== i ? i : e.ClampToEdgeWrapping, this.magFilter = void 0 !== o ? o : e.LinearFilter, this.minFilter = void 0 !== a ? a : e.LinearMipMapLinearFilter, this.anisotropy = void 0 !== l ? l : 1, this.format = void 0 !== s ? s : e.RGBAFormat, this.type = void 0 !== u ? u : e.UnsignedByteType, this.offset = new e.Vector2(0, 0), this.repeat = new e.Vector2(1, 1), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this._needsUpdate = !1, this.onUpdate = null
                }, e.Texture.DEFAULT_IMAGE = void 0, e.Texture.DEFAULT_MAPPING = e.UVMapping, e.Texture.prototype = {
                    constructor: e.Texture,
                    get needsUpdate() {
                        return this._needsUpdate
                    },
                    set needsUpdate(e) {
                        e === !0 && this.update(), this._needsUpdate = e
                    },
                    clone: function(t) {
                        return void 0 === t && (t = new e.Texture), t.image = this.image, t.mipmaps = this.mipmaps.slice(0), t.mapping = this.mapping, t.wrapS = this.wrapS, t.wrapT = this.wrapT, t.magFilter = this.magFilter, t.minFilter = this.minFilter, t.anisotropy = this.anisotropy, t.format = this.format, t.type = this.type, t.offset.copy(this.offset), t.repeat.copy(this.repeat), t.generateMipmaps = this.generateMipmaps, t.premultiplyAlpha = this.premultiplyAlpha, t.flipY = this.flipY, t.unpackAlignment = this.unpackAlignment, t
                    },
                    update: function() {
                        this.dispatchEvent({
                            type: "update"
                        })
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }, e.EventDispatcher.prototype.apply(e.Texture.prototype), e.TextureIdCount = 0, e.CubeTexture = function(t, r, n, i, o, a, s, u, l) {
                    r = void 0 !== r ? r : e.CubeReflectionMapping, e.Texture.call(this, t, r, n, i, o, a, s, u, l), this.images = t
                }, e.CubeTexture.prototype = Object.create(e.Texture.prototype), e.CubeTexture.prototype.constructor = e.CubeTexture, e.CubeTexture.clone = function(t) {
                    return void 0 === t && (t = new e.CubeTexture), e.Texture.prototype.clone.call(this, t), t.images = this.images, t
                }, e.CompressedTexture = function(t, r, n, i, o, a, s, u, l, c, h) {
                    e.Texture.call(this, null, a, s, u, l, c, i, o, h), this.image = {
                        width: r,
                        height: n
                    }, this.mipmaps = t, this.flipY = !1, this.generateMipmaps = !1
                }, e.CompressedTexture.prototype = Object.create(e.Texture.prototype), e.CompressedTexture.prototype.constructor = e.CompressedTexture, e.CompressedTexture.prototype.clone = function() {
                    var t = new e.CompressedTexture;
                    return e.Texture.prototype.clone.call(this, t), t
                }, e.DataTexture = function(t, r, n, i, o, a, s, u, l, c, h) {
                    e.Texture.call(this, null, a, s, u, l, c, i, o, h), this.image = {
                        data: t,
                        width: r,
                        height: n
                    }
                }, e.DataTexture.prototype = Object.create(e.Texture.prototype), e.DataTexture.prototype.constructor = e.DataTexture, e.DataTexture.prototype.clone = function() {
                    var t = new e.DataTexture;
                    return e.Texture.prototype.clone.call(this, t), t
                }, e.VideoTexture = function(t, r, n, i, o, a, s, u, l) {
                    e.Texture.call(this, t, r, n, i, o, a, s, u, l), this.generateMipmaps = !1;
                    var c = this,
                        h = function() {
                            requestAnimationFrame(h), t.readyState === t.HAVE_ENOUGH_DATA && (c.needsUpdate = !0)
                        };
                    h()
                }, e.VideoTexture.prototype = Object.create(e.Texture.prototype), e.VideoTexture.prototype.constructor = e.VideoTexture, e.Group = function() {
                    e.Object3D.call(this), this.type = "Group"
                }, e.Group.prototype = Object.create(e.Object3D.prototype), e.Group.prototype.constructor = e.Group, e.PointCloud = function(t, r) {
                    e.Object3D.call(this), this.type = "PointCloud", this.geometry = void 0 !== t ? t : new e.Geometry, this.material = void 0 !== r ? r : new e.PointCloudMaterial({
                        color: 16777215 * Math.random()
                    })
                }, e.PointCloud.prototype = Object.create(e.Object3D.prototype), e.PointCloud.prototype.constructor = e.PointCloud, e.PointCloud.prototype.raycast = function() {
                    var t = new e.Matrix4,
                        r = new e.Ray;
                    return function(n, i) {
                        var o = this,
                            a = o.geometry,
                            s = n.params.PointCloud.threshold;
                        if (t.getInverse(this.matrixWorld), r.copy(n.ray).applyMatrix4(t), null === a.boundingBox || r.isIntersectionBox(a.boundingBox) !== !1) {
                            var u = s / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                l = new e.Vector3,
                                c = function(e, t) {
                                    var a = r.distanceToPoint(e);
                                    if (u > a) {
                                        var s = r.closestPointToPoint(e);
                                        s.applyMatrix4(o.matrixWorld);
                                        var l = n.ray.origin.distanceTo(s);
                                        i.push({
                                            distance: l,
                                            distanceToRay: a,
                                            point: s.clone(),
                                            index: t,
                                            face: null,
                                            object: o
                                        })
                                    }
                                };
                            if (a instanceof e.BufferGeometry) {
                                var h = a.attributes,
                                    p = h.position.array;
                                if (void 0 !== h.index) {
                                    var d = h.index.array,
                                        f = a.offsets;
                                    if (0 === f.length) {
                                        var m = {
                                            start: 0,
                                            count: d.length,
                                            index: 0
                                        };
                                        f = [m]
                                    }
                                    for (var v = 0, g = f.length; g > v; ++v)
                                        for (var y = f[v].start, b = f[v].count, x = f[v].index, _ = y, w = y + b; w > _; _++) {
                                            var C = x + d[_];
                                            l.fromArray(p, 3 * C), c(l, C)
                                        }
                                } else
                                    for (var E = p.length / 3, _ = 0; E > _; _++) l.set(p[3 * _], p[3 * _ + 1], p[3 * _ + 2]), c(l, _)
                            } else
                                for (var S = this.geometry.vertices, _ = 0; _ < S.length; _++) c(S[_], _)
                        }
                    }
                }(), e.PointCloud.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.PointCloud(this.geometry, this.material)), e.Object3D.prototype.clone.call(this, t), t
                }, e.ParticleSystem = function(t, r) {
                    return e.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."), new e.PointCloud(t, r)
                }, e.Line = function(t, r, n) {
                    e.Object3D.call(this), this.type = "Line", this.geometry = void 0 !== t ? t : new e.Geometry, this.material = void 0 !== r ? r : new e.LineBasicMaterial({
                        color: 16777215 * Math.random()
                    }), this.mode = void 0 !== n ? n : e.LineStrip
                }, e.LineStrip = 0, e.LinePieces = 1, e.Line.prototype = Object.create(e.Object3D.prototype), e.Line.prototype.constructor = e.Line, e.Line.prototype.raycast = function() {
                    var t = new e.Matrix4,
                        r = new e.Ray,
                        n = new e.Sphere;
                    return function(i, o) {
                        var a = i.linePrecision,
                            s = a * a,
                            u = this.geometry;
                        if (null === u.boundingSphere && u.computeBoundingSphere(), n.copy(u.boundingSphere), n.applyMatrix4(this.matrixWorld), i.ray.isIntersectionSphere(n) !== !1) {
                            t.getInverse(this.matrixWorld), r.copy(i.ray).applyMatrix4(t);
                            var l = new e.Vector3,
                                c = new e.Vector3,
                                h = new e.Vector3,
                                p = new e.Vector3,
                                d = this.mode === e.LineStrip ? 1 : 2;
                            if (u instanceof e.BufferGeometry) {
                                var f = u.attributes;
                                if (void 0 !== f.index) {
                                    var m = f.index.array,
                                        v = f.position.array,
                                        g = u.offsets;
                                    0 === g.length && (g = [{
                                        start: 0,
                                        count: m.length,
                                        index: 0
                                    }]);
                                    for (var y = 0; y < g.length; y++)
                                        for (var b = g[y].start, x = g[y].count, _ = g[y].index, w = b; b + x - 1 > w; w += d) {
                                            var C = _ + m[w],
                                                E = _ + m[w + 1];
                                            l.fromArray(v, 3 * C), c.fromArray(v, 3 * E);
                                            var S = r.distanceSqToSegment(l, c, p, h);
                                            if (!(S > s)) {
                                                var T = r.origin.distanceTo(p);
                                                T < i.near || T > i.far || o.push({
                                                    distance: T,
                                                    point: h.clone().applyMatrix4(this.matrixWorld),
                                                    index: w,
                                                    offsetIndex: y,
                                                    face: null,
                                                    faceIndex: null,
                                                    object: this
                                                })
                                            }
                                        }
                                } else
                                    for (var v = f.position.array, w = 0; w < v.length / 3 - 1; w += d) {
                                        l.fromArray(v, 3 * w), c.fromArray(v, 3 * w + 3);
                                        var S = r.distanceSqToSegment(l, c, p, h);
                                        if (!(S > s)) {
                                            var T = r.origin.distanceTo(p);
                                            T < i.near || T > i.far || o.push({
                                                distance: T,
                                                point: h.clone().applyMatrix4(this.matrixWorld),
                                                index: w,
                                                face: null,
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    }
                            } else if (u instanceof e.Geometry)
                                for (var M = u.vertices, A = M.length, w = 0; A - 1 > w; w += d) {
                                    var S = r.distanceSqToSegment(M[w], M[w + 1], p, h);
                                    if (!(S > s)) {
                                        var T = r.origin.distanceTo(p);
                                        T < i.near || T > i.far || o.push({
                                            distance: T,
                                            point: h.clone().applyMatrix4(this.matrixWorld),
                                            index: w,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        }
                    }
                }(), e.Line.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.Line(this.geometry, this.material, this.mode)), e.Object3D.prototype.clone.call(this, t), t
                }, e.Mesh = function(t, r) {
                    e.Object3D.call(this), this.type = "Mesh", this.geometry = void 0 !== t ? t : new e.Geometry, this.material = void 0 !== r ? r : new e.MeshBasicMaterial({
                        color: 16777215 * Math.random()
                    }), this.updateMorphTargets()
                }, e.Mesh.prototype = Object.create(e.Object3D.prototype), e.Mesh.prototype.constructor = e.Mesh, e.Mesh.prototype.updateMorphTargets = function() {
                    if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
                        this.morphTargetBase = -1, this.morphTargetForcedOrder = [], this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                        for (var e = 0, t = this.geometry.morphTargets.length; t > e; e++) this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[e].name] = e
                    }
                }, e.Mesh.prototype.getMorphTargetIndexByName = function(t) {
                    return void 0 !== this.morphTargetDictionary[t] ? this.morphTargetDictionary[t] : (e.warn("THREE.Mesh.getMorphTargetIndexByName: morph target " + t + " does not exist. Returning 0."), 0)
                }, e.Mesh.prototype.raycast = function() {
                    var t = new e.Matrix4,
                        r = new e.Ray,
                        n = new e.Sphere,
                        i = new e.Vector3,
                        o = new e.Vector3,
                        a = new e.Vector3;
                    return function(s, u) {
                        var l = this.geometry;
                        if (null === l.boundingSphere && l.computeBoundingSphere(), n.copy(l.boundingSphere), n.applyMatrix4(this.matrixWorld), s.ray.isIntersectionSphere(n) !== !1 && (t.getInverse(this.matrixWorld), r.copy(s.ray).applyMatrix4(t), null === l.boundingBox || r.isIntersectionBox(l.boundingBox) !== !1))
                            if (l instanceof e.BufferGeometry) {
                                var c = this.material;
                                if (void 0 === c) return;
                                var h, p, d, f = l.attributes,
                                    m = s.precision;
                                if (void 0 !== f.index) {
                                    var v = f.index.array,
                                        g = f.position.array,
                                        y = l.offsets;
                                    0 === y.length && (y = [{
                                        start: 0,
                                        count: v.length,
                                        index: 0
                                    }]);
                                    for (var b = 0, x = y.length; x > b; ++b)
                                        for (var _ = y[b].start, w = y[b].count, C = y[b].index, E = _, S = _ + w; S > E; E += 3) {
                                            if (h = C + v[E], p = C + v[E + 1], d = C + v[E + 2], i.fromArray(g, 3 * h), o.fromArray(g, 3 * p), a.fromArray(g, 3 * d), c.side === e.BackSide) var T = r.intersectTriangle(a, o, i, !0);
                                            else var T = r.intersectTriangle(i, o, a, c.side !== e.DoubleSide);
                                            if (null !== T) {
                                                T.applyMatrix4(this.matrixWorld);
                                                var M = s.ray.origin.distanceTo(T);
                                                m > M || M < s.near || M > s.far || u.push({
                                                    distance: M,
                                                    point: T,
                                                    face: new e.Face3(h, p, d, e.Triangle.normal(i, o, a)),
                                                    faceIndex: null,
                                                    object: this
                                                })
                                            }
                                        }
                                } else
                                    for (var g = f.position.array, E = 0, A = 0, S = g.length; S > E; E += 3, A += 9) {
                                        if (h = E, p = E + 1, d = E + 2, i.fromArray(g, A), o.fromArray(g, A + 3), a.fromArray(g, A + 6), c.side === e.BackSide) var T = r.intersectTriangle(a, o, i, !0);
                                        else var T = r.intersectTriangle(i, o, a, c.side !== e.DoubleSide);
                                        if (null !== T) {
                                            T.applyMatrix4(this.matrixWorld);
                                            var M = s.ray.origin.distanceTo(T);
                                            m > M || M < s.near || M > s.far || u.push({
                                                distance: M,
                                                point: T,
                                                face: new e.Face3(h, p, d, e.Triangle.normal(i, o, a)),
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    }
                            } else if (l instanceof e.Geometry)
                            for (var h, p, d, P = this.material instanceof e.MeshFaceMaterial, R = P === !0 ? this.material.materials : null, m = s.precision, k = l.vertices, I = 0, D = l.faces.length; D > I; I++) {
                                var B = l.faces[I],
                                    c = P === !0 ? R[B.materialIndex] : this.material;
                                if (void 0 !== c) {
                                    if (h = k[B.a], p = k[B.b], d = k[B.c], c.morphTargets === !0) {
                                        var L = l.morphTargets,
                                            V = this.morphTargetInfluences;
                                        i.set(0, 0, 0), o.set(0, 0, 0), a.set(0, 0, 0);
                                        for (var N = 0, O = L.length; O > N; N++) {
                                            var F = V[N];
                                            if (0 !== F) {
                                                var U = L[N].vertices;
                                                i.x += (U[B.a].x - h.x) * F, i.y += (U[B.a].y - h.y) * F, i.z += (U[B.a].z - h.z) * F, o.x += (U[B.b].x - p.x) * F, o.y += (U[B.b].y - p.y) * F, o.z += (U[B.b].z - p.z) * F, a.x += (U[B.c].x - d.x) * F, a.y += (U[B.c].y - d.y) * F, a.z += (U[B.c].z - d.z) * F
                                            }
                                        }
                                        i.add(h), o.add(p), a.add(d), h = i, p = o, d = a
                                    }
                                    if (c.side === e.BackSide) var T = r.intersectTriangle(d, p, h, !0);
                                    else var T = r.intersectTriangle(h, p, d, c.side !== e.DoubleSide);
                                    if (null !== T) {
                                        T.applyMatrix4(this.matrixWorld);
                                        var M = s.ray.origin.distanceTo(T);
                                        m > M || M < s.near || M > s.far || u.push({
                                            distance: M,
                                            point: T,
                                            face: B,
                                            faceIndex: I,
                                            object: this
                                        })
                                    }
                                }
                            }
                    }
                }(), e.Mesh.prototype.clone = function(t, r) {
                    return void 0 === t && (t = new e.Mesh(this.geometry, this.material)), e.Object3D.prototype.clone.call(this, t, r), t
                }, e.Bone = function(t) {
                    e.Object3D.call(this), this.type = "Bone", this.skin = t
                }, e.Bone.prototype = Object.create(e.Object3D.prototype), e.Bone.prototype.constructor = e.Bone, e.Skeleton = function(t, r, n) {
                    if (this.useVertexTexture = void 0 !== n ? n : !0, this.identityMatrix = new e.Matrix4, t = t || [], this.bones = t.slice(0), this.useVertexTexture) {
                        var i;
                        i = this.bones.length > 256 ? 64 : this.bones.length > 64 ? 32 : this.bones.length > 16 ? 16 : 8, this.boneTextureWidth = i, this.boneTextureHeight = i, this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new e.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, e.RGBAFormat, e.FloatType), this.boneTexture.minFilter = e.NearestFilter, this.boneTexture.magFilter = e.NearestFilter, this.boneTexture.generateMipmaps = !1, this.boneTexture.flipY = !1
                    } else this.boneMatrices = new Float32Array(16 * this.bones.length);
                    if (void 0 === r) this.calculateInverses();
                    else if (this.bones.length === r.length) this.boneInverses = r.slice(0);
                    else {
                        e.warn("THREE.Skeleton bonInverses is the wrong length."), this.boneInverses = [];
                        for (var o = 0, a = this.bones.length; a > o; o++) this.boneInverses.push(new e.Matrix4)
                    }
                }, e.Skeleton.prototype.calculateInverses = function() {
                    this.boneInverses = [];
                    for (var t = 0, r = this.bones.length; r > t; t++) {
                        var n = new e.Matrix4;
                        this.bones[t] && n.getInverse(this.bones[t].matrixWorld), this.boneInverses.push(n)
                    }
                }, e.Skeleton.prototype.pose = function() {
                    for (var e, t = 0, r = this.bones.length; r > t; t++) e = this.bones[t], e && e.matrixWorld.getInverse(this.boneInverses[t]);
                    for (var t = 0, r = this.bones.length; r > t; t++) e = this.bones[t], e && (e.parent ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale))
                }, e.Skeleton.prototype.update = function() {
                    var t = new e.Matrix4;
                    return function() {
                        for (var e = 0, r = this.bones.length; r > e; e++) {
                            var n = this.bones[e] ? this.bones[e].matrixWorld : this.identityMatrix;
                            t.multiplyMatrices(n, this.boneInverses[e]), t.flattenToArrayOffset(this.boneMatrices, 16 * e)
                        }
                        this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
                    }
                }(), e.SkinnedMesh = function(t, r, n) {
                    e.Mesh.call(this, t, r), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new e.Matrix4, this.bindMatrixInverse = new e.Matrix4;
                    var i = [];
                    if (this.geometry && void 0 !== this.geometry.bones) {
                        for (var o, a, s, u, l, c = 0, h = this.geometry.bones.length; h > c; ++c) a = this.geometry.bones[c], s = a.pos, u = a.rotq, l = a.scl, o = new e.Bone(this), i.push(o), o.name = a.name, o.position.set(s[0], s[1], s[2]), o.quaternion.set(u[0], u[1], u[2], u[3]), void 0 !== l ? o.scale.set(l[0], l[1], l[2]) : o.scale.set(1, 1, 1);
                        for (var c = 0, h = this.geometry.bones.length; h > c; ++c) a = this.geometry.bones[c], -1 !== a.parent ? i[a.parent].add(i[c]) : this.add(i[c])
                    }
                    this.normalizeSkinWeights(), this.updateMatrixWorld(!0), this.bind(new e.Skeleton(i, void 0, n))
                }, e.SkinnedMesh.prototype = Object.create(e.Mesh.prototype), e.SkinnedMesh.prototype.constructor = e.SkinnedMesh, e.SkinnedMesh.prototype.bind = function(e, t) {
                    this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t)
                }, e.SkinnedMesh.prototype.pose = function() {
                    this.skeleton.pose()
                }, e.SkinnedMesh.prototype.normalizeSkinWeights = function() {
                    if (this.geometry instanceof e.Geometry)
                        for (var t = 0; t < this.geometry.skinIndices.length; t++) {
                            var r = this.geometry.skinWeights[t],
                                n = 1 / r.lengthManhattan();
                            n !== 1 / 0 ? r.multiplyScalar(n) : r.set(1)
                        }
                }, e.SkinnedMesh.prototype.updateMatrixWorld = function(t) {
                    e.Mesh.prototype.updateMatrixWorld.call(this, !0), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : e.warn("THREE.SkinnedMesh unreckognized bindMode: " + this.bindMode)
                }, e.SkinnedMesh.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.SkinnedMesh(this.geometry, this.material, this.useVertexTexture)), e.Mesh.prototype.clone.call(this, t), t
                }, e.MorphAnimMesh = function(t, r) {
                    e.Mesh.call(this, t, r), this.type = "MorphAnimMesh", this.duration = 1e3, this.mirroredLoop = !1, this.time = 0, this.lastKeyframe = 0, this.currentKeyframe = 0, this.direction = 1, this.directionBackwards = !1, this.setFrameRange(0, this.geometry.morphTargets.length - 1)
                }, e.MorphAnimMesh.prototype = Object.create(e.Mesh.prototype), e.MorphAnimMesh.prototype.constructor = e.MorphAnimMesh, e.MorphAnimMesh.prototype.setFrameRange = function(e, t) {
                    this.startKeyframe = e, this.endKeyframe = t, this.length = this.endKeyframe - this.startKeyframe + 1
                }, e.MorphAnimMesh.prototype.setDirectionForward = function() {
                    this.direction = 1, this.directionBackwards = !1
                }, e.MorphAnimMesh.prototype.setDirectionBackward = function() {
                    this.direction = -1, this.directionBackwards = !0
                }, e.MorphAnimMesh.prototype.parseAnimations = function() {
                    var e = this.geometry;
                    e.animations || (e.animations = {});
                    for (var t, r = e.animations, n = /([a-z]+)_?(\d+)/, i = 0, o = e.morphTargets.length; o > i; i++) {
                        var a = e.morphTargets[i],
                            s = a.name.match(n);
                        if (s && s.length > 1) {
                            var u = s[1];
                            r[u] || (r[u] = {
                                start: 1 / 0,
                                end: -(1 / 0)
                            });
                            var l = r[u];
                            i < l.start && (l.start = i), i > l.end && (l.end = i), t || (t = u)
                        }
                    }
                    e.firstAnimation = t
                }, e.MorphAnimMesh.prototype.setAnimationLabel = function(e, t, r) {
                    this.geometry.animations || (this.geometry.animations = {}), this.geometry.animations[e] = {
                        start: t,
                        end: r
                    }
                }, e.MorphAnimMesh.prototype.playAnimation = function(t, r) {
                    var n = this.geometry.animations[t];
                    n ? (this.setFrameRange(n.start, n.end), this.duration = 1e3 * ((n.end - n.start) / r), this.time = 0) : e.warn("THREE.MorphAnimMesh: animation[" + t + "] undefined in .playAnimation()")
                }, e.MorphAnimMesh.prototype.updateAnimation = function(t) {
                    var r = this.duration / this.length;
                    this.time += this.direction * t, this.mirroredLoop ? (this.time > this.duration || this.time < 0) && (this.direction *= -1, this.time > this.duration && (this.time = this.duration, this.directionBackwards = !0), this.time < 0 && (this.time = 0, this.directionBackwards = !1)) : (this.time = this.time % this.duration, this.time < 0 && (this.time += this.duration));
                    var n = this.startKeyframe + e.Math.clamp(Math.floor(this.time / r), 0, this.length - 1);
                    n !== this.currentKeyframe && (this.morphTargetInfluences[this.lastKeyframe] = 0, this.morphTargetInfluences[this.currentKeyframe] = 1, this.morphTargetInfluences[n] = 0, this.lastKeyframe = this.currentKeyframe, this.currentKeyframe = n);
                    var i = this.time % r / r;
                    this.directionBackwards && (i = 1 - i), this.morphTargetInfluences[this.currentKeyframe] = i, this.morphTargetInfluences[this.lastKeyframe] = 1 - i
                }, e.MorphAnimMesh.prototype.interpolateTargets = function(e, t, r) {
                    for (var n = this.morphTargetInfluences, i = 0, o = n.length; o > i; i++) n[i] = 0;
                    e > -1 && (n[e] = 1 - r), t > -1 && (n[t] = r)
                }, e.MorphAnimMesh.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.MorphAnimMesh(this.geometry, this.material)), t.duration = this.duration, t.mirroredLoop = this.mirroredLoop, t.time = this.time, t.lastKeyframe = this.lastKeyframe, t.currentKeyframe = this.currentKeyframe, t.direction = this.direction, t.directionBackwards = this.directionBackwards, e.Mesh.prototype.clone.call(this, t), t
                }, e.LOD = function() {
                    e.Object3D.call(this), this.objects = []
                }, e.LOD.prototype = Object.create(e.Object3D.prototype), e.LOD.prototype.constructor = e.LOD, e.LOD.prototype.addLevel = function(e, t) {
                    void 0 === t && (t = 0), t = Math.abs(t);
                    for (var r = 0; r < this.objects.length && !(t < this.objects[r].distance); r++);
                    this.objects.splice(r, 0, {
                        distance: t,
                        object: e
                    }), this.add(e)
                }, e.LOD.prototype.getObjectForDistance = function(e) {
                    for (var t = 1, r = this.objects.length; r > t && !(e < this.objects[t].distance); t++);
                    return this.objects[t - 1].object
                }, e.LOD.prototype.raycast = function() {
                    var t = new e.Vector3;
                    return function(e, r) {
                        t.setFromMatrixPosition(this.matrixWorld);
                        var n = e.ray.origin.distanceTo(t);
                        this.getObjectForDistance(n).raycast(e, r)
                    }
                }(), e.LOD.prototype.update = function() {
                    var t = new e.Vector3,
                        r = new e.Vector3;
                    return function(e) {
                        if (this.objects.length > 1) {
                            t.setFromMatrixPosition(e.matrixWorld), r.setFromMatrixPosition(this.matrixWorld);
                            var n = t.distanceTo(r);
                            this.objects[0].object.visible = !0;
                            for (var i = 1, o = this.objects.length; o > i && n >= this.objects[i].distance; i++) this.objects[i - 1].object.visible = !1, this.objects[i].object.visible = !0;
                            for (; o > i; i++) this.objects[i].object.visible = !1
                        }
                    }
                }(), e.LOD.prototype.clone = function(t) {
                    void 0 === t && (t = new e.LOD), e.Object3D.prototype.clone.call(this, t);
                    for (var r = 0, n = this.objects.length; n > r; r++) {
                        var i = this.objects[r].object.clone();
                        i.visible = 0 === r, t.addLevel(i, this.objects[r].distance)
                    }
                    return t
                }, e.Sprite = function() {
                    var t = new Uint16Array([0, 1, 2, 0, 2, 3]),
                        r = new Float32Array([-.5, -.5, 0, .5, -.5, 0, .5, .5, 0, -.5, .5, 0]),
                        n = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),
                        i = new e.BufferGeometry;
                    return i.addAttribute("index", new e.BufferAttribute(t, 1)), i.addAttribute("position", new e.BufferAttribute(r, 3)), i.addAttribute("uv", new e.BufferAttribute(n, 2)),
                        function(t) {
                            e.Object3D.call(this), this.type = "Sprite", this.geometry = i, this.material = void 0 !== t ? t : new e.SpriteMaterial
                        }
                }(), e.Sprite.prototype = Object.create(e.Object3D.prototype), e.Sprite.prototype.constructor = e.Sprite, e.Sprite.prototype.raycast = function() {
                    var t = new e.Vector3;
                    return function(e, r) {
                        t.setFromMatrixPosition(this.matrixWorld);
                        var n = e.ray.distanceToPoint(t);
                        n > this.scale.x || r.push({
                            distance: n,
                            point: this.position,
                            face: null,
                            object: this
                        })
                    }
                }(), e.Sprite.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.Sprite(this.material)), e.Object3D.prototype.clone.call(this, t), t
                }, e.Particle = e.Sprite, e.LensFlare = function(t, r, n, i, o) {
                    e.Object3D.call(this), this.lensFlares = [], this.positionScreen = new e.Vector3, this.customUpdateCallback = void 0, void 0 !== t && this.add(t, r, n, i, o)
                }, e.LensFlare.prototype = Object.create(e.Object3D.prototype), e.LensFlare.prototype.constructor = e.LensFlare, e.LensFlare.prototype.add = function(t, r, n, i, o, a) {
                    void 0 === r && (r = -1), void 0 === n && (n = 0), void 0 === a && (a = 1), void 0 === o && (o = new e.Color(16777215)), void 0 === i && (i = e.NormalBlending), n = Math.min(n, Math.max(0, n)), this.lensFlares.push({
                        texture: t,
                        size: r,
                        distance: n,
                        x: 0,
                        y: 0,
                        z: 0,
                        scale: 1,
                        rotation: 1,
                        opacity: a,
                        color: o,
                        blending: i
                    })
                }, e.LensFlare.prototype.updateLensFlares = function() {
                    var e, t, r = this.lensFlares.length,
                        n = 2 * -this.positionScreen.x,
                        i = 2 * -this.positionScreen.y;
                    for (e = 0; r > e; e++) t = this.lensFlares[e], t.x = this.positionScreen.x + n * t.distance, t.y = this.positionScreen.y + i * t.distance, t.wantedRotation = t.x * Math.PI * .25, t.rotation += .25 * (t.wantedRotation - t.rotation)
                }, e.Scene = function() {
                    e.Object3D.call(this), this.type = "Scene", this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0
                }, e.Scene.prototype = Object.create(e.Object3D.prototype), e.Scene.prototype.constructor = e.Scene, e.Scene.prototype.clone = function(t) {
                    return void 0 === t && (t = new e.Scene), e.Object3D.prototype.clone.call(this, t), null !== this.fog && (t.fog = this.fog.clone()), null !== this.overrideMaterial && (t.overrideMaterial = this.overrideMaterial.clone()), t.autoUpdate = this.autoUpdate, t.matrixAutoUpdate = this.matrixAutoUpdate, t
                }, e.Fog = function(t, r, n) {
                    this.name = "", this.color = new e.Color(t), this.near = void 0 !== r ? r : 1, this.far = void 0 !== n ? n : 1e3
                }, e.Fog.prototype.clone = function() {
                    return new e.Fog(this.color.getHex(), this.near, this.far)
                }, e.FogExp2 = function(t, r) {
                    this.name = "", this.color = new e.Color(t), this.density = void 0 !== r ? r : 25e-5
                }, e.FogExp2.prototype.clone = function() {
                    return new e.FogExp2(this.color.getHex(), this.density)
                }, e.ShaderChunk = {}, e.ShaderChunk.common = "#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n}\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\n	float distance = dot( planeNormal, point-pointOnPlane );\n	return point - distance * planeNormal;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\n}\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n	if ( decayExponent > 0.0 ) {\n	  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\n	}\n	return 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n#ifdef GAMMA_INPUT\n	return pow( a, vec3( float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\nvec3 linearToOutput( in vec3 a ) {\n#ifdef GAMMA_OUTPUT\n	return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\n", e.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n\n	if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n", e.ShaderChunk.lights_lambert_vertex = "vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront += ambientLightColor;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack += ambientLightColor;\n\n#endif\n", e.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n\n#endif\n", e.ShaderChunk.default_vertex = "#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n", e.ShaderChunk.map_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif", e.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n", e.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",
                e.ShaderChunk.lightmap_pars_vertex = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif", e.ShaderChunk.lights_phong_fragment = "#ifndef FLAT_SHADED\n\n	vec3 normal = normalize( vNormal );\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n	#endif\n\n#else\n\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			totalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\n\n			// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			totalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		totalDiffuseLight += hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		totalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\n#ifdef METAL\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\n\n#else\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\n\n#endif\n", e.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif", e.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif", e.ShaderChunk.envmap_pars_fragment = "#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n", e.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif", e.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n	// Per-Pixel Tangent Space Normal Mapping\n	// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n", e.ShaderChunk.lights_phong_pars_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n", e.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif", e.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif", e.ShaderChunk.lights_phong_vertex = "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif", e.ShaderChunk.map_fragment = "#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	texelColor.xyz = inputToLinear( texelColor.xyz );\n\n	diffuseColor *= texelColor;\n\n#endif", e.ShaderChunk.lightmap_vertex = "#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif", e.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n\n	diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n", e.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n", e.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n\n	vColor.xyz = inputToLinear( color.xyz );\n\n#endif", e.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n", e.ShaderChunk.envmap_pars_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n", e.ShaderChunk.linear_to_gamma_fragment = "\n	outgoingLight = linearToOutput( outgoingLight );\n", e.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif", e.ShaderChunk.lights_lambert_pars_vertex = "uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n", e.ShaderChunk.map_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n", e.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// Transforming Normal Vectors with the Inverse Transformation\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	envColor.xyz = inputToLinear( envColor.xyz );\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n", e.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif", e.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif", e.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif", e.ShaderChunk.specularmap_fragment = "float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif", e.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n		fogFactor = whiteCompliment( fogFactor );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif", e.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n	// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n	// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif\n", e.ShaderChunk.defaultnormal_vertex = "#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n", e.ShaderChunk.lights_phong_pars_fragment = "uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n", e.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif", e.ShaderChunk.map_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif", e.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n\n	outgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\n\n#endif", e.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif", e.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n\n	diffuseColor.rgb *= vColor;\n\n#endif", e.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif", e.ShaderChunk.envmap_vertex = "#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = transformDirection( objectNormal, modelMatrix );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n", e.ShaderChunk.shadowmap_fragment = "#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) outgoingLight *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\n	shadowColor = inputToLinear( shadowColor );\n\n	outgoingLight = outgoingLight * shadowColor;\n\n#endif\n", e.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n", e.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif", e.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n", e.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif", e.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n", e.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n", e.UniformsUtils = {
                    merge: function(e) {
                        for (var t = {}, r = 0; r < e.length; r++) {
                            var n = this.clone(e[r]);
                            for (var i in n) t[i] = n[i]
                        }
                        return t
                    },
                    clone: function(t) {
                        var r = {};
                        for (var n in t) {
                            r[n] = {};
                            for (var i in t[n]) {
                                var o = t[n][i];
                                o instanceof e.Color || o instanceof e.Vector2 || o instanceof e.Vector3 || o instanceof e.Vector4 || o instanceof e.Matrix4 || o instanceof e.Texture ? r[n][i] = o.clone() : o instanceof Array ? r[n][i] = o.slice() : r[n][i] = o
                            }
                        }
                        return r
                    }
                }, e.UniformsLib = {
                    common: {
                        diffuse: {
                            type: "c",
                            value: new e.Color(15658734)
                        },
                        opacity: {
                            type: "f",
                            value: 1
                        },
                        map: {
                            type: "t",
                            value: null
                        },
                        offsetRepeat: {
                            type: "v4",
                            value: new e.Vector4(0, 0, 1, 1)
                        },
                        lightMap: {
                            type: "t",
                            value: null
                        },
                        specularMap: {
                            type: "t",
                            value: null
                        },
                        alphaMap: {
                            type: "t",
                            value: null
                        },
                        envMap: {
                            type: "t",
                            value: null
                        },
                        flipEnvMap: {
                            type: "f",
                            value: -1
                        },
                        reflectivity: {
                            type: "f",
                            value: 1
                        },
                        refractionRatio: {
                            type: "f",
                            value: .98
                        },
                        morphTargetInfluences: {
                            type: "f",
                            value: 0
                        }
                    },
                    bump: {
                        bumpMap: {
                            type: "t",
                            value: null
                        },
                        bumpScale: {
                            type: "f",
                            value: 1
                        }
                    },
                    normalmap: {
                        normalMap: {
                            type: "t",
                            value: null
                        },
                        normalScale: {
                            type: "v2",
                            value: new e.Vector2(1, 1)
                        }
                    },
                    fog: {
                        fogDensity: {
                            type: "f",
                            value: 25e-5
                        },
                        fogNear: {
                            type: "f",
                            value: 1
                        },
                        fogFar: {
                            type: "f",
                            value: 2e3
                        },
                        fogColor: {
                            type: "c",
                            value: new e.Color(16777215)
                        }
                    },
                    lights: {
                        ambientLightColor: {
                            type: "fv",
                            value: []
                        },
                        directionalLightDirection: {
                            type: "fv",
                            value: []
                        },
                        directionalLightColor: {
                            type: "fv",
                            value: []
                        },
                        hemisphereLightDirection: {
                            type: "fv",
                            value: []
                        },
                        hemisphereLightSkyColor: {
                            type: "fv",
                            value: []
                        },
                        hemisphereLightGroundColor: {
                            type: "fv",
                            value: []
                        },
                        pointLightColor: {
                            type: "fv",
                            value: []
                        },
                        pointLightPosition: {
                            type: "fv",
                            value: []
                        },
                        pointLightDistance: {
                            type: "fv1",
                            value: []
                        },
                        pointLightDecay: {
                            type: "fv1",
                            value: []
                        },
                        spotLightColor: {
                            type: "fv",
                            value: []
                        },
                        spotLightPosition: {
                            type: "fv",
                            value: []
                        },
                        spotLightDirection: {
                            type: "fv",
                            value: []
                        },
                        spotLightDistance: {
                            type: "fv1",
                            value: []
                        },
                        spotLightAngleCos: {
                            type: "fv1",
                            value: []
                        },
                        spotLightExponent: {
                            type: "fv1",
                            value: []
                        },
                        spotLightDecay: {
                            type: "fv1",
                            value: []
                        }
                    },
                    particle: {
                        psColor: {
                            type: "c",
                            value: new e.Color(15658734)
                        },
                        opacity: {
                            type: "f",
                            value: 1
                        },
                        size: {
                            type: "f",
                            value: 1
                        },
                        scale: {
                            type: "f",
                            value: 1
                        },
                        map: {
                            type: "t",
                            value: null
                        },
                        offsetRepeat: {
                            type: "v4",
                            value: new e.Vector4(0, 0, 1, 1)
                        },
                        fogDensity: {
                            type: "f",
                            value: 25e-5
                        },
                        fogNear: {
                            type: "f",
                            value: 1
                        },
                        fogFar: {
                            type: "f",
                            value: 2e3
                        },
                        fogColor: {
                            type: "c",
                            value: new e.Color(16777215)
                        }
                    },
                    shadowmap: {
                        shadowMap: {
                            type: "tv",
                            value: []
                        },
                        shadowMapSize: {
                            type: "v2v",
                            value: []
                        },
                        shadowBias: {
                            type: "fv1",
                            value: []
                        },
                        shadowDarkness: {
                            type: "fv1",
                            value: []
                        },
                        shadowMatrix: {
                            type: "m4v",
                            value: []
                        }
                    }
                }, e.ShaderLib = {
                    basic: {
                        uniforms: e.UniformsUtils.merge([e.UniformsLib.common, e.UniformsLib.fog, e.UniformsLib.shadowmap]),
                        vertexShader: [e.ShaderChunk.common, e.ShaderChunk.map_pars_vertex, e.ShaderChunk.lightmap_pars_vertex, e.ShaderChunk.envmap_pars_vertex, e.ShaderChunk.color_pars_vertex, e.ShaderChunk.morphtarget_pars_vertex, e.ShaderChunk.skinning_pars_vertex, e.ShaderChunk.shadowmap_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.map_vertex, e.ShaderChunk.lightmap_vertex, e.ShaderChunk.color_vertex, e.ShaderChunk.skinbase_vertex, "	#ifdef USE_ENVMAP", e.ShaderChunk.morphnormal_vertex, e.ShaderChunk.skinnormal_vertex, e.ShaderChunk.defaultnormal_vertex, "	#endif", e.ShaderChunk.morphtarget_vertex, e.ShaderChunk.skinning_vertex, e.ShaderChunk.default_vertex, e.ShaderChunk.logdepthbuf_vertex, e.ShaderChunk.worldpos_vertex, e.ShaderChunk.envmap_vertex, e.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", e.ShaderChunk.common, e.ShaderChunk.color_pars_fragment, e.ShaderChunk.map_pars_fragment, e.ShaderChunk.alphamap_pars_fragment, e.ShaderChunk.lightmap_pars_fragment, e.ShaderChunk.envmap_pars_fragment, e.ShaderChunk.fog_pars_fragment, e.ShaderChunk.shadowmap_pars_fragment, e.ShaderChunk.specularmap_pars_fragment, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	vec3 outgoingLight = vec3( 0.0 );", "	vec4 diffuseColor = vec4( diffuse, opacity );", e.ShaderChunk.logdepthbuf_fragment, e.ShaderChunk.map_fragment, e.ShaderChunk.color_fragment, e.ShaderChunk.alphamap_fragment, e.ShaderChunk.alphatest_fragment, e.ShaderChunk.specularmap_fragment, "	outgoingLight = diffuseColor.rgb;", e.ShaderChunk.lightmap_fragment, e.ShaderChunk.envmap_fragment, e.ShaderChunk.shadowmap_fragment, e.ShaderChunk.linear_to_gamma_fragment, e.ShaderChunk.fog_fragment, "	gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
                    },
                    lambert: {
                        uniforms: e.UniformsUtils.merge([e.UniformsLib.common, e.UniformsLib.fog, e.UniformsLib.lights, e.UniformsLib.shadowmap, {
                            emissive: {
                                type: "c",
                                value: new e.Color(0)
                            },
                            wrapRGB: {
                                type: "v3",
                                value: new e.Vector3(1, 1, 1)
                            }
                        }]),
                        vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "	varying vec3 vLightBack;", "#endif", e.ShaderChunk.common, e.ShaderChunk.map_pars_vertex, e.ShaderChunk.lightmap_pars_vertex, e.ShaderChunk.envmap_pars_vertex, e.ShaderChunk.lights_lambert_pars_vertex, e.ShaderChunk.color_pars_vertex, e.ShaderChunk.morphtarget_pars_vertex, e.ShaderChunk.skinning_pars_vertex, e.ShaderChunk.shadowmap_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.map_vertex, e.ShaderChunk.lightmap_vertex, e.ShaderChunk.color_vertex, e.ShaderChunk.morphnormal_vertex, e.ShaderChunk.skinbase_vertex, e.ShaderChunk.skinnormal_vertex, e.ShaderChunk.defaultnormal_vertex, e.ShaderChunk.morphtarget_vertex, e.ShaderChunk.skinning_vertex, e.ShaderChunk.default_vertex, e.ShaderChunk.logdepthbuf_vertex, e.ShaderChunk.worldpos_vertex, e.ShaderChunk.envmap_vertex, e.ShaderChunk.lights_lambert_vertex, e.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float opacity;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", "	varying vec3 vLightBack;", "#endif", e.ShaderChunk.common, e.ShaderChunk.color_pars_fragment, e.ShaderChunk.map_pars_fragment, e.ShaderChunk.alphamap_pars_fragment, e.ShaderChunk.lightmap_pars_fragment, e.ShaderChunk.envmap_pars_fragment, e.ShaderChunk.fog_pars_fragment, e.ShaderChunk.shadowmap_pars_fragment, e.ShaderChunk.specularmap_pars_fragment, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	vec3 outgoingLight = vec3( 0.0 );", "	vec4 diffuseColor = vec4( diffuse, opacity );", e.ShaderChunk.logdepthbuf_fragment, e.ShaderChunk.map_fragment, e.ShaderChunk.color_fragment, e.ShaderChunk.alphamap_fragment, e.ShaderChunk.alphatest_fragment, e.ShaderChunk.specularmap_fragment, "	#ifdef DOUBLE_SIDED", "		if ( gl_FrontFacing )", "			outgoingLight += diffuseColor.rgb * vLightFront + emissive;", "		else", "			outgoingLight += diffuseColor.rgb * vLightBack + emissive;", "	#else", "		outgoingLight += diffuseColor.rgb * vLightFront + emissive;", "	#endif", e.ShaderChunk.lightmap_fragment, e.ShaderChunk.envmap_fragment, e.ShaderChunk.shadowmap_fragment, e.ShaderChunk.linear_to_gamma_fragment, e.ShaderChunk.fog_fragment, "	gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
                    },
                    phong: {
                        uniforms: e.UniformsUtils.merge([e.UniformsLib.common, e.UniformsLib.bump, e.UniformsLib.normalmap, e.UniformsLib.fog, e.UniformsLib.lights, e.UniformsLib.shadowmap, {
                            emissive: {
                                type: "c",
                                value: new e.Color(0)
                            },
                            specular: {
                                type: "c",
                                value: new e.Color(1118481)
                            },
                            shininess: {
                                type: "f",
                                value: 30
                            },
                            wrapRGB: {
                                type: "v3",
                                value: new e.Vector3(1, 1, 1)
                            }
                        }]),
                        vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "	varying vec3 vNormal;", "#endif", e.ShaderChunk.common, e.ShaderChunk.map_pars_vertex, e.ShaderChunk.lightmap_pars_vertex, e.ShaderChunk.envmap_pars_vertex, e.ShaderChunk.lights_phong_pars_vertex, e.ShaderChunk.color_pars_vertex, e.ShaderChunk.morphtarget_pars_vertex, e.ShaderChunk.skinning_pars_vertex, e.ShaderChunk.shadowmap_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.map_vertex, e.ShaderChunk.lightmap_vertex, e.ShaderChunk.color_vertex, e.ShaderChunk.morphnormal_vertex, e.ShaderChunk.skinbase_vertex, e.ShaderChunk.skinnormal_vertex, e.ShaderChunk.defaultnormal_vertex, "#ifndef FLAT_SHADED", "	vNormal = normalize( transformedNormal );", "#endif", e.ShaderChunk.morphtarget_vertex, e.ShaderChunk.skinning_vertex, e.ShaderChunk.default_vertex, e.ShaderChunk.logdepthbuf_vertex, "	vViewPosition = -mvPosition.xyz;", e.ShaderChunk.worldpos_vertex, e.ShaderChunk.envmap_vertex, e.ShaderChunk.lights_phong_vertex, e.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                        fragmentShader: ["#define PHONG", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", "uniform float opacity;", e.ShaderChunk.common, e.ShaderChunk.color_pars_fragment, e.ShaderChunk.map_pars_fragment, e.ShaderChunk.alphamap_pars_fragment, e.ShaderChunk.lightmap_pars_fragment, e.ShaderChunk.envmap_pars_fragment, e.ShaderChunk.fog_pars_fragment, e.ShaderChunk.lights_phong_pars_fragment, e.ShaderChunk.shadowmap_pars_fragment, e.ShaderChunk.bumpmap_pars_fragment, e.ShaderChunk.normalmap_pars_fragment, e.ShaderChunk.specularmap_pars_fragment, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	vec3 outgoingLight = vec3( 0.0 );", "	vec4 diffuseColor = vec4( diffuse, opacity );", e.ShaderChunk.logdepthbuf_fragment, e.ShaderChunk.map_fragment, e.ShaderChunk.color_fragment, e.ShaderChunk.alphamap_fragment, e.ShaderChunk.alphatest_fragment, e.ShaderChunk.specularmap_fragment, e.ShaderChunk.lights_phong_fragment, e.ShaderChunk.lightmap_fragment, e.ShaderChunk.envmap_fragment, e.ShaderChunk.shadowmap_fragment, e.ShaderChunk.linear_to_gamma_fragment, e.ShaderChunk.fog_fragment, "	gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
                    },
                    particle_basic: {
                        uniforms: e.UniformsUtils.merge([e.UniformsLib.particle, e.UniformsLib.shadowmap]),
                        vertexShader: ["uniform float size;", "uniform float scale;", e.ShaderChunk.common, e.ShaderChunk.color_pars_vertex, e.ShaderChunk.shadowmap_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.color_vertex, "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "	#ifdef USE_SIZEATTENUATION", "		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );", "	#else", "		gl_PointSize = size;", "	#endif", "	gl_Position = projectionMatrix * mvPosition;", e.ShaderChunk.logdepthbuf_vertex, e.ShaderChunk.worldpos_vertex, e.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform vec3 psColor;", "uniform float opacity;", e.ShaderChunk.common, e.ShaderChunk.color_pars_fragment, e.ShaderChunk.map_particle_pars_fragment, e.ShaderChunk.fog_pars_fragment, e.ShaderChunk.shadowmap_pars_fragment, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	vec3 outgoingLight = vec3( 0.0 );", "	vec4 diffuseColor = vec4( psColor, opacity );", e.ShaderChunk.logdepthbuf_fragment, e.ShaderChunk.map_particle_fragment, e.ShaderChunk.color_fragment, e.ShaderChunk.alphatest_fragment, "	outgoingLight = diffuseColor.rgb;", e.ShaderChunk.shadowmap_fragment, e.ShaderChunk.fog_fragment, "	gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
                    },
                    dashed: {
                        uniforms: e.UniformsUtils.merge([e.UniformsLib.common, e.UniformsLib.fog, {
                            scale: {
                                type: "f",
                                value: 1
                            },
                            dashSize: {
                                type: "f",
                                value: 1
                            },
                            totalSize: {
                                type: "f",
                                value: 2
                            }
                        }]),
                        vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", e.ShaderChunk.common, e.ShaderChunk.color_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.color_vertex, "	vLineDistance = scale * lineDistance;", "	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "	gl_Position = projectionMatrix * mvPosition;", e.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", e.ShaderChunk.common, e.ShaderChunk.color_pars_fragment, e.ShaderChunk.fog_pars_fragment, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	if ( mod( vLineDistance, totalSize ) > dashSize ) {", "		discard;", "	}", "	vec3 outgoingLight = vec3( 0.0 );", "	vec4 diffuseColor = vec4( diffuse, opacity );", e.ShaderChunk.logdepthbuf_fragment, e.ShaderChunk.color_fragment, "	outgoingLight = diffuseColor.rgb;", e.ShaderChunk.fog_fragment, "	gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
                    },
                    depth: {
                        uniforms: {
                            mNear: {
                                type: "f",
                                value: 1
                            },
                            mFar: {
                                type: "f",
                                value: 2e3
                            },
                            opacity: {
                                type: "f",
                                value: 1
                            }
                        },
                        vertexShader: [e.ShaderChunk.common, e.ShaderChunk.morphtarget_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.morphtarget_vertex, e.ShaderChunk.default_vertex, e.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", e.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT", "		float depth = gl_FragDepthEXT / gl_FragCoord.w;", "	#else", "		float depth = gl_FragCoord.z / gl_FragCoord.w;", "	#endif", "	float color = 1.0 - smoothstep( mNear, mFar, depth );", "	gl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
                    },
                    normal: {
                        uniforms: {
                            opacity: {
                                type: "f",
                                value: 1
                            }
                        },
                        vertexShader: ["varying vec3 vNormal;", e.ShaderChunk.common, e.ShaderChunk.morphtarget_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vNormal = normalize( normalMatrix * normal );", e.ShaderChunk.morphtarget_vertex, e.ShaderChunk.default_vertex, e.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", e.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
                    },
                    cube: {
                        uniforms: {
                            tCube: {
                                type: "t",
                                value: null
                            },
                            tFlip: {
                                type: "f",
                                value: -1
                            }
                        },
                        vertexShader: ["varying vec3 vWorldPosition;", e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vWorldPosition = transformDirection( position, modelMatrix );", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", e.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", e.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
                    },
                    equirect: {
                        uniforms: {
                            tEquirect: {
                                type: "t",
                                value: null
                            },
                            tFlip: {
                                type: "f",
                                value: -1
                            }
                        },
                        vertexShader: ["varying vec3 vWorldPosition;", e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", "	vWorldPosition = transformDirection( position, modelMatrix );", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", e.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                        fragmentShader: ["uniform sampler2D tEquirect;", "uniform float tFlip;", "varying vec3 vWorldPosition;", e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", "vec3 direction = normalize( vWorldPosition );", "vec2 sampleUV;", "sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );", "sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "gl_FragColor = texture2D( tEquirect, sampleUV );", e.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
                    },
                    depthRGBA: {
                        uniforms: {},
                        vertexShader: [e.ShaderChunk.common, e.ShaderChunk.morphtarget_pars_vertex, e.ShaderChunk.skinning_pars_vertex, e.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", e.ShaderChunk.skinbase_vertex, e.ShaderChunk.morphtarget_vertex, e.ShaderChunk.skinning_vertex, e.ShaderChunk.default_vertex, e.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                        fragmentShader: [e.ShaderChunk.common, e.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {", "	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", "	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", "	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", "	res -= res.xxyz * bit_mask;", "	return res;", "}", "void main() {", e.ShaderChunk.logdepthbuf_fragment, "	#ifdef USE_LOGDEPTHBUF_EXT", "		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );", "	#else", "		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", "	#endif", "}"].join("\n")
                    }
                }, e.WebGLRenderer = function(t) {
                    function r(e) {
                        e.__webglVertexBuffer = ke.createBuffer(), e.__webglColorBuffer = ke.createBuffer(), Ie.info.memory.geometries++
                    }

                    function n(e) {
                        e.__webglVertexBuffer = ke.createBuffer(), e.__webglColorBuffer = ke.createBuffer(), e.__webglLineDistanceBuffer = ke.createBuffer(), Ie.info.memory.geometries++
                    }

                    function i(e) {
                        e.__webglVertexBuffer = ke.createBuffer(), e.__webglNormalBuffer = ke.createBuffer(), e.__webglTangentBuffer = ke.createBuffer(), e.__webglColorBuffer = ke.createBuffer(), e.__webglUVBuffer = ke.createBuffer(), e.__webglUV2Buffer = ke.createBuffer(), e.__webglSkinIndicesBuffer = ke.createBuffer(), e.__webglSkinWeightsBuffer = ke.createBuffer(), e.__webglFaceBuffer = ke.createBuffer(), e.__webglLineBuffer = ke.createBuffer();
                        var t = e.numMorphTargets;
                        if (t) {
                            e.__webglMorphTargetsBuffers = [];
                            for (var r = 0, n = t; n > r; r++) e.__webglMorphTargetsBuffers.push(ke.createBuffer())
                        }
                        var i = e.numMorphNormals;
                        if (i) {
                            e.__webglMorphNormalsBuffers = [];
                            for (var r = 0, n = i; n > r; r++) e.__webglMorphNormalsBuffers.push(ke.createBuffer())
                        }
                        Ie.info.memory.geometries++
                    }

                    function o(e) {
                        var t = e.geometry,
                            r = e.material,
                            n = t.vertices.length;
                        if (r.attributes) {
                            void 0 === t.__webglCustomAttributesList && (t.__webglCustomAttributesList = []);
                            for (var i in r.attributes) {
                                var o = r.attributes[i];
                                if (!o.__webglInitialized || o.createUniqueBuffers) {
                                    o.__webglInitialized = !0;
                                    var a = 1;
                                    "v2" === o.type ? a = 2 : "v3" === o.type ? a = 3 : "v4" === o.type ? a = 4 : "c" === o.type && (a = 3), o.size = a, o.array = new Float32Array(n * a), o.buffer = ke.createBuffer(), o.buffer.belongsToAttribute = i, o.needsUpdate = !0
                                }
                                t.__webglCustomAttributesList.push(o)
                            }
                        }
                    }

                    function a(e, t) {
                        var r = e.vertices.length;
                        e.__vertexArray = new Float32Array(3 * r), e.__colorArray = new Float32Array(3 * r), e.__webglParticleCount = r, o(t)
                    }

                    function s(e, t) {
                        var r = e.vertices.length;
                        e.__vertexArray = new Float32Array(3 * r), e.__colorArray = new Float32Array(3 * r), e.__lineDistanceArray = new Float32Array(1 * r), e.__webglLineCount = r, o(t)
                    }

                    function u(e, t) {
                        var r = t.geometry,
                            n = e.faces3,
                            i = 3 * n.length,
                            o = 1 * n.length,
                            a = 3 * n.length,
                            s = l(t, e);
                        e.__vertexArray = new Float32Array(3 * i), e.__normalArray = new Float32Array(3 * i), e.__colorArray = new Float32Array(3 * i), e.__uvArray = new Float32Array(2 * i), r.faceVertexUvs.length > 1 && (e.__uv2Array = new Float32Array(2 * i)), r.hasTangents && (e.__tangentArray = new Float32Array(4 * i)), t.geometry.skinWeights.length && t.geometry.skinIndices.length && (e.__skinIndexArray = new Float32Array(4 * i), e.__skinWeightArray = new Float32Array(4 * i));
                        var u = null !== rt.get("OES_element_index_uint") && o > 21845 ? Uint32Array : Uint16Array;
                        e.__typeArray = u, e.__faceArray = new u(3 * o), e.__lineArray = new u(2 * a);
                        var c = e.numMorphTargets;
                        if (c) {
                            e.__morphTargetsArrays = [];
                            for (var h = 0, p = c; p > h; h++) e.__morphTargetsArrays.push(new Float32Array(3 * i))
                        }
                        var d = e.numMorphNormals;
                        if (d) {
                            e.__morphNormalsArrays = [];
                            for (var h = 0, p = d; p > h; h++) e.__morphNormalsArrays.push(new Float32Array(3 * i))
                        }
                        if (e.__webglFaceCount = 3 * o, e.__webglLineCount = 2 * a, s.attributes) {
                            void 0 === e.__webglCustomAttributesList && (e.__webglCustomAttributesList = []);
                            for (var f in s.attributes) {
                                var m = s.attributes[f],
                                    v = {};
                                for (var g in m) v[g] = m[g];
                                if (!v.__webglInitialized || v.createUniqueBuffers) {
                                    v.__webglInitialized = !0;
                                    var y = 1;
                                    "v2" === v.type ? y = 2 : "v3" === v.type ? y = 3 : "v4" === v.type ? y = 4 : "c" === v.type && (y = 3), v.size = y, v.array = new Float32Array(i * y), v.buffer = ke.createBuffer(), v.buffer.belongsToAttribute = f, m.needsUpdate = !0, v.__original = m
                                }
                                e.__webglCustomAttributesList.push(v)
                            }
                        }
                        e.__inittedArrays = !0
                    }

                    function l(t, r) {
                        return t.material instanceof e.MeshFaceMaterial ? t.material.materials[r.materialIndex] : t.material
                    }

                    function c(t) {
                        return t instanceof e.MeshPhongMaterial == !1 && t.shading === e.FlatShading
                    }

                    function h(e, t, r) {
                        var n, i, o, a, s, u, l, c, h, p, d, f = e.vertices,
                            m = f.length,
                            v = e.colors,
                            g = v.length,
                            y = e.__vertexArray,
                            b = e.__colorArray,
                            x = e.verticesNeedUpdate,
                            _ = e.colorsNeedUpdate,
                            w = e.__webglCustomAttributesList;
                        if (x) {
                            for (n = 0; m > n; n++) o = f[n], a = 3 * n, y[a] = o.x, y[a + 1] = o.y, y[a + 2] = o.z;
                            ke.bindBuffer(ke.ARRAY_BUFFER, e.__webglVertexBuffer), ke.bufferData(ke.ARRAY_BUFFER, y, t)
                        }
                        if (_) {
                            for (i = 0; g > i; i++) s = v[i], a = 3 * i, b[a] = s.r, b[a + 1] = s.g, b[a + 2] = s.b;
                            ke.bindBuffer(ke.ARRAY_BUFFER, e.__webglColorBuffer), ke.bufferData(ke.ARRAY_BUFFER, b, t)
                        }
                        if (w)
                            for (u = 0, l = w.length; l > u; u++) {
                                if (d = w[u], d.needsUpdate && (void 0 === d.boundTo || "vertices" === d.boundTo))
                                    if (h = d.value.length, a = 0, 1 === d.size)
                                        for (c = 0; h > c; c++) d.array[c] = d.value[c];
                                    else if (2 === d.size)
                                    for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.x, d.array[a + 1] = p.y, a += 2;
                                else if (3 === d.size)
                                    if ("c" === d.type)
                                        for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.r, d.array[a + 1] = p.g, d.array[a + 2] = p.b, a += 3;
                                    else
                                        for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.x, d.array[a + 1] = p.y, d.array[a + 2] = p.z, a += 3;
                                else if (4 === d.size)
                                    for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.x, d.array[a + 1] = p.y, d.array[a + 2] = p.z, d.array[a + 3] = p.w, a += 4;
                                ke.bindBuffer(ke.ARRAY_BUFFER, d.buffer), ke.bufferData(ke.ARRAY_BUFFER, d.array, t), d.needsUpdate = !1
                            }
                    }

                    function p(e, t) {
                        var r, n, i, o, a, s, u, l, c, h, p, d, f = e.vertices,
                            m = e.colors,
                            v = e.lineDistances,
                            g = f.length,
                            y = m.length,
                            b = v.length,
                            x = e.__vertexArray,
                            _ = e.__colorArray,
                            w = e.__lineDistanceArray,
                            C = e.verticesNeedUpdate,
                            E = e.colorsNeedUpdate,
                            S = e.lineDistancesNeedUpdate,
                            T = e.__webglCustomAttributesList;
                        if (C) {
                            for (r = 0; g > r; r++) o = f[r], a = 3 * r, x[a] = o.x, x[a + 1] = o.y, x[a + 2] = o.z;
                            ke.bindBuffer(ke.ARRAY_BUFFER, e.__webglVertexBuffer), ke.bufferData(ke.ARRAY_BUFFER, x, t)
                        }
                        if (E) {
                            for (n = 0; y > n; n++) s = m[n], a = 3 * n, _[a] = s.r, _[a + 1] = s.g, _[a + 2] = s.b;
                            ke.bindBuffer(ke.ARRAY_BUFFER, e.__webglColorBuffer), ke.bufferData(ke.ARRAY_BUFFER, _, t)
                        }
                        if (S) {
                            for (i = 0; b > i; i++) w[i] = v[i];
                            ke.bindBuffer(ke.ARRAY_BUFFER, e.__webglLineDistanceBuffer), ke.bufferData(ke.ARRAY_BUFFER, w, t)
                        }
                        if (T)
                            for (u = 0, l = T.length; l > u; u++)
                                if (d = T[u], d.needsUpdate && (void 0 === d.boundTo || "vertices" === d.boundTo)) {
                                    if (a = 0, h = d.value.length, 1 === d.size)
                                        for (c = 0; h > c; c++) d.array[c] = d.value[c];
                                    else if (2 === d.size)
                                        for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.x, d.array[a + 1] = p.y, a += 2;
                                    else if (3 === d.size)
                                        if ("c" === d.type)
                                            for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.r, d.array[a + 1] = p.g, d.array[a + 2] = p.b, a += 3;
                                        else
                                            for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.x, d.array[a + 1] = p.y, d.array[a + 2] = p.z, a += 3;
                                    else if (4 === d.size)
                                        for (c = 0; h > c; c++) p = d.value[c], d.array[a] = p.x, d.array[a + 1] = p.y, d.array[a + 2] = p.z, d.array[a + 3] = p.w, a += 4;
                                    ke.bindBuffer(ke.ARRAY_BUFFER, d.buffer), ke.bufferData(ke.ARRAY_BUFFER, d.array, t), d.needsUpdate = !1
                                }
                    }

                    function d(t, r, n, i, o) {
                        if (t.__inittedArrays) {
                            var a, s, u, l, h, p, d, f, m, v, g, y, b, x, _, w, C, E, S, T, M, A, P, R, k, I, D, B, L, V, N, O, F, U, z, H, j, G, q, W, X, Y, K = c(o),
                                Q = 0,
                                Z = 0,
                                $ = 0,
                                J = 0,
                                ee = 0,
                                te = 0,
                                re = 0,
                                ne = 0,
                                ie = 0,
                                oe = 0,
                                ae = 0,
                                se = 0,
                                ue = t.__vertexArray,
                                le = t.__uvArray,
                                ce = t.__uv2Array,
                                he = t.__normalArray,
                                pe = t.__tangentArray,
                                de = t.__colorArray,
                                fe = t.__skinIndexArray,
                                me = t.__skinWeightArray,
                                ve = t.__morphTargetsArrays,
                                ge = t.__morphNormalsArrays,
                                ye = t.__webglCustomAttributesList,
                                be = t.__faceArray,
                                xe = t.__lineArray,
                                _e = r.geometry,
                                we = _e.verticesNeedUpdate,
                                Ce = _e.elementsNeedUpdate,
                                Ee = _e.uvsNeedUpdate,
                                Se = _e.normalsNeedUpdate,
                                Te = _e.tangentsNeedUpdate,
                                Me = _e.colorsNeedUpdate,
                                Ae = _e.morphTargetsNeedUpdate,
                                Pe = _e.vertices,
                                Re = t.faces3,
                                Ie = _e.faces,
                                De = _e.faceVertexUvs[0],
                                Be = _e.faceVertexUvs[1],
                                Le = _e.skinIndices,
                                Ve = _e.skinWeights,
                                Ne = _e.morphTargets,
                                Oe = _e.morphNormals;
                            if (we) {
                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], y = Pe[l.a], b = Pe[l.b], x = Pe[l.c], ue[Z] = y.x, ue[Z + 1] = y.y, ue[Z + 2] = y.z, ue[Z + 3] = b.x, ue[Z + 4] = b.y, ue[Z + 5] = b.z, ue[Z + 6] = x.x, ue[Z + 7] = x.y, ue[Z + 8] = x.z, Z += 9;
                                ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglVertexBuffer), ke.bufferData(ke.ARRAY_BUFFER, ue, n)
                            }
                            if (Ae)
                                for (z = 0, H = Ne.length; H > z; z++) {
                                    for (ae = 0, a = 0, s = Re.length; s > a; a++) q = Re[a], l = Ie[q], y = Ne[z].vertices[l.a], b = Ne[z].vertices[l.b], x = Ne[z].vertices[l.c], j = ve[z], j[ae] = y.x, j[ae + 1] = y.y, j[ae + 2] = y.z, j[ae + 3] = b.x, j[ae + 4] = b.y, j[ae + 5] = b.z, j[ae + 6] = x.x, j[ae + 7] = x.y, j[ae + 8] = x.z, o.morphNormals && (K ? (E = Oe[z].faceNormals[q], S = E, T = E) : (W = Oe[z].vertexNormals[q], E = W.a, S = W.b, T = W.c), G = ge[z], G[ae] = E.x, G[ae + 1] = E.y, G[ae + 2] = E.z, G[ae + 3] = S.x, G[ae + 4] = S.y, G[ae + 5] = S.z, G[ae + 6] = T.x, G[ae + 7] = T.y, G[ae + 8] = T.z), ae += 9;
                                    ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[z]), ke.bufferData(ke.ARRAY_BUFFER, ve[z], n), o.morphNormals && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[z]), ke.bufferData(ke.ARRAY_BUFFER, ge[z], n))
                                }
                            if (Ve.length) {
                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], R = Ve[l.a], k = Ve[l.b], I = Ve[l.c], me[oe] = R.x, me[oe + 1] = R.y, me[oe + 2] = R.z, me[oe + 3] = R.w, me[oe + 4] = k.x, me[oe + 5] = k.y, me[oe + 6] = k.z, me[oe + 7] = k.w, me[oe + 8] = I.x, me[oe + 9] = I.y, me[oe + 10] = I.z, me[oe + 11] = I.w, D = Le[l.a], B = Le[l.b], L = Le[l.c], fe[oe] = D.x, fe[oe + 1] = D.y, fe[oe + 2] = D.z, fe[oe + 3] = D.w, fe[oe + 4] = B.x, fe[oe + 5] = B.y, fe[oe + 6] = B.z, fe[oe + 7] = B.w, fe[oe + 8] = L.x, fe[oe + 9] = L.y, fe[oe + 10] = L.z, fe[oe + 11] = L.w, oe += 12;
                                oe > 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglSkinIndicesBuffer), ke.bufferData(ke.ARRAY_BUFFER, fe, n), ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglSkinWeightsBuffer), ke.bufferData(ke.ARRAY_BUFFER, me, n))
                            }
                            if (Me) {
                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], d = l.vertexColors, f = l.color, 3 === d.length && o.vertexColors === e.VertexColors ? (M = d[0], A = d[1], P = d[2]) : (M = f, A = f, P = f), de[ie] = M.r, de[ie + 1] = M.g, de[ie + 2] = M.b, de[ie + 3] = A.r, de[ie + 4] = A.g, de[ie + 5] = A.b, de[ie + 6] = P.r, de[ie + 7] = P.g, de[ie + 8] = P.b, ie += 9;
                                ie > 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglColorBuffer), ke.bufferData(ke.ARRAY_BUFFER, de, n))
                            }
                            if (Te && _e.hasTangents) {
                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], m = l.vertexTangents, _ = m[0], w = m[1], C = m[2], pe[re] = _.x, pe[re + 1] = _.y, pe[re + 2] = _.z, pe[re + 3] = _.w, pe[re + 4] = w.x, pe[re + 5] = w.y, pe[re + 6] = w.z, pe[re + 7] = w.w, pe[re + 8] = C.x, pe[re + 9] = C.y, pe[re + 10] = C.z, pe[re + 11] = C.w, re += 12;
                                ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglTangentBuffer), ke.bufferData(ke.ARRAY_BUFFER, pe, n)
                            }
                            if (Se) {
                                for (a = 0, s = Re.length; s > a; a++)
                                    if (l = Ie[Re[a]], h = l.vertexNormals, p = l.normal, 3 === h.length && K === !1)
                                        for (V = 0; 3 > V; V++) O = h[V], he[te] = O.x, he[te + 1] = O.y, he[te + 2] = O.z, te += 3;
                                    else
                                        for (V = 0; 3 > V; V++) he[te] = p.x, he[te + 1] = p.y, he[te + 2] = p.z, te += 3;
                                ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglNormalBuffer), ke.bufferData(ke.ARRAY_BUFFER, he, n)
                            }
                            if (Ee && De) {
                                for (a = 0, s = Re.length; s > a; a++)
                                    if (u = Re[a], v = De[u], void 0 !== v)
                                        for (V = 0; 3 > V; V++) F = v[V], le[$] = F.x, le[$ + 1] = F.y, $ += 2;
                                $ > 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglUVBuffer), ke.bufferData(ke.ARRAY_BUFFER, le, n))
                            }
                            if (Ee && Be) {
                                for (a = 0, s = Re.length; s > a; a++)
                                    if (u = Re[a], g = Be[u], void 0 !== g)
                                        for (V = 0; 3 > V; V++) U = g[V], ce[J] = U.x, ce[J + 1] = U.y, J += 2;
                                J > 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglUV2Buffer), ke.bufferData(ke.ARRAY_BUFFER, ce, n))
                            }
                            if (Ce) {
                                for (a = 0, s = Re.length; s > a; a++) be[ee] = Q, be[ee + 1] = Q + 1, be[ee + 2] = Q + 2, ee += 3, xe[ne] = Q, xe[ne + 1] = Q + 1, xe[ne + 2] = Q, xe[ne + 3] = Q + 2, xe[ne + 4] = Q + 1, xe[ne + 5] = Q + 2, ne += 6, Q += 3;
                                ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, t.__webglFaceBuffer), ke.bufferData(ke.ELEMENT_ARRAY_BUFFER, be, n), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, t.__webglLineBuffer), ke.bufferData(ke.ELEMENT_ARRAY_BUFFER, xe, n)
                            }
                            if (ye)
                                for (V = 0, N = ye.length; N > V; V++)
                                    if (Y = ye[V], Y.__original.needsUpdate) {
                                        if (se = 0, 1 === Y.size) {
                                            if (void 0 === Y.boundTo || "vertices" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], Y.array[se] = Y.value[l.a], Y.array[se + 1] = Y.value[l.b], Y.array[se + 2] = Y.value[l.c], se += 3;
                                            else if ("faces" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) X = Y.value[Re[a]], Y.array[se] = X, Y.array[se + 1] = X, Y.array[se + 2] = X, se += 3
                                        } else if (2 === Y.size) {
                                            if (void 0 === Y.boundTo || "vertices" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], y = Y.value[l.a], b = Y.value[l.b], x = Y.value[l.c], Y.array[se] = y.x, Y.array[se + 1] = y.y, Y.array[se + 2] = b.x, Y.array[se + 3] = b.y, Y.array[se + 4] = x.x, Y.array[se + 5] = x.y, se += 6;
                                            else if ("faces" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) X = Y.value[Re[a]], y = X, b = X, x = X, Y.array[se] = y.x, Y.array[se + 1] = y.y, Y.array[se + 2] = b.x, Y.array[se + 3] = b.y, Y.array[se + 4] = x.x, Y.array[se + 5] = x.y, se += 6
                                        } else if (3 === Y.size) {
                                            var Fe;
                                            if (Fe = "c" === Y.type ? ["r", "g", "b"] : ["x", "y", "z"], void 0 === Y.boundTo || "vertices" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], y = Y.value[l.a], b = Y.value[l.b], x = Y.value[l.c], Y.array[se] = y[Fe[0]], Y.array[se + 1] = y[Fe[1]], Y.array[se + 2] = y[Fe[2]], Y.array[se + 3] = b[Fe[0]], Y.array[se + 4] = b[Fe[1]], Y.array[se + 5] = b[Fe[2]], Y.array[se + 6] = x[Fe[0]], Y.array[se + 7] = x[Fe[1]], Y.array[se + 8] = x[Fe[2]], se += 9;
                                            else if ("faces" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) X = Y.value[Re[a]], y = X, b = X, x = X, Y.array[se] = y[Fe[0]], Y.array[se + 1] = y[Fe[1]], Y.array[se + 2] = y[Fe[2]], Y.array[se + 3] = b[Fe[0]], Y.array[se + 4] = b[Fe[1]], Y.array[se + 5] = b[Fe[2]], Y.array[se + 6] = x[Fe[0]], Y.array[se + 7] = x[Fe[1]], Y.array[se + 8] = x[Fe[2]], se += 9;
                                            else if ("faceVertices" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) X = Y.value[Re[a]], y = X[0], b = X[1], x = X[2], Y.array[se] = y[Fe[0]], Y.array[se + 1] = y[Fe[1]], Y.array[se + 2] = y[Fe[2]], Y.array[se + 3] = b[Fe[0]], Y.array[se + 4] = b[Fe[1]], Y.array[se + 5] = b[Fe[2]], Y.array[se + 6] = x[Fe[0]], Y.array[se + 7] = x[Fe[1]], Y.array[se + 8] = x[Fe[2]], se += 9
                                        } else if (4 === Y.size)
                                            if (void 0 === Y.boundTo || "vertices" === Y.boundTo)
                                                for (a = 0, s = Re.length; s > a; a++) l = Ie[Re[a]], y = Y.value[l.a], b = Y.value[l.b], x = Y.value[l.c], Y.array[se] = y.x, Y.array[se + 1] = y.y, Y.array[se + 2] = y.z, Y.array[se + 3] = y.w, Y.array[se + 4] = b.x, Y.array[se + 5] = b.y, Y.array[se + 6] = b.z, Y.array[se + 7] = b.w, Y.array[se + 8] = x.x, Y.array[se + 9] = x.y, Y.array[se + 10] = x.z, Y.array[se + 11] = x.w, se += 12;
                                            else if ("faces" === Y.boundTo)
                                            for (a = 0, s = Re.length; s > a; a++) X = Y.value[Re[a]], y = X, b = X, x = X, Y.array[se] = y.x, Y.array[se + 1] = y.y, Y.array[se + 2] = y.z, Y.array[se + 3] = y.w, Y.array[se + 4] = b.x, Y.array[se + 5] = b.y, Y.array[se + 6] = b.z, Y.array[se + 7] = b.w, Y.array[se + 8] = x.x, Y.array[se + 9] = x.y, Y.array[se + 10] = x.z, Y.array[se + 11] = x.w, se += 12;
                                        else if ("faceVertices" === Y.boundTo)
                                            for (a = 0, s = Re.length; s > a; a++) X = Y.value[Re[a]], y = X[0], b = X[1], x = X[2], Y.array[se] = y.x, Y.array[se + 1] = y.y, Y.array[se + 2] = y.z, Y.array[se + 3] = y.w, Y.array[se + 4] = b.x, Y.array[se + 5] = b.y, Y.array[se + 6] = b.z, Y.array[se + 7] = b.w, Y.array[se + 8] = x.x, Y.array[se + 9] = x.y, Y.array[se + 10] = x.z, Y.array[se + 11] = x.w, se += 12;
                                        ke.bindBuffer(ke.ARRAY_BUFFER, Y.buffer), ke.bufferData(ke.ARRAY_BUFFER, Y.array, n)
                                    }
                            i && (delete t.__inittedArrays, delete t.__colorArray, delete t.__normalArray, delete t.__tangentArray, delete t.__uvArray, delete t.__uv2Array, delete t.__faceArray, delete t.__vertexArray, delete t.__lineArray, delete t.__skinIndexArray, delete t.__skinWeightArray)
                        }
                    }

                    function f(e, t, r, n) {
                        for (var i = r.attributes, o = t.attributes, a = t.attributesKeys, s = 0, u = a.length; u > s; s++) {
                            var l = a[s],
                                c = o[l];
                            if (c >= 0) {
                                var h = i[l];
                                if (void 0 !== h) {
                                    var p = h.itemSize;
                                    ke.bindBuffer(ke.ARRAY_BUFFER, h.buffer), tt.enableAttribute(c), ke.vertexAttribPointer(c, p, ke.FLOAT, !1, 0, n * p * 4)
                                } else void 0 !== e.defaultAttributeValues && (2 === e.defaultAttributeValues[l].length ? ke.vertexAttrib2fv(c, e.defaultAttributeValues[l]) : 3 === e.defaultAttributeValues[l].length && ke.vertexAttrib3fv(c, e.defaultAttributeValues[l]))
                            }
                        }
                        tt.disableUnusedAttributes()
                    }

                    function m(e, t, r) {
                        var n = e.program.attributes;
                        if (-1 !== r.morphTargetBase && n.position >= 0 ? (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[r.morphTargetBase]), tt.enableAttribute(n.position), ke.vertexAttribPointer(n.position, 3, ke.FLOAT, !1, 0, 0)) : n.position >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglVertexBuffer), tt.enableAttribute(n.position), ke.vertexAttribPointer(n.position, 3, ke.FLOAT, !1, 0, 0)), r.morphTargetForcedOrder.length)
                            for (var i, o = 0, a = r.morphTargetForcedOrder, s = r.morphTargetInfluences; o < e.numSupportedMorphTargets && o < a.length;) i = n["morphTarget" + o], i >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[a[o]]), tt.enableAttribute(i), ke.vertexAttribPointer(i, 3, ke.FLOAT, !1, 0, 0)), i = n["morphNormal" + o], i >= 0 && e.morphNormals && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[a[o]]), tt.enableAttribute(i), ke.vertexAttribPointer(i, 3, ke.FLOAT, !1, 0, 0)), r.__webglMorphTargetInfluences[o] = s[a[o]], o++;
                        else {
                            var u = [],
                                s = r.morphTargetInfluences,
                                l = r.geometry.morphTargets;
                            s.length > l.length && (console.warn("THREE.WebGLRenderer: Influences array is bigger than morphTargets array."), s.length = l.length);
                            for (var c = 0, h = s.length; h > c; c++) {
                                var p = s[c];
                                u.push([p, c])
                            }
                            u.length > e.numSupportedMorphTargets ? (u.sort(y), u.length = e.numSupportedMorphTargets) : u.length > e.numSupportedMorphNormals ? u.sort(y) : 0 === u.length && u.push([0, 0]);
                            for (var i, o = 0, d = e.numSupportedMorphTargets; d > o; o++)
                                if (u[o]) {
                                    var f = u[o][1];
                                    i = n["morphTarget" + o], i >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[f]), tt.enableAttribute(i), ke.vertexAttribPointer(i, 3, ke.FLOAT, !1, 0, 0)), i = n["morphNormal" + o], i >= 0 && e.morphNormals && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[f]), tt.enableAttribute(i), ke.vertexAttribPointer(i, 3, ke.FLOAT, !1, 0, 0)), r.__webglMorphTargetInfluences[o] = s[f]
                                } else r.__webglMorphTargetInfluences[o] = 0
                        }
                        null !== e.program.uniforms.morphTargetInfluences && ke.uniform1fv(e.program.uniforms.morphTargetInfluences, r.__webglMorphTargetInfluences)
                    }

                    function v(e, t) {
                        return e.object.renderOrder !== t.object.renderOrder ? e.object.renderOrder - t.object.renderOrder : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
                    }

                    function g(e, t) {
                        return e.object.renderOrder !== t.object.renderOrder ? e.object.renderOrder - t.object.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
                    }

                    function y(e, t) {
                        return t[0] - e[0]
                    }

                    function b(t) {
                        if (t.visible !== !1) {
                            if (t instanceof e.Scene || t instanceof e.Group);
                            else if (E(t), t instanceof e.Light) Ee.push(t);
                            else if (t instanceof e.Sprite) Pe.push(t);
                            else if (t instanceof e.LensFlare) Re.push(t);
                            else {
                                var r = Se[t.id];
                                if (r && (t.frustumCulled === !1 || We.intersectsObject(t) === !0))
                                    for (var n = 0, i = r.length; i > n; n++) {
                                        var o = r[n];
                                        C(o), o.render = !0, Ie.sortObjects === !0 && (Ye.setFromMatrixPosition(t.matrixWorld), Ye.applyProjection(Xe), o.z = Ye.z)
                                    }
                            }
                            for (var n = 0, i = t.children.length; i > n; n++) b(t.children[n])
                        }
                    }

                    function x(t, r, n, i, o) {
                        for (var a, s = 0, u = t.length; u > s; s++) {
                            var l = t[s],
                                c = l.object,
                                h = l.buffer;
                            if (Q(c, r), o) a = o;
                            else {
                                if (a = l.material, !a) continue;
                                L(a)
                            }
                            Ie.setMaterialFaces(a), h instanceof e.BufferGeometry ? Ie.renderBufferDirect(r, n, i, a, h, c) : Ie.renderBuffer(r, n, i, a, h, c)
                        }
                    }

                    function _(e, t, r, n, i, o) {
                        for (var a, s = 0, u = e.length; u > s; s++) {
                            var l = e[s],
                                c = l.object;
                            if (c.visible) {
                                if (o) a = o;
                                else {
                                    if (a = l[t], !a) continue;
                                    L(a)
                                }
                                Ie.renderImmediateObject(r, n, i, a, c)
                            }
                        }
                    }

                    function w(e) {
                        var t = e.object,
                            r = t.material;
                        r.transparent ? (e.transparent = r, e.opaque = null) : (e.opaque = r, e.transparent = null)
                    }

                    function C(t) {
                        var r = t.object,
                            n = t.buffer,
                            i = r.geometry,
                            o = r.material;
                        if (o instanceof e.MeshFaceMaterial) {
                            var a = i instanceof e.BufferGeometry ? 0 : n.materialIndex;
                            o = o.materials[a], t.material = o, o.transparent ? Ae.push(t) : Me.push(t)
                        } else o && (t.material = o, o.transparent ? Ae.push(t) : Me.push(t))
                    }

                    function E(t) {
                        void 0 === t.__webglInit && (t.__webglInit = !0, t._modelViewMatrix = new e.Matrix4, t._normalMatrix = new e.Matrix3, t.addEventListener("removed", wt));
                        var i = t.geometry;
                        if (void 0 === i || void 0 === i.__webglInit && (i.__webglInit = !0, i.addEventListener("dispose", Ct), i instanceof e.BufferGeometry ? Ie.info.memory.geometries++ : t instanceof e.Mesh ? T(t, i) : t instanceof e.Line ? void 0 === i.__webglVertexBuffer && (n(i), s(i, t), i.verticesNeedUpdate = !0, i.colorsNeedUpdate = !0, i.lineDistancesNeedUpdate = !0) : t instanceof e.PointCloud && void 0 === i.__webglVertexBuffer && (r(i), a(i, t), i.verticesNeedUpdate = !0, i.colorsNeedUpdate = !0)), void 0 === t.__webglActive)
                            if (t.__webglActive = !0, t instanceof e.Mesh) {
                                if (i instanceof e.BufferGeometry) M(Se, i, t);
                                else if (i instanceof e.Geometry)
                                    for (var o = It[i.id], u = 0, l = o.length; l > u; u++) M(Se, o[u], t)
                            } else t instanceof e.Line || t instanceof e.PointCloud ? M(Se, i, t) : (t instanceof e.ImmediateRenderObject || t.immediateRenderCallback) && A(Te, t)
                    }

                    function S(e, t) {
                        for (var r, n, i = rt.get("OES_element_index_uint") ? 4294967296 : 65535, o = {}, a = e.morphTargets.length, s = e.morphNormals.length, u = {}, l = [], c = 0, h = e.faces.length; h > c; c++) {
                            var p = e.faces[c],
                                d = t ? p.materialIndex : 0;
                            d in o || (o[d] = {
                                hash: d,
                                counter: 0
                            }), r = o[d].hash + "_" + o[d].counter, r in u || (n = {
                                id: Dt++,
                                faces3: [],
                                materialIndex: d,
                                vertices: 0,
                                numMorphTargets: a,
                                numMorphNormals: s
                            }, u[r] = n, l.push(n)), u[r].vertices + 3 > i && (o[d].counter += 1, r = o[d].hash + "_" + o[d].counter, r in u || (n = {
                                id: Dt++,
                                faces3: [],
                                materialIndex: d,
                                vertices: 0,
                                numMorphTargets: a,
                                numMorphNormals: s
                            }, u[r] = n, l.push(n))), u[r].faces3.push(c), u[r].vertices += 3
                        }
                        return l
                    }

                    function T(t, r) {
                        var n = t.material,
                            o = !1;
                        (void 0 === It[r.id] || r.groupsNeedUpdate === !0) && (delete Se[t.id], It[r.id] = S(r, n instanceof e.MeshFaceMaterial), r.groupsNeedUpdate = !1);
                        for (var a = It[r.id], s = 0, l = a.length; l > s; s++) {
                            var c = a[s];
                            void 0 === c.__webglVertexBuffer ? (i(c), u(c, t), r.verticesNeedUpdate = !0, r.morphTargetsNeedUpdate = !0, r.elementsNeedUpdate = !0, r.uvsNeedUpdate = !0, r.normalsNeedUpdate = !0, r.tangentsNeedUpdate = !0, r.colorsNeedUpdate = !0, o = !0) : o = !1, (o || void 0 === t.__webglActive) && M(Se, c, t)
                        }
                        t.__webglActive = !0
                    }

                    function M(e, t, r) {
                        var n = r.id;
                        e[n] = e[n] || [], e[n].push({
                            id: n,
                            buffer: t,
                            object: r,
                            material: null,
                            z: 0
                        })
                    }

                    function A(e, t) {
                        e.push({
                            id: null,
                            object: t,
                            opaque: null,
                            transparent: null,
                            z: 0
                        })
                    }

                    function P(t) {
                        var r = t.geometry;
                        if (r instanceof e.BufferGeometry)
                            for (var n = r.attributes, i = r.attributesKeys, o = 0, a = i.length; a > o; o++) {
                                var s = i[o],
                                    u = n[s],
                                    c = "index" === s ? ke.ELEMENT_ARRAY_BUFFER : ke.ARRAY_BUFFER;
                                void 0 === u.buffer ? (u.buffer = ke.createBuffer(), ke.bindBuffer(c, u.buffer), ke.bufferData(c, u.array, u instanceof e.DynamicBufferAttribute ? ke.DYNAMIC_DRAW : ke.STATIC_DRAW), u.needsUpdate = !1) : u.needsUpdate === !0 && (ke.bindBuffer(c, u.buffer), void 0 === u.updateRange || -1 === u.updateRange.count ? ke.bufferSubData(c, 0, u.array) : 0 === u.updateRange.count ? console.error("THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually.") : (ke.bufferSubData(c, u.updateRange.offset * u.array.BYTES_PER_ELEMENT, u.array.subarray(u.updateRange.offset, u.updateRange.offset + u.updateRange.count)), u.updateRange.count = 0), u.needsUpdate = !1)
                            } else if (t instanceof e.Mesh) {
                                r.groupsNeedUpdate === !0 && T(t, r);
                                for (var f = It[r.id], o = 0, m = f.length; m > o; o++) {
                                    var v = f[o],
                                        g = l(t, v),
                                        y = g.attributes && R(g);
                                    (r.verticesNeedUpdate || r.morphTargetsNeedUpdate || r.elementsNeedUpdate || r.uvsNeedUpdate || r.normalsNeedUpdate || r.colorsNeedUpdate || r.tangentsNeedUpdate || y) && d(v, t, ke.DYNAMIC_DRAW, !r.dynamic, g)
                                }
                                r.verticesNeedUpdate = !1, r.morphTargetsNeedUpdate = !1, r.elementsNeedUpdate = !1, r.uvsNeedUpdate = !1, r.normalsNeedUpdate = !1, r.colorsNeedUpdate = !1, r.tangentsNeedUpdate = !1, g.attributes && k(g)
                            } else if (t instanceof e.Line) {
                            var g = l(t, r),
                                y = g.attributes && R(g);
                            (r.verticesNeedUpdate || r.colorsNeedUpdate || r.lineDistancesNeedUpdate || y) && p(r, ke.DYNAMIC_DRAW), r.verticesNeedUpdate = !1, r.colorsNeedUpdate = !1, r.lineDistancesNeedUpdate = !1, g.attributes && k(g)
                        } else if (t instanceof e.PointCloud) {
                            var g = l(t, r),
                                y = g.attributes && R(g);
                            (r.verticesNeedUpdate || r.colorsNeedUpdate || y) && h(r, ke.DYNAMIC_DRAW, t), r.verticesNeedUpdate = !1, r.colorsNeedUpdate = !1, g.attributes && k(g)
                        }
                    }

                    function R(e) {
                        for (var t in e.attributes)
                            if (e.attributes[t].needsUpdate) return !0;
                        return !1
                    }

                    function k(e) {
                        for (var t in e.attributes) e.attributes[t].needsUpdate = !1
                    }

                    function I(t) {
                        t instanceof e.Mesh || t instanceof e.PointCloud || t instanceof e.Line ? delete Se[t.id] : (t instanceof e.ImmediateRenderObject || t.immediateRenderCallback) && D(Te, t), delete t.__webglInit, delete t._modelViewMatrix, delete t._normalMatrix, delete t.__webglActive
                    }

                    function D(e, t) {
                        for (var r = e.length - 1; r >= 0; r--) e[r].object === t && e.splice(r, 1)
                    }

                    function B(t, r, n, i) {
                        t.addEventListener("dispose", Tt);
                        var o = Bt[t.type];
                        if (o) {
                            var a = e.ShaderLib[o];
                            t.__webglShader = {
                                uniforms: e.UniformsUtils.clone(a.uniforms),
                                vertexShader: a.vertexShader,
                                fragmentShader: a.fragmentShader
                            }
                        } else t.__webglShader = {
                            uniforms: t.uniforms,
                            vertexShader: t.vertexShader,
                            fragmentShader: t.fragmentShader
                        };
                        var s = le(r),
                            u = ce(r),
                            l = ue(i),
                            c = {
                                precision: fe,
                                supportsVertexTextures: ct,
                                map: !!t.map,
                                envMap: !!t.envMap,
                                envMapMode: t.envMap && t.envMap.mapping,
                                lightMap: !!t.lightMap,
                                bumpMap: !!t.bumpMap,
                                normalMap: !!t.normalMap,
                                specularMap: !!t.specularMap,
                                alphaMap: !!t.alphaMap,
                                combine: t.combine,
                                vertexColors: t.vertexColors,
                                fog: n,
                                useFog: t.fog,
                                fogExp: n instanceof e.FogExp2,
                                flatShading: t.shading === e.FlatShading,
                                sizeAttenuation: t.sizeAttenuation,
                                logarithmicDepthBuffer: _e,
                                skinning: t.skinning,
                                maxBones: l,
                                useVertexTexture: ht && i && i.skeleton && i.skeleton.useVertexTexture,
                                morphTargets: t.morphTargets,
                                morphNormals: t.morphNormals,
                                maxMorphTargets: Ie.maxMorphTargets,
                                maxMorphNormals: Ie.maxMorphNormals,
                                maxDirLights: s.directional,
                                maxPointLights: s.point,
                                maxSpotLights: s.spot,
                                maxHemiLights: s.hemi,
                                maxShadows: u,
                                shadowMapEnabled: Ie.shadowMapEnabled && i.receiveShadow && u > 0,
                                shadowMapType: Ie.shadowMapType,
                                shadowMapDebug: Ie.shadowMapDebug,
                                shadowMapCascade: Ie.shadowMapCascade,
                                alphaTest: t.alphaTest,
                                metal: t.metal,
                                wrapAround: t.wrapAround,
                                doubleSided: t.side === e.DoubleSide,
                                flipSided: t.side === e.BackSide
                            },
                            h = [];
                        if (o ? h.push(o) : (h.push(t.fragmentShader), h.push(t.vertexShader)), void 0 !== t.defines)
                            for (var p in t.defines) h.push(p), h.push(t.defines[p]);
                        for (var p in c) h.push(p), h.push(c[p]);
                        for (var d, f = h.join(), m = 0, v = De.length; v > m; m++) {
                            var g = De[m];
                            if (g.code === f) {
                                d = g, d.usedTimes++;
                                break
                            }
                        }
                        void 0 === d && (d = new e.WebGLProgram(Ie, f, t, c), De.push(d), Ie.info.memory.programs = De.length), t.program = d;
                        var y = d.attributes;
                        if (t.morphTargets) {
                            t.numSupportedMorphTargets = 0;
                            for (var b, x = "morphTarget", _ = 0; _ < Ie.maxMorphTargets; _++) b = x + _, y[b] >= 0 && t.numSupportedMorphTargets++
                        }
                        if (t.morphNormals) {
                            t.numSupportedMorphNormals = 0;
                            var b, x = "morphNormal";
                            for (_ = 0; _ < Ie.maxMorphNormals; _++) b = x + _, y[b] >= 0 && t.numSupportedMorphNormals++
                        }
                        t.uniformsList = [];
                        for (var w in t.__webglShader.uniforms) {
                            var C = t.program.uniforms[w];
                            C && t.uniformsList.push([t.__webglShader.uniforms[w], C])
                        }
                    }

                    function L(t) {
                        t.transparent === !0 ? tt.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha) : tt.setBlending(e.NoBlending), tt.setDepthTest(t.depthTest), tt.setDepthWrite(t.depthWrite), tt.setColorWrite(t.colorWrite), tt.setPolygonOffset(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
                    }

                    function V(t, r, n, i, o) {
                        Fe = 0, i.needsUpdate && (i.program && kt(i), B(i, r, n, o), i.needsUpdate = !1), i.morphTargets && (o.__webglMorphTargetInfluences || (o.__webglMorphTargetInfluences = new Float32Array(Ie.maxMorphTargets)));
                        var a = !1,
                            s = !1,
                            u = !1,
                            l = i.program,
                            c = l.uniforms,
                            h = i.__webglShader.uniforms;
                        if (l.id !== Be && (ke.useProgram(l.program), Be = l.id, a = !0, s = !0, u = !0), i.id !== Ve && (-1 === Ve && (u = !0), Ve = i.id, s = !0), (a || t !== Oe) && (ke.uniformMatrix4fv(c.projectionMatrix, !1, t.projectionMatrix.elements), _e && ke.uniform1f(c.logDepthBufFC, 2 / (Math.log(t.far + 1) / Math.LN2)), t !== Oe && (Oe = t), (i instanceof e.ShaderMaterial || i instanceof e.MeshPhongMaterial || i.envMap) && null !== c.cameraPosition && (Ye.setFromMatrixPosition(t.matrixWorld), ke.uniform3f(c.cameraPosition, Ye.x, Ye.y, Ye.z)), (i instanceof e.MeshPhongMaterial || i instanceof e.MeshLambertMaterial || i instanceof e.MeshBasicMaterial || i instanceof e.ShaderMaterial || i.skinning) && null !== c.viewMatrix && ke.uniformMatrix4fv(c.viewMatrix, !1, t.matrixWorldInverse.elements)), i.skinning)
                            if (o.bindMatrix && null !== c.bindMatrix && ke.uniformMatrix4fv(c.bindMatrix, !1, o.bindMatrix.elements), o.bindMatrixInverse && null !== c.bindMatrixInverse && ke.uniformMatrix4fv(c.bindMatrixInverse, !1, o.bindMatrixInverse.elements), ht && o.skeleton && o.skeleton.useVertexTexture) {
                                if (null !== c.boneTexture) {
                                    var p = Y();
                                    ke.uniform1i(c.boneTexture, p), Ie.setTexture(o.skeleton.boneTexture, p)
                                }
                                null !== c.boneTextureWidth && ke.uniform1i(c.boneTextureWidth, o.skeleton.boneTextureWidth), null !== c.boneTextureHeight && ke.uniform1i(c.boneTextureHeight, o.skeleton.boneTextureHeight)
                            } else o.skeleton && o.skeleton.boneMatrices && null !== c.boneGlobalMatrices && ke.uniformMatrix4fv(c.boneGlobalMatrices, !1, o.skeleton.boneMatrices);
                        return s && (n && i.fog && z(h, n), (i instanceof e.MeshPhongMaterial || i instanceof e.MeshLambertMaterial || i.lights) && (Qe && (u = !0, $(r), Qe = !1), u ? (G(h, Ze), q(h, !0)) : q(h, !1)), (i instanceof e.MeshBasicMaterial || i instanceof e.MeshLambertMaterial || i instanceof e.MeshPhongMaterial) && N(h, i), i instanceof e.LineBasicMaterial ? O(h, i) : i instanceof e.LineDashedMaterial ? (O(h, i), F(h, i)) : i instanceof e.PointCloudMaterial ? U(h, i) : i instanceof e.MeshPhongMaterial ? H(h, i) : i instanceof e.MeshLambertMaterial ? j(h, i) : i instanceof e.MeshDepthMaterial ? (h.mNear.value = t.near, h.mFar.value = t.far, h.opacity.value = i.opacity) : i instanceof e.MeshNormalMaterial && (h.opacity.value = i.opacity), o.receiveShadow && !i._shadowPass && W(h, r), K(i.uniformsList)), X(c, o), null !== c.modelMatrix && ke.uniformMatrix4fv(c.modelMatrix, !1, o.matrixWorld.elements), l
                    }

                    function N(t, r) {
                        t.opacity.value = r.opacity, t.diffuse.value = r.color, t.map.value = r.map, t.lightMap.value = r.lightMap, t.specularMap.value = r.specularMap, t.alphaMap.value = r.alphaMap, r.bumpMap && (t.bumpMap.value = r.bumpMap, t.bumpScale.value = r.bumpScale), r.normalMap && (t.normalMap.value = r.normalMap, t.normalScale.value.copy(r.normalScale));
                        var n;
                        if (r.map ? n = r.map : r.specularMap ? n = r.specularMap : r.normalMap ? n = r.normalMap : r.bumpMap ? n = r.bumpMap : r.alphaMap && (n = r.alphaMap), void 0 !== n) {
                            var i = n.offset,
                                o = n.repeat;
                            t.offsetRepeat.value.set(i.x, i.y, o.x, o.y)
                        }
                        t.envMap.value = r.envMap, t.flipEnvMap.value = r.envMap instanceof e.WebGLRenderTargetCube ? 1 : -1, t.reflectivity.value = r.reflectivity, t.refractionRatio.value = r.refractionRatio
                    }

                    function O(e, t) {
                        e.diffuse.value = t.color, e.opacity.value = t.opacity
                    }

                    function F(e, t) {
                        e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
                    }

                    function U(e, t) {
                        if (e.psColor.value = t.color, e.opacity.value = t.opacity, e.size.value = t.size, e.scale.value = he.height / 2, e.map.value = t.map, null !== t.map) {
                            var r = t.map.offset,
                                n = t.map.repeat;
                            e.offsetRepeat.value.set(r.x, r.y, n.x, n.y)
                        }
                    }

                    function z(t, r) {
                        t.fogColor.value = r.color, r instanceof e.Fog ? (t.fogNear.value = r.near, t.fogFar.value = r.far) : r instanceof e.FogExp2 && (t.fogDensity.value = r.density)
                    }

                    function H(e, t) {
                        e.shininess.value = t.shininess, e.emissive.value = t.emissive, e.specular.value = t.specular, t.wrapAround && e.wrapRGB.value.copy(t.wrapRGB)
                    }

                    function j(e, t) {
                        e.emissive.value = t.emissive, t.wrapAround && e.wrapRGB.value.copy(t.wrapRGB)
                    }

                    function G(e, t) {
                        e.ambientLightColor.value = t.ambient, e.directionalLightColor.value = t.directional.colors, e.directionalLightDirection.value = t.directional.positions, e.pointLightColor.value = t.point.colors, e.pointLightPosition.value = t.point.positions, e.pointLightDistance.value = t.point.distances, e.pointLightDecay.value = t.point.decays, e.spotLightColor.value = t.spot.colors, e.spotLightPosition.value = t.spot.positions, e.spotLightDistance.value = t.spot.distances, e.spotLightDirection.value = t.spot.directions, e.spotLightAngleCos.value = t.spot.anglesCos, e.spotLightExponent.value = t.spot.exponents, e.spotLightDecay.value = t.spot.decays, e.hemisphereLightSkyColor.value = t.hemi.skyColors, e.hemisphereLightGroundColor.value = t.hemi.groundColors, e.hemisphereLightDirection.value = t.hemi.positions
                    }

                    function q(e, t) {
                        e.ambientLightColor.needsUpdate = t, e.directionalLightColor.needsUpdate = t, e.directionalLightDirection.needsUpdate = t, e.pointLightColor.needsUpdate = t, e.pointLightPosition.needsUpdate = t, e.pointLightDistance.needsUpdate = t, e.pointLightDecay.needsUpdate = t, e.spotLightColor.needsUpdate = t, e.spotLightPosition.needsUpdate = t, e.spotLightDistance.needsUpdate = t, e.spotLightDirection.needsUpdate = t, e.spotLightAngleCos.needsUpdate = t, e.spotLightExponent.needsUpdate = t, e.spotLightDecay.needsUpdate = t, e.hemisphereLightSkyColor.needsUpdate = t, e.hemisphereLightGroundColor.needsUpdate = t, e.hemisphereLightDirection.needsUpdate = t
                    }

                    function W(t, r) {
                        if (t.shadowMatrix)
                            for (var n = 0, i = 0, o = r.length; o > i; i++) {
                                var a = r[i];
                                a.castShadow && (a instanceof e.SpotLight || a instanceof e.DirectionalLight && !a.shadowCascade) && (t.shadowMap.value[n] = a.shadowMap, t.shadowMapSize.value[n] = a.shadowMapSize, t.shadowMatrix.value[n] = a.shadowMatrix, t.shadowDarkness.value[n] = a.shadowDarkness, t.shadowBias.value[n] = a.shadowBias, n++)
                            }
                    }

                    function X(e, t) {
                        ke.uniformMatrix4fv(e.modelViewMatrix, !1, t._modelViewMatrix.elements), e.normalMatrix && ke.uniformMatrix3fv(e.normalMatrix, !1, t._normalMatrix.elements)
                    }

                    function Y() {
                        var t = Fe;
                        return t >= at && e.warn("WebGLRenderer: trying to use " + t + " texture units while this GPU supports only " + at), Fe += 1, t
                    }

                    function K(t) {
                        for (var r, n, i, o = 0, a = t.length; a > o; o++) {
                            var s = t[o][0];
                            if (s.needsUpdate !== !1) {
                                var u = s.type,
                                    l = s.value,
                                    c = t[o][1];
                                switch (u) {
                                    case "1i":
                                        ke.uniform1i(c, l);
                                        break;
                                    case "1f":
                                        ke.uniform1f(c, l);
                                        break;
                                    case "2f":
                                        ke.uniform2f(c, l[0], l[1]);
                                        break;
                                    case "3f":
                                        ke.uniform3f(c, l[0], l[1], l[2]);
                                        break;
                                    case "4f":
                                        ke.uniform4f(c, l[0], l[1], l[2], l[3]);
                                        break;
                                    case "1iv":
                                        ke.uniform1iv(c, l);
                                        break;
                                    case "3iv":
                                        ke.uniform3iv(c, l);
                                        break;
                                    case "1fv":
                                        ke.uniform1fv(c, l);
                                        break;
                                    case "2fv":
                                        ke.uniform2fv(c, l);
                                        break;
                                    case "3fv":
                                        ke.uniform3fv(c, l);
                                        break;
                                    case "4fv":
                                        ke.uniform4fv(c, l);
                                        break;
                                    case "Matrix3fv":
                                        ke.uniformMatrix3fv(c, !1, l);
                                        break;
                                    case "Matrix4fv":
                                        ke.uniformMatrix4fv(c, !1, l);
                                        break;
                                    case "i":
                                        ke.uniform1i(c, l);
                                        break;
                                    case "f":
                                        ke.uniform1f(c, l);
                                        break;
                                    case "v2":
                                        ke.uniform2f(c, l.x, l.y);
                                        break;
                                    case "v3":
                                        ke.uniform3f(c, l.x, l.y, l.z);
                                        break;
                                    case "v4":
                                        ke.uniform4f(c, l.x, l.y, l.z, l.w);
                                        break;
                                    case "c":
                                        ke.uniform3f(c, l.r, l.g, l.b);
                                        break;
                                    case "iv1":
                                        ke.uniform1iv(c, l);
                                        break;
                                    case "iv":
                                        ke.uniform3iv(c, l);
                                        break;
                                    case "fv1":
                                        ke.uniform1fv(c, l);
                                        break;
                                    case "fv":
                                        ke.uniform3fv(c, l);
                                        break;
                                    case "v2v":
                                        void 0 === s._array && (s._array = new Float32Array(2 * l.length));
                                        for (var h = 0, p = l.length; p > h; h++) i = 2 * h, s._array[i] = l[h].x, s._array[i + 1] = l[h].y;
                                        ke.uniform2fv(c, s._array);
                                        break;
                                    case "v3v":
                                        void 0 === s._array && (s._array = new Float32Array(3 * l.length));
                                        for (var h = 0, p = l.length; p > h; h++) i = 3 * h, s._array[i] = l[h].x, s._array[i + 1] = l[h].y, s._array[i + 2] = l[h].z;
                                        ke.uniform3fv(c, s._array);
                                        break;
                                    case "v4v":
                                        void 0 === s._array && (s._array = new Float32Array(4 * l.length));
                                        for (var h = 0, p = l.length; p > h; h++) i = 4 * h, s._array[i] = l[h].x, s._array[i + 1] = l[h].y, s._array[i + 2] = l[h].z, s._array[i + 3] = l[h].w;
                                        ke.uniform4fv(c, s._array);
                                        break;
                                    case "m3":
                                        ke.uniformMatrix3fv(c, !1, l.elements);
                                        break;
                                    case "m3v":
                                        void 0 === s._array && (s._array = new Float32Array(9 * l.length));
                                        for (var h = 0, p = l.length; p > h; h++) l[h].flattenToArrayOffset(s._array, 9 * h);
                                        ke.uniformMatrix3fv(c, !1, s._array);
                                        break;
                                    case "m4":
                                        ke.uniformMatrix4fv(c, !1, l.elements);
                                        break;
                                    case "m4v":
                                        void 0 === s._array && (s._array = new Float32Array(16 * l.length));
                                        for (var h = 0, p = l.length; p > h; h++) l[h].flattenToArrayOffset(s._array, 16 * h);
                                        ke.uniformMatrix4fv(c, !1, s._array);
                                        break;
                                    case "t":
                                        if (r = l, n = Y(), ke.uniform1i(c, n), !r) continue;
                                        r instanceof e.CubeTexture || r.image instanceof Array && 6 === r.image.length ? te(r, n) : r instanceof e.WebGLRenderTargetCube ? re(r, n) : Ie.setTexture(r, n);
                                        break;
                                    case "tv":
                                        void 0 === s._array && (s._array = []);
                                        for (var h = 0, p = s.value.length; p > h; h++) s._array[h] = Y();
                                        ke.uniform1iv(c, s._array);
                                        for (var h = 0, p = s.value.length; p > h; h++) r = s.value[h], n = s._array[h], r && Ie.setTexture(r, n);
                                        break;
                                    default:
                                        e.warn("THREE.WebGLRenderer: Unknown uniform type: " + u)
                                }
                            }
                        }
                    }

                    function Q(e, t) {
                        e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, e.matrixWorld), e._normalMatrix.getNormalMatrix(e._modelViewMatrix)
                    }

                    function Z(e, t, r, n) {
                        e[t] = r.r * n, e[t + 1] = r.g * n, e[t + 2] = r.b * n
                    }

                    function $(t) {
                        var r, n, i, o, a, s, u, l, c = 0,
                            h = 0,
                            p = 0,
                            d = Ze,
                            f = d.directional.colors,
                            m = d.directional.positions,
                            v = d.point.colors,
                            g = d.point.positions,
                            y = d.point.distances,
                            b = d.point.decays,
                            x = d.spot.colors,
                            _ = d.spot.positions,
                            w = d.spot.distances,
                            C = d.spot.directions,
                            E = d.spot.anglesCos,
                            S = d.spot.exponents,
                            T = d.spot.decays,
                            M = d.hemi.skyColors,
                            A = d.hemi.groundColors,
                            P = d.hemi.positions,
                            R = 0,
                            k = 0,
                            I = 0,
                            D = 0,
                            B = 0,
                            L = 0,
                            V = 0,
                            N = 0,
                            O = 0,
                            F = 0,
                            U = 0,
                            z = 0;
                        for (r = 0, n = t.length; n > r; r++)
                            if (i = t[r], !i.onlyShadow)
                                if (o = i.color, u = i.intensity, l = i.distance, i instanceof e.AmbientLight) {
                                    if (!i.visible) continue;
                                    c += o.r, h += o.g, p += o.b
                                } else if (i instanceof e.DirectionalLight) {
                            if (B += 1, !i.visible) continue;
                            Ke.setFromMatrixPosition(i.matrixWorld), Ye.setFromMatrixPosition(i.target.matrixWorld), Ke.sub(Ye), Ke.normalize(), O = 3 * R, m[O] = Ke.x, m[O + 1] = Ke.y, m[O + 2] = Ke.z, Z(f, O, o, u), R += 1
                        } else if (i instanceof e.PointLight) {
                            if (L += 1, !i.visible) continue;
                            F = 3 * k, Z(v, F, o, u), Ye.setFromMatrixPosition(i.matrixWorld), g[F] = Ye.x, g[F + 1] = Ye.y, g[F + 2] = Ye.z, y[k] = l, b[k] = 0 === i.distance ? 0 : i.decay, k += 1
                        } else if (i instanceof e.SpotLight) {
                            if (V += 1, !i.visible) continue;
                            U = 3 * I, Z(x, U, o, u), Ke.setFromMatrixPosition(i.matrixWorld), _[U] = Ke.x, _[U + 1] = Ke.y, _[U + 2] = Ke.z, w[I] = l, Ye.setFromMatrixPosition(i.target.matrixWorld), Ke.sub(Ye), Ke.normalize(), C[U] = Ke.x, C[U + 1] = Ke.y, C[U + 2] = Ke.z, E[I] = Math.cos(i.angle), S[I] = i.exponent, T[I] = 0 === i.distance ? 0 : i.decay, I += 1
                        } else if (i instanceof e.HemisphereLight) {
                            if (N += 1, !i.visible) continue;
                            Ke.setFromMatrixPosition(i.matrixWorld), Ke.normalize(), z = 3 * D, P[z] = Ke.x, P[z + 1] = Ke.y, P[z + 2] = Ke.z, a = i.color, s = i.groundColor, Z(M, z, a, u), Z(A, z, s, u), D += 1
                        }
                        for (r = 3 * R, n = Math.max(f.length, 3 * B); n > r; r++) f[r] = 0;
                        for (r = 3 * k, n = Math.max(v.length, 3 * L); n > r; r++) v[r] = 0;
                        for (r = 3 * I, n = Math.max(x.length, 3 * V); n > r; r++) x[r] = 0;
                        for (r = 3 * D, n = Math.max(M.length, 3 * N); n > r; r++) M[r] = 0;
                        for (r = 3 * D, n = Math.max(A.length, 3 * N); n > r; r++) A[r] = 0;
                        d.directional.length = R, d.point.length = k, d.spot.length = I, d.hemi.length = D, d.ambient[0] = c, d.ambient[1] = h, d.ambient[2] = p
                    }

                    function J(t, r, n) {
                        var i;
                        n ? (ke.texParameteri(t, ke.TEXTURE_WRAP_S, se(r.wrapS)), ke.texParameteri(t, ke.TEXTURE_WRAP_T, se(r.wrapT)), ke.texParameteri(t, ke.TEXTURE_MAG_FILTER, se(r.magFilter)), ke.texParameteri(t, ke.TEXTURE_MIN_FILTER, se(r.minFilter))) : (ke.texParameteri(t, ke.TEXTURE_WRAP_S, ke.CLAMP_TO_EDGE), ke.texParameteri(t, ke.TEXTURE_WRAP_T, ke.CLAMP_TO_EDGE), (r.wrapS !== e.ClampToEdgeWrapping || r.wrapT !== e.ClampToEdgeWrapping) && e.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( " + r.sourceFile + " )"), ke.texParameteri(t, ke.TEXTURE_MAG_FILTER, ae(r.magFilter)), ke.texParameteri(t, ke.TEXTURE_MIN_FILTER, ae(r.minFilter)), r.minFilter !== e.NearestFilter && r.minFilter !== e.LinearFilter && e.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( " + r.sourceFile + " )")), i = rt.get("EXT_texture_filter_anisotropic"), i && r.type !== e.FloatType && r.type !== e.HalfFloatType && (r.anisotropy > 1 || r.__currentAnisotropy) && (ke.texParameterf(t, i.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(r.anisotropy, Ie.getMaxAnisotropy())), r.__currentAnisotropy = r.anisotropy)
                    }

                    function ee(t, r) {
                        if (t.width > r || t.height > r) {
                            var n = r / Math.max(t.width, t.height),
                                i = document.createElement("canvas");
                            i.width = Math.floor(t.width * n), i.height = Math.floor(t.height * n);
                            var o = i.getContext("2d");
                            return o.drawImage(t, 0, 0, t.width, t.height, 0, 0, i.width, i.height), e.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + i.width + "x" + i.height, t), i
                        }
                        return t
                    }

                    function te(t, r) {
                        if (6 === t.image.length)
                            if (t.needsUpdate) {
                                t.image.__webglTextureCube || (t.addEventListener("dispose", Et), t.image.__webglTextureCube = ke.createTexture(), Ie.info.memory.textures++), ke.activeTexture(ke.TEXTURE0 + r), ke.bindTexture(ke.TEXTURE_CUBE_MAP, t.image.__webglTextureCube), ke.pixelStorei(ke.UNPACK_FLIP_Y_WEBGL, t.flipY);
                                for (var n = t instanceof e.CompressedTexture, i = t.image[0] instanceof e.DataTexture, o = [], a = 0; 6 > a; a++) !Ie.autoScaleCubemaps || n || i ? o[a] = i ? t.image[a].image : t.image[a] : o[a] = ee(t.image[a], lt);
                                var s = o[0],
                                    u = e.Math.isPowerOfTwo(s.width) && e.Math.isPowerOfTwo(s.height),
                                    l = se(t.format),
                                    c = se(t.type);
                                J(ke.TEXTURE_CUBE_MAP, t, u);
                                for (var a = 0; 6 > a; a++)
                                    if (n)
                                        for (var h, p = o[a].mipmaps, d = 0, f = p.length; f > d; d++) h = p[d], t.format !== e.RGBAFormat && t.format !== e.RGBFormat ? vt().indexOf(l) > -1 ? ke.compressedTexImage2D(ke.TEXTURE_CUBE_MAP_POSITIVE_X + a, d, l, h.width, h.height, 0, h.data) : e.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()") : ke.texImage2D(ke.TEXTURE_CUBE_MAP_POSITIVE_X + a, d, l, h.width, h.height, 0, l, c, h.data);
                                    else i ? ke.texImage2D(ke.TEXTURE_CUBE_MAP_POSITIVE_X + a, 0, l, o[a].width, o[a].height, 0, l, c, o[a].data) : ke.texImage2D(ke.TEXTURE_CUBE_MAP_POSITIVE_X + a, 0, l, l, c, o[a]);
                                t.generateMipmaps && u && ke.generateMipmap(ke.TEXTURE_CUBE_MAP), t.needsUpdate = !1, t.onUpdate && t.onUpdate()
                            } else ke.activeTexture(ke.TEXTURE0 + r), ke.bindTexture(ke.TEXTURE_CUBE_MAP, t.image.__webglTextureCube)
                    }

                    function re(e, t) {
                        ke.activeTexture(ke.TEXTURE0 + t), ke.bindTexture(ke.TEXTURE_CUBE_MAP, e.__webglTexture)
                    }

                    function ne(e, t, r) {
                        ke.bindFramebuffer(ke.FRAMEBUFFER, e), ke.framebufferTexture2D(ke.FRAMEBUFFER, ke.COLOR_ATTACHMENT0, r, t.__webglTexture, 0)
                    }

                    function ie(e, t) {
                        ke.bindRenderbuffer(ke.RENDERBUFFER, e), t.depthBuffer && !t.stencilBuffer ? (ke.renderbufferStorage(ke.RENDERBUFFER, ke.DEPTH_COMPONENT16, t.width, t.height), ke.framebufferRenderbuffer(ke.FRAMEBUFFER, ke.DEPTH_ATTACHMENT, ke.RENDERBUFFER, e)) : t.depthBuffer && t.stencilBuffer ? (ke.renderbufferStorage(ke.RENDERBUFFER, ke.DEPTH_STENCIL, t.width, t.height), ke.framebufferRenderbuffer(ke.FRAMEBUFFER, ke.DEPTH_STENCIL_ATTACHMENT, ke.RENDERBUFFER, e)) : ke.renderbufferStorage(ke.RENDERBUFFER, ke.RGBA4, t.width, t.height)
                    }

                    function oe(t) {
                        t instanceof e.WebGLRenderTargetCube ? (ke.bindTexture(ke.TEXTURE_CUBE_MAP, t.__webglTexture), ke.generateMipmap(ke.TEXTURE_CUBE_MAP), ke.bindTexture(ke.TEXTURE_CUBE_MAP, null)) : (ke.bindTexture(ke.TEXTURE_2D, t.__webglTexture), ke.generateMipmap(ke.TEXTURE_2D), ke.bindTexture(ke.TEXTURE_2D, null))
                    }

                    function ae(t) {
                        return t === e.NearestFilter || t === e.NearestMipMapNearestFilter || t === e.NearestMipMapLinearFilter ? ke.NEAREST : ke.LINEAR
                    }

                    function se(t) {
                        var r;
                        if (t === e.RepeatWrapping) return ke.REPEAT;
                        if (t === e.ClampToEdgeWrapping) return ke.CLAMP_TO_EDGE;
                        if (t === e.MirroredRepeatWrapping) return ke.MIRRORED_REPEAT;
                        if (t === e.NearestFilter) return ke.NEAREST;
                        if (t === e.NearestMipMapNearestFilter) return ke.NEAREST_MIPMAP_NEAREST;
                        if (t === e.NearestMipMapLinearFilter) return ke.NEAREST_MIPMAP_LINEAR;
                        if (t === e.LinearFilter) return ke.LINEAR;
                        if (t === e.LinearMipMapNearestFilter) return ke.LINEAR_MIPMAP_NEAREST;
                        if (t === e.LinearMipMapLinearFilter) return ke.LINEAR_MIPMAP_LINEAR;
                        if (t === e.UnsignedByteType) return ke.UNSIGNED_BYTE;
                        if (t === e.UnsignedShort4444Type) return ke.UNSIGNED_SHORT_4_4_4_4;
                        if (t === e.UnsignedShort5551Type) return ke.UNSIGNED_SHORT_5_5_5_1;
                        if (t === e.UnsignedShort565Type) return ke.UNSIGNED_SHORT_5_6_5;
                        if (t === e.ByteType) return ke.BYTE;
                        if (t === e.ShortType) return ke.SHORT;
                        if (t === e.UnsignedShortType) return ke.UNSIGNED_SHORT;
                        if (t === e.IntType) return ke.INT;
                        if (t === e.UnsignedIntType) return ke.UNSIGNED_INT;
                        if (t === e.FloatType) return ke.FLOAT;
                        if (r = rt.get("OES_texture_half_float"), null !== r && t === e.HalfFloatType) return r.HALF_FLOAT_OES;
                        if (t === e.AlphaFormat) return ke.ALPHA;
                        if (t === e.RGBFormat) return ke.RGB;
                        if (t === e.RGBAFormat) return ke.RGBA;
                        if (t === e.LuminanceFormat) return ke.LUMINANCE;
                        if (t === e.LuminanceAlphaFormat) return ke.LUMINANCE_ALPHA;
                        if (t === e.AddEquation) return ke.FUNC_ADD;
                        if (t === e.SubtractEquation) return ke.FUNC_SUBTRACT;
                        if (t === e.ReverseSubtractEquation) return ke.FUNC_REVERSE_SUBTRACT;
                        if (t === e.ZeroFactor) return ke.ZERO;
                        if (t === e.OneFactor) return ke.ONE;
                        if (t === e.SrcColorFactor) return ke.SRC_COLOR;
                        if (t === e.OneMinusSrcColorFactor) return ke.ONE_MINUS_SRC_COLOR;
                        if (t === e.SrcAlphaFactor) return ke.SRC_ALPHA;
                        if (t === e.OneMinusSrcAlphaFactor) return ke.ONE_MINUS_SRC_ALPHA;
                        if (t === e.DstAlphaFactor) return ke.DST_ALPHA;
                        if (t === e.OneMinusDstAlphaFactor) return ke.ONE_MINUS_DST_ALPHA;
                        if (t === e.DstColorFactor) return ke.DST_COLOR;
                        if (t === e.OneMinusDstColorFactor) return ke.ONE_MINUS_DST_COLOR;
                        if (t === e.SrcAlphaSaturateFactor) return ke.SRC_ALPHA_SATURATE;
                        if (r = rt.get("WEBGL_compressed_texture_s3tc"), null !== r) {
                            if (t === e.RGB_S3TC_DXT1_Format) return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (t === e.RGBA_S3TC_DXT1_Format) return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (t === e.RGBA_S3TC_DXT3_Format) return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (t === e.RGBA_S3TC_DXT5_Format) return r.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if (r = rt.get("WEBGL_compressed_texture_pvrtc"), null !== r) {
                            if (t === e.RGB_PVRTC_4BPPV1_Format) return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (t === e.RGB_PVRTC_2BPPV1_Format) return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (t === e.RGBA_PVRTC_4BPPV1_Format) return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (t === e.RGBA_PVRTC_2BPPV1_Format) return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (r = rt.get("EXT_blend_minmax"), null !== r) {
                            if (t === e.MinEquation) return r.MIN_EXT;
                            if (t === e.MaxEquation) return r.MAX_EXT
                        }
                        return 0
                    }

                    function ue(t) {
                        if (ht && t && t.skeleton && t.skeleton.useVertexTexture) return 1024;
                        var r = ke.getParameter(ke.MAX_VERTEX_UNIFORM_VECTORS),
                            n = Math.floor((r - 20) / 4),
                            i = n;
                        return void 0 !== t && t instanceof e.SkinnedMesh && (i = Math.min(t.skeleton.bones.length, i), i < t.skeleton.bones.length && e.warn("WebGLRenderer: too many bones - " + t.skeleton.bones.length + ", this GPU supports just " + i + " (try OpenGL instead of ANGLE)")), i
                    }

                    function le(t) {
                        for (var r = 0, n = 0, i = 0, o = 0, a = 0, s = t.length; s > a; a++) {
                            var u = t[a];
                            u.onlyShadow || u.visible === !1 || (u instanceof e.DirectionalLight && r++, u instanceof e.PointLight && n++, u instanceof e.SpotLight && i++, u instanceof e.HemisphereLight && o++)
                        }
                        return {
                            directional: r,
                            point: n,
                            spot: i,
                            hemi: o
                        }
                    }

                    function ce(t) {
                        for (var r = 0, n = 0, i = t.length; i > n; n++) {
                            var o = t[n];
                            o.castShadow && (o instanceof e.SpotLight && r++, o instanceof e.DirectionalLight && !o.shadowCascade && r++)
                        }
                        return r
                    }
                    t = t || {};
                    var he = void 0 !== t.canvas ? t.canvas : document.createElement("canvas"),
                        pe = void 0 !== t.context ? t.context : null,
                        de = 1,
                        fe = void 0 !== t.precision ? t.precision : "highp",
                        me = void 0 !== t.alpha ? t.alpha : !1,
                        ve = void 0 !== t.depth ? t.depth : !0,
                        ge = void 0 !== t.stencil ? t.stencil : !0,
                        ye = void 0 !== t.antialias ? t.antialias : !1,
                        be = void 0 !== t.premultipliedAlpha ? t.premultipliedAlpha : !0,
                        xe = void 0 !== t.preserveDrawingBuffer ? t.preserveDrawingBuffer : !1,
                        _e = void 0 !== t.logarithmicDepthBuffer ? t.logarithmicDepthBuffer : !1,
                        we = new e.Color(0),
                        Ce = 0,
                        Ee = [],
                        Se = {},
                        Te = [],
                        Me = [],
                        Ae = [],
                        Pe = [],
                        Re = [];
                    this.domElement = he, this.context = null, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.gammaFactor = 2, this.gammaInput = !1, this.gammaOutput = !1, this.shadowMapEnabled = !1, this.shadowMapType = e.PCFShadowMap, this.shadowMapCullFace = e.CullFaceFront, this.shadowMapDebug = !1, this.shadowMapCascade = !1, this.maxMorphTargets = 8, this.maxMorphNormals = 4, this.autoScaleCubemaps = !0, this.info = {
                        memory: {
                            programs: 0,
                            geometries: 0,
                            textures: 0
                        },
                        render: {
                            calls: 0,
                            vertices: 0,
                            faces: 0,
                            points: 0
                        }
                    };
                    var ke, Ie = this,
                        De = [],
                        Be = null,
                        Le = null,
                        Ve = -1,
                        Ne = "",
                        Oe = null,
                        Fe = 0,
                        Ue = 0,
                        ze = 0,
                        He = he.width,
                        je = he.height,
                        Ge = 0,
                        qe = 0,
                        We = new e.Frustum,
                        Xe = new e.Matrix4,
                        Ye = new e.Vector3,
                        Ke = new e.Vector3,
                        Qe = !0,
                        Ze = {
                            ambient: [0, 0, 0],
                            directional: {
                                length: 0,
                                colors: [],
                                positions: []
                            },
                            point: {
                                length: 0,
                                colors: [],
                                positions: [],
                                distances: [],
                                decays: []
                            },
                            spot: {
                                length: 0,
                                colors: [],
                                positions: [],
                                distances: [],
                                directions: [],
                                anglesCos: [],
                                exponents: [],
                                decays: []
                            },
                            hemi: {
                                length: 0,
                                skyColors: [],
                                groundColors: [],
                                positions: []
                            }
                        },
                        $e = function(e) {
                            e.preventDefault(), ot(), it(), Se = {}
                        };
                    try {
                        var Je = {
                            alpha: me,
                            depth: ve,
                            stencil: ge,
                            antialias: ye,
                            premultipliedAlpha: be,
                            preserveDrawingBuffer: xe
                        };
                        if (ke = pe || he.getContext("webgl", Je) || he.getContext("experimental-webgl", Je), null === ke) throw null !== he.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                        he.addEventListener("webglcontextlost", $e, !1)
                    } catch (et) {
                        e.error("THREE.WebGLRenderer: " + et)
                    }
                    this.dispose = function() {
                        he.removeEventListener("webglcontextlost", $e, !1)
                    };
                    var tt = new e.WebGLState(ke, se);
                    void 0 === ke.getShaderPrecisionFormat && (ke.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    });
                    var rt = new e.WebGLExtensions(ke);
                    rt.get("OES_texture_float"), rt.get("OES_texture_float_linear"), rt.get("OES_texture_half_float"), rt.get("OES_texture_half_float_linear"), rt.get("OES_standard_derivatives"), _e && rt.get("EXT_frag_depth");
                    var nt = function(e, t, r, n) {
                            be === !0 && (e *= n, t *= n, r *= n), ke.clearColor(e, t, r, n)
                        },
                        it = function() {
                            ke.clearColor(0, 0, 0, 1), ke.clearDepth(1), ke.clearStencil(0), ke.enable(ke.DEPTH_TEST), ke.depthFunc(ke.LEQUAL), ke.frontFace(ke.CCW), ke.cullFace(ke.BACK), ke.enable(ke.CULL_FACE), ke.enable(ke.BLEND), ke.blendEquation(ke.FUNC_ADD), ke.blendFunc(ke.SRC_ALPHA, ke.ONE_MINUS_SRC_ALPHA), ke.viewport(Ue, ze, He, je), nt(we.r, we.g, we.b, Ce)
                        },
                        ot = function() {
                            Be = null, Oe = null, Ne = "", Ve = -1, Qe = !0, tt.reset()
                        };
                    it(), this.context = ke, this.state = tt;
                    var at = ke.getParameter(ke.MAX_TEXTURE_IMAGE_UNITS),
                        st = ke.getParameter(ke.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
                        ut = ke.getParameter(ke.MAX_TEXTURE_SIZE),
                        lt = ke.getParameter(ke.MAX_CUBE_MAP_TEXTURE_SIZE),
                        ct = st > 0,
                        ht = ct && rt.get("OES_texture_float"),
                        pt = ke.getShaderPrecisionFormat(ke.VERTEX_SHADER, ke.HIGH_FLOAT),
                        dt = ke.getShaderPrecisionFormat(ke.VERTEX_SHADER, ke.MEDIUM_FLOAT),
                        ft = ke.getShaderPrecisionFormat(ke.FRAGMENT_SHADER, ke.HIGH_FLOAT),
                        mt = ke.getShaderPrecisionFormat(ke.FRAGMENT_SHADER, ke.MEDIUM_FLOAT),
                        vt = function() {
                            var e;
                            return function() {
                                if (void 0 !== e) return e;
                                if (e = [], rt.get("WEBGL_compressed_texture_pvrtc") || rt.get("WEBGL_compressed_texture_s3tc"))
                                    for (var t = ke.getParameter(ke.COMPRESSED_TEXTURE_FORMATS), r = 0; r < t.length; r++) e.push(t[r]);
                                return e
                            }
                        }(),
                        gt = pt.precision > 0 && ft.precision > 0,
                        yt = dt.precision > 0 && mt.precision > 0;
                    "highp" !== fe || gt || (yt ? (fe = "mediump", e.warn("THREE.WebGLRenderer: highp not supported, using mediump.")) : (fe = "lowp", e.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))), "mediump" !== fe || yt || (fe = "lowp", e.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));
                    var bt = new e.ShadowMapPlugin(this, Ee, Se, Te),
                        xt = new e.SpritePlugin(this, Pe),
                        _t = new e.LensFlarePlugin(this, Re);
                    this.getContext = function() {
                        return ke
                    }, this.forceContextLoss = function() {
                        rt.get("WEBGL_lose_context").loseContext()
                    }, this.supportsVertexTextures = function() {
                        return ct
                    }, this.supportsFloatTextures = function() {
                        return rt.get("OES_texture_float")
                    }, this.supportsHalfFloatTextures = function() {
                        return rt.get("OES_texture_half_float")
                    }, this.supportsStandardDerivatives = function() {
                        return rt.get("OES_standard_derivatives")
                    }, this.supportsCompressedTextureS3TC = function() {
                        return rt.get("WEBGL_compressed_texture_s3tc")
                    }, this.supportsCompressedTexturePVRTC = function() {
                        return rt.get("WEBGL_compressed_texture_pvrtc")
                    }, this.supportsBlendMinMax = function() {
                        return rt.get("EXT_blend_minmax")
                    }, this.getMaxAnisotropy = function() {
                        var e;
                        return function() {
                            if (void 0 !== e) return e;
                            var t = rt.get("EXT_texture_filter_anisotropic");
                            return e = null !== t ? ke.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                        }
                    }(), this.getPrecision = function() {
                        return fe
                    }, this.getPixelRatio = function() {
                        return de
                    }, this.setPixelRatio = function(e) {
                        de = e
                    }, this.setSize = function(e, t, r) {
                        he.width = e * de, he.height = t * de, r !== !1 && (he.style.width = e + "px", he.style.height = t + "px"), this.setViewport(0, 0, e, t)
                    }, this.setViewport = function(e, t, r, n) {
                        Ue = e * de, ze = t * de, He = r * de, je = n * de, ke.viewport(Ue, ze, He, je)
                    }, this.setScissor = function(e, t, r, n) {
                        ke.scissor(e * de, t * de, r * de, n * de)
                    }, this.enableScissorTest = function(e) {
                        e ? ke.enable(ke.SCISSOR_TEST) : ke.disable(ke.SCISSOR_TEST)
                    }, this.getClearColor = function() {
                        return we
                    }, this.setClearColor = function(e, t) {
                        we.set(e), Ce = void 0 !== t ? t : 1, nt(we.r, we.g, we.b, Ce)
                    }, this.getClearAlpha = function() {
                        return Ce
                    }, this.setClearAlpha = function(e) {
                        Ce = e, nt(we.r, we.g, we.b, Ce)
                    }, this.clear = function(e, t, r) {
                        var n = 0;
                        (void 0 === e || e) && (n |= ke.COLOR_BUFFER_BIT), (void 0 === t || t) && (n |= ke.DEPTH_BUFFER_BIT), (void 0 === r || r) && (n |= ke.STENCIL_BUFFER_BIT), ke.clear(n)
                    }, this.clearColor = function() {
                        ke.clear(ke.COLOR_BUFFER_BIT)
                    }, this.clearDepth = function() {
                        ke.clear(ke.DEPTH_BUFFER_BIT)
                    }, this.clearStencil = function() {
                        ke.clear(ke.STENCIL_BUFFER_BIT)
                    }, this.clearTarget = function(e, t, r, n) {
                        this.setRenderTarget(e), this.clear(t, r, n)
                    }, this.resetGLState = ot;
                    var wt = function(e) {
                            var t = e.target;
                            t.traverse(function(e) {
                                e.removeEventListener("remove", wt), I(e)
                            })
                        },
                        Ct = function(e) {
                            var t = e.target;
                            t.removeEventListener("dispose", Ct), At(t)
                        },
                        Et = function(e) {
                            var t = e.target;
                            t.removeEventListener("dispose", Et), Pt(t), Ie.info.memory.textures--
                        },
                        St = function(e) {
                            var t = e.target;
                            t.removeEventListener("dispose", St), Rt(t), Ie.info.memory.textures--
                        },
                        Tt = function(e) {
                            var t = e.target;
                            t.removeEventListener("dispose", Tt), kt(t)
                        },
                        Mt = function(e) {
                            for (var t = ["__webglVertexBuffer", "__webglNormalBuffer", "__webglTangentBuffer", "__webglColorBuffer", "__webglUVBuffer", "__webglUV2Buffer", "__webglSkinIndicesBuffer", "__webglSkinWeightsBuffer", "__webglFaceBuffer", "__webglLineBuffer", "__webglLineDistanceBuffer"], r = 0, n = t.length; n > r; r++) {
                                var i = t[r];
                                void 0 !== e[i] && (ke.deleteBuffer(e[i]), delete e[i])
                            }
                            if (void 0 !== e.__webglCustomAttributesList) {
                                for (var i in e.__webglCustomAttributesList) ke.deleteBuffer(e.__webglCustomAttributesList[i].buffer);
                                delete e.__webglCustomAttributesList
                            }
                            Ie.info.memory.geometries--
                        },
                        At = function(t) {
                            if (delete t.__webglInit, t instanceof e.BufferGeometry) {
                                for (var r in t.attributes) {
                                    var n = t.attributes[r];
                                    void 0 !== n.buffer && (ke.deleteBuffer(n.buffer), delete n.buffer)
                                }
                                Ie.info.memory.geometries--
                            } else {
                                var i = It[t.id];
                                if (void 0 !== i) {
                                    for (var o = 0, a = i.length; a > o; o++) {
                                        var s = i[o];
                                        if (void 0 !== s.numMorphTargets) {
                                            for (var u = 0, l = s.numMorphTargets; l > u; u++) ke.deleteBuffer(s.__webglMorphTargetsBuffers[u]);
                                            delete s.__webglMorphTargetsBuffers
                                        }
                                        if (void 0 !== s.numMorphNormals) {
                                            for (var u = 0, l = s.numMorphNormals; l > u; u++) ke.deleteBuffer(s.__webglMorphNormalsBuffers[u]);
                                            delete s.__webglMorphNormalsBuffers
                                        }
                                        Mt(s)
                                    }
                                    delete It[t.id]
                                } else Mt(t)
                            }
                            Ne = ""
                        },
                        Pt = function(e) {
                            if (e.image && e.image.__webglTextureCube) ke.deleteTexture(e.image.__webglTextureCube), delete e.image.__webglTextureCube;
                            else {
                                if (void 0 === e.__webglInit) return;
                                ke.deleteTexture(e.__webglTexture), delete e.__webglTexture, delete e.__webglInit
                            }
                        },
                        Rt = function(t) {
                            if (t && void 0 !== t.__webglTexture) {
                                if (ke.deleteTexture(t.__webglTexture), delete t.__webglTexture, t instanceof e.WebGLRenderTargetCube)
                                    for (var r = 0; 6 > r; r++) ke.deleteFramebuffer(t.__webglFramebuffer[r]), ke.deleteRenderbuffer(t.__webglRenderbuffer[r]);
                                else ke.deleteFramebuffer(t.__webglFramebuffer), ke.deleteRenderbuffer(t.__webglRenderbuffer);
                                delete t.__webglFramebuffer, delete t.__webglRenderbuffer
                            }
                        },
                        kt = function(e) {
                            var t = e.program.program;
                            if (void 0 !== t) {
                                e.program = void 0;
                                var r, n, i, o = !1;
                                for (r = 0, n = De.length; n > r; r++)
                                    if (i = De[r], i.program === t) {
                                        i.usedTimes--, 0 === i.usedTimes && (o = !0);
                                        break
                                    }
                                if (o === !0) {
                                    var a = [];
                                    for (r = 0, n = De.length; n > r; r++) i = De[r], i.program !== t && a.push(i);
                                    De = a, ke.deleteProgram(t), Ie.info.memory.programs--
                                }
                            }
                        };
                    this.renderBufferImmediate = function(t, r, n) {
                        if (tt.initAttributes(), t.hasPositions && !t.__webglVertexBuffer && (t.__webglVertexBuffer = ke.createBuffer()), t.hasNormals && !t.__webglNormalBuffer && (t.__webglNormalBuffer = ke.createBuffer()), t.hasUvs && !t.__webglUvBuffer && (t.__webglUvBuffer = ke.createBuffer()), t.hasColors && !t.__webglColorBuffer && (t.__webglColorBuffer = ke.createBuffer()), t.hasPositions && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglVertexBuffer), ke.bufferData(ke.ARRAY_BUFFER, t.positionArray, ke.DYNAMIC_DRAW), tt.enableAttribute(r.attributes.position), ke.vertexAttribPointer(r.attributes.position, 3, ke.FLOAT, !1, 0, 0)), t.hasNormals) {
                            if (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglNormalBuffer), n instanceof e.MeshPhongMaterial == !1 && n.shading === e.FlatShading) {
                                var i, o, a, s, u, l, c, h, p, d, f, m, v, g, y = 3 * t.count;
                                for (g = 0; y > g; g += 9) v = t.normalArray, s = v[g], c = v[g + 1], d = v[g + 2], u = v[g + 3], h = v[g + 4], f = v[g + 5], l = v[g + 6], p = v[g + 7], m = v[g + 8], i = (s + u + l) / 3, o = (c + h + p) / 3, a = (d + f + m) / 3, v[g] = i, v[g + 1] = o, v[g + 2] = a, v[g + 3] = i, v[g + 4] = o, v[g + 5] = a, v[g + 6] = i, v[g + 7] = o, v[g + 8] = a
                            }
                            ke.bufferData(ke.ARRAY_BUFFER, t.normalArray, ke.DYNAMIC_DRAW), tt.enableAttribute(r.attributes.normal), ke.vertexAttribPointer(r.attributes.normal, 3, ke.FLOAT, !1, 0, 0)
                        }
                        t.hasUvs && n.map && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglUvBuffer), ke.bufferData(ke.ARRAY_BUFFER, t.uvArray, ke.DYNAMIC_DRAW), tt.enableAttribute(r.attributes.uv), ke.vertexAttribPointer(r.attributes.uv, 2, ke.FLOAT, !1, 0, 0)), t.hasColors && n.vertexColors !== e.NoColors && (ke.bindBuffer(ke.ARRAY_BUFFER, t.__webglColorBuffer), ke.bufferData(ke.ARRAY_BUFFER, t.colorArray, ke.DYNAMIC_DRAW), tt.enableAttribute(r.attributes.color), ke.vertexAttribPointer(r.attributes.color, 3, ke.FLOAT, !1, 0, 0)), tt.disableUnusedAttributes(), ke.drawArrays(ke.TRIANGLES, 0, t.count), t.count = 0
                    }, this.renderBufferDirect = function(t, r, n, i, o, a) {
                        if (i.visible !== !1) {
                            P(a);
                            var s = V(t, r, n, i, a),
                                u = !1,
                                l = i.wireframe ? 1 : 0,
                                c = "direct_" + o.id + "_" + s.id + "_" + l;
                            if (c !== Ne && (Ne = c, u = !0), u && tt.initAttributes(), a instanceof e.Mesh) {
                                var h = i.wireframe === !0 ? ke.LINES : ke.TRIANGLES,
                                    p = o.attributes.index;
                                if (p) {
                                    var d, m;
                                    p.array instanceof Uint32Array && rt.get("OES_element_index_uint") ? (d = ke.UNSIGNED_INT, m = 4) : (d = ke.UNSIGNED_SHORT, m = 2);
                                    var v = o.offsets;
                                    if (0 === v.length) u && (f(i, s, o, 0), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, p.buffer)), ke.drawElements(h, p.array.length, d, 0), Ie.info.render.calls++, Ie.info.render.vertices += p.array.length, Ie.info.render.faces += p.array.length / 3;
                                    else {
                                        u = !0;
                                        for (var g = 0, y = v.length; y > g; g++) {
                                            var b = v[g].index;
                                            u && (f(i, s, o, b), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, p.buffer)), ke.drawElements(h, v[g].count, d, v[g].start * m), Ie.info.render.calls++, Ie.info.render.vertices += v[g].count, Ie.info.render.faces += v[g].count / 3
                                        }
                                    }
                                } else {
                                    u && f(i, s, o, 0);
                                    var x = o.attributes.position;
                                    ke.drawArrays(h, 0, x.array.length / x.itemSize), Ie.info.render.calls++, Ie.info.render.vertices += x.array.length / x.itemSize, Ie.info.render.faces += x.array.length / (3 * x.itemSize)
                                }
                            } else if (a instanceof e.PointCloud) {
                                var h = ke.POINTS,
                                    p = o.attributes.index;
                                if (p) {
                                    var d, m;
                                    p.array instanceof Uint32Array && rt.get("OES_element_index_uint") ? (d = ke.UNSIGNED_INT, m = 4) : (d = ke.UNSIGNED_SHORT, m = 2);
                                    var v = o.offsets;
                                    if (0 === v.length) u && (f(i, s, o, 0), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, p.buffer)), ke.drawElements(h, p.array.length, d, 0), Ie.info.render.calls++, Ie.info.render.points += p.array.length;
                                    else {
                                        v.length > 1 && (u = !0);
                                        for (var g = 0, y = v.length; y > g; g++) {
                                            var b = v[g].index;
                                            u && (f(i, s, o, b), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, p.buffer)), ke.drawElements(h, v[g].count, d, v[g].start * m), Ie.info.render.calls++, Ie.info.render.points += v[g].count
                                        }
                                    }
                                } else {
                                    u && f(i, s, o, 0);
                                    var x = o.attributes.position,
                                        v = o.offsets;
                                    if (0 === v.length) ke.drawArrays(h, 0, x.array.length / 3), Ie.info.render.calls++, Ie.info.render.points += x.array.length / 3;
                                    else
                                        for (var g = 0, y = v.length; y > g; g++) ke.drawArrays(h, v[g].index, v[g].count), Ie.info.render.calls++, Ie.info.render.points += v[g].count
                                }
                            } else if (a instanceof e.Line) {
                                var h = a.mode === e.LineStrip ? ke.LINE_STRIP : ke.LINES;
                                tt.setLineWidth(i.linewidth * de);
                                var p = o.attributes.index;
                                if (p) {
                                    var d, m;
                                    p.array instanceof Uint32Array ? (d = ke.UNSIGNED_INT, m = 4) : (d = ke.UNSIGNED_SHORT, m = 2);
                                    var v = o.offsets;
                                    if (0 === v.length) u && (f(i, s, o, 0), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, p.buffer)), ke.drawElements(h, p.array.length, d, 0), Ie.info.render.calls++, Ie.info.render.vertices += p.array.length;
                                    else {
                                        v.length > 1 && (u = !0);
                                        for (var g = 0, y = v.length; y > g; g++) {
                                            var b = v[g].index;
                                            u && (f(i, s, o, b), ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, p.buffer)), ke.drawElements(h, v[g].count, d, v[g].start * m), Ie.info.render.calls++, Ie.info.render.vertices += v[g].count
                                        }
                                    }
                                } else {
                                    u && f(i, s, o, 0);
                                    var x = o.attributes.position,
                                        v = o.offsets;
                                    if (0 === v.length) ke.drawArrays(h, 0, x.array.length / 3), Ie.info.render.calls++, Ie.info.render.vertices += x.array.length / 3;
                                    else
                                        for (var g = 0, y = v.length; y > g; g++) ke.drawArrays(h, v[g].index, v[g].count), Ie.info.render.calls++, Ie.info.render.vertices += v[g].count
                                }
                            }
                        }
                    }, this.renderBuffer = function(t, r, n, i, o, a) {
                        if (i.visible !== !1) {
                            P(a);
                            var s = V(t, r, n, i, a),
                                u = s.attributes,
                                l = !1,
                                c = i.wireframe ? 1 : 0,
                                h = o.id + "_" + s.id + "_" + c;
                            if (h !== Ne && (Ne = h, l = !0), l && tt.initAttributes(), !i.morphTargets && u.position >= 0 ? l && (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglVertexBuffer), tt.enableAttribute(u.position), ke.vertexAttribPointer(u.position, 3, ke.FLOAT, !1, 0, 0)) : a.morphTargetBase && m(i, o, a), l) {
                                if (o.__webglCustomAttributesList)
                                    for (var p = 0, d = o.__webglCustomAttributesList.length; d > p; p++) {
                                        var f = o.__webglCustomAttributesList[p];
                                        u[f.buffer.belongsToAttribute] >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, f.buffer), tt.enableAttribute(u[f.buffer.belongsToAttribute]), ke.vertexAttribPointer(u[f.buffer.belongsToAttribute], f.size, ke.FLOAT, !1, 0, 0))
                                    }
                                u.color >= 0 && (a.geometry.colors.length > 0 || a.geometry.faces.length > 0 ? (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglColorBuffer), tt.enableAttribute(u.color), ke.vertexAttribPointer(u.color, 3, ke.FLOAT, !1, 0, 0)) : void 0 !== i.defaultAttributeValues && ke.vertexAttrib3fv(u.color, i.defaultAttributeValues.color)), u.normal >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglNormalBuffer), tt.enableAttribute(u.normal), ke.vertexAttribPointer(u.normal, 3, ke.FLOAT, !1, 0, 0)), u.tangent >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglTangentBuffer), tt.enableAttribute(u.tangent), ke.vertexAttribPointer(u.tangent, 4, ke.FLOAT, !1, 0, 0)), u.uv >= 0 && (a.geometry.faceVertexUvs[0] ? (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglUVBuffer), tt.enableAttribute(u.uv), ke.vertexAttribPointer(u.uv, 2, ke.FLOAT, !1, 0, 0)) : void 0 !== i.defaultAttributeValues && ke.vertexAttrib2fv(u.uv, i.defaultAttributeValues.uv)), u.uv2 >= 0 && (a.geometry.faceVertexUvs[1] ? (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglUV2Buffer), tt.enableAttribute(u.uv2), ke.vertexAttribPointer(u.uv2, 2, ke.FLOAT, !1, 0, 0)) : void 0 !== i.defaultAttributeValues && ke.vertexAttrib2fv(u.uv2, i.defaultAttributeValues.uv2)), i.skinning && u.skinIndex >= 0 && u.skinWeight >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglSkinIndicesBuffer), tt.enableAttribute(u.skinIndex), ke.vertexAttribPointer(u.skinIndex, 4, ke.FLOAT, !1, 0, 0), ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglSkinWeightsBuffer), tt.enableAttribute(u.skinWeight), ke.vertexAttribPointer(u.skinWeight, 4, ke.FLOAT, !1, 0, 0)), u.lineDistance >= 0 && (ke.bindBuffer(ke.ARRAY_BUFFER, o.__webglLineDistanceBuffer), tt.enableAttribute(u.lineDistance), ke.vertexAttribPointer(u.lineDistance, 1, ke.FLOAT, !1, 0, 0))
                            }
                            if (tt.disableUnusedAttributes(), a instanceof e.Mesh) {
                                var v = o.__typeArray === Uint32Array ? ke.UNSIGNED_INT : ke.UNSIGNED_SHORT;
                                i.wireframe ? (tt.setLineWidth(i.wireframeLinewidth * de), l && ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, o.__webglLineBuffer), ke.drawElements(ke.LINES, o.__webglLineCount, v, 0)) : (l && ke.bindBuffer(ke.ELEMENT_ARRAY_BUFFER, o.__webglFaceBuffer), ke.drawElements(ke.TRIANGLES, o.__webglFaceCount, v, 0)), Ie.info.render.calls++, Ie.info.render.vertices += o.__webglFaceCount, Ie.info.render.faces += o.__webglFaceCount / 3
                            } else if (a instanceof e.Line) {
                                var g = a.mode === e.LineStrip ? ke.LINE_STRIP : ke.LINES;
                                tt.setLineWidth(i.linewidth * de), ke.drawArrays(g, 0, o.__webglLineCount), Ie.info.render.calls++
                            } else a instanceof e.PointCloud && (ke.drawArrays(ke.POINTS, 0, o.__webglParticleCount), Ie.info.render.calls++, Ie.info.render.points += o.__webglParticleCount)
                        }
                    }, this.render = function(t, r, n, i) {
                        if (r instanceof e.Camera == !1) return void e.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                        var o = t.fog;
                        Ne = "", Ve = -1, Oe = null, Qe = !0, t.autoUpdate === !0 && t.updateMatrixWorld(), void 0 === r.parent && r.updateMatrixWorld(), t.traverse(function(t) {
                            t instanceof e.SkinnedMesh && t.skeleton.update()
                        }), r.matrixWorldInverse.getInverse(r.matrixWorld), Xe.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse), We.setFromMatrix(Xe), Ee.length = 0, Me.length = 0, Ae.length = 0, Pe.length = 0, Re.length = 0, b(t), Ie.sortObjects === !0 && (Me.sort(v), Ae.sort(g)), bt.render(t, r), Ie.info.render.calls = 0, Ie.info.render.vertices = 0, Ie.info.render.faces = 0, Ie.info.render.points = 0, this.setRenderTarget(n), (this.autoClear || i) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);
                        for (var a = 0, s = Te.length; s > a; a++) {
                            var u = Te[a],
                                l = u.object;
                            l.visible && (Q(l, r), w(u))
                        }
                        if (t.overrideMaterial) {
                            var c = t.overrideMaterial;
                            L(c), x(Me, r, Ee, o, c), x(Ae, r, Ee, o, c), _(Te, "", r, Ee, o, c)
                        } else tt.setBlending(e.NoBlending), x(Me, r, Ee, o, null), _(Te, "opaque", r, Ee, o, null), x(Ae, r, Ee, o, null), _(Te, "transparent", r, Ee, o, null);
                        xt.render(t, r), _t.render(t, r, Ge, qe), n && n.generateMipmaps && n.minFilter !== e.NearestFilter && n.minFilter !== e.LinearFilter && oe(n), tt.setDepthTest(!0), tt.setDepthWrite(!0), tt.setColorWrite(!0)
                    }, this.renderImmediateObject = function(e, t, r, n, i) {
                        var o = V(e, t, r, n, i);
                        Ne = "", Ie.setMaterialFaces(n), i.immediateRenderCallback ? i.immediateRenderCallback(o, ke, We) : i.render(function(e) {
                            Ie.renderBufferImmediate(e, o, n)
                        })
                    };
                    var It = {},
                        Dt = 0,
                        Bt = {
                            MeshDepthMaterial: "depth",
                            MeshNormalMaterial: "normal",
                            MeshBasicMaterial: "basic",
                            MeshLambertMaterial: "lambert",
                            MeshPhongMaterial: "phong",
                            LineBasicMaterial: "basic",
                            LineDashedMaterial: "dashed",
                            PointCloudMaterial: "particle_basic"
                        };
                    this.setFaceCulling = function(t, r) {
                        t === e.CullFaceNone ? ke.disable(ke.CULL_FACE) : (r === e.FrontFaceDirectionCW ? ke.frontFace(ke.CW) : ke.frontFace(ke.CCW), t === e.CullFaceBack ? ke.cullFace(ke.BACK) : t === e.CullFaceFront ? ke.cullFace(ke.FRONT) : ke.cullFace(ke.FRONT_AND_BACK), ke.enable(ke.CULL_FACE))
                    }, this.setMaterialFaces = function(t) {
                        tt.setDoubleSided(t.side === e.DoubleSide), tt.setFlipSided(t.side === e.BackSide)
                    }, this.uploadTexture = function(t) {
                        void 0 === t.__webglInit && (t.__webglInit = !0, t.addEventListener("dispose", Et), t.__webglTexture = ke.createTexture(), Ie.info.memory.textures++), ke.bindTexture(ke.TEXTURE_2D, t.__webglTexture), ke.pixelStorei(ke.UNPACK_FLIP_Y_WEBGL, t.flipY), ke.pixelStorei(ke.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha), ke.pixelStorei(ke.UNPACK_ALIGNMENT, t.unpackAlignment), t.image = ee(t.image, ut);
                        var r = t.image,
                            n = e.Math.isPowerOfTwo(r.width) && e.Math.isPowerOfTwo(r.height),
                            i = se(t.format),
                            o = se(t.type);
                        J(ke.TEXTURE_2D, t, n);
                        var a, s = t.mipmaps;
                        if (t instanceof e.DataTexture)
                            if (s.length > 0 && n) {
                                for (var u = 0, l = s.length; l > u; u++) a = s[u], ke.texImage2D(ke.TEXTURE_2D, u, i, a.width, a.height, 0, i, o, a.data);
                                t.generateMipmaps = !1
                            } else ke.texImage2D(ke.TEXTURE_2D, 0, i, r.width, r.height, 0, i, o, r.data);
                        else if (t instanceof e.CompressedTexture)
                            for (var u = 0, l = s.length; l > u; u++) a = s[u], t.format !== e.RGBAFormat && t.format !== e.RGBFormat ? vt().indexOf(i) > -1 ? ke.compressedTexImage2D(ke.TEXTURE_2D, u, i, a.width, a.height, 0, a.data) : e.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : ke.texImage2D(ke.TEXTURE_2D, u, i, a.width, a.height, 0, i, o, a.data);
                        else if (s.length > 0 && n) {
                            for (var u = 0, l = s.length; l > u; u++) a = s[u], ke.texImage2D(ke.TEXTURE_2D, u, i, i, o, a);
                            t.generateMipmaps = !1
                        } else ke.texImage2D(ke.TEXTURE_2D, 0, i, i, o, t.image);
                        t.generateMipmaps && n && ke.generateMipmap(ke.TEXTURE_2D), t.needsUpdate = !1, t.onUpdate && t.onUpdate()
                    }, this.setTexture = function(e, t) {
                        ke.activeTexture(ke.TEXTURE0 + t), e.needsUpdate ? Ie.uploadTexture(e) : ke.bindTexture(ke.TEXTURE_2D, e.__webglTexture)
                    }, this.setRenderTarget = function(t) {
                        var r = t instanceof e.WebGLRenderTargetCube;
                        if (t && void 0 === t.__webglFramebuffer) {
                            void 0 === t.depthBuffer && (t.depthBuffer = !0), void 0 === t.stencilBuffer && (t.stencilBuffer = !0), t.addEventListener("dispose", St), t.__webglTexture = ke.createTexture(), Ie.info.memory.textures++;
                            var n = e.Math.isPowerOfTwo(t.width) && e.Math.isPowerOfTwo(t.height),
                                i = se(t.format),
                                o = se(t.type);
                            if (r) {
                                t.__webglFramebuffer = [], t.__webglRenderbuffer = [], ke.bindTexture(ke.TEXTURE_CUBE_MAP, t.__webglTexture), J(ke.TEXTURE_CUBE_MAP, t, n);
                                for (var a = 0; 6 > a; a++) t.__webglFramebuffer[a] = ke.createFramebuffer(), t.__webglRenderbuffer[a] = ke.createRenderbuffer(), ke.texImage2D(ke.TEXTURE_CUBE_MAP_POSITIVE_X + a, 0, i, t.width, t.height, 0, i, o, null), ne(t.__webglFramebuffer[a], t, ke.TEXTURE_CUBE_MAP_POSITIVE_X + a), ie(t.__webglRenderbuffer[a], t);
                                n && ke.generateMipmap(ke.TEXTURE_CUBE_MAP)
                            } else t.__webglFramebuffer = ke.createFramebuffer(), t.shareDepthFrom ? t.__webglRenderbuffer = t.shareDepthFrom.__webglRenderbuffer : t.__webglRenderbuffer = ke.createRenderbuffer(), ke.bindTexture(ke.TEXTURE_2D, t.__webglTexture), J(ke.TEXTURE_2D, t, n), ke.texImage2D(ke.TEXTURE_2D, 0, i, t.width, t.height, 0, i, o, null), ne(t.__webglFramebuffer, t, ke.TEXTURE_2D), t.shareDepthFrom ? t.depthBuffer && !t.stencilBuffer ? ke.framebufferRenderbuffer(ke.FRAMEBUFFER, ke.DEPTH_ATTACHMENT, ke.RENDERBUFFER, t.__webglRenderbuffer) : t.depthBuffer && t.stencilBuffer && ke.framebufferRenderbuffer(ke.FRAMEBUFFER, ke.DEPTH_STENCIL_ATTACHMENT, ke.RENDERBUFFER, t.__webglRenderbuffer) : ie(t.__webglRenderbuffer, t), n && ke.generateMipmap(ke.TEXTURE_2D);
                            r ? ke.bindTexture(ke.TEXTURE_CUBE_MAP, null) : ke.bindTexture(ke.TEXTURE_2D, null), ke.bindRenderbuffer(ke.RENDERBUFFER, null), ke.bindFramebuffer(ke.FRAMEBUFFER, null)
                        }
                        var s, u, l, c, h;
                        t ? (s = r ? t.__webglFramebuffer[t.activeCubeFace] : t.__webglFramebuffer, u = t.width, l = t.height, c = 0, h = 0) : (s = null, u = He, l = je, c = Ue, h = ze), s !== Le && (ke.bindFramebuffer(ke.FRAMEBUFFER, s), ke.viewport(c, h, u, l), Le = s), Ge = u, qe = l
                    }, this.readRenderTargetPixels = function(t, r, n, i, o, a) {
                        if (!(t instanceof e.WebGLRenderTarget)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                        if (t.__webglFramebuffer) {
                            if (t.format !== e.RGBAFormat) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.");
                            var s = !1;
                            t.__webglFramebuffer !== Le && (ke.bindFramebuffer(ke.FRAMEBUFFER, t.__webglFramebuffer), s = !0), ke.checkFramebufferStatus(ke.FRAMEBUFFER) === ke.FRAMEBUFFER_COMPLETE ? ke.readPixels(r, n, i, o, ke.RGBA, ke.UNSIGNED_BYTE, a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."), s && ke.bindFramebuffer(ke.FRAMEBUFFER, Le)
                        }
                    }, this.initMaterial = function() {
                        e.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
                    }, this.addPrePlugin = function() {
                        e.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
                    }, this.addPostPlugin = function() {
                        e.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
                    }, this.updateShadowMap = function() {
                        e.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
                    }
                }, e.WebGLRenderTarget = function(t, r, n) {
                    this.width = t, this.height = r, n = n || {}, this.wrapS = void 0 !== n.wrapS ? n.wrapS : e.ClampToEdgeWrapping, this.wrapT = void 0 !== n.wrapT ? n.wrapT : e.ClampToEdgeWrapping, this.magFilter = void 0 !== n.magFilter ? n.magFilter : e.LinearFilter, this.minFilter = void 0 !== n.minFilter ? n.minFilter : e.LinearMipMapLinearFilter, this.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, this.offset = new e.Vector2(0, 0), this.repeat = new e.Vector2(1, 1), this.format = void 0 !== n.format ? n.format : e.RGBAFormat, this.type = void 0 !== n.type ? n.type : e.UnsignedByteType, this.depthBuffer = void 0 !== n.depthBuffer ? n.depthBuffer : !0, this.stencilBuffer = void 0 !== n.stencilBuffer ? n.stencilBuffer : !0, this.generateMipmaps = !0, this.shareDepthFrom = void 0 !== n.shareDepthFrom ? n.shareDepthFrom : null
                }, e.WebGLRenderTarget.prototype = {
                    constructor: e.WebGLRenderTarget,
                    setSize: function(e, t) {
                        (this.width !== e || this.height !== t) && (this.width = e, this.height = t, this.dispose())
                    },
                    clone: function() {
                        var t = new e.WebGLRenderTarget(this.width, this.height);
                        return t.wrapS = this.wrapS, t.wrapT = this.wrapT, t.magFilter = this.magFilter, t.minFilter = this.minFilter, t.anisotropy = this.anisotropy, t.offset.copy(this.offset), t.repeat.copy(this.repeat), t.format = this.format, t.type = this.type, t.depthBuffer = this.depthBuffer, t.stencilBuffer = this.stencilBuffer, t.generateMipmaps = this.generateMipmaps, t.shareDepthFrom = this.shareDepthFrom, t
                    },
                    dispose: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }, e.EventDispatcher.prototype.apply(e.WebGLRenderTarget.prototype), e.WebGLRenderTargetCube = function(t, r, n) {
                    e.WebGLRenderTarget.call(this, t, r, n), this.activeCubeFace = 0
                }, e.WebGLRenderTargetCube.prototype = Object.create(e.WebGLRenderTarget.prototype), e.WebGLRenderTargetCube.prototype.constructor = e.WebGLRenderTargetCube, e.WebGLExtensions = function(t) {
                    var r = {};
                    this.get = function(n) {
                        if (void 0 !== r[n]) return r[n];
                        var i;
                        switch (n) {
                            case "EXT_texture_filter_anisotropic":
                                i = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                                break;
                            case "WEBGL_compressed_texture_s3tc":
                                i = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                                break;
                            case "WEBGL_compressed_texture_pvrtc":
                                i = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                                break;
                            default:
                                i = t.getExtension(n)
                        }
                        return null === i && e.warn("THREE.WebGLRenderer: " + n + " extension not supported."), r[n] = i, i
                    }
                }, e.WebGLProgram = function() {
                    var t = 0,
                        r = function(e) {
                            var t, r, n = [];
                            for (var i in e) t = e[i], t !== !1 && (r = "#define " + i + " " + t, n.push(r));
                            return n.join("\n")
                        },
                        n = function(e, t, r) {
                            for (var n = {}, i = 0, o = r.length; o > i; i++) {
                                var a = r[i];
                                n[a] = e.getUniformLocation(t, a)
                            }
                            return n
                        },
                        i = function(e, t, r) {
                            for (var n = {}, i = 0, o = r.length; o > i; i++) {
                                var a = r[i];
                                n[a] = e.getAttribLocation(t, a)
                            }
                            return n
                        };
                    return function(o, a, s, u) {
                        var l = o,
                            c = l.context,
                            h = s.defines,
                            p = s.__webglShader.uniforms,
                            d = s.attributes,
                            f = s.__webglShader.vertexShader,
                            m = s.__webglShader.fragmentShader,
                            v = s.index0AttributeName;
                        void 0 === v && u.morphTargets === !0 && (v = "position");
                        var g = "SHADOWMAP_TYPE_BASIC";
                        u.shadowMapType === e.PCFShadowMap ? g = "SHADOWMAP_TYPE_PCF" : u.shadowMapType === e.PCFSoftShadowMap && (g = "SHADOWMAP_TYPE_PCF_SOFT");
                        var y = "ENVMAP_TYPE_CUBE",
                            b = "ENVMAP_MODE_REFLECTION",
                            x = "ENVMAP_BLENDING_MULTIPLY";
                        if (u.envMap) {
                            switch (s.envMap.mapping) {
                                case e.CubeReflectionMapping:
                                case e.CubeRefractionMapping:
                                    y = "ENVMAP_TYPE_CUBE";
                                    break;
                                case e.EquirectangularReflectionMapping:
                                case e.EquirectangularRefractionMapping:
                                    y = "ENVMAP_TYPE_EQUIREC";
                                    break;
                                case e.SphericalReflectionMapping:
                                    y = "ENVMAP_TYPE_SPHERE"
                            }
                            switch (s.envMap.mapping) {
                                case e.CubeRefractionMapping:
                                case e.EquirectangularRefractionMapping:
                                    b = "ENVMAP_MODE_REFRACTION"
                            }
                            switch (s.combine) {
                                case e.MultiplyOperation:
                                    x = "ENVMAP_BLENDING_MULTIPLY";
                                    break;
                                case e.MixOperation:
                                    x = "ENVMAP_BLENDING_MIX";
                                    break;
                                case e.AddOperation:
                                    x = "ENVMAP_BLENDING_ADD"
                            }
                        }
                        var _, w, C = o.gammaFactor > 0 ? o.gammaFactor : 1,
                            E = r(h),
                            S = c.createProgram();
                        s instanceof e.RawShaderMaterial ? (_ = "", w = "") : (_ = ["precision " + u.precision + " float;", "precision " + u.precision + " int;", E, u.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", l.gammaInput ? "#define GAMMA_INPUT" : "", l.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define GAMMA_FACTOR " + C, "#define MAX_DIR_LIGHTS " + u.maxDirLights, "#define MAX_POINT_LIGHTS " + u.maxPointLights, "#define MAX_SPOT_LIGHTS " + u.maxSpotLights, "#define MAX_HEMI_LIGHTS " + u.maxHemiLights, "#define MAX_SHADOWS " + u.maxShadows, "#define MAX_BONES " + u.maxBones, u.map ? "#define USE_MAP" : "", u.envMap ? "#define USE_ENVMAP" : "", u.envMap ? "#define " + b : "", u.lightMap ? "#define USE_LIGHTMAP" : "", u.bumpMap ? "#define USE_BUMPMAP" : "", u.normalMap ? "#define USE_NORMALMAP" : "", u.specularMap ? "#define USE_SPECULARMAP" : "", u.alphaMap ? "#define USE_ALPHAMAP" : "", u.vertexColors ? "#define USE_COLOR" : "", u.flatShading ? "#define FLAT_SHADED" : "", u.skinning ? "#define USE_SKINNING" : "", u.useVertexTexture ? "#define BONE_TEXTURE" : "", u.morphTargets ? "#define USE_MORPHTARGETS" : "", u.morphNormals ? "#define USE_MORPHNORMALS" : "", u.wrapAround ? "#define WRAP_AROUND" : "", u.doubleSided ? "#define DOUBLE_SIDED" : "", u.flipSided ? "#define FLIP_SIDED" : "", u.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", u.shadowMapEnabled ? "#define " + g : "", u.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", u.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", u.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", u.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "attribute vec2 uv2;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", ""].join("\n"), w = ["precision " + u.precision + " float;", "precision " + u.precision + " int;", u.bumpMap || u.normalMap || u.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", E, "#define MAX_DIR_LIGHTS " + u.maxDirLights, "#define MAX_POINT_LIGHTS " + u.maxPointLights, "#define MAX_SPOT_LIGHTS " + u.maxSpotLights, "#define MAX_HEMI_LIGHTS " + u.maxHemiLights, "#define MAX_SHADOWS " + u.maxShadows, u.alphaTest ? "#define ALPHATEST " + u.alphaTest : "", l.gammaInput ? "#define GAMMA_INPUT" : "", l.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define GAMMA_FACTOR " + C, u.useFog && u.fog ? "#define USE_FOG" : "", u.useFog && u.fogExp ? "#define FOG_EXP2" : "", u.map ? "#define USE_MAP" : "", u.envMap ? "#define USE_ENVMAP" : "", u.envMap ? "#define " + y : "", u.envMap ? "#define " + b : "", u.envMap ? "#define " + x : "", u.lightMap ? "#define USE_LIGHTMAP" : "", u.bumpMap ? "#define USE_BUMPMAP" : "", u.normalMap ? "#define USE_NORMALMAP" : "", u.specularMap ? "#define USE_SPECULARMAP" : "", u.alphaMap ? "#define USE_ALPHAMAP" : "", u.vertexColors ? "#define USE_COLOR" : "", u.flatShading ? "#define FLAT_SHADED" : "", u.metal ? "#define METAL" : "", u.wrapAround ? "#define WRAP_AROUND" : "", u.doubleSided ? "#define DOUBLE_SIDED" : "", u.flipSided ? "#define FLIP_SIDED" : "", u.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", u.shadowMapEnabled ? "#define " + g : "", u.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", u.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", u.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ""].join("\n"));
                        var T = new e.WebGLShader(c, c.VERTEX_SHADER, _ + f),
                            M = new e.WebGLShader(c, c.FRAGMENT_SHADER, w + m);
                        c.attachShader(S, T), c.attachShader(S, M), void 0 !== v && c.bindAttribLocation(S, 0, v), c.linkProgram(S);
                        var A = c.getProgramInfoLog(S);
                        c.getProgramParameter(S, c.LINK_STATUS) === !1 && e.error("THREE.WebGLProgram: shader error: " + c.getError(), "gl.VALIDATE_STATUS", c.getProgramParameter(S, c.VALIDATE_STATUS), "gl.getPRogramInfoLog", A), c.deleteShader(T), c.deleteShader(M);
                        var P = ["viewMatrix", "modelViewMatrix", "projectionMatrix", "normalMatrix", "modelMatrix", "cameraPosition", "morphTargetInfluences", "bindMatrix", "bindMatrixInverse"];
                        u.useVertexTexture ? (P.push("boneTexture"), P.push("boneTextureWidth"), P.push("boneTextureHeight")) : P.push("boneGlobalMatrices"), u.logarithmicDepthBuffer && P.push("logDepthBufFC");
                        for (var R in p) P.push(R);
                        this.uniforms = n(c, S, P), P = ["position", "normal", "uv", "uv2", "tangent", "color", "skinIndex", "skinWeight", "lineDistance"];
                        for (var k = 0; k < u.maxMorphTargets; k++) P.push("morphTarget" + k);
                        for (var k = 0; k < u.maxMorphNormals; k++) P.push("morphNormal" + k);
                        for (var I in d) P.push(I);
                        return this.attributes = i(c, S, P), this.attributesKeys = Object.keys(this.attributes), this.id = t++, this.code = a, this.usedTimes = 1, this.program = S, this.vertexShader = T, this.fragmentShader = M, this
                    }
                }(), e.WebGLShader = function() {
                    return function(t, r, n) {
                        var i = t.createShader(r);
                        return t.shaderSource(i, n), t.compileShader(i), t.getShaderParameter(i, t.COMPILE_STATUS) === !1 && e.error("THREE.WebGLShader: Shader couldn't compile."), i
                    }
                }(), e.WebGLState = function(t, r) {
                    var n = new Uint8Array(16),
                        i = new Uint8Array(16),
                        o = null,
                        a = null,
                        s = null,
                        u = null,
                        l = null,
                        c = null,
                        h = null,
                        p = null,
                        d = null,
                        f = null,
                        m = null,
                        v = null,
                        g = null,
                        y = null,
                        b = null,
                        x = null;
                    this.initAttributes = function() {
                        for (var e = 0, t = n.length; t > e; e++) n[e] = 0
                    }, this.enableAttribute = function(e) {
                        n[e] = 1, 0 === i[e] && (t.enableVertexAttribArray(e), i[e] = 1)
                    }, this.disableUnusedAttributes = function() {
                        for (var e = 0, r = i.length; r > e; e++) i[e] !== n[e] && (t.disableVertexAttribArray(e), i[e] = 0)
                    }, this.setBlending = function(n, i, p, d, f, m, v) {
                        n !== o && (n === e.NoBlending ? t.disable(t.BLEND) : n === e.AdditiveBlending ? (t.enable(t.BLEND), t.blendEquation(t.FUNC_ADD), t.blendFunc(t.SRC_ALPHA, t.ONE)) : n === e.SubtractiveBlending ? (t.enable(t.BLEND), t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR)) : n === e.MultiplyBlending ? (t.enable(t.BLEND), t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.SRC_COLOR)) : n === e.CustomBlending ? t.enable(t.BLEND) : (t.enable(t.BLEND), t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)), o = n), n === e.CustomBlending ? (f = f || i, m = m || p, v = v || d, (i !== a || f !== l) && (t.blendEquationSeparate(r(i), r(f)), a = i, l = f), (p !== s || d !== u || m !== c || v !== h) && (t.blendFuncSeparate(r(p), r(d), r(m), r(v)), s = p, u = d, c = m, h = v)) : (a = null, s = null, u = null, l = null, c = null, h = null)
                    }, this.setDepthTest = function(e) {
                        p !== e && (e ? t.enable(t.DEPTH_TEST) : t.disable(t.DEPTH_TEST), p = e)
                    }, this.setDepthWrite = function(e) {
                        d !== e && (t.depthMask(e), d = e)
                    }, this.setColorWrite = function(e) {
                        f !== e && (t.colorMask(e, e, e, e), f = e)
                    }, this.setDoubleSided = function(e) {
                        m !== e && (e ? t.disable(t.CULL_FACE) : t.enable(t.CULL_FACE), m = e)
                    }, this.setFlipSided = function(e) {
                        v !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW), v = e)
                    }, this.setLineWidth = function(e) {
                        e !== g && (t.lineWidth(e), g = e)
                    }, this.setPolygonOffset = function(e, r, n) {
                        y !== e && (e ? t.enable(t.POLYGON_OFFSET_FILL) : t.disable(t.POLYGON_OFFSET_FILL), y = e), !e || b === r && x === n || (t.polygonOffset(r, n), b = r, x = n)
                    }, this.reset = function() {
                        for (var e = 0; e < i.length; e++) i[e] = 0;
                        o = null, p = null, d = null, f = null, m = null, v = null
                    }
                }, e.LensFlarePlugin = function(t, r) {
                    function n(e) {
                        var r = p.createProgram(),
                            n = p.createShader(p.FRAGMENT_SHADER),
                            i = p.createShader(p.VERTEX_SHADER),
                            o = "precision " + t.getPrecision() + " float;\n";
                        return p.shaderSource(n, o + e.fragmentShader), p.shaderSource(i, o + e.vertexShader), p.compileShader(n), p.compileShader(i), p.attachShader(r, n), p.attachShader(r, i), p.linkProgram(r), r
                    }
                    var i, o, a, s, u, l, c, h, p = t.context,
                        d = function() {
                            var e = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]),
                                t = new Uint16Array([0, 1, 2, 0, 2, 3]);
                            i = p.createBuffer(), o = p.createBuffer(), p.bindBuffer(p.ARRAY_BUFFER, i), p.bufferData(p.ARRAY_BUFFER, e, p.STATIC_DRAW), p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, o), p.bufferData(p.ELEMENT_ARRAY_BUFFER, t, p.STATIC_DRAW), c = p.createTexture(), h = p.createTexture(), p.bindTexture(p.TEXTURE_2D, c), p.texImage2D(p.TEXTURE_2D, 0, p.RGB, 16, 16, 0, p.RGB, p.UNSIGNED_BYTE, null), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_WRAP_S, p.CLAMP_TO_EDGE), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_WRAP_T, p.CLAMP_TO_EDGE), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_MAG_FILTER, p.NEAREST), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_MIN_FILTER, p.NEAREST), p.bindTexture(p.TEXTURE_2D, h), p.texImage2D(p.TEXTURE_2D, 0, p.RGBA, 16, 16, 0, p.RGBA, p.UNSIGNED_BYTE, null), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_WRAP_S, p.CLAMP_TO_EDGE), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_WRAP_T, p.CLAMP_TO_EDGE), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_MAG_FILTER, p.NEAREST), p.texParameteri(p.TEXTURE_2D, p.TEXTURE_MIN_FILTER, p.NEAREST), l = p.getParameter(p.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;
                            var r;
                            r = l ? {
                                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                                fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                            } : {
                                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                                fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                            }, a = n(r), s = {
                                vertex: p.getAttribLocation(a, "position"),
                                uv: p.getAttribLocation(a, "uv")
                            }, u = {
                                renderType: p.getUniformLocation(a, "renderType"),
                                map: p.getUniformLocation(a, "map"),
                                occlusionMap: p.getUniformLocation(a, "occlusionMap"),
                                opacity: p.getUniformLocation(a, "opacity"),
                                color: p.getUniformLocation(a, "color"),
                                scale: p.getUniformLocation(a, "scale"),
                                rotation: p.getUniformLocation(a, "rotation"),
                                screenPosition: p.getUniformLocation(a, "screenPosition")
                            }
                        };
                    this.render = function(n, f, m, v) {
                        if (0 !== r.length) {
                            var g = new e.Vector3,
                                y = v / m,
                                b = .5 * m,
                                x = .5 * v,
                                _ = 16 / v,
                                w = new e.Vector2(_ * y, _),
                                C = new e.Vector3(1, 1, 0),
                                E = new e.Vector2(1, 1);
                            void 0 === a && d(), p.useProgram(a), p.enableVertexAttribArray(s.vertex), p.enableVertexAttribArray(s.uv), p.uniform1i(u.occlusionMap, 0), p.uniform1i(u.map, 1), p.bindBuffer(p.ARRAY_BUFFER, i), p.vertexAttribPointer(s.vertex, 2, p.FLOAT, !1, 16, 0), p.vertexAttribPointer(s.uv, 2, p.FLOAT, !1, 16, 8), p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, o), p.disable(p.CULL_FACE), p.depthMask(!1);
                            for (var S = 0, T = r.length; T > S; S++) {
                                _ = 16 / v, w.set(_ * y, _);
                                var M = r[S];
                                if (g.set(M.matrixWorld.elements[12], M.matrixWorld.elements[13], M.matrixWorld.elements[14]), g.applyMatrix4(f.matrixWorldInverse), g.applyProjection(f.projectionMatrix), C.copy(g), E.x = C.x * b + b, E.y = C.y * x + x, l || E.x > 0 && E.x < m && E.y > 0 && E.y < v) {
                                    p.activeTexture(p.TEXTURE1), p.bindTexture(p.TEXTURE_2D, c), p.copyTexImage2D(p.TEXTURE_2D, 0, p.RGB, E.x - 8, E.y - 8, 16, 16, 0), p.uniform1i(u.renderType, 0), p.uniform2f(u.scale, w.x, w.y), p.uniform3f(u.screenPosition, C.x, C.y, C.z), p.disable(p.BLEND), p.enable(p.DEPTH_TEST), p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0), p.activeTexture(p.TEXTURE0), p.bindTexture(p.TEXTURE_2D, h), p.copyTexImage2D(p.TEXTURE_2D, 0, p.RGBA, E.x - 8, E.y - 8, 16, 16, 0), p.uniform1i(u.renderType, 1), p.disable(p.DEPTH_TEST), p.activeTexture(p.TEXTURE1), p.bindTexture(p.TEXTURE_2D, c), p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0), M.positionScreen.copy(C), M.customUpdateCallback ? M.customUpdateCallback(M) : M.updateLensFlares(), p.uniform1i(u.renderType, 2), p.enable(p.BLEND);
                                    for (var A = 0, P = M.lensFlares.length; P > A; A++) {
                                        var R = M.lensFlares[A];
                                        R.opacity > .001 && R.scale > .001 && (C.x = R.x, C.y = R.y, C.z = R.z, _ = R.size * R.scale / v, w.x = _ * y, w.y = _, p.uniform3f(u.screenPosition, C.x, C.y, C.z), p.uniform2f(u.scale, w.x, w.y), p.uniform1f(u.rotation, R.rotation), p.uniform1f(u.opacity, R.opacity), p.uniform3f(u.color, R.color.r, R.color.g, R.color.b), t.state.setBlending(R.blending, R.blendEquation, R.blendSrc, R.blendDst), t.setTexture(R.texture, 1), p.drawElements(p.TRIANGLES, 6, p.UNSIGNED_SHORT, 0))
                                    }
                                }
                            }
                            p.enable(p.CULL_FACE), p.enable(p.DEPTH_TEST), p.depthMask(!0), t.resetGLState()
                        }
                    }
                }, e.ShadowMapPlugin = function(t, r, n, i) {
                    function o(e, t, r) {
                        if (t.visible) {
                            var i = n[t.id];
                            if (i && t.castShadow && (t.frustumCulled === !1 || m.intersectsObject(t) === !0))
                                for (var a = 0, s = i.length; s > a; a++) {
                                    var u = i[a];
                                    t._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, t.matrixWorld), x.push(u)
                                }
                            for (var a = 0, s = t.children.length; s > a; a++) o(e, t.children[a], r)
                        }
                    }

                    function a(t, r) {
                        var n = new e.DirectionalLight;
                        n.isVirtual = !0, n.onlyShadow = !0, n.castShadow = !0, n.shadowCameraNear = t.shadowCameraNear, n.shadowCameraFar = t.shadowCameraFar, n.shadowCameraLeft = t.shadowCameraLeft, n.shadowCameraRight = t.shadowCameraRight, n.shadowCameraBottom = t.shadowCameraBottom, n.shadowCameraTop = t.shadowCameraTop, n.shadowCameraVisible = t.shadowCameraVisible, n.shadowDarkness = t.shadowDarkness, n.shadowBias = t.shadowCascadeBias[r], n.shadowMapWidth = t.shadowCascadeWidth[r], n.shadowMapHeight = t.shadowCascadeHeight[r], n.pointsWorld = [], n.pointsFrustum = [];
                        for (var i = n.pointsWorld, o = n.pointsFrustum, a = 0; 8 > a; a++) i[a] = new e.Vector3, o[a] = new e.Vector3;
                        var s = t.shadowCascadeNearZ[r],
                            u = t.shadowCascadeFarZ[r];
                        return o[0].set(-1, -1, s), o[1].set(1, -1, s), o[2].set(-1, 1, s), o[3].set(1, 1, s), o[4].set(-1, -1, u), o[5].set(1, -1, u), o[6].set(-1, 1, u), o[7].set(1, 1, u), n
                    }

                    function s(e, t) {
                        var r = e.shadowCascadeArray[t];
                        r.position.copy(e.position), r.target.position.copy(e.target.position), r.lookAt(r.target), r.shadowCameraVisible = e.shadowCameraVisible, r.shadowDarkness = e.shadowDarkness, r.shadowBias = e.shadowCascadeBias[t];
                        var n = e.shadowCascadeNearZ[t],
                            i = e.shadowCascadeFarZ[t],
                            o = r.pointsFrustum;
                        o[0].z = n, o[1].z = n, o[2].z = n, o[3].z = n, o[4].z = i, o[5].z = i, o[6].z = i, o[7].z = i
                    }

                    function u(e, t) {
                        var r = t.shadowCamera,
                            n = t.pointsFrustum,
                            i = t.pointsWorld;
                        g.set(1 / 0, 1 / 0, 1 / 0), y.set(-(1 / 0), -(1 / 0), -(1 / 0));
                        for (var o = 0; 8 > o; o++) {
                            var a = i[o];
                            a.copy(n[o]), a.unproject(e), a.applyMatrix4(r.matrixWorldInverse), a.x < g.x && (g.x = a.x), a.x > y.x && (y.x = a.x), a.y < g.y && (g.y = a.y), a.y > y.y && (y.y = a.y), a.z < g.z && (g.z = a.z), a.z > y.z && (y.z = a.z)
                        }
                        r.left = g.x, r.right = y.x, r.top = y.y, r.bottom = g.y, r.updateProjectionMatrix()
                    }

                    function l(t) {
                        return t.material instanceof e.MeshFaceMaterial ? t.material.materials[0] : t.material
                    }
                    var c, h, p, d, f = t.context,
                        m = new e.Frustum,
                        v = new e.Matrix4,
                        g = new e.Vector3,
                        y = new e.Vector3,
                        b = new e.Vector3,
                        x = [],
                        _ = e.ShaderLib.depthRGBA,
                        w = e.UniformsUtils.clone(_.uniforms);
                    c = new e.ShaderMaterial({
                        uniforms: w,
                        vertexShader: _.vertexShader,
                        fragmentShader: _.fragmentShader
                    }), h = new e.ShaderMaterial({
                        uniforms: w,
                        vertexShader: _.vertexShader,
                        fragmentShader: _.fragmentShader,
                        morphTargets: !0
                    }), p = new e.ShaderMaterial({
                        uniforms: w,
                        vertexShader: _.vertexShader,
                        fragmentShader: _.fragmentShader,
                        skinning: !0
                    }), d = new e.ShaderMaterial({
                        uniforms: w,
                        vertexShader: _.vertexShader,
                        fragmentShader: _.fragmentShader,
                        morphTargets: !0,
                        skinning: !0
                    }), c._shadowPass = !0, h._shadowPass = !0, p._shadowPass = !0, d._shadowPass = !0, this.render = function(n, g) {
                        if (t.shadowMapEnabled !== !1) {
                            var y, _, w, C, E, S, T, M, A, P, R, k, I, D = [],
                                B = 0,
                                L = null;
                            for (f.clearColor(1, 1, 1, 1), f.disable(f.BLEND), f.enable(f.CULL_FACE), f.frontFace(f.CCW), t.shadowMapCullFace === e.CullFaceFront ? f.cullFace(f.FRONT) : f.cullFace(f.BACK), t.state.setDepthTest(!0), y = 0, _ = r.length; _ > y; y++)
                                if (I = r[y], I.castShadow)
                                    if (I instanceof e.DirectionalLight && I.shadowCascade)
                                        for (E = 0; E < I.shadowCascadeCount; E++) {
                                            var V;
                                            if (I.shadowCascadeArray[E]) V = I.shadowCascadeArray[E];
                                            else {
                                                V = a(I, E), V.originalCamera = g;
                                                var N = new e.Gyroscope;
                                                N.position.copy(I.shadowCascadeOffset), N.add(V), N.add(V.target), g.add(N), I.shadowCascadeArray[E] = V
                                            }
                                            s(I, E), D[B] = V, B++
                                        } else D[B] = I, B++;
                            for (y = 0, _ = D.length; _ > y; y++) {
                                if (I = D[y], !I.shadowMap) {
                                    var O = e.LinearFilter;
                                    t.shadowMapType === e.PCFSoftShadowMap && (O = e.NearestFilter);
                                    var F = {
                                        minFilter: O,
                                        magFilter: O,
                                        format: e.RGBAFormat
                                    };
                                    I.shadowMap = new e.WebGLRenderTarget(I.shadowMapWidth, I.shadowMapHeight, F), I.shadowMapSize = new e.Vector2(I.shadowMapWidth, I.shadowMapHeight), I.shadowMatrix = new e.Matrix4
                                }
                                if (!I.shadowCamera) {
                                    if (I instanceof e.SpotLight) I.shadowCamera = new e.PerspectiveCamera(I.shadowCameraFov, I.shadowMapWidth / I.shadowMapHeight, I.shadowCameraNear, I.shadowCameraFar);
                                    else {
                                        if (!(I instanceof e.DirectionalLight)) {
                                            e.error("THREE.ShadowMapPlugin: Unsupported light type for shadow", I);
                                            continue
                                        }
                                        I.shadowCamera = new e.OrthographicCamera(I.shadowCameraLeft, I.shadowCameraRight, I.shadowCameraTop, I.shadowCameraBottom, I.shadowCameraNear, I.shadowCameraFar)
                                    }
                                    n.add(I.shadowCamera), n.autoUpdate === !0 && n.updateMatrixWorld()
                                }
                                I.shadowCameraVisible && !I.cameraHelper && (I.cameraHelper = new e.CameraHelper(I.shadowCamera), n.add(I.cameraHelper)), I.isVirtual && V.originalCamera == g && u(g, I), S = I.shadowMap, T = I.shadowMatrix, M = I.shadowCamera, M.position.setFromMatrixPosition(I.matrixWorld), b.setFromMatrixPosition(I.target.matrixWorld), M.lookAt(b), M.updateMatrixWorld(), M.matrixWorldInverse.getInverse(M.matrixWorld), I.cameraHelper && (I.cameraHelper.visible = I.shadowCameraVisible), I.shadowCameraVisible && I.cameraHelper.update(), T.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), T.multiply(M.projectionMatrix), T.multiply(M.matrixWorldInverse), v.multiplyMatrices(M.projectionMatrix, M.matrixWorldInverse), m.setFromMatrix(v), t.setRenderTarget(S), t.clear(), x.length = 0, o(n, n, M);
                                var U, z, H;
                                for (w = 0, C = x.length; C > w; w++) R = x[w], k = R.object, A = R.buffer, U = l(k), z = void 0 !== k.geometry.morphTargets && k.geometry.morphTargets.length > 0 && U.morphTargets, H = k instanceof e.SkinnedMesh && U.skinning, P = k.customDepthMaterial ? k.customDepthMaterial : H ? z ? d : p : z ? h : c, t.setMaterialFaces(U), A instanceof e.BufferGeometry ? t.renderBufferDirect(M, r, L, P, A, k) : t.renderBuffer(M, r, L, P, A, k);
                                for (w = 0, C = i.length; C > w; w++) R = i[w], k = R.object, k.visible && k.castShadow && (k._modelViewMatrix.multiplyMatrices(M.matrixWorldInverse, k.matrixWorld), t.renderImmediateObject(M, r, L, c, k))
                            }
                            var j = t.getClearColor(),
                                G = t.getClearAlpha();
                            f.clearColor(j.r, j.g, j.b, G), f.enable(f.BLEND), t.shadowMapCullFace === e.CullFaceFront && f.cullFace(f.BACK), t.resetGLState()
                        }
                    }
                }, e.SpritePlugin = function(t, r) {
                    function n() {
                        var e = h.createProgram(),
                            r = h.createShader(h.VERTEX_SHADER),
                            n = h.createShader(h.FRAGMENT_SHADER);
                        return h.shaderSource(r, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")), h.shaderSource(n, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")), h.compileShader(r), h.compileShader(n), h.attachShader(e, r), h.attachShader(e, n), h.linkProgram(e), e
                    }

                    function i(e, t) {
                        return e.z !== t.z ? t.z - e.z : t.id - e.id
                    }
                    var o, a, s, u, l, c, h = t.context,
                        p = new e.Vector3,
                        d = new e.Quaternion,
                        f = new e.Vector3,
                        m = function() {
                            var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]),
                                r = new Uint16Array([0, 1, 2, 0, 2, 3]);
                            o = h.createBuffer(), a = h.createBuffer(), h.bindBuffer(h.ARRAY_BUFFER, o), h.bufferData(h.ARRAY_BUFFER, t, h.STATIC_DRAW), h.bindBuffer(h.ELEMENT_ARRAY_BUFFER, a), h.bufferData(h.ELEMENT_ARRAY_BUFFER, r, h.STATIC_DRAW), s = n(), u = {
                                position: h.getAttribLocation(s, "position"),
                                uv: h.getAttribLocation(s, "uv")
                            }, l = {
                                uvOffset: h.getUniformLocation(s, "uvOffset"),
                                uvScale: h.getUniformLocation(s, "uvScale"),
                                rotation: h.getUniformLocation(s, "rotation"),
                                scale: h.getUniformLocation(s, "scale"),
                                color: h.getUniformLocation(s, "color"),
                                map: h.getUniformLocation(s, "map"),
                                opacity: h.getUniformLocation(s, "opacity"),
                                modelViewMatrix: h.getUniformLocation(s, "modelViewMatrix"),
                                projectionMatrix: h.getUniformLocation(s, "projectionMatrix"),
                                fogType: h.getUniformLocation(s, "fogType"),
                                fogDensity: h.getUniformLocation(s, "fogDensity"),
                                fogNear: h.getUniformLocation(s, "fogNear"),
                                fogFar: h.getUniformLocation(s, "fogFar"),
                                fogColor: h.getUniformLocation(s, "fogColor"),
                                alphaTest: h.getUniformLocation(s, "alphaTest")
                            };
                            var i = document.createElement("canvas");
                            i.width = 8, i.height = 8;
                            var p = i.getContext("2d");
                            p.fillStyle = "white", p.fillRect(0, 0, 8, 8), c = new e.Texture(i), c.needsUpdate = !0
                        };
                    this.render = function(n, v) {
                        if (0 !== r.length) {
                            void 0 === s && m(), h.useProgram(s), h.enableVertexAttribArray(u.position), h.enableVertexAttribArray(u.uv), h.disable(h.CULL_FACE), h.enable(h.BLEND), h.bindBuffer(h.ARRAY_BUFFER, o), h.vertexAttribPointer(u.position, 2, h.FLOAT, !1, 16, 0), h.vertexAttribPointer(u.uv, 2, h.FLOAT, !1, 16, 8), h.bindBuffer(h.ELEMENT_ARRAY_BUFFER, a), h.uniformMatrix4fv(l.projectionMatrix, !1, v.projectionMatrix.elements), h.activeTexture(h.TEXTURE0), h.uniform1i(l.map, 0);
                            var g = 0,
                                y = 0,
                                b = n.fog;
                            b ? (h.uniform3f(l.fogColor, b.color.r, b.color.g, b.color.b), b instanceof e.Fog ? (h.uniform1f(l.fogNear, b.near), h.uniform1f(l.fogFar, b.far), h.uniform1i(l.fogType, 1), g = 1, y = 1) : b instanceof e.FogExp2 && (h.uniform1f(l.fogDensity, b.density), h.uniform1i(l.fogType, 2), g = 2, y = 2)) : (h.uniform1i(l.fogType, 0), g = 0, y = 0);
                            for (var x = 0, _ = r.length; _ > x; x++) {
                                var w = r[x];
                                w._modelViewMatrix.multiplyMatrices(v.matrixWorldInverse, w.matrixWorld), w.z = -w._modelViewMatrix.elements[14]
                            }
                            r.sort(i);
                            for (var C = [], x = 0, _ = r.length; _ > x; x++) {
                                var w = r[x],
                                    E = w.material;
                                h.uniform1f(l.alphaTest, E.alphaTest), h.uniformMatrix4fv(l.modelViewMatrix, !1, w._modelViewMatrix.elements), w.matrixWorld.decompose(p, d, f), C[0] = f.x, C[1] = f.y;
                                var S = 0;
                                n.fog && E.fog && (S = y), g !== S && (h.uniform1i(l.fogType, S), g = S), null !== E.map ? (h.uniform2f(l.uvOffset, E.map.offset.x, E.map.offset.y), h.uniform2f(l.uvScale, E.map.repeat.x, E.map.repeat.y)) : (h.uniform2f(l.uvOffset, 0, 0), h.uniform2f(l.uvScale, 1, 1)), h.uniform1f(l.opacity, E.opacity), h.uniform3f(l.color, E.color.r, E.color.g, E.color.b), h.uniform1f(l.rotation, E.rotation), h.uniform2fv(l.scale, C), t.state.setBlending(E.blending, E.blendEquation, E.blendSrc, E.blendDst), t.state.setDepthTest(E.depthTest), t.state.setDepthWrite(E.depthWrite), E.map && E.map.image && E.map.image.width ? t.setTexture(E.map, 0) : t.setTexture(c, 0), h.drawElements(h.TRIANGLES, 6, h.UNSIGNED_SHORT, 0)
                            }
                            h.enable(h.CULL_FACE), t.resetGLState()
                        }
                    }
                }, e.GeometryUtils = {
                    merge: function(t, r, n) {
                        e.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
                        var i;
                        r instanceof e.Mesh && (r.matrixAutoUpdate && r.updateMatrix(), i = r.matrix, r = r.geometry), t.merge(r, i, n)
                    },
                    center: function(t) {
                        return e.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), t.center()
                    }
                }, e.ImageUtils = {
                    crossOrigin: void 0,
                    loadTexture: function(t, r, n, i) {
                        var o = new e.ImageLoader;
                        o.crossOrigin = this.crossOrigin;
                        var a = new e.Texture(void 0, r);
                        return o.load(t, function(e) {
                            a.image = e, a.needsUpdate = !0, n && n(a)
                        }, void 0, function(e) {
                            i && i(e)
                        }), a.sourceFile = t, a
                    },
                    loadTextureCube: function(t, r, n, i) {
                        var o = [],
                            a = new e.ImageLoader;
                        a.crossOrigin = this.crossOrigin;
                        var s = new e.CubeTexture(o, r);
                        s.flipY = !1;
                        for (var u = 0, l = function(e) {
                                a.load(t[e], function(t) {
                                    s.images[e] = t, u += 1, 6 === u && (s.needsUpdate = !0, n && n(s))
                                }, void 0, i)
                            }, c = 0, h = t.length; h > c; ++c) l(c);
                        return s
                    },
                    loadCompressedTexture: function() {
                        e.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
                    },
                    loadCompressedTextureCube: function() {
                        e.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
                    },
                    getNormalMap: function(e, t) {
                        var r = function(e, t) {
                                return [e[1] * t[2] - e[2] * t[1], e[2] * t[0] - e[0] * t[2], e[0] * t[1] - e[1] * t[0]]
                            },
                            n = function(e, t) {
                                return [e[0] - t[0], e[1] - t[1], e[2] - t[2]]
                            },
                            i = function(e) {
                                var t = Math.sqrt(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
                                return [e[0] / t, e[1] / t, e[2] / t]
                            };
                        t = 1 | t;
                        var o = e.width,
                            a = e.height,
                            s = document.createElement("canvas");
                        s.width = o, s.height = a;
                        var u = s.getContext("2d");
                        u.drawImage(e, 0, 0);
                        for (var l = u.getImageData(0, 0, o, a).data, c = u.createImageData(o, a), h = c.data, p = 0; o > p; p++)
                            for (var d = 0; a > d; d++) {
                                var f = 0 > d - 1 ? 0 : d - 1,
                                    m = d + 1 > a - 1 ? a - 1 : d + 1,
                                    v = 0 > p - 1 ? 0 : p - 1,
                                    g = p + 1 > o - 1 ? o - 1 : p + 1,
                                    y = [],
                                    b = [0, 0, l[4 * (d * o + p)] / 255 * t];
                                y.push([-1, 0, l[4 * (d * o + v)] / 255 * t]), y.push([-1, -1, l[4 * (f * o + v)] / 255 * t]), y.push([0, -1, l[4 * (f * o + p)] / 255 * t]), y.push([1, -1, l[4 * (f * o + g)] / 255 * t]), y.push([1, 0, l[4 * (d * o + g)] / 255 * t]), y.push([1, 1, l[4 * (m * o + g)] / 255 * t]), y.push([0, 1, l[4 * (m * o + p)] / 255 * t]), y.push([-1, 1, l[4 * (m * o + v)] / 255 * t]);
                                for (var x = [], _ = y.length, w = 0; _ > w; w++) {
                                    var C = y[w],
                                        E = y[(w + 1) % _];
                                    C = n(C, b), E = n(E, b), x.push(i(r(C, E)))
                                }
                                for (var S = [0, 0, 0], w = 0; w < x.length; w++) S[0] += x[w][0], S[1] += x[w][1], S[2] += x[w][2];
                                S[0] /= x.length, S[1] /= x.length, S[2] /= x.length;
                                var T = 4 * (d * o + p);
                                h[T] = (S[0] + 1) / 2 * 255 | 0, h[T + 1] = (S[1] + 1) / 2 * 255 | 0, h[T + 2] = 255 * S[2] | 0, h[T + 3] = 255
                            }
                        return u.putImageData(c, 0, 0), s
                    },
                    generateDataTexture: function(t, r, n) {
                        for (var i = t * r, o = new Uint8Array(3 * i), a = Math.floor(255 * n.r), s = Math.floor(255 * n.g), u = Math.floor(255 * n.b), l = 0; i > l; l++) o[3 * l] = a, o[3 * l + 1] = s, o[3 * l + 2] = u;
                        var c = new e.DataTexture(o, t, r, e.RGBFormat);
                        return c.needsUpdate = !0, c
                    }
                }, e.SceneUtils = {
                    createMultiMaterialObject: function(t, r) {
                        for (var n = new e.Object3D, i = 0, o = r.length; o > i; i++) n.add(new e.Mesh(t, r[i]));
                        return n
                    },
                    detach: function(e, t, r) {
                        e.applyMatrix(t.matrixWorld), t.remove(e), r.add(e)
                    },
                    attach: function(t, r, n) {
                        var i = new e.Matrix4;
                        i.getInverse(n.matrixWorld), t.applyMatrix(i), r.remove(t), n.add(t)
                    }
                }, e.FontUtils = {
                    faces: {},
                    face: "helvetiker",
                    weight: "normal",
                    style: "normal",
                    size: 150,
                    divisions: 10,
                    getFace: function() {
                        try {
                            return this.faces[this.face][this.weight][this.style]
                        } catch (e) {
                            throw "The font " + this.face + " with " + this.weight + " weight and " + this.style + " style is missing."
                        }
                    },
                    loadFace: function(e) {
                        var t = e.familyName.toLowerCase(),
                            r = this;
                        return r.faces[t] = r.faces[t] || {}, r.faces[t][e.cssFontWeight] = r.faces[t][e.cssFontWeight] || {}, r.faces[t][e.cssFontWeight][e.cssFontStyle] = e, r.faces[t][e.cssFontWeight][e.cssFontStyle] = e, e
                    },
                    drawText: function(t) {
                        var r, n = this.getFace(),
                            i = this.size / n.resolution,
                            o = 0,
                            a = String(t).split(""),
                            s = a.length,
                            u = [];
                        for (r = 0; s > r; r++) {
                            var l = new e.Path,
                                c = this.extractGlyphPoints(a[r], n, i, o, l);
                            o += c.offset, u.push(c.path)
                        }
                        var h = o / 2;
                        return {
                            paths: u,
                            offset: h
                        }
                    },
                    extractGlyphPoints: function(t, r, n, i, o) {
                        var a, s, u, l, c, h, p, d, f, m, v, g, y, b, x, _, w, C, E, S = [],
                            T = r.glyphs[t] || r.glyphs["?"];
                        if (T) {
                            if (T.o)
                                for (l = T._cachedOutline || (T._cachedOutline = T.o.split(" ")), h = l.length, p = n, d = n, a = 0; h > a;) switch (c = l[a++]) {
                                    case "m":
                                        f = l[a++] * p + i, m = l[a++] * d, o.moveTo(f, m);
                                        break;
                                    case "l":
                                        f = l[a++] * p + i, m = l[a++] * d, o.lineTo(f, m);
                                        break;
                                    case "q":
                                        if (v = l[a++] * p + i, g = l[a++] * d, x = l[a++] * p + i, _ = l[a++] * d, o.quadraticCurveTo(x, _, v, g), E = S[S.length - 1])
                                            for (y = E.x, b = E.y, s = 1, u = this.divisions; u >= s; s++) {
                                                var M = s / u;
                                                e.Shape.Utils.b2(M, y, x, v), e.Shape.Utils.b2(M, b, _, g)
                                            }
                                        break;
                                    case "b":
                                        if (v = l[a++] * p + i, g = l[a++] * d, x = l[a++] * p + i, _ = l[a++] * d, w = l[a++] * p + i, C = l[a++] * d, o.bezierCurveTo(x, _, w, C, v, g), E = S[S.length - 1])
                                            for (y = E.x, b = E.y, s = 1, u = this.divisions; u >= s; s++) {
                                                var M = s / u;
                                                e.Shape.Utils.b3(M, y, x, w, v), e.Shape.Utils.b3(M, b, _, C, g)
                                            }
                                }
                            return {
                                offset: T.ha * n,
                                path: o
                            }
                        }
                    }
                }, e.FontUtils.generateShapes = function(t, r) {
                    r = r || {};
                    var n = void 0 !== r.size ? r.size : 100,
                        i = void 0 !== r.curveSegments ? r.curveSegments : 4,
                        o = void 0 !== r.font ? r.font : "helvetiker",
                        a = void 0 !== r.weight ? r.weight : "normal",
                        s = void 0 !== r.style ? r.style : "normal";
                    e.FontUtils.size = n, e.FontUtils.divisions = i, e.FontUtils.face = o, e.FontUtils.weight = a, e.FontUtils.style = s;
                    for (var u = e.FontUtils.drawText(t), l = u.paths, c = [], h = 0, p = l.length; p > h; h++) Array.prototype.push.apply(c, l[h].toShapes());
                    return c
                },
                function(t) {
                    var r = 1e-10,
                        n = function(t, r) {
                            var n = t.length;
                            if (3 > n) return null;
                            var a, s, u, l = [],
                                c = [],
                                h = [];
                            if (i(t) > 0)
                                for (s = 0; n > s; s++) c[s] = s;
                            else
                                for (s = 0; n > s; s++) c[s] = n - 1 - s;
                            var p = n,
                                d = 2 * p;
                            for (s = p - 1; p > 2;) {
                                if (d-- <= 0) return e.warn("THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()"), r ? h : l;
                                if (a = s, a >= p && (a = 0), s = a + 1, s >= p && (s = 0), u = s + 1, u >= p && (u = 0), o(t, a, s, u, p, c)) {
                                    var f, m, v, g, y;
                                    for (f = c[a], m = c[s], v = c[u], l.push([t[f], t[m], t[v]]), h.push([c[a], c[s], c[u]]), g = s, y = s + 1; p > y; g++, y++) c[g] = c[y];
                                    p--, d = 2 * p
                                }
                            }
                            return r ? h : l
                        },
                        i = function(e) {
                            for (var t = e.length, r = 0, n = t - 1, i = 0; t > i; n = i++) r += e[n].x * e[i].y - e[i].x * e[n].y;
                            return .5 * r
                        },
                        o = function(e, t, n, i, o, a) {
                            var s, u, l, c, h, p, d, f, m;
                            if (u = e[a[t]].x, l = e[a[t]].y, c = e[a[n]].x, h = e[a[n]].y, p = e[a[i]].x, d = e[a[i]].y, r > (c - u) * (d - l) - (h - l) * (p - u)) return !1;
                            var v, g, y, b, x, _, w, C, E, S, T, M, A, P, R;
                            for (v = p - c, g = d - h, y = u - p, b = l - d, x = c - u, _ = h - l, s = 0; o > s; s++)
                                if (f = e[a[s]].x, m = e[a[s]].y, !(f === u && m === l || f === c && m === h || f === p && m === d) && (w = f - u, C = m - l, E = f - c, S = m - h, T = f - p, M = m - d, R = v * S - g * E, A = x * C - _ * w, P = y * M - b * T, R >= -r && P >= -r && A >= -r)) return !1;
                            return !0
                        };
                    return t.Triangulate = n, t.Triangulate.area = i, t
                }(e.FontUtils), self._typeface_js = {
                    faces: e.FontUtils.faces,
                    loadFace: e.FontUtils.loadFace
                }, e.typeface_js = self._typeface_js, e.Audio = function(t) {
                    e.Object3D.call(this), this.type = "Audio", this.context = t.context, this.source = this.context.createBufferSource(), this.source.onended = this.onEnded.bind(this), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.panner = this.context.createPanner(), this.panner.connect(this.gain), this.autoplay = !1, this.startTime = 0, this.isPlaying = !1
                }, e.Audio.prototype = Object.create(e.Object3D.prototype), e.Audio.prototype.constructor = e.Audio, e.Audio.prototype.load = function(e) {
                    var t = this,
                        r = new XMLHttpRequest;
                    return r.open("GET", e, !0), r.responseType = "arraybuffer", r.onload = function(e) {
                        t.context.decodeAudioData(this.response, function(e) {
                            t.source.buffer = e, t.autoplay && t.play()
                        })
                    }, r.send(), this
                }, e.Audio.prototype.play = function() {
                    if (this.isPlaying === !0) return void e.warn("THREE.Audio: Audio is already playing.");
                    var t = this.context.createBufferSource();
                    t.buffer = this.source.buffer, t.loop = this.source.loop, t.onended = this.source.onended, t.connect(this.panner), t.start(0, this.startTime), this.isPlaying = !0, this.source = t
                }, e.Audio.prototype.pause = function() {
                    this.source.stop(), this.startTime = this.context.currentTime
                }, e.Audio.prototype.stop = function() {
                    this.source.stop(), this.startTime = 0
                }, e.Audio.prototype.onEnded = function() {
                    this.isPlaying = !1
                }, e.Audio.prototype.setLoop = function(e) {
                    this.source.loop = e
                }, e.Audio.prototype.setRefDistance = function(e) {
                    this.panner.refDistance = e
                }, e.Audio.prototype.setRolloffFactor = function(e) {
                    this.panner.rolloffFactor = e
                }, e.Audio.prototype.setVolume = function(e) {
                    this.gain.gain.value = e
                }, e.Audio.prototype.updateMatrixWorld = function() {
                    var t = new e.Vector3;
                    return function(r) {
                        e.Object3D.prototype.updateMatrixWorld.call(this, r), t.setFromMatrixPosition(this.matrixWorld), this.panner.setPosition(t.x, t.y, t.z)
                    }
                }(), e.AudioListener = function() {
                    e.Object3D.call(this), this.type = "AudioListener", this.context = new(window.AudioContext || window.webkitAudioContext)
                }, e.AudioListener.prototype = Object.create(e.Object3D.prototype), e.AudioListener.prototype.constructor = e.AudioListener, e.AudioListener.prototype.updateMatrixWorld = function() {
                    var t = new e.Vector3,
                        r = new e.Quaternion,
                        n = new e.Vector3,
                        i = new e.Vector3,
                        o = new e.Vector3,
                        a = new e.Vector3;
                    return function(s) {
                        e.Object3D.prototype.updateMatrixWorld.call(this, s);
                        var u = this.context.listener,
                            l = this.up;
                        this.matrixWorld.decompose(t, r, n), i.set(0, 0, -1).applyQuaternion(r), o.subVectors(t, a), u.setPosition(t.x, t.y, t.z), u.setOrientation(i.x, i.y, i.z, l.x, l.y, l.z), u.setVelocity(o.x, o.y, o.z), a.copy(t)
                    }
                }(), e.Curve = function() {}, e.Curve.prototype.getPoint = function(t) {
                    return e.warn("THREE.Curve: Warning, getPoint() not implemented!"), null
                }, e.Curve.prototype.getPointAt = function(e) {
                    var t = this.getUtoTmapping(e);
                    return this.getPoint(t)
                }, e.Curve.prototype.getPoints = function(e) {
                    e || (e = 5);
                    var t, r = [];
                    for (t = 0; e >= t; t++) r.push(this.getPoint(t / e));
                    return r
                }, e.Curve.prototype.getSpacedPoints = function(e) {
                    e || (e = 5);
                    var t, r = [];
                    for (t = 0; e >= t; t++) r.push(this.getPointAt(t / e));
                    return r
                }, e.Curve.prototype.getLength = function() {
                    var e = this.getLengths();
                    return e[e.length - 1]
                }, e.Curve.prototype.getLengths = function(e) {
                    if (e || (e = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length == e + 1 && !this.needsUpdate) return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    var t, r, n = [],
                        i = this.getPoint(0),
                        o = 0;
                    for (n.push(0), r = 1; e >= r; r++) t = this.getPoint(r / e), o += t.distanceTo(i), n.push(o), i = t;
                    return this.cacheArcLengths = n, n
                }, e.Curve.prototype.updateArcLengths = function() {
                    this.needsUpdate = !0, this.getLengths()
                }, e.Curve.prototype.getUtoTmapping = function(e, t) {
                    var r, n = this.getLengths(),
                        i = 0,
                        o = n.length;
                    r = t ? t : e * n[o - 1];
                    for (var a, s = 0, u = o - 1; u >= s;)
                        if (i = Math.floor(s + (u - s) / 2), a = n[i] - r, 0 > a) s = i + 1;
                        else {
                            if (!(a > 0)) {
                                u = i;
                                break
                            }
                            u = i - 1
                        }
                    if (i = u, n[i] == r) {
                        var l = i / (o - 1);
                        return l
                    }
                    var c = n[i],
                        h = n[i + 1],
                        p = h - c,
                        d = (r - c) / p,
                        l = (i + d) / (o - 1);
                    return l
                }, e.Curve.prototype.getTangent = function(e) {
                    var t = 1e-4,
                        r = e - t,
                        n = e + t;
                    0 > r && (r = 0), n > 1 && (n = 1);
                    var i = this.getPoint(r),
                        o = this.getPoint(n),
                        a = o.clone().sub(i);
                    return a.normalize()
                }, e.Curve.prototype.getTangentAt = function(e) {
                    var t = this.getUtoTmapping(e);
                    return this.getTangent(t)
                }, e.Curve.Utils = {
                    tangentQuadraticBezier: function(e, t, r, n) {
                        return 2 * (1 - e) * (r - t) + 2 * e * (n - r)
                    },
                    tangentCubicBezier: function(e, t, r, n, i) {
                        return -3 * t * (1 - e) * (1 - e) + 3 * r * (1 - e) * (1 - e) - 6 * e * r * (1 - e) + 6 * e * n * (1 - e) - 3 * e * e * n + 3 * e * e * i
                    },
                    tangentSpline: function(e, t, r, n, i) {
                        var o = 6 * e * e - 6 * e,
                            a = 3 * e * e - 4 * e + 1,
                            s = -6 * e * e + 6 * e,
                            u = 3 * e * e - 2 * e;
                        return o + a + s + u
                    },
                    interpolate: function(e, t, r, n, i) {
                        var o = .5 * (r - e),
                            a = .5 * (n - t),
                            s = i * i,
                            u = i * s;
                        return (2 * t - 2 * r + o + a) * u + (-3 * t + 3 * r - 2 * o - a) * s + o * i + t
                    }
                }, e.Curve.create = function(t, r) {
                    return t.prototype = Object.create(e.Curve.prototype), t.prototype.constructor = t, t.prototype.getPoint = r, t
                }, e.CurvePath = function() {
                    this.curves = [], this.bends = [], this.autoClose = !1
                }, e.CurvePath.prototype = Object.create(e.Curve.prototype), e.CurvePath.prototype.constructor = e.CurvePath, e.CurvePath.prototype.add = function(e) {
                    this.curves.push(e)
                }, e.CurvePath.prototype.checkConnection = function() {}, e.CurvePath.prototype.closePath = function() {
                    var t = this.curves[0].getPoint(0),
                        r = this.curves[this.curves.length - 1].getPoint(1);
                    t.equals(r) || this.curves.push(new e.LineCurve(r, t))
                }, e.CurvePath.prototype.getPoint = function(e) {
                    for (var t, r, n = e * this.getLength(), i = this.getCurveLengths(), o = 0; o < i.length;) {
                        if (i[o] >= n) {
                            t = i[o] - n, r = this.curves[o];
                            var a = 1 - t / r.getLength();
                            return r.getPointAt(a)
                        }
                        o++
                    }
                    return null
                }, e.CurvePath.prototype.getLength = function() {
                    var e = this.getCurveLengths();
                    return e[e.length - 1]
                }, e.CurvePath.prototype.getCurveLengths = function() {
                    if (this.cacheLengths && this.cacheLengths.length == this.curves.length) return this.cacheLengths;
                    var e, t = [],
                        r = 0,
                        n = this.curves.length;
                    for (e = 0; n > e; e++) r += this.curves[e].getLength(), t.push(r);
                    return this.cacheLengths = t, t
                }, e.CurvePath.prototype.getBoundingBox = function() {
                    var t, r, n, i, o, a, s = this.getPoints();
                    t = r = Number.NEGATIVE_INFINITY, i = o = Number.POSITIVE_INFINITY;
                    var u, l, c, h, p = s[0] instanceof e.Vector3;
                    for (h = p ? new e.Vector3 : new e.Vector2, l = 0, c = s.length; c > l; l++) u = s[l], u.x > t ? t = u.x : u.x < i && (i = u.x), u.y > r ? r = u.y : u.y < o && (o = u.y), p && (u.z > n ? n = u.z : u.z < a && (a = u.z)), h.add(u);
                    var d = {
                        minX: i,
                        minY: o,
                        maxX: t,
                        maxY: r
                    };
                    return p && (d.maxZ = n, d.minZ = a), d
                }, e.CurvePath.prototype.createPointsGeometry = function(e) {
                    var t = this.getPoints(e, !0);
                    return this.createGeometry(t)
                }, e.CurvePath.prototype.createSpacedPointsGeometry = function(e) {
                    var t = this.getSpacedPoints(e, !0);
                    return this.createGeometry(t)
                }, e.CurvePath.prototype.createGeometry = function(t) {
                    for (var r = new e.Geometry, n = 0; n < t.length; n++) r.vertices.push(new e.Vector3(t[n].x, t[n].y, t[n].z || 0));
                    return r
                }, e.CurvePath.prototype.addWrapPath = function(e) {
                    this.bends.push(e)
                }, e.CurvePath.prototype.getTransformedPoints = function(e, t) {
                    var r, n, i = this.getPoints(e);
                    for (t || (t = this.bends), r = 0, n = t.length; n > r; r++) i = this.getWrapPoints(i, t[r]);
                    return i
                }, e.CurvePath.prototype.getTransformedSpacedPoints = function(e, t) {
                    var r, n, i = this.getSpacedPoints(e);
                    for (t || (t = this.bends), r = 0, n = t.length; n > r; r++) i = this.getWrapPoints(i, t[r]);
                    return i
                }, e.CurvePath.prototype.getWrapPoints = function(e, t) {
                    var r, n, i, o, a, s, u = this.getBoundingBox();
                    for (r = 0, n = e.length; n > r; r++) {
                        i = e[r], o = i.x, a = i.y, s = o / u.maxX, s = t.getUtoTmapping(s, o);
                        var l = t.getPoint(s),
                            c = t.getTangent(s);
                        c.set(-c.y, c.x).multiplyScalar(a), i.x = l.x + c.x, i.y = l.y + c.y
                    }
                    return e
                }, e.Gyroscope = function() {
                    e.Object3D.call(this)
                }, e.Gyroscope.prototype = Object.create(e.Object3D.prototype), e.Gyroscope.prototype.constructor = e.Gyroscope, e.Gyroscope.prototype.updateMatrixWorld = function() {
                    var t = new e.Vector3,
                        r = new e.Quaternion,
                        n = new e.Vector3,
                        i = new e.Vector3,
                        o = new e.Quaternion,
                        a = new e.Vector3;
                    return function(e) {
                        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent ? (this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorld.decompose(i, o, a), this.matrix.decompose(t, r, n), this.matrixWorld.compose(i, r, a)) : this.matrixWorld.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                        for (var s = 0, u = this.children.length; u > s; s++) this.children[s].updateMatrixWorld(e)
                    }
                }(), e.Path = function(t) {
                    e.CurvePath.call(this), this.actions = [], t && this.fromPoints(t)
                }, e.Path.prototype = Object.create(e.CurvePath.prototype), e.Path.prototype.constructor = e.Path, e.PathActions = {
                    MOVE_TO: "moveTo",
                    LINE_TO: "lineTo",
                    QUADRATIC_CURVE_TO: "quadraticCurveTo",
                    BEZIER_CURVE_TO: "bezierCurveTo",
                    CSPLINE_THRU: "splineThru",
                    ARC: "arc",
                    ELLIPSE: "ellipse"
                }, e.Path.prototype.fromPoints = function(e) {
                    this.moveTo(e[0].x, e[0].y);
                    for (var t = 1, r = e.length; r > t; t++) this.lineTo(e[t].x, e[t].y)
                }, e.Path.prototype.moveTo = function(t, r) {
                    var n = Array.prototype.slice.call(arguments);
                    this.actions.push({
                        action: e.PathActions.MOVE_TO,
                        args: n
                    })
                }, e.Path.prototype.lineTo = function(t, r) {
                    var n = Array.prototype.slice.call(arguments),
                        i = this.actions[this.actions.length - 1].args,
                        o = i[i.length - 2],
                        a = i[i.length - 1],
                        s = new e.LineCurve(new e.Vector2(o, a), new e.Vector2(t, r));
                    this.curves.push(s), this.actions.push({
                        action: e.PathActions.LINE_TO,
                        args: n
                    })
                }, e.Path.prototype.quadraticCurveTo = function(t, r, n, i) {
                    var o = Array.prototype.slice.call(arguments),
                        a = this.actions[this.actions.length - 1].args,
                        s = a[a.length - 2],
                        u = a[a.length - 1],
                        l = new e.QuadraticBezierCurve(new e.Vector2(s, u), new e.Vector2(t, r), new e.Vector2(n, i));
                    this.curves.push(l), this.actions.push({
                        action: e.PathActions.QUADRATIC_CURVE_TO,
                        args: o
                    })
                }, e.Path.prototype.bezierCurveTo = function(t, r, n, i, o, a) {
                    var s = Array.prototype.slice.call(arguments),
                        u = this.actions[this.actions.length - 1].args,
                        l = u[u.length - 2],
                        c = u[u.length - 1],
                        h = new e.CubicBezierCurve(new e.Vector2(l, c), new e.Vector2(t, r), new e.Vector2(n, i), new e.Vector2(o, a));
                    this.curves.push(h), this.actions.push({
                        action: e.PathActions.BEZIER_CURVE_TO,
                        args: s
                    })
                }, e.Path.prototype.splineThru = function(t) {
                    var r = Array.prototype.slice.call(arguments),
                        n = this.actions[this.actions.length - 1].args,
                        i = n[n.length - 2],
                        o = n[n.length - 1],
                        a = [new e.Vector2(i, o)];
                    Array.prototype.push.apply(a, t);
                    var s = new e.SplineCurve(a);
                    this.curves.push(s), this.actions.push({
                        action: e.PathActions.CSPLINE_THRU,
                        args: r
                    })
                }, e.Path.prototype.arc = function(e, t, r, n, i, o) {
                    var a = this.actions[this.actions.length - 1].args,
                        s = a[a.length - 2],
                        u = a[a.length - 1];
                    this.absarc(e + s, t + u, r, n, i, o)
                }, e.Path.prototype.absarc = function(e, t, r, n, i, o) {
                    this.absellipse(e, t, r, r, n, i, o)
                }, e.Path.prototype.ellipse = function(e, t, r, n, i, o, a) {
                    var s = this.actions[this.actions.length - 1].args,
                        u = s[s.length - 2],
                        l = s[s.length - 1];
                    this.absellipse(e + u, t + l, r, n, i, o, a)
                }, e.Path.prototype.absellipse = function(t, r, n, i, o, a, s) {
                    var u = Array.prototype.slice.call(arguments),
                        l = new e.EllipseCurve(t, r, n, i, o, a, s);
                    this.curves.push(l);
                    var c = l.getPoint(1);
                    u.push(c.x), u.push(c.y), this.actions.push({
                        action: e.PathActions.ELLIPSE,
                        args: u
                    })
                }, e.Path.prototype.getSpacedPoints = function(e, t) {
                    e || (e = 40);
                    for (var r = [], n = 0; e > n; n++) r.push(this.getPoint(n / e));
                    return r
                }, e.Path.prototype.getPoints = function(t, r) {
                    if (this.useSpacedPoints) return console.log("tata"), this.getSpacedPoints(t, r);
                    t = t || 12;
                    var n, i, o, a, s, u, l, c, h, p, d, f, m, v, g, y, b, x, _ = [];
                    for (n = 0, i = this.actions.length; i > n; n++) switch (o = this.actions[n], a = o.action, s = o.args, a) {
                        case e.PathActions.MOVE_TO:
                            _.push(new e.Vector2(s[0], s[1]));
                            break;
                        case e.PathActions.LINE_TO:
                            _.push(new e.Vector2(s[0], s[1]));
                            break;
                        case e.PathActions.QUADRATIC_CURVE_TO:
                            for (u = s[2], l = s[3], p = s[0], d = s[1], _.length > 0 ? (v = _[_.length - 1], f = v.x, m = v.y) : (v = this.actions[n - 1].args, f = v[v.length - 2], m = v[v.length - 1]), g = 1; t >= g; g++) y = g / t, b = e.Shape.Utils.b2(y, f, p, u), x = e.Shape.Utils.b2(y, m, d, l), _.push(new e.Vector2(b, x));
                            break;
                        case e.PathActions.BEZIER_CURVE_TO:
                            for (u = s[4], l = s[5], p = s[0], d = s[1], c = s[2], h = s[3], _.length > 0 ? (v = _[_.length - 1], f = v.x, m = v.y) : (v = this.actions[n - 1].args, f = v[v.length - 2], m = v[v.length - 1]), g = 1; t >= g; g++) y = g / t, b = e.Shape.Utils.b3(y, f, p, c, u), x = e.Shape.Utils.b3(y, m, d, h, l), _.push(new e.Vector2(b, x));
                            break;
                        case e.PathActions.CSPLINE_THRU:
                            v = this.actions[n - 1].args;
                            var w = new e.Vector2(v[v.length - 2], v[v.length - 1]),
                                C = [w],
                                E = t * s[0].length;
                            C = C.concat(s[0]);
                            var S = new e.SplineCurve(C);
                            for (g = 1; E >= g; g++) _.push(S.getPointAt(g / E));
                            break;
                        case e.PathActions.ARC:
                            var T, M = s[0],
                                A = s[1],
                                P = s[2],
                                R = s[3],
                                k = s[4],
                                I = !!s[5],
                                D = k - R,
                                B = 2 * t;
                            for (g = 1; B >= g; g++) y = g / B, I || (y = 1 - y), T = R + y * D, b = M + P * Math.cos(T), x = A + P * Math.sin(T), _.push(new e.Vector2(b, x));
                            break;
                        case e.PathActions.ELLIPSE:
                            var T, M = s[0],
                                A = s[1],
                                L = s[2],
                                V = s[3],
                                R = s[4],
                                k = s[5],
                                I = !!s[6],
                                D = k - R,
                                B = 2 * t;
                            for (g = 1; B >= g; g++) y = g / B, I || (y = 1 - y), T = R + y * D, b = M + L * Math.cos(T), x = A + V * Math.sin(T), _.push(new e.Vector2(b, x))
                    }
                    var N = _[_.length - 1],
                        O = 1e-10;
                    return Math.abs(N.x - _[0].x) < O && Math.abs(N.y - _[0].y) < O && _.splice(_.length - 1, 1), r && _.push(_[0]), _
                }, e.Path.prototype.toShapes = function(t, r) {
                    function n(t) {
                        var r, n, i, o, a, s = [],
                            u = new e.Path;
                        for (r = 0, n = t.length; n > r; r++) i = t[r], a = i.args, o = i.action, o == e.PathActions.MOVE_TO && 0 != u.actions.length && (s.push(u), u = new e.Path), u[o].apply(u, a);
                        return 0 != u.actions.length && s.push(u), s
                    }

                    function i(t) {
                        for (var r = [], n = 0, i = t.length; i > n; n++) {
                            var o = t[n],
                                a = new e.Shape;
                            a.actions = o.actions, a.curves = o.curves, r.push(a)
                        }
                        return r
                    }

                    function o(e, t) {
                        for (var r = 1e-10, n = t.length, i = !1, o = n - 1, a = 0; n > a; o = a++) {
                            var s = t[o],
                                u = t[a],
                                l = u.x - s.x,
                                c = u.y - s.y;
                            if (Math.abs(c) > r) {
                                if (0 > c && (s = t[a], l = -l, u = t[o], c = -c), e.y < s.y || e.y > u.y) continue;
                                if (e.y == s.y) {
                                    if (e.x == s.x) return !0
                                } else {
                                    var h = c * (e.x - s.x) - l * (e.y - s.y);
                                    if (0 == h) return !0;
                                    if (0 > h) continue;
                                    i = !i
                                }
                            } else {
                                if (e.y != s.y) continue;
                                if (u.x <= e.x && e.x <= s.x || s.x <= e.x && e.x <= u.x) return !0
                            }
                        }
                        return i
                    }
                    var a = n(this.actions);
                    if (0 == a.length) return [];
                    if (r === !0) return i(a);
                    var s, u, l, c = [];
                    if (1 == a.length) return u = a[0], l = new e.Shape, l.actions = u.actions, l.curves = u.curves, c.push(l), c;
                    var h = !e.Shape.Utils.isClockWise(a[0].getPoints());
                    h = t ? !h : h;
                    var p, d = [],
                        f = [],
                        m = [],
                        v = 0;
                    f[v] = void 0, m[v] = [];
                    var g, y;
                    for (g = 0, y = a.length; y > g; g++) u = a[g], p = u.getPoints(), s = e.Shape.Utils.isClockWise(p), s = t ? !s : s, s ? (!h && f[v] && v++, f[v] = {
                        s: new e.Shape,
                        p: p
                    }, f[v].s.actions = u.actions, f[v].s.curves = u.curves, h && v++, m[v] = []) : m[v].push({
                        h: u,
                        p: p[0]
                    });
                    if (!f[0]) return i(a);
                    if (f.length > 1) {
                        for (var b = !1, x = [], _ = 0, w = f.length; w > _; _++) d[_] = [];
                        for (var _ = 0, w = f.length; w > _; _++)
                            for (var C = m[_], E = 0; E < C.length; E++) {
                                for (var S = C[E], T = !0, M = 0; M < f.length; M++) o(S.p, f[M].p) && (_ != M && x.push({
                                    froms: _,
                                    tos: M,
                                    hole: E
                                }), T ? (T = !1, d[M].push(S)) : b = !0);
                                T && d[_].push(S)
                            }
                        x.length > 0 && (b || (m = d))
                    }
                    var A, P, R;
                    for (g = 0, y = f.length; y > g; g++)
                        for (l = f[g].s, c.push(l), A = m[g], P = 0, R = A.length; R > P; P++) l.holes.push(A[P].h);
                    return c
                }, e.Shape = function() {
                    e.Path.apply(this, arguments), this.holes = []
                }, e.Shape.prototype = Object.create(e.Path.prototype), e.Shape.prototype.constructor = e.Shape, e.Shape.prototype.extrude = function(t) {
                    var r = new e.ExtrudeGeometry(this, t);
                    return r
                }, e.Shape.prototype.makeGeometry = function(t) {
                    var r = new e.ShapeGeometry(this, t);
                    return r
                }, e.Shape.prototype.getPointsHoles = function(e) {
                    var t, r = this.holes.length,
                        n = [];
                    for (t = 0; r > t; t++) n[t] = this.holes[t].getTransformedPoints(e, this.bends);
                    return n
                }, e.Shape.prototype.getSpacedPointsHoles = function(e) {
                    var t, r = this.holes.length,
                        n = [];
                    for (t = 0; r > t; t++) n[t] = this.holes[t].getTransformedSpacedPoints(e, this.bends);
                    return n
                }, e.Shape.prototype.extractAllPoints = function(e) {
                    return {
                        shape: this.getTransformedPoints(e),
                        holes: this.getPointsHoles(e)
                    }
                }, e.Shape.prototype.extractPoints = function(e) {
                    return this.useSpacedPoints ? this.extractAllSpacedPoints(e) : this.extractAllPoints(e)
                }, e.Shape.prototype.extractAllSpacedPoints = function(e) {
                    return {
                        shape: this.getTransformedSpacedPoints(e),
                        holes: this.getSpacedPointsHoles(e)
                    }
                }, e.Shape.Utils = {
                    triangulateShape: function(t, r) {
                        function n(e, t, r) {
                            return e.x != t.x ? e.x < t.x ? e.x <= r.x && r.x <= t.x : t.x <= r.x && r.x <= e.x : e.y < t.y ? e.y <= r.y && r.y <= t.y : t.y <= r.y && r.y <= e.y
                        }

                        function i(e, t, r, i, o) {
                            var a = 1e-10,
                                s = t.x - e.x,
                                u = t.y - e.y,
                                l = i.x - r.x,
                                c = i.y - r.y,
                                h = e.x - r.x,
                                p = e.y - r.y,
                                d = u * l - s * c,
                                f = u * h - s * p;
                            if (Math.abs(d) > a) {
                                var m;
                                if (d > 0) {
                                    if (0 > f || f > d) return [];
                                    if (m = c * h - l * p, 0 > m || m > d) return []
                                } else {
                                    if (f > 0 || d > f) return [];
                                    if (m = c * h - l * p, m > 0 || d > m) return []
                                }
                                if (0 == m) return !o || 0 != f && f != d ? [e] : [];
                                if (m == d) return !o || 0 != f && f != d ? [t] : [];
                                if (0 == f) return [r];
                                if (f == d) return [i];
                                var v = m / d;
                                return [{
                                    x: e.x + v * s,
                                    y: e.y + v * u
                                }]
                            }
                            if (0 != f || c * h != l * p) return [];
                            var g = 0 == s && 0 == u,
                                y = 0 == l && 0 == c;
                            if (g && y) return e.x != r.x || e.y != r.y ? [] : [e];
                            if (g) return n(r, i, e) ? [e] : [];
                            if (y) return n(e, t, r) ? [r] : [];
                            var b, x, _, w, C, E, S, T;
                            return 0 != s ? (e.x < t.x ? (b = e, _ = e.x, x = t, w = t.x) : (b = t, _ = t.x, x = e, w = e.x), r.x < i.x ? (C = r, S = r.x, E = i, T = i.x) : (C = i, S = i.x, E = r, T = r.x)) : (e.y < t.y ? (b = e, _ = e.y, x = t, w = t.y) : (b = t, _ = t.y, x = e, w = e.y), r.y < i.y ? (C = r, S = r.y, E = i, T = i.y) : (C = i, S = i.y, E = r, T = r.y)), S >= _ ? S > w ? [] : w == S ? o ? [] : [C] : T >= w ? [C, x] : [C, E] : _ > T ? [] : _ == T ? o ? [] : [b] : T >= w ? [b, x] : [b, E]
                        }

                        function o(e, t, r, n) {
                            var i = 1e-10,
                                o = t.x - e.x,
                                a = t.y - e.y,
                                s = r.x - e.x,
                                u = r.y - e.y,
                                l = n.x - e.x,
                                c = n.y - e.y,
                                h = o * u - a * s,
                                p = o * c - a * l;
                            if (Math.abs(h) > i) {
                                var d = l * u - c * s;
                                return h > 0 ? p >= 0 && d >= 0 : p >= 0 || d >= 0
                            }
                            return p > 0
                        }

                        function a(e, t) {
                            function r(e, t) {
                                var r = y.length - 1,
                                    n = e - 1;
                                0 > n && (n = r);
                                var i = e + 1;
                                i > r && (i = 0);
                                var a = o(y[e], y[n], y[i], s[t]);
                                if (!a) return !1;
                                var u = s.length - 1,
                                    l = t - 1;
                                0 > l && (l = u);
                                var c = t + 1;
                                return c > u && (c = 0), a = o(s[t], s[l], s[c], y[e]), a ? !0 : !1
                            }

                            function n(e, t) {
                                var r, n, o;
                                for (r = 0; r < y.length; r++)
                                    if (n = r + 1, n %= y.length, o = i(e, t, y[r], y[n], !0), o.length > 0) return !0;
                                return !1
                            }

                            function a(e, r) {
                                var n, o, a, s, u;
                                for (n = 0; n < b.length; n++)
                                    for (o = t[b[n]], a = 0; a < o.length; a++)
                                        if (s = a + 1, s %= o.length, u = i(e, r, o[a], o[s], !0), u.length > 0) return !0;
                                return !1
                            }
                            for (var s, u, l, c, h, p, d, f, m, v, g, y = e.concat(), b = [], x = [], _ = 0, w = t.length; w > _; _++) b.push(_);
                            for (var C = 0, E = 2 * b.length; b.length > 0;) {
                                if (E--, 0 > E) {
                                    console.log("Infinite Loop! Holes left:" + b.length + ", Probably Hole outside Shape!");
                                    break
                                }
                                for (l = C; l < y.length; l++) {
                                    c = y[l], u = -1;
                                    for (var _ = 0; _ < b.length; _++)
                                        if (p = b[_], d = c.x + ":" + c.y + ":" + p, void 0 === x[d]) {
                                            s = t[p];
                                            for (var S = 0; S < s.length; S++)
                                                if (h = s[S], r(l, S) && !n(c, h) && !a(c, h)) {
                                                    u = S, b.splice(_, 1), f = y.slice(0, l + 1), m = y.slice(l), v = s.slice(u), g = s.slice(0, u + 1), y = f.concat(v).concat(g).concat(m), C = l;
                                                    break
                                                }
                                            if (u >= 0) break;
                                            x[d] = !0
                                        }
                                    if (u >= 0) break
                                }
                            }
                            return y
                        }
                        for (var s, u, l, c, h, p, d = {}, f = t.concat(), m = 0, v = r.length; v > m; m++) Array.prototype.push.apply(f, r[m]);
                        for (s = 0, u = f.length; u > s; s++) h = f[s].x + ":" + f[s].y, void 0 !== d[h] && e.warn("THREE.Shape: Duplicate point", h), d[h] = s;
                        var g = a(t, r),
                            y = e.FontUtils.Triangulate(g, !1);
                        for (s = 0, u = y.length; u > s; s++)
                            for (c = y[s], l = 0; 3 > l; l++) h = c[l].x + ":" + c[l].y, p = d[h], void 0 !== p && (c[l] = p);
                        return y.concat()
                    },
                    isClockWise: function(t) {
                        return e.FontUtils.Triangulate.area(t) < 0
                    },
                    b2p0: function(e, t) {
                        var r = 1 - e;
                        return r * r * t
                    },
                    b2p1: function(e, t) {
                        return 2 * (1 - e) * e * t
                    },
                    b2p2: function(e, t) {
                        return e * e * t
                    },
                    b2: function(e, t, r, n) {
                        return this.b2p0(e, t) + this.b2p1(e, r) + this.b2p2(e, n)
                    },
                    b3p0: function(e, t) {
                        var r = 1 - e;
                        return r * r * r * t
                    },
                    b3p1: function(e, t) {
                        var r = 1 - e;
                        return 3 * r * r * e * t
                    },
                    b3p2: function(e, t) {
                        var r = 1 - e;
                        return 3 * r * e * e * t
                    },
                    b3p3: function(e, t) {
                        return e * e * e * t
                    },
                    b3: function(e, t, r, n, i) {
                        return this.b3p0(e, t) + this.b3p1(e, r) + this.b3p2(e, n) + this.b3p3(e, i)
                    }
                }, e.LineCurve = function(e, t) {
                    this.v1 = e, this.v2 = t
                }, e.LineCurve.prototype = Object.create(e.Curve.prototype), e.LineCurve.prototype.constructor = e.LineCurve, e.LineCurve.prototype.getPoint = function(e) {
                    var t = this.v2.clone().sub(this.v1);
                    return t.multiplyScalar(e).add(this.v1), t
                }, e.LineCurve.prototype.getPointAt = function(e) {
                    return this.getPoint(e)
                }, e.LineCurve.prototype.getTangent = function(e) {
                    var t = this.v2.clone().sub(this.v1);
                    return t.normalize()
                }, e.QuadraticBezierCurve = function(e, t, r) {
                    this.v0 = e, this.v1 = t, this.v2 = r
                }, e.QuadraticBezierCurve.prototype = Object.create(e.Curve.prototype), e.QuadraticBezierCurve.prototype.constructor = e.QuadraticBezierCurve, e.QuadraticBezierCurve.prototype.getPoint = function(t) {
                    var r = new e.Vector2;
                    return r.x = e.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x), r.y = e.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y), r
                }, e.QuadraticBezierCurve.prototype.getTangent = function(t) {
                    var r = new e.Vector2;
                    return r.x = e.Curve.Utils.tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x), r.y = e.Curve.Utils.tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y), r.normalize()
                }, e.CubicBezierCurve = function(e, t, r, n) {
                    this.v0 = e, this.v1 = t, this.v2 = r, this.v3 = n
                }, e.CubicBezierCurve.prototype = Object.create(e.Curve.prototype), e.CubicBezierCurve.prototype.constructor = e.CubicBezierCurve, e.CubicBezierCurve.prototype.getPoint = function(t) {
                    var r, n;
                    return r = e.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), n = e.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), new e.Vector2(r, n)
                }, e.CubicBezierCurve.prototype.getTangent = function(t) {
                    var r, n;
                    r = e.Curve.Utils.tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), n = e.Curve.Utils.tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
                    var i = new e.Vector2(r, n);
                    return i.normalize(), i
                }, e.SplineCurve = function(e) {
                    this.points = void 0 == e ? [] : e
                }, e.SplineCurve.prototype = Object.create(e.Curve.prototype), e.SplineCurve.prototype.constructor = e.SplineCurve, e.SplineCurve.prototype.getPoint = function(t) {
                    var r = this.points,
                        n = (r.length - 1) * t,
                        i = Math.floor(n),
                        o = n - i,
                        a = r[0 == i ? i : i - 1],
                        s = r[i],
                        u = r[i > r.length - 2 ? r.length - 1 : i + 1],
                        l = r[i > r.length - 3 ? r.length - 1 : i + 2],
                        c = new e.Vector2;
                    return c.x = e.Curve.Utils.interpolate(a.x, s.x, u.x, l.x, o), c.y = e.Curve.Utils.interpolate(a.y, s.y, u.y, l.y, o), c
                }, e.EllipseCurve = function(e, t, r, n, i, o, a) {
                    this.aX = e, this.aY = t, this.xRadius = r, this.yRadius = n, this.aStartAngle = i, this.aEndAngle = o, this.aClockwise = a
                }, e.EllipseCurve.prototype = Object.create(e.Curve.prototype), e.EllipseCurve.prototype.constructor = e.EllipseCurve, e.EllipseCurve.prototype.getPoint = function(t) {
                    var r = this.aEndAngle - this.aStartAngle;
                    0 > r && (r += 2 * Math.PI), r > 2 * Math.PI && (r -= 2 * Math.PI);
                    var n;
                    n = this.aClockwise === !0 ? this.aEndAngle + (1 - t) * (2 * Math.PI - r) : this.aStartAngle + t * r;
                    var i = new e.Vector2;
                    return i.x = this.aX + this.xRadius * Math.cos(n), i.y = this.aY + this.yRadius * Math.sin(n), i
                }, e.ArcCurve = function(t, r, n, i, o, a) {
                    e.EllipseCurve.call(this, t, r, n, n, i, o, a)
                }, e.ArcCurve.prototype = Object.create(e.EllipseCurve.prototype), e.ArcCurve.prototype.constructor = e.ArcCurve, e.LineCurve3 = e.Curve.create(function(e, t) {
                    this.v1 = e, this.v2 = t
                }, function(t) {
                    var r = new e.Vector3;
                    return r.subVectors(this.v2, this.v1), r.multiplyScalar(t), r.add(this.v1), r
                }), e.QuadraticBezierCurve3 = e.Curve.create(function(e, t, r) {
                    this.v0 = e, this.v1 = t, this.v2 = r
                }, function(t) {
                    var r = new e.Vector3;
                    return r.x = e.Shape.Utils.b2(t, this.v0.x, this.v1.x, this.v2.x), r.y = e.Shape.Utils.b2(t, this.v0.y, this.v1.y, this.v2.y), r.z = e.Shape.Utils.b2(t, this.v0.z, this.v1.z, this.v2.z), r
                }), e.CubicBezierCurve3 = e.Curve.create(function(e, t, r, n) {
                    this.v0 = e, this.v1 = t, this.v2 = r, this.v3 = n
                }, function(t) {
                    var r = new e.Vector3;
                    return r.x = e.Shape.Utils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), r.y = e.Shape.Utils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), r.z = e.Shape.Utils.b3(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z), r
                }), e.SplineCurve3 = e.Curve.create(function(e) {
                    this.points = void 0 == e ? [] : e
                }, function(t) {
                    var r = this.points,
                        n = (r.length - 1) * t,
                        i = Math.floor(n),
                        o = n - i,
                        a = r[0 == i ? i : i - 1],
                        s = r[i],
                        u = r[i > r.length - 2 ? r.length - 1 : i + 1],
                        l = r[i > r.length - 3 ? r.length - 1 : i + 2],
                        c = new e.Vector3;
                    return c.x = e.Curve.Utils.interpolate(a.x, s.x, u.x, l.x, o), c.y = e.Curve.Utils.interpolate(a.y, s.y, u.y, l.y, o), c.z = e.Curve.Utils.interpolate(a.z, s.z, u.z, l.z, o), c
                }), e.ClosedSplineCurve3 = e.Curve.create(function(e) {
                    this.points = void 0 == e ? [] : e
                }, function(t) {
                    var r = this.points,
                        n = (r.length - 0) * t,
                        i = Math.floor(n),
                        o = n - i;
                    i += i > 0 ? 0 : (Math.floor(Math.abs(i) / r.length) + 1) * r.length;
                    var a = r[(i - 1) % r.length],
                        s = r[i % r.length],
                        u = r[(i + 1) % r.length],
                        l = r[(i + 2) % r.length],
                        c = new e.Vector3;
                    return c.x = e.Curve.Utils.interpolate(a.x, s.x, u.x, l.x, o), c.y = e.Curve.Utils.interpolate(a.y, s.y, u.y, l.y, o), c.z = e.Curve.Utils.interpolate(a.z, s.z, u.z, l.z, o), c
                }), e.AnimationHandler = {
                    LINEAR: 0,
                    CATMULLROM: 1,
                    CATMULLROM_FORWARD: 2,
                    add: function() {
                        e.warn("THREE.AnimationHandler.add() has been deprecated.")
                    },
                    get: function() {
                        e.warn("THREE.AnimationHandler.get() has been deprecated.")
                    },
                    remove: function() {
                        e.warn("THREE.AnimationHandler.remove() has been deprecated.")
                    },
                    animations: [],
                    init: function(t) {
                        if (t.initialized === !0) return t;
                        for (var r = 0; r < t.hierarchy.length; r++) {
                            for (var n = 0; n < t.hierarchy[r].keys.length; n++)
                                if (t.hierarchy[r].keys[n].time < 0 && (t.hierarchy[r].keys[n].time = 0), void 0 !== t.hierarchy[r].keys[n].rot && !(t.hierarchy[r].keys[n].rot instanceof e.Quaternion)) {
                                    var i = t.hierarchy[r].keys[n].rot;
                                    t.hierarchy[r].keys[n].rot = (new e.Quaternion).fromArray(i)
                                }
                            if (t.hierarchy[r].keys.length && void 0 !== t.hierarchy[r].keys[0].morphTargets) {
                                for (var o = {}, n = 0; n < t.hierarchy[r].keys.length; n++)
                                    for (var a = 0; a < t.hierarchy[r].keys[n].morphTargets.length; a++) {
                                        var s = t.hierarchy[r].keys[n].morphTargets[a];
                                        o[s] = -1
                                    }
                                t.hierarchy[r].usedMorphTargets = o;
                                for (var n = 0; n < t.hierarchy[r].keys.length; n++) {
                                    var u = {};
                                    for (var s in o) {
                                        for (var a = 0; a < t.hierarchy[r].keys[n].morphTargets.length; a++)
                                            if (t.hierarchy[r].keys[n].morphTargets[a] === s) {
                                                u[s] = t.hierarchy[r].keys[n].morphTargetsInfluences[a];
                                                break
                                            }
                                        a === t.hierarchy[r].keys[n].morphTargets.length && (u[s] = 0)
                                    }
                                    t.hierarchy[r].keys[n].morphTargetsInfluences = u
                                }
                            }
                            for (var n = 1; n < t.hierarchy[r].keys.length; n++) t.hierarchy[r].keys[n].time === t.hierarchy[r].keys[n - 1].time && (t.hierarchy[r].keys.splice(n, 1), n--);
                            for (var n = 0; n < t.hierarchy[r].keys.length; n++) t.hierarchy[r].keys[n].index = n
                        }
                        return t.initialized = !0, t
                    },
                    parse: function(t) {
                        var r = function(e, t) {
                                t.push(e);
                                for (var n = 0; n < e.children.length; n++) r(e.children[n], t)
                            },
                            n = [];
                        if (t instanceof e.SkinnedMesh)
                            for (var i = 0; i < t.skeleton.bones.length; i++) n.push(t.skeleton.bones[i]);
                        else r(t, n);
                        return n
                    },
                    play: function(e) {
                        -1 === this.animations.indexOf(e) && this.animations.push(e)
                    },
                    stop: function(e) {
                        var t = this.animations.indexOf(e); - 1 !== t && this.animations.splice(t, 1)
                    },
                    update: function(e) {
                        for (var t = 0; t < this.animations.length; t++) this.animations[t].resetBlendWeights();
                        for (var t = 0; t < this.animations.length; t++) this.animations[t].update(e)
                    }
                }, e.Animation = function(t, r) {
                    this.root = t, this.data = e.AnimationHandler.init(r), this.hierarchy = e.AnimationHandler.parse(t), this.currentTime = 0, this.timeScale = 1, this.isPlaying = !1, this.loop = !0, this.weight = 0, this.interpolationType = e.AnimationHandler.LINEAR
                }, e.Animation.prototype = {
                    constructor: e.Animation,
                    keyTypes: ["pos", "rot", "scl"],
                    play: function(t, r) {
                        this.currentTime = void 0 !== t ? t : 0, this.weight = void 0 !== r ? r : 1, this.isPlaying = !0, this.reset(), e.AnimationHandler.play(this)
                    },
                    stop: function() {
                        this.isPlaying = !1, e.AnimationHandler.stop(this)
                    },
                    reset: function() {
                        for (var e = 0, t = this.hierarchy.length; t > e; e++) {
                            var r = this.hierarchy[e];
                            void 0 === r.animationCache && (r.animationCache = {
                                animations: {},
                                blending: {
                                    positionWeight: 0,
                                    quaternionWeight: 0,
                                    scaleWeight: 0
                                }
                            });
                            var n = this.data.name,
                                i = r.animationCache.animations,
                                o = i[n];
                            void 0 === o && (o = {
                                prevKey: {
                                    pos: 0,
                                    rot: 0,
                                    scl: 0
                                },
                                nextKey: {
                                    pos: 0,
                                    rot: 0,
                                    scl: 0
                                },
                                originalMatrix: r.matrix
                            }, i[n] = o);
                            for (var a = 0; 3 > a; a++) {
                                for (var s = this.keyTypes[a], u = this.data.hierarchy[e].keys[0], l = this.getNextKeyWith(s, e, 1); l.time < this.currentTime && l.index > u.index;) u = l, l = this.getNextKeyWith(s, e, l.index + 1);
                                o.prevKey[s] = u, o.nextKey[s] = l
                            }
                        }
                    },
                    resetBlendWeights: function() {
                        for (var e = 0, t = this.hierarchy.length; t > e; e++) {
                            var r = this.hierarchy[e],
                                n = r.animationCache;
                            if (void 0 !== n) {
                                var i = n.blending;
                                i.positionWeight = 0, i.quaternionWeight = 0, i.scaleWeight = 0
                            }
                        }
                    },
                    update: function() {
                        var t = [],
                            r = new e.Vector3,
                            n = new e.Vector3,
                            i = new e.Quaternion,
                            o = function(e, t) {
                                var r, n, i, o, s, u, l, c, h, p = [],
                                    d = [];
                                return r = (e.length - 1) * t, n = Math.floor(r), i = r - n, p[0] = 0 === n ? n : n - 1, p[1] = n, p[2] = n > e.length - 2 ? n : n + 1, p[3] = n > e.length - 3 ? n : n + 2, u = e[p[0]], l = e[p[1]], c = e[p[2]], h = e[p[3]], o = i * i, s = i * o, d[0] = a(u[0], l[0], c[0], h[0], i, o, s), d[1] = a(u[1], l[1], c[1], h[1], i, o, s), d[2] = a(u[2], l[2], c[2], h[2], i, o, s), d
                            },
                            a = function(e, t, r, n, i, o, a) {
                                var s = .5 * (r - e),
                                    u = .5 * (n - t);
                                return (2 * (t - r) + s + u) * a + (-3 * (t - r) - 2 * s - u) * o + s * i + t
                            };
                        return function(a) {
                            if (this.isPlaying !== !1 && (this.currentTime += a * this.timeScale, 0 !== this.weight)) {
                                var s = this.data.length;
                                (this.currentTime > s || this.currentTime < 0) && (this.loop ? (this.currentTime %= s, this.currentTime < 0 && (this.currentTime += s), this.reset()) : this.stop());
                                for (var u = 0, l = this.hierarchy.length; l > u; u++)
                                    for (var c = this.hierarchy[u], h = c.animationCache.animations[this.data.name], p = c.animationCache.blending, d = 0; 3 > d; d++) {
                                        var f = this.keyTypes[d],
                                            m = h.prevKey[f],
                                            v = h.nextKey[f];
                                        if (this.timeScale > 0 && v.time <= this.currentTime || this.timeScale < 0 && m.time >= this.currentTime) {
                                            for (m = this.data.hierarchy[u].keys[0], v = this.getNextKeyWith(f, u, 1); v.time < this.currentTime && v.index > m.index;) m = v, v = this.getNextKeyWith(f, u, v.index + 1);
                                            h.prevKey[f] = m, h.nextKey[f] = v
                                        }
                                        var g = (this.currentTime - m.time) / (v.time - m.time),
                                            y = m[f],
                                            b = v[f];
                                        if (0 > g && (g = 0), g > 1 && (g = 1), "pos" === f) {
                                            if (this.interpolationType === e.AnimationHandler.LINEAR) {
                                                n.x = y[0] + (b[0] - y[0]) * g, n.y = y[1] + (b[1] - y[1]) * g, n.z = y[2] + (b[2] - y[2]) * g;
                                                var x = this.weight / (this.weight + p.positionWeight);
                                                c.position.lerp(n, x), p.positionWeight += this.weight
                                            } else if (this.interpolationType === e.AnimationHandler.CATMULLROM || this.interpolationType === e.AnimationHandler.CATMULLROM_FORWARD) {
                                                t[0] = this.getPrevKeyWith("pos", u, m.index - 1).pos, t[1] = y, t[2] = b, t[3] = this.getNextKeyWith("pos", u, v.index + 1).pos, g = .33 * g + .33;
                                                var _ = o(t, g),
                                                    x = this.weight / (this.weight + p.positionWeight);
                                                p.positionWeight += this.weight;
                                                var w = c.position;
                                                if (w.x = w.x + (_[0] - w.x) * x, w.y = w.y + (_[1] - w.y) * x, w.z = w.z + (_[2] - w.z) * x, this.interpolationType === e.AnimationHandler.CATMULLROM_FORWARD) {
                                                    var C = o(t, 1.01 * g);
                                                    r.set(C[0], C[1], C[2]), r.sub(w), r.y = 0, r.normalize();
                                                    var E = Math.atan2(r.x, r.z);
                                                    c.rotation.set(0, E, 0)
                                                }
                                            }
                                        } else if ("rot" === f)
                                            if (e.Quaternion.slerp(y, b, i, g), 0 === p.quaternionWeight) c.quaternion.copy(i), p.quaternionWeight = this.weight;
                                            else {
                                                var x = this.weight / (this.weight + p.quaternionWeight);
                                                e.Quaternion.slerp(c.quaternion, i, c.quaternion, x), p.quaternionWeight += this.weight
                                            }
                                        else if ("scl" === f) {
                                            n.x = y[0] + (b[0] - y[0]) * g, n.y = y[1] + (b[1] - y[1]) * g, n.z = y[2] + (b[2] - y[2]) * g;
                                            var x = this.weight / (this.weight + p.scaleWeight);
                                            c.scale.lerp(n, x), p.scaleWeight += this.weight
                                        }
                                    }
                                return !0
                            }
                        }
                    }(),
                    getNextKeyWith: function(t, r, n) {
                        var i = this.data.hierarchy[r].keys;
                        for (this.interpolationType === e.AnimationHandler.CATMULLROM || this.interpolationType === e.AnimationHandler.CATMULLROM_FORWARD ? n = n < i.length - 1 ? n : i.length - 1 : n %= i.length; n < i.length; n++)
                            if (void 0 !== i[n][t]) return i[n];
                        return this.data.hierarchy[r].keys[0]
                    },
                    getPrevKeyWith: function(t, r, n) {
                        var i = this.data.hierarchy[r].keys;
                        for (n = this.interpolationType === e.AnimationHandler.CATMULLROM || this.interpolationType === e.AnimationHandler.CATMULLROM_FORWARD ? n > 0 ? n : 0 : n >= 0 ? n : n + i.length; n >= 0; n--)
                            if (void 0 !== i[n][t]) return i[n];
                        return this.data.hierarchy[r].keys[i.length - 1]
                    }
                }, e.KeyFrameAnimation = function(t) {
                    this.root = t.node, this.data = e.AnimationHandler.init(t), this.hierarchy = e.AnimationHandler.parse(this.root), this.currentTime = 0, this.timeScale = .001, this.isPlaying = !1, this.isPaused = !0, this.loop = !0;
                    for (var r = 0, n = this.hierarchy.length; n > r; r++) {
                        var i = this.data.hierarchy[r].keys,
                            o = this.data.hierarchy[r].sids,
                            a = this.hierarchy[r];
                        if (i.length && o) {
                            for (var s = 0; s < o.length; s++) {
                                var u = o[s],
                                    l = this.getNextKeyWith(u, r, 0);
                                l && l.apply(u)
                            }
                            a.matrixAutoUpdate = !1, this.data.hierarchy[r].node.updateMatrix(), a.matrixWorldNeedsUpdate = !0
                        }
                    }
                }, e.KeyFrameAnimation.prototype = {
                    constructor: e.KeyFrameAnimation,
                    play: function(t) {
                        if (this.currentTime = void 0 !== t ? t : 0, this.isPlaying === !1) {
                            this.isPlaying = !0;
                            var r, n, i, o = this.hierarchy.length;
                            for (r = 0; o > r; r++) {
                                n = this.hierarchy[r], i = this.data.hierarchy[r], void 0 === i.animationCache && (i.animationCache = {}, i.animationCache.prevKey = null, i.animationCache.nextKey = null, i.animationCache.originalMatrix = n.matrix);
                                var a = this.data.hierarchy[r].keys;
                                a.length && (i.animationCache.prevKey = a[0], i.animationCache.nextKey = a[1], this.startTime = Math.min(a[0].time, this.startTime), this.endTime = Math.max(a[a.length - 1].time, this.endTime))
                            }
                            this.update(0)
                        }
                        this.isPaused = !1, e.AnimationHandler.play(this)
                    },
                    stop: function() {
                        this.isPlaying = !1, this.isPaused = !1, e.AnimationHandler.stop(this);
                        for (var t = 0; t < this.data.hierarchy.length; t++) {
                            var r = this.hierarchy[t],
                                n = this.data.hierarchy[t];
                            if (void 0 !== n.animationCache) {
                                var i = n.animationCache.originalMatrix;
                                i.copy(r.matrix), r.matrix = i, delete n.animationCache
                            }
                        }
                    },
                    update: function(e) {
                        if (this.isPlaying !== !1) {
                            this.currentTime += e * this.timeScale;
                            var t = this.data.length;
                            this.loop === !0 && this.currentTime > t && (this.currentTime %= t), this.currentTime = Math.min(this.currentTime, t);
                            for (var r = 0, n = this.hierarchy.length; n > r; r++) {
                                var i = this.hierarchy[r],
                                    o = this.data.hierarchy[r],
                                    a = o.keys,
                                    s = o.animationCache;
                                if (a.length) {
                                    var u = s.prevKey,
                                        l = s.nextKey;
                                    if (l.time <= this.currentTime) {
                                        for (; l.time < this.currentTime && l.index > u.index;) u = l, l = a[u.index + 1];
                                        s.prevKey = u, s.nextKey = l
                                    }
                                    l.time >= this.currentTime ? u.interpolate(l, this.currentTime) : u.interpolate(l, l.time), this.data.hierarchy[r].node.updateMatrix(), i.matrixWorldNeedsUpdate = !0
                                }
                            }
                        }
                    },
                    getNextKeyWith: function(e, t, r) {
                        var n = this.data.hierarchy[t].keys;
                        for (r %= n.length; r < n.length; r++)
                            if (n[r].hasTarget(e)) return n[r];
                        return n[0]
                    },
                    getPrevKeyWith: function(e, t, r) {
                        var n = this.data.hierarchy[t].keys;
                        for (r = r >= 0 ? r : r + n.length; r >= 0; r--)
                            if (n[r].hasTarget(e)) return n[r];
                        return n[n.length - 1]
                    }
                }, e.MorphAnimation = function(e) {
                    this.mesh = e, this.frames = e.morphTargetInfluences.length, this.currentTime = 0, this.duration = 1e3, this.loop = !0, this.lastFrame = 0, this.currentFrame = 0, this.isPlaying = !1
                }, e.MorphAnimation.prototype = {
                    constructor: e.MorphAnimation,
                    play: function() {
                        this.isPlaying = !0
                    },
                    pause: function() {
                        this.isPlaying = !1
                    },
                    update: function(e) {
                        if (this.isPlaying !== !1) {
                            this.currentTime += e, this.loop === !0 && this.currentTime > this.duration && (this.currentTime %= this.duration), this.currentTime = Math.min(this.currentTime, this.duration);
                            var t = this.duration / this.frames,
                                r = Math.floor(this.currentTime / t),
                                n = this.mesh.morphTargetInfluences;
                            r != this.currentFrame && (n[this.lastFrame] = 0, n[this.currentFrame] = 1, n[r] = 0, this.lastFrame = this.currentFrame, this.currentFrame = r), n[r] = this.currentTime % t / t, n[this.lastFrame] = 1 - n[r]
                        }
                    }
                }, e.BoxGeometry = function(t, r, n, i, o, a) {
                    function s(t, r, n, i, o, a, s, l) {
                        var c, h, p, d = u.widthSegments,
                            f = u.heightSegments,
                            m = o / 2,
                            v = a / 2,
                            g = u.vertices.length;
                        "x" === t && "y" === r || "y" === t && "x" === r ? c = "z" : "x" === t && "z" === r || "z" === t && "x" === r ? (c = "y", f = u.depthSegments) : ("z" === t && "y" === r || "y" === t && "z" === r) && (c = "x", d = u.depthSegments);
                        var y = d + 1,
                            b = f + 1,
                            x = o / d,
                            _ = a / f,
                            w = new e.Vector3;
                        for (w[c] = s > 0 ? 1 : -1, p = 0; b > p; p++)
                            for (h = 0; y > h; h++) {
                                var C = new e.Vector3;
                                C[t] = (h * x - m) * n, C[r] = (p * _ - v) * i, C[c] = s, u.vertices.push(C)
                            }
                        for (p = 0; f > p; p++)
                            for (h = 0; d > h; h++) {
                                var E = h + y * p,
                                    S = h + y * (p + 1),
                                    T = h + 1 + y * (p + 1),
                                    M = h + 1 + y * p,
                                    A = new e.Vector2(h / d, 1 - p / f),
                                    P = new e.Vector2(h / d, 1 - (p + 1) / f),
                                    R = new e.Vector2((h + 1) / d, 1 - (p + 1) / f),
                                    k = new e.Vector2((h + 1) / d, 1 - p / f),
                                    I = new e.Face3(E + g, S + g, M + g);
                                I.normal.copy(w), I.vertexNormals.push(w.clone(), w.clone(), w.clone()), I.materialIndex = l, u.faces.push(I), u.faceVertexUvs[0].push([A, P, k]), I = new e.Face3(S + g, T + g, M + g), I.normal.copy(w), I.vertexNormals.push(w.clone(), w.clone(), w.clone()), I.materialIndex = l, u.faces.push(I), u.faceVertexUvs[0].push([P.clone(), R, k.clone()])
                            }
                    }
                    e.Geometry.call(this), this.type = "BoxGeometry", this.parameters = {
                        width: t,
                        height: r,
                        depth: n,
                        widthSegments: i,
                        heightSegments: o,
                        depthSegments: a
                    }, this.widthSegments = i || 1, this.heightSegments = o || 1, this.depthSegments = a || 1;
                    var u = this,
                        l = t / 2,
                        c = r / 2,
                        h = n / 2;
                    s("z", "y", -1, -1, n, r, l, 0), s("z", "y", 1, -1, n, r, -l, 1), s("x", "z", 1, 1, t, n, c, 2), s("x", "z", 1, -1, t, n, -c, 3), s("x", "y", 1, -1, t, r, h, 4), s("x", "y", -1, -1, t, r, -h, 5), this.mergeVertices()
                }, e.BoxGeometry.prototype = Object.create(e.Geometry.prototype), e.BoxGeometry.prototype.constructor = e.BoxGeometry, e.CircleGeometry = function(t, r, n, i) {
                    e.Geometry.call(this), this.type = "CircleGeometry", this.parameters = {
                        radius: t,
                        segments: r,
                        thetaStart: n,
                        thetaLength: i
                    }, t = t || 50, r = void 0 !== r ? Math.max(3, r) : 8, n = void 0 !== n ? n : 0, i = void 0 !== i ? i : 2 * Math.PI;
                    var o, a = [],
                        s = new e.Vector3,
                        u = new e.Vector2(.5, .5);
                    for (this.vertices.push(s), a.push(u), o = 0; r >= o; o++) {
                        var l = new e.Vector3,
                            c = n + o / r * i;
                        l.x = t * Math.cos(c), l.y = t * Math.sin(c), this.vertices.push(l), a.push(new e.Vector2((l.x / t + 1) / 2, (l.y / t + 1) / 2))
                    }
                    var h = new e.Vector3(0, 0, 1);
                    for (o = 1; r >= o; o++) this.faces.push(new e.Face3(o, o + 1, 0, [h.clone(), h.clone(), h.clone()])), this.faceVertexUvs[0].push([a[o].clone(), a[o + 1].clone(), u.clone()]);
                    this.computeFaceNormals(), this.boundingSphere = new e.Sphere(new e.Vector3, t)
                }, e.CircleGeometry.prototype = Object.create(e.Geometry.prototype), e.CircleGeometry.prototype.constructor = e.CircleGeometry, e.CubeGeometry = function(t, r, n, i, o, a) {
                    return e.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry."), new e.BoxGeometry(t, r, n, i, o, a)
                }, e.CylinderGeometry = function(t, r, n, i, o, a, s, u) {
                    e.Geometry.call(this), this.type = "CylinderGeometry", this.parameters = {
                        radiusTop: t,
                        radiusBottom: r,
                        height: n,
                        radialSegments: i,
                        heightSegments: o,
                        openEnded: a,
                        thetaStart: s,
                        thetaLength: u
                    }, t = void 0 !== t ? t : 20, r = void 0 !== r ? r : 20, n = void 0 !== n ? n : 100, i = i || 8, o = o || 1, a = void 0 !== a ? a : !1, s = void 0 !== s ? s : 0, u = void 0 !== u ? u : 2 * Math.PI;
                    var l, c, h = n / 2,
                        p = [],
                        d = [];
                    for (c = 0; o >= c; c++) {
                        var f = [],
                            m = [],
                            v = c / o,
                            g = v * (r - t) + t;
                        for (l = 0; i >= l; l++) {
                            var y = l / i,
                                b = new e.Vector3;
                            b.x = g * Math.sin(y * u + s), b.y = -v * n + h, b.z = g * Math.cos(y * u + s), this.vertices.push(b), f.push(this.vertices.length - 1), m.push(new e.Vector2(y, 1 - v))
                        }
                        p.push(f), d.push(m)
                    }
                    var x, _, w = (r - t) / n;
                    for (l = 0; i > l; l++)
                        for (0 !== t ? (x = this.vertices[p[0][l]].clone(), _ = this.vertices[p[0][l + 1]].clone()) : (x = this.vertices[p[1][l]].clone(), _ = this.vertices[p[1][l + 1]].clone()), x.setY(Math.sqrt(x.x * x.x + x.z * x.z) * w).normalize(), _.setY(Math.sqrt(_.x * _.x + _.z * _.z) * w).normalize(), c = 0; o > c; c++) {
                            var C = p[c][l],
                                E = p[c + 1][l],
                                S = p[c + 1][l + 1],
                                T = p[c][l + 1],
                                M = x.clone(),
                                A = x.clone(),
                                P = _.clone(),
                                R = _.clone(),
                                k = d[c][l].clone(),
                                I = d[c + 1][l].clone(),
                                D = d[c + 1][l + 1].clone(),
                                B = d[c][l + 1].clone();
                            this.faces.push(new e.Face3(C, E, T, [M, A, R])), this.faceVertexUvs[0].push([k, I, B]), this.faces.push(new e.Face3(E, S, T, [A.clone(), P, R.clone()])), this.faceVertexUvs[0].push([I.clone(), D, B.clone()])
                        }
                    if (a === !1 && t > 0)
                        for (this.vertices.push(new e.Vector3(0, h, 0)), l = 0; i > l; l++) {
                            var C = p[0][l],
                                E = p[0][l + 1],
                                S = this.vertices.length - 1,
                                M = new e.Vector3(0, 1, 0),
                                A = new e.Vector3(0, 1, 0),
                                P = new e.Vector3(0, 1, 0),
                                k = d[0][l].clone(),
                                I = d[0][l + 1].clone(),
                                D = new e.Vector2(I.x, 0);
                            this.faces.push(new e.Face3(C, E, S, [M, A, P])), this.faceVertexUvs[0].push([k, I, D])
                        }
                    if (a === !1 && r > 0)
                        for (this.vertices.push(new e.Vector3(0, -h, 0)), l = 0; i > l; l++) {
                            var C = p[o][l + 1],
                                E = p[o][l],
                                S = this.vertices.length - 1,
                                M = new e.Vector3(0, -1, 0),
                                A = new e.Vector3(0, -1, 0),
                                P = new e.Vector3(0, -1, 0),
                                k = d[o][l + 1].clone(),
                                I = d[o][l].clone(),
                                D = new e.Vector2(I.x, 1);
                            this.faces.push(new e.Face3(C, E, S, [M, A, P])), this.faceVertexUvs[0].push([k, I, D])
                        }
                    this.computeFaceNormals()
                }, e.CylinderGeometry.prototype = Object.create(e.Geometry.prototype), e.CylinderGeometry.prototype.constructor = e.CylinderGeometry, e.ExtrudeGeometry = function(t, r) {
                    return "undefined" == typeof t ? void(t = []) : (e.Geometry.call(this), this.type = "ExtrudeGeometry", t = t instanceof Array ? t : [t], this.addShapeList(t, r), void this.computeFaceNormals())
                }, e.ExtrudeGeometry.prototype = Object.create(e.Geometry.prototype), e.ExtrudeGeometry.prototype.constructor = e.ExtrudeGeometry, e.ExtrudeGeometry.prototype.addShapeList = function(e, t) {
                    for (var r = e.length, n = 0; r > n; n++) {
                        var i = e[n];
                        this.addShape(i, t)
                    }
                }, e.ExtrudeGeometry.prototype.addShape = function(t, r) {
                    function n(t, r, n) {
                        return r || e.error("THREE.ExtrudeGeometry: vec does not exist"), r.clone().multiplyScalar(n).add(t)
                    }

                    function i(t, r, n) {
                        var i, o, a = 1e-10,
                            s = 1,
                            u = t.x - r.x,
                            l = t.y - r.y,
                            c = n.x - t.x,
                            h = n.y - t.y,
                            p = u * u + l * l,
                            d = u * h - l * c;
                        if (Math.abs(d) > a) {
                            var f = Math.sqrt(p),
                                m = Math.sqrt(c * c + h * h),
                                v = r.x - l / f,
                                g = r.y + u / f,
                                y = n.x - h / m,
                                b = n.y + c / m,
                                x = ((y - v) * h - (b - g) * c) / (u * h - l * c);
                            i = v + u * x - t.x, o = g + l * x - t.y;
                            var _ = i * i + o * o;
                            if (2 >= _) return new e.Vector2(i, o);
                            s = Math.sqrt(_ / 2)
                        } else {
                            var w = !1;
                            u > a ? c > a && (w = !0) : -a > u ? -a > c && (w = !0) : Math.sign(l) == Math.sign(h) && (w = !0), w ? (i = -l, o = u, s = Math.sqrt(p)) : (i = u, o = l, s = Math.sqrt(p / 2))
                        }
                        return new e.Vector2(i / s, o / s)
                    }

                    function o() {
                        if (x) {
                            var e = 0,
                                t = q * e;
                            for (Y = 0; W > Y; Y++) G = N[Y], l(G[2] + t, G[1] + t, G[0] + t);
                            for (e = w + 2 * b, t = q * e, Y = 0; W > Y; Y++) G = N[Y], l(G[0] + t, G[1] + t, G[2] + t)
                        } else {
                            for (Y = 0; W > Y; Y++) G = N[Y], l(G[2], G[1], G[0]);
                            for (Y = 0; W > Y; Y++) G = N[Y], l(G[0] + q * w, G[1] + q * w, G[2] + q * w)
                        }
                    }

                    function a() {
                        var e = 0;
                        for (s(O, e), e += O.length, P = 0, R = L.length; R > P; P++) A = L[P], s(A, e), e += A.length
                    }

                    function s(e, t) {
                        var r, n;
                        for (Y = e.length; --Y >= 0;) {
                            r = Y, n = Y - 1, 0 > n && (n = e.length - 1);
                            var i = 0,
                                o = w + 2 * b;
                            for (i = 0; o > i; i++) {
                                var a = q * i,
                                    s = q * (i + 1),
                                    u = t + r + a,
                                    l = t + n + a,
                                    h = t + n + s,
                                    p = t + r + s;
                                c(u, l, h, p, e, i, o, r, n)
                            }
                        }
                    }

                    function u(t, r, n) {
                        k.vertices.push(new e.Vector3(t, r, n))
                    }

                    function l(t, r, n) {
                        t += I, r += I, n += I, k.faces.push(new e.Face3(t, r, n, null, null, S));
                        var i = M.generateTopUV(k, t, r, n);
                        k.faceVertexUvs[0].push(i)
                    }

                    function c(t, r, n, i, o, a, s, u, l) {
                        t += I, r += I, n += I, i += I, k.faces.push(new e.Face3(t, r, i, null, null, T)), k.faces.push(new e.Face3(r, n, i, null, null, T));
                        var c = M.generateSideWallUV(k, t, r, n, i);
                        k.faceVertexUvs[0].push([c[0], c[1], c[3]]), k.faceVertexUvs[0].push([c[1], c[2], c[3]])
                    }
                    var h, p, d, f, m, v = void 0 !== r.amount ? r.amount : 100,
                        g = void 0 !== r.bevelThickness ? r.bevelThickness : 6,
                        y = void 0 !== r.bevelSize ? r.bevelSize : g - 2,
                        b = void 0 !== r.bevelSegments ? r.bevelSegments : 3,
                        x = void 0 !== r.bevelEnabled ? r.bevelEnabled : !0,
                        _ = void 0 !== r.curveSegments ? r.curveSegments : 12,
                        w = void 0 !== r.steps ? r.steps : 1,
                        C = r.extrudePath,
                        E = !1,
                        S = r.material,
                        T = r.extrudeMaterial,
                        M = void 0 !== r.UVGenerator ? r.UVGenerator : e.ExtrudeGeometry.WorldUVGenerator;
                    C && (h = C.getSpacedPoints(w), E = !0, x = !1, p = void 0 !== r.frames ? r.frames : new e.TubeGeometry.FrenetFrames(C, w, !1), d = new e.Vector3, f = new e.Vector3, m = new e.Vector3), x || (b = 0, g = 0, y = 0);
                    var A, P, R, k = this,
                        I = this.vertices.length,
                        D = t.extractPoints(_),
                        B = D.shape,
                        L = D.holes,
                        V = !e.Shape.Utils.isClockWise(B);
                    if (V) {
                        for (B = B.reverse(), P = 0, R = L.length; R > P; P++) A = L[P], e.Shape.Utils.isClockWise(A) && (L[P] = A.reverse());
                        V = !1
                    }
                    var N = e.Shape.Utils.triangulateShape(B, L),
                        O = B;
                    for (P = 0, R = L.length; R > P; P++) A = L[P], B = B.concat(A);
                    for (var F, U, z, H, j, G, q = B.length, W = N.length, X = [], Y = 0, K = O.length, Q = K - 1, Z = Y + 1; K > Y; Y++, Q++, Z++) Q === K && (Q = 0), Z === K && (Z = 0), X[Y] = i(O[Y], O[Q], O[Z]);
                    var $, J = [],
                        ee = X.concat();
                    for (P = 0, R = L.length; R > P; P++) {
                        for (A = L[P], $ = [], Y = 0, K = A.length, Q = K - 1, Z = Y + 1; K > Y; Y++, Q++, Z++) Q === K && (Q = 0), Z === K && (Z = 0), $[Y] = i(A[Y], A[Q], A[Z]);
                        J.push($), ee = ee.concat($)
                    }
                    for (F = 0; b > F; F++) {
                        for (z = F / b, H = g * (1 - z), U = y * Math.sin(z * Math.PI / 2), Y = 0, K = O.length; K > Y; Y++) j = n(O[Y], X[Y], U), u(j.x, j.y, -H);
                        for (P = 0, R = L.length; R > P; P++)
                            for (A = L[P], $ = J[P], Y = 0, K = A.length; K > Y; Y++) j = n(A[Y], $[Y], U), u(j.x, j.y, -H)
                    }
                    for (U = y, Y = 0; q > Y; Y++) j = x ? n(B[Y], ee[Y], U) : B[Y], E ? (f.copy(p.normals[0]).multiplyScalar(j.x), d.copy(p.binormals[0]).multiplyScalar(j.y), m.copy(h[0]).add(f).add(d), u(m.x, m.y, m.z)) : u(j.x, j.y, 0);
                    var te;
                    for (te = 1; w >= te; te++)
                        for (Y = 0; q > Y; Y++) j = x ? n(B[Y], ee[Y], U) : B[Y], E ? (f.copy(p.normals[te]).multiplyScalar(j.x), d.copy(p.binormals[te]).multiplyScalar(j.y), m.copy(h[te]).add(f).add(d), u(m.x, m.y, m.z)) : u(j.x, j.y, v / w * te);
                    for (F = b - 1; F >= 0; F--) {
                        for (z = F / b, H = g * (1 - z), U = y * Math.sin(z * Math.PI / 2), Y = 0, K = O.length; K > Y; Y++) j = n(O[Y], X[Y], U), u(j.x, j.y, v + H);
                        for (P = 0, R = L.length; R > P; P++)
                            for (A = L[P], $ = J[P], Y = 0, K = A.length; K > Y; Y++) j = n(A[Y], $[Y], U), E ? u(j.x, j.y + h[w - 1].y, h[w - 1].x + H) : u(j.x, j.y, v + H)
                    }
                    o(), a()
                }, e.ExtrudeGeometry.WorldUVGenerator = {
                    generateTopUV: function(t, r, n, i) {
                        var o = t.vertices,
                            a = o[r],
                            s = o[n],
                            u = o[i];
                        return [new e.Vector2(a.x, a.y), new e.Vector2(s.x, s.y), new e.Vector2(u.x, u.y)]
                    },
                    generateSideWallUV: function(t, r, n, i, o) {
                        var a = t.vertices,
                            s = a[r],
                            u = a[n],
                            l = a[i],
                            c = a[o];
                        return Math.abs(s.y - u.y) < .01 ? [new e.Vector2(s.x, 1 - s.z), new e.Vector2(u.x, 1 - u.z), new e.Vector2(l.x, 1 - l.z), new e.Vector2(c.x, 1 - c.z)] : [new e.Vector2(s.y, 1 - s.z), new e.Vector2(u.y, 1 - u.z), new e.Vector2(l.y, 1 - l.z), new e.Vector2(c.y, 1 - c.z)]
                    }
                }, e.ShapeGeometry = function(t, r) {
                    e.Geometry.call(this), this.type = "ShapeGeometry", t instanceof Array == !1 && (t = [t]), this.addShapeList(t, r), this.computeFaceNormals();
                }, e.ShapeGeometry.prototype = Object.create(e.Geometry.prototype), e.ShapeGeometry.prototype.constructor = e.ShapeGeometry, e.ShapeGeometry.prototype.addShapeList = function(e, t) {
                    for (var r = 0, n = e.length; n > r; r++) this.addShape(e[r], t);
                    return this
                }, e.ShapeGeometry.prototype.addShape = function(t, r) {
                    void 0 === r && (r = {});
                    var n, i, o, a = void 0 !== r.curveSegments ? r.curveSegments : 12,
                        s = r.material,
                        u = void 0 === r.UVGenerator ? e.ExtrudeGeometry.WorldUVGenerator : r.UVGenerator,
                        l = this.vertices.length,
                        c = t.extractPoints(a),
                        h = c.shape,
                        p = c.holes,
                        d = !e.Shape.Utils.isClockWise(h);
                    if (d) {
                        for (h = h.reverse(), n = 0, i = p.length; i > n; n++) o = p[n], e.Shape.Utils.isClockWise(o) && (p[n] = o.reverse());
                        d = !1
                    }
                    var f = e.Shape.Utils.triangulateShape(h, p);
                    for (n = 0, i = p.length; i > n; n++) o = p[n], h = h.concat(o);
                    var m, v, g = h.length,
                        y = f.length;
                    for (n = 0; g > n; n++) m = h[n], this.vertices.push(new e.Vector3(m.x, m.y, 0));
                    for (n = 0; y > n; n++) {
                        v = f[n];
                        var b = v[0] + l,
                            x = v[1] + l,
                            _ = v[2] + l;
                        this.faces.push(new e.Face3(b, x, _, null, null, s)), this.faceVertexUvs[0].push(u.generateTopUV(this, b, x, _))
                    }
                }, e.LatheGeometry = function(t, r, n, i) {
                    e.Geometry.call(this), this.type = "LatheGeometry", this.parameters = {
                        points: t,
                        segments: r,
                        phiStart: n,
                        phiLength: i
                    }, r = r || 12, n = n || 0, i = i || 2 * Math.PI;
                    for (var o = 1 / (t.length - 1), a = 1 / r, s = 0, u = r; u >= s; s++)
                        for (var l = n + s * a * i, c = Math.cos(l), h = Math.sin(l), p = 0, d = t.length; d > p; p++) {
                            var f = t[p],
                                m = new e.Vector3;
                            m.x = c * f.x - h * f.y, m.y = h * f.x + c * f.y, m.z = f.z, this.vertices.push(m)
                        }
                    for (var v = t.length, s = 0, u = r; u > s; s++)
                        for (var p = 0, d = t.length - 1; d > p; p++) {
                            var g = p + v * s,
                                y = g,
                                b = g + v,
                                c = g + 1 + v,
                                x = g + 1,
                                _ = s * a,
                                w = p * o,
                                C = _ + a,
                                E = w + o;
                            this.faces.push(new e.Face3(y, b, x)), this.faceVertexUvs[0].push([new e.Vector2(_, w), new e.Vector2(C, w), new e.Vector2(_, E)]), this.faces.push(new e.Face3(b, c, x)), this.faceVertexUvs[0].push([new e.Vector2(C, w), new e.Vector2(C, E), new e.Vector2(_, E)])
                        }
                    this.mergeVertices(), this.computeFaceNormals(), this.computeVertexNormals()
                }, e.LatheGeometry.prototype = Object.create(e.Geometry.prototype), e.LatheGeometry.prototype.constructor = e.LatheGeometry, e.PlaneGeometry = function(t, r, n, i) {
                    console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint."), e.Geometry.call(this), this.type = "PlaneGeometry", this.parameters = {
                        width: t,
                        height: r,
                        widthSegments: n,
                        heightSegments: i
                    }, this.fromBufferGeometry(new e.PlaneBufferGeometry(t, r, n, i))
                }, e.PlaneGeometry.prototype = Object.create(e.Geometry.prototype), e.PlaneGeometry.prototype.constructor = e.PlaneGeometry, e.PlaneBufferGeometry = function(t, r, n, i) {
                    e.BufferGeometry.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
                        width: t,
                        height: r,
                        widthSegments: n,
                        heightSegments: i
                    };
                    for (var o = t / 2, a = r / 2, s = n || 1, u = i || 1, l = s + 1, c = u + 1, h = t / s, p = r / u, d = new Float32Array(l * c * 3), f = new Float32Array(l * c * 3), m = new Float32Array(l * c * 2), v = 0, g = 0, y = 0; c > y; y++)
                        for (var b = y * p - a, x = 0; l > x; x++) {
                            var _ = x * h - o;
                            d[v] = _, d[v + 1] = -b, f[v + 2] = 1, m[g] = x / s, m[g + 1] = 1 - y / u, v += 3, g += 2
                        }
                    v = 0;
                    for (var w = new(d.length / 3 > 65535 ? Uint32Array : Uint16Array)(s * u * 6), y = 0; u > y; y++)
                        for (var x = 0; s > x; x++) {
                            var C = x + l * y,
                                E = x + l * (y + 1),
                                S = x + 1 + l * (y + 1),
                                T = x + 1 + l * y;
                            w[v] = C, w[v + 1] = E, w[v + 2] = T, w[v + 3] = E, w[v + 4] = S, w[v + 5] = T, v += 6
                        }
                    this.addAttribute("index", new e.BufferAttribute(w, 1)), this.addAttribute("position", new e.BufferAttribute(d, 3)), this.addAttribute("normal", new e.BufferAttribute(f, 3)), this.addAttribute("uv", new e.BufferAttribute(m, 2))
                }, e.PlaneBufferGeometry.prototype = Object.create(e.BufferGeometry.prototype), e.PlaneBufferGeometry.prototype.constructor = e.PlaneBufferGeometry, e.RingGeometry = function(t, r, n, i, o, a) {
                    e.Geometry.call(this), this.type = "RingGeometry", this.parameters = {
                        innerRadius: t,
                        outerRadius: r,
                        thetaSegments: n,
                        phiSegments: i,
                        thetaStart: o,
                        thetaLength: a
                    }, t = t || 0, r = r || 50, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : 2 * Math.PI, n = void 0 !== n ? Math.max(3, n) : 8, i = void 0 !== i ? Math.max(1, i) : 8;
                    var s, u, l = [],
                        c = t,
                        h = (r - t) / i;
                    for (s = 0; i + 1 > s; s++) {
                        for (u = 0; n + 1 > u; u++) {
                            var p = new e.Vector3,
                                d = o + u / n * a;
                            p.x = c * Math.cos(d), p.y = c * Math.sin(d), this.vertices.push(p), l.push(new e.Vector2((p.x / r + 1) / 2, (p.y / r + 1) / 2))
                        }
                        c += h
                    }
                    var f = new e.Vector3(0, 0, 1);
                    for (s = 0; i > s; s++) {
                        var m = s * (n + 1);
                        for (u = 0; n > u; u++) {
                            var d = u + m,
                                v = d,
                                g = d + n + 1,
                                y = d + n + 2;
                            this.faces.push(new e.Face3(v, g, y, [f.clone(), f.clone(), f.clone()])), this.faceVertexUvs[0].push([l[v].clone(), l[g].clone(), l[y].clone()]), v = d, g = d + n + 2, y = d + 1, this.faces.push(new e.Face3(v, g, y, [f.clone(), f.clone(), f.clone()])), this.faceVertexUvs[0].push([l[v].clone(), l[g].clone(), l[y].clone()])
                        }
                    }
                    this.computeFaceNormals(), this.boundingSphere = new e.Sphere(new e.Vector3, c)
                }, e.RingGeometry.prototype = Object.create(e.Geometry.prototype), e.RingGeometry.prototype.constructor = e.RingGeometry, e.SphereGeometry = function(t, r, n, i, o, a, s) {
                    e.Geometry.call(this), this.type = "SphereGeometry", this.parameters = {
                        radius: t,
                        widthSegments: r,
                        heightSegments: n,
                        phiStart: i,
                        phiLength: o,
                        thetaStart: a,
                        thetaLength: s
                    }, t = t || 50, r = Math.max(3, Math.floor(r) || 8), n = Math.max(2, Math.floor(n) || 6), i = void 0 !== i ? i : 0, o = void 0 !== o ? o : 2 * Math.PI, a = void 0 !== a ? a : 0, s = void 0 !== s ? s : Math.PI;
                    var u, l, c = [],
                        h = [];
                    for (l = 0; n >= l; l++) {
                        var p = [],
                            d = [];
                        for (u = 0; r >= u; u++) {
                            var f = u / r,
                                m = l / n,
                                v = new e.Vector3;
                            v.x = -t * Math.cos(i + f * o) * Math.sin(a + m * s), v.y = t * Math.cos(a + m * s), v.z = t * Math.sin(i + f * o) * Math.sin(a + m * s), this.vertices.push(v), p.push(this.vertices.length - 1), d.push(new e.Vector2(f, 1 - m))
                        }
                        c.push(p), h.push(d)
                    }
                    for (l = 0; n > l; l++)
                        for (u = 0; r > u; u++) {
                            var g = c[l][u + 1],
                                y = c[l][u],
                                b = c[l + 1][u],
                                x = c[l + 1][u + 1],
                                _ = this.vertices[g].clone().normalize(),
                                w = this.vertices[y].clone().normalize(),
                                C = this.vertices[b].clone().normalize(),
                                E = this.vertices[x].clone().normalize(),
                                S = h[l][u + 1].clone(),
                                T = h[l][u].clone(),
                                M = h[l + 1][u].clone(),
                                A = h[l + 1][u + 1].clone();
                            Math.abs(this.vertices[g].y) === t ? (S.x = (S.x + T.x) / 2, this.faces.push(new e.Face3(g, b, x, [_, C, E])), this.faceVertexUvs[0].push([S, M, A])) : Math.abs(this.vertices[b].y) === t ? (M.x = (M.x + A.x) / 2, this.faces.push(new e.Face3(g, y, b, [_, w, C])), this.faceVertexUvs[0].push([S, T, M])) : (this.faces.push(new e.Face3(g, y, x, [_, w, E])), this.faceVertexUvs[0].push([S, T, A]), this.faces.push(new e.Face3(y, b, x, [w.clone(), C, E.clone()])), this.faceVertexUvs[0].push([T.clone(), M, A.clone()]))
                        }
                    this.computeFaceNormals(), this.boundingSphere = new e.Sphere(new e.Vector3, t)
                }, e.SphereGeometry.prototype = Object.create(e.Geometry.prototype), e.SphereGeometry.prototype.constructor = e.SphereGeometry, e.TextGeometry = function(t, r) {
                    r = r || {};
                    var n = e.FontUtils.generateShapes(t, r);
                    r.amount = void 0 !== r.height ? r.height : 50, void 0 === r.bevelThickness && (r.bevelThickness = 10), void 0 === r.bevelSize && (r.bevelSize = 8), void 0 === r.bevelEnabled && (r.bevelEnabled = !1), e.ExtrudeGeometry.call(this, n, r), this.type = "TextGeometry"
                }, e.TextGeometry.prototype = Object.create(e.ExtrudeGeometry.prototype), e.TextGeometry.prototype.constructor = e.TextGeometry, e.TorusGeometry = function(t, r, n, i, o) {
                    e.Geometry.call(this), this.type = "TorusGeometry", this.parameters = {
                        radius: t,
                        tube: r,
                        radialSegments: n,
                        tubularSegments: i,
                        arc: o
                    }, t = t || 100, r = r || 40, n = n || 8, i = i || 6, o = o || 2 * Math.PI;
                    for (var a = new e.Vector3, s = [], u = [], l = 0; n >= l; l++)
                        for (var c = 0; i >= c; c++) {
                            var h = c / i * o,
                                p = l / n * Math.PI * 2;
                            a.x = t * Math.cos(h), a.y = t * Math.sin(h);
                            var d = new e.Vector3;
                            d.x = (t + r * Math.cos(p)) * Math.cos(h), d.y = (t + r * Math.cos(p)) * Math.sin(h), d.z = r * Math.sin(p), this.vertices.push(d), s.push(new e.Vector2(c / i, l / n)), u.push(d.clone().sub(a).normalize())
                        }
                    for (var l = 1; n >= l; l++)
                        for (var c = 1; i >= c; c++) {
                            var f = (i + 1) * l + c - 1,
                                m = (i + 1) * (l - 1) + c - 1,
                                v = (i + 1) * (l - 1) + c,
                                g = (i + 1) * l + c,
                                y = new e.Face3(f, m, g, [u[f].clone(), u[m].clone(), u[g].clone()]);
                            this.faces.push(y), this.faceVertexUvs[0].push([s[f].clone(), s[m].clone(), s[g].clone()]), y = new e.Face3(m, v, g, [u[m].clone(), u[v].clone(), u[g].clone()]), this.faces.push(y), this.faceVertexUvs[0].push([s[m].clone(), s[v].clone(), s[g].clone()])
                        }
                    this.computeFaceNormals()
                }, e.TorusGeometry.prototype = Object.create(e.Geometry.prototype), e.TorusGeometry.prototype.constructor = e.TorusGeometry, e.TorusKnotGeometry = function(t, r, n, i, o, a, s) {
                    function u(t, r, n, i, o) {
                        var a = Math.cos(t),
                            s = Math.sin(t),
                            u = r / n * t,
                            l = Math.cos(u),
                            c = i * (2 + l) * .5 * a,
                            h = i * (2 + l) * s * .5,
                            p = o * i * Math.sin(u) * .5;
                        return new e.Vector3(c, h, p)
                    }
                    e.Geometry.call(this), this.type = "TorusKnotGeometry", this.parameters = {
                        radius: t,
                        tube: r,
                        radialSegments: n,
                        tubularSegments: i,
                        p: o,
                        q: a,
                        heightScale: s
                    }, t = t || 100, r = r || 40, n = n || 64, i = i || 8, o = o || 2, a = a || 3, s = s || 1;
                    for (var l = new Array(n), c = new e.Vector3, h = new e.Vector3, p = new e.Vector3, d = 0; n > d; ++d) {
                        l[d] = new Array(i);
                        var f = d / n * 2 * o * Math.PI,
                            m = u(f, a, o, t, s),
                            v = u(f + .01, a, o, t, s);
                        c.subVectors(v, m), h.addVectors(v, m), p.crossVectors(c, h), h.crossVectors(p, c), p.normalize(), h.normalize();
                        for (var g = 0; i > g; ++g) {
                            var y = g / i * 2 * Math.PI,
                                b = -r * Math.cos(y),
                                x = r * Math.sin(y),
                                _ = new e.Vector3;
                            _.x = m.x + b * h.x + x * p.x, _.y = m.y + b * h.y + x * p.y, _.z = m.z + b * h.z + x * p.z, l[d][g] = this.vertices.push(_) - 1
                        }
                    }
                    for (var d = 0; n > d; ++d)
                        for (var g = 0; i > g; ++g) {
                            var w = (d + 1) % n,
                                C = (g + 1) % i,
                                E = l[d][g],
                                S = l[w][g],
                                T = l[w][C],
                                M = l[d][C],
                                A = new e.Vector2(d / n, g / i),
                                P = new e.Vector2((d + 1) / n, g / i),
                                R = new e.Vector2((d + 1) / n, (g + 1) / i),
                                k = new e.Vector2(d / n, (g + 1) / i);
                            this.faces.push(new e.Face3(E, S, M)), this.faceVertexUvs[0].push([A, P, k]), this.faces.push(new e.Face3(S, T, M)), this.faceVertexUvs[0].push([P.clone(), R, k.clone()])
                        }
                    this.computeFaceNormals(), this.computeVertexNormals()
                }, e.TorusKnotGeometry.prototype = Object.create(e.Geometry.prototype), e.TorusKnotGeometry.prototype.constructor = e.TorusKnotGeometry, e.TubeGeometry = function(t, r, n, i, o, a) {
                    function s(t, r, n) {
                        return R.vertices.push(new e.Vector3(t, r, n)) - 1
                    }
                    e.Geometry.call(this), this.type = "TubeGeometry", this.parameters = {
                        path: t,
                        segments: r,
                        radius: n,
                        radialSegments: i,
                        closed: o
                    }, r = r || 64, n = n || 1, i = i || 8, o = o || !1, a = a || e.TubeGeometry.NoTaper;
                    var u, l, c, h, p, d, f, m, v, g, y, b, x, _, w, C, E, S, T, M, A, P = [],
                        R = this,
                        k = r + 1,
                        I = new e.Vector3,
                        D = new e.TubeGeometry.FrenetFrames(t, r, o),
                        B = D.tangents,
                        L = D.normals,
                        V = D.binormals;
                    for (this.tangents = B, this.normals = L, this.binormals = V, g = 0; k > g; g++)
                        for (P[g] = [], h = g / (k - 1), v = t.getPointAt(h), u = B[g], l = L[g], c = V[g], d = n * a(h), y = 0; i > y; y++) p = y / i * 2 * Math.PI, f = -d * Math.cos(p), m = d * Math.sin(p), I.copy(v), I.x += f * l.x + m * c.x, I.y += f * l.y + m * c.y, I.z += f * l.z + m * c.z, P[g][y] = s(I.x, I.y, I.z);
                    for (g = 0; r > g; g++)
                        for (y = 0; i > y; y++) b = o ? (g + 1) % r : g + 1, x = (y + 1) % i, _ = P[g][y], w = P[b][y], C = P[b][x], E = P[g][x], S = new e.Vector2(g / r, y / i), T = new e.Vector2((g + 1) / r, y / i), M = new e.Vector2((g + 1) / r, (y + 1) / i), A = new e.Vector2(g / r, (y + 1) / i), this.faces.push(new e.Face3(_, w, E)), this.faceVertexUvs[0].push([S, T, A]), this.faces.push(new e.Face3(w, C, E)), this.faceVertexUvs[0].push([T.clone(), M, A.clone()]);
                    this.computeFaceNormals(), this.computeVertexNormals()
                }, e.TubeGeometry.prototype = Object.create(e.Geometry.prototype), e.TubeGeometry.prototype.constructor = e.TubeGeometry, e.TubeGeometry.NoTaper = function(e) {
                    return 1
                }, e.TubeGeometry.SinusoidalTaper = function(e) {
                    return Math.sin(Math.PI * e)
                }, e.TubeGeometry.FrenetFrames = function(t, r, n) {
                    function i() {
                        f[0] = new e.Vector3, m[0] = new e.Vector3, a = Number.MAX_VALUE, s = Math.abs(d[0].x), u = Math.abs(d[0].y), l = Math.abs(d[0].z), a >= s && (a = s, p.set(1, 0, 0)), a >= u && (a = u, p.set(0, 1, 0)), a >= l && p.set(0, 0, 1), v.crossVectors(d[0], p).normalize(), f[0].crossVectors(d[0], v), m[0].crossVectors(d[0], f[0])
                    }
                    var o, a, s, u, l, c, h, p = new e.Vector3,
                        d = [],
                        f = [],
                        m = [],
                        v = new e.Vector3,
                        g = new e.Matrix4,
                        y = r + 1,
                        b = 1e-4;
                    for (this.tangents = d, this.normals = f, this.binormals = m, c = 0; y > c; c++) h = c / (y - 1), d[c] = t.getTangentAt(h), d[c].normalize();
                    for (i(), c = 1; y > c; c++) f[c] = f[c - 1].clone(), m[c] = m[c - 1].clone(), v.crossVectors(d[c - 1], d[c]), v.length() > b && (v.normalize(), o = Math.acos(e.Math.clamp(d[c - 1].dot(d[c]), -1, 1)), f[c].applyMatrix4(g.makeRotationAxis(v, o))), m[c].crossVectors(d[c], f[c]);
                    if (n)
                        for (o = Math.acos(e.Math.clamp(f[0].dot(f[y - 1]), -1, 1)), o /= y - 1, d[0].dot(v.crossVectors(f[0], f[y - 1])) > 0 && (o = -o), c = 1; y > c; c++) f[c].applyMatrix4(g.makeRotationAxis(d[c], o * c)), m[c].crossVectors(d[c], f[c])
                }, e.PolyhedronGeometry = function(t, r, n, i) {
                    function o(t) {
                        var r = t.normalize().clone();
                        r.index = h.vertices.push(r) - 1;
                        var n = u(t) / 2 / Math.PI + .5,
                            i = l(t) / Math.PI + .5;
                        return r.uv = new e.Vector2(n, 1 - i), r
                    }

                    function a(t, r, n) {
                        var i = new e.Face3(t.index, r.index, n.index, [t.clone(), r.clone(), n.clone()]);
                        h.faces.push(i), x.copy(t).add(r).add(n).divideScalar(3);
                        var o = u(x);
                        h.faceVertexUvs[0].push([c(t.uv, t, o), c(r.uv, r, o), c(n.uv, n, o)])
                    }

                    function s(e, t) {
                        for (var r = Math.pow(2, t), n = o(h.vertices[e.a]), i = o(h.vertices[e.b]), s = o(h.vertices[e.c]), u = [], l = 0; r >= l; l++) {
                            u[l] = [];
                            for (var c = o(n.clone().lerp(s, l / r)), p = o(i.clone().lerp(s, l / r)), d = r - l, f = 0; d >= f; f++) 0 == f && l == r ? u[l][f] = c : u[l][f] = o(c.clone().lerp(p, f / d))
                        }
                        for (var l = 0; r > l; l++)
                            for (var f = 0; 2 * (r - l) - 1 > f; f++) {
                                var m = Math.floor(f / 2);
                                f % 2 == 0 ? a(u[l][m + 1], u[l + 1][m], u[l][m]) : a(u[l][m + 1], u[l + 1][m + 1], u[l + 1][m])
                            }
                    }

                    function u(e) {
                        return Math.atan2(e.z, -e.x)
                    }

                    function l(e) {
                        return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
                    }

                    function c(t, r, n) {
                        return 0 > n && 1 === t.x && (t = new e.Vector2(t.x - 1, t.y)), 0 === r.x && 0 === r.z && (t = new e.Vector2(n / 2 / Math.PI + .5, t.y)), t.clone()
                    }
                    e.Geometry.call(this), this.type = "PolyhedronGeometry", this.parameters = {
                        vertices: t,
                        indices: r,
                        radius: n,
                        detail: i
                    }, n = n || 1, i = i || 0;
                    for (var h = this, p = 0, d = t.length; d > p; p += 3) o(new e.Vector3(t[p], t[p + 1], t[p + 2]));
                    for (var f = this.vertices, m = [], p = 0, v = 0, d = r.length; d > p; p += 3, v++) {
                        var g = f[r[p]],
                            y = f[r[p + 1]],
                            b = f[r[p + 2]];
                        m[v] = new e.Face3(g.index, y.index, b.index, [g.clone(), y.clone(), b.clone()])
                    }
                    for (var x = new e.Vector3, p = 0, d = m.length; d > p; p++) s(m[p], i);
                    for (var p = 0, d = this.faceVertexUvs[0].length; d > p; p++) {
                        var _ = this.faceVertexUvs[0][p],
                            w = _[0].x,
                            C = _[1].x,
                            E = _[2].x,
                            S = Math.max(w, Math.max(C, E)),
                            T = Math.min(w, Math.min(C, E));
                        S > .9 && .1 > T && (.2 > w && (_[0].x += 1), .2 > C && (_[1].x += 1), .2 > E && (_[2].x += 1))
                    }
                    for (var p = 0, d = this.vertices.length; d > p; p++) this.vertices[p].multiplyScalar(n);
                    this.mergeVertices(), this.computeFaceNormals(), this.boundingSphere = new e.Sphere(new e.Vector3, n)
                }, e.PolyhedronGeometry.prototype = Object.create(e.Geometry.prototype), e.PolyhedronGeometry.prototype.constructor = e.PolyhedronGeometry, e.DodecahedronGeometry = function(t, r) {
                    this.parameters = {
                        radius: t,
                        detail: r
                    };
                    var n = (1 + Math.sqrt(5)) / 2,
                        i = 1 / n,
                        o = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i],
                        a = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
                    e.PolyhedronGeometry.call(this, o, a, t, r)
                }, e.DodecahedronGeometry.prototype = Object.create(e.Geometry.prototype), e.DodecahedronGeometry.prototype.constructor = e.DodecahedronGeometry, e.IcosahedronGeometry = function(t, r) {
                    var n = (1 + Math.sqrt(5)) / 2,
                        i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1],
                        o = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
                    e.PolyhedronGeometry.call(this, i, o, t, r), this.type = "IcosahedronGeometry", this.parameters = {
                        radius: t,
                        detail: r
                    }
                }, e.IcosahedronGeometry.prototype = Object.create(e.Geometry.prototype), e.IcosahedronGeometry.prototype.constructor = e.IcosahedronGeometry, e.OctahedronGeometry = function(t, r) {
                    this.parameters = {
                        radius: t,
                        detail: r
                    };
                    var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
                        i = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
                    e.PolyhedronGeometry.call(this, n, i, t, r), this.type = "OctahedronGeometry", this.parameters = {
                        radius: t,
                        detail: r
                    }
                }, e.OctahedronGeometry.prototype = Object.create(e.Geometry.prototype), e.OctahedronGeometry.prototype.constructor = e.OctahedronGeometry, e.TetrahedronGeometry = function(t, r) {
                    var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
                        i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
                    e.PolyhedronGeometry.call(this, n, i, t, r), this.type = "TetrahedronGeometry", this.parameters = {
                        radius: t,
                        detail: r
                    }
                }, e.TetrahedronGeometry.prototype = Object.create(e.Geometry.prototype), e.TetrahedronGeometry.prototype.constructor = e.TetrahedronGeometry, e.ParametricGeometry = function(t, r, n) {
                    e.Geometry.call(this), this.type = "ParametricGeometry", this.parameters = {
                        func: t,
                        slices: r,
                        stacks: n
                    };
                    var i, o, a, s, u, l = this.vertices,
                        c = this.faces,
                        h = this.faceVertexUvs[0],
                        p = r + 1;
                    for (i = 0; n >= i; i++)
                        for (u = i / n, o = 0; r >= o; o++) s = o / r, a = t(s, u), l.push(a);
                    var d, f, m, v, g, y, b, x;
                    for (i = 0; n > i; i++)
                        for (o = 0; r > o; o++) d = i * p + o, f = i * p + o + 1, m = (i + 1) * p + o + 1, v = (i + 1) * p + o, g = new e.Vector2(o / r, i / n), y = new e.Vector2((o + 1) / r, i / n), b = new e.Vector2((o + 1) / r, (i + 1) / n), x = new e.Vector2(o / r, (i + 1) / n), c.push(new e.Face3(d, f, v)), h.push([g, y, x]), c.push(new e.Face3(f, m, v)), h.push([y.clone(), b, x.clone()]);
                    this.computeFaceNormals(), this.computeVertexNormals()
                }, e.ParametricGeometry.prototype = Object.create(e.Geometry.prototype), e.ParametricGeometry.prototype.constructor = e.ParametricGeometry, e.AxisHelper = function(t) {
                    t = t || 1;
                    var r = new Float32Array([0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]),
                        n = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]),
                        i = new e.BufferGeometry;
                    i.addAttribute("position", new e.BufferAttribute(r, 3)), i.addAttribute("color", new e.BufferAttribute(n, 3));
                    var o = new e.LineBasicMaterial({
                        vertexColors: e.VertexColors
                    });
                    e.Line.call(this, i, o, e.LinePieces)
                }, e.AxisHelper.prototype = Object.create(e.Line.prototype), e.AxisHelper.prototype.constructor = e.AxisHelper, e.ArrowHelper = function() {
                    var t = new e.Geometry;
                    t.vertices.push(new e.Vector3(0, 0, 0), new e.Vector3(0, 1, 0));
                    var r = new e.CylinderGeometry(0, .5, 1, 5, 1);
                    return r.applyMatrix((new e.Matrix4).makeTranslation(0, -.5, 0)),
                        function(n, i, o, a, s, u) {
                            e.Object3D.call(this), void 0 === a && (a = 16776960), void 0 === o && (o = 1), void 0 === s && (s = .2 * o), void 0 === u && (u = .2 * s), this.position.copy(i), this.line = new e.Line(t, new e.LineBasicMaterial({
                                color: a
                            })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new e.Mesh(r, new e.MeshBasicMaterial({
                                color: a
                            })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(n), this.setLength(o, s, u)
                        }
                }(), e.ArrowHelper.prototype = Object.create(e.Object3D.prototype), e.ArrowHelper.prototype.constructor = e.ArrowHelper, e.ArrowHelper.prototype.setDirection = function() {
                    var t, r = new e.Vector3;
                    return function(e) {
                        e.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : e.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (r.set(e.z, 0, -e.x).normalize(), t = Math.acos(e.y), this.quaternion.setFromAxisAngle(r, t))
                    }
                }(), e.ArrowHelper.prototype.setLength = function(e, t, r) {
                    void 0 === t && (t = .2 * e), void 0 === r && (r = .2 * t), this.line.scale.set(1, e - t, 1), this.line.updateMatrix(), this.cone.scale.set(r, t, r), this.cone.position.y = e, this.cone.updateMatrix()
                }, e.ArrowHelper.prototype.setColor = function(e) {
                    this.line.material.color.set(e), this.cone.material.color.set(e)
                }, e.BoxHelper = function(t) {
                    var r = new e.BufferGeometry;
                    r.addAttribute("position", new e.BufferAttribute(new Float32Array(72), 3)), e.Line.call(this, r, new e.LineBasicMaterial({
                        color: 16776960
                    }), e.LinePieces), void 0 !== t && this.update(t)
                }, e.BoxHelper.prototype = Object.create(e.Line.prototype), e.BoxHelper.prototype.constructor = e.BoxHelper, e.BoxHelper.prototype.update = function(e) {
                    var t = e.geometry;
                    null === t.boundingBox && t.computeBoundingBox();
                    var r = t.boundingBox.min,
                        n = t.boundingBox.max,
                        i = this.geometry.attributes.position.array;
                    i[0] = n.x, i[1] = n.y, i[2] = n.z, i[3] = r.x, i[4] = n.y, i[5] = n.z, i[6] = r.x, i[7] = n.y, i[8] = n.z, i[9] = r.x, i[10] = r.y, i[11] = n.z, i[12] = r.x, i[13] = r.y, i[14] = n.z, i[15] = n.x, i[16] = r.y, i[17] = n.z, i[18] = n.x, i[19] = r.y, i[20] = n.z, i[21] = n.x, i[22] = n.y, i[23] = n.z, i[24] = n.x, i[25] = n.y, i[26] = r.z, i[27] = r.x, i[28] = n.y, i[29] = r.z, i[30] = r.x, i[31] = n.y, i[32] = r.z, i[33] = r.x, i[34] = r.y, i[35] = r.z, i[36] = r.x, i[37] = r.y, i[38] = r.z, i[39] = n.x, i[40] = r.y, i[41] = r.z, i[42] = n.x, i[43] = r.y, i[44] = r.z, i[45] = n.x, i[46] = n.y, i[47] = r.z, i[48] = n.x, i[49] = n.y, i[50] = n.z, i[51] = n.x, i[52] = n.y, i[53] = r.z, i[54] = r.x, i[55] = n.y, i[56] = n.z, i[57] = r.x, i[58] = n.y, i[59] = r.z, i[60] = r.x, i[61] = r.y, i[62] = n.z, i[63] = r.x, i[64] = r.y, i[65] = r.z, i[66] = n.x, i[67] = r.y, i[68] = n.z, i[69] = n.x, i[70] = r.y, i[71] = r.z, this.geometry.attributes.position.needsUpdate = !0, this.geometry.computeBoundingSphere(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1
                }, e.BoundingBoxHelper = function(t, r) {
                    var n = void 0 !== r ? r : 8947848;
                    this.object = t, this.box = new e.Box3, e.Mesh.call(this, new e.BoxGeometry(1, 1, 1), new e.MeshBasicMaterial({
                        color: n,
                        wireframe: !0
                    }))
                }, e.BoundingBoxHelper.prototype = Object.create(e.Mesh.prototype), e.BoundingBoxHelper.prototype.constructor = e.BoundingBoxHelper, e.BoundingBoxHelper.prototype.update = function() {
                    this.box.setFromObject(this.object), this.box.size(this.scale), this.box.center(this.position)
                }, e.CameraHelper = function(t) {
                    function r(e, t, r) {
                        n(e, r), n(t, r)
                    }

                    function n(t, r) {
                        i.vertices.push(new e.Vector3), i.colors.push(new e.Color(r)), void 0 === a[t] && (a[t] = []), a[t].push(i.vertices.length - 1)
                    }
                    var i = new e.Geometry,
                        o = new e.LineBasicMaterial({
                            color: 16777215,
                            vertexColors: e.FaceColors
                        }),
                        a = {},
                        s = 16755200,
                        u = 16711680,
                        l = 43775,
                        c = 16777215,
                        h = 3355443;
                    r("n1", "n2", s), r("n2", "n4", s), r("n4", "n3", s), r("n3", "n1", s), r("f1", "f2", s), r("f2", "f4", s), r("f4", "f3", s), r("f3", "f1", s), r("n1", "f1", s), r("n2", "f2", s), r("n3", "f3", s), r("n4", "f4", s), r("p", "n1", u), r("p", "n2", u), r("p", "n3", u), r("p", "n4", u), r("u1", "u2", l), r("u2", "u3", l), r("u3", "u1", l), r("c", "t", c), r("p", "c", h), r("cn1", "cn2", h), r("cn3", "cn4", h), r("cf1", "cf2", h), r("cf3", "cf4", h), e.Line.call(this, i, o, e.LinePieces), this.camera = t, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = a, this.update()
                }, e.CameraHelper.prototype = Object.create(e.Line.prototype), e.CameraHelper.prototype.constructor = e.CameraHelper, e.CameraHelper.prototype.update = function() {
                    var t, r, n = new e.Vector3,
                        i = new e.Camera,
                        o = function(e, o, a, s) {
                            n.set(o, a, s).unproject(i);
                            var u = r[e];
                            if (void 0 !== u)
                                for (var l = 0, c = u.length; c > l; l++) t.vertices[u[l]].copy(n)
                        };
                    return function() {
                        t = this.geometry, r = this.pointMap;
                        var e = 1,
                            n = 1;
                        i.projectionMatrix.copy(this.camera.projectionMatrix), o("c", 0, 0, -1), o("t", 0, 0, 1), o("n1", -e, -n, -1), o("n2", e, -n, -1), o("n3", -e, n, -1), o("n4", e, n, -1), o("f1", -e, -n, 1), o("f2", e, -n, 1), o("f3", -e, n, 1), o("f4", e, n, 1), o("u1", .7 * e, 1.1 * n, -1), o("u2", .7 * -e, 1.1 * n, -1), o("u3", 0, 2 * n, -1), o("cf1", -e, 0, 1), o("cf2", e, 0, 1), o("cf3", 0, -n, 1), o("cf4", 0, n, 1), o("cn1", -e, 0, -1), o("cn2", e, 0, -1), o("cn3", 0, -n, -1), o("cn4", 0, n, -1), t.verticesNeedUpdate = !0
                    }
                }(), e.DirectionalLightHelper = function(t, r) {
                    e.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, r = r || 1;
                    var n = new e.Geometry;
                    n.vertices.push(new e.Vector3(-r, r, 0), new e.Vector3(r, r, 0), new e.Vector3(r, -r, 0), new e.Vector3(-r, -r, 0), new e.Vector3(-r, r, 0));
                    var i = new e.LineBasicMaterial({
                        fog: !1
                    });
                    i.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.lightPlane = new e.Line(n, i), this.add(this.lightPlane), n = new e.Geometry, n.vertices.push(new e.Vector3, new e.Vector3), i = new e.LineBasicMaterial({
                        fog: !1
                    }), i.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine = new e.Line(n, i), this.add(this.targetLine), this.update()
                }, e.DirectionalLightHelper.prototype = Object.create(e.Object3D.prototype), e.DirectionalLightHelper.prototype.constructor = e.DirectionalLightHelper, e.DirectionalLightHelper.prototype.dispose = function() {
                    this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
                }, e.DirectionalLightHelper.prototype.update = function() {
                    var t = new e.Vector3,
                        r = new e.Vector3,
                        n = new e.Vector3;
                    return function() {
                        t.setFromMatrixPosition(this.light.matrixWorld), r.setFromMatrixPosition(this.light.target.matrixWorld), n.subVectors(r, t), this.lightPlane.lookAt(n), this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine.geometry.vertices[1].copy(n), this.targetLine.geometry.verticesNeedUpdate = !0, this.targetLine.material.color.copy(this.lightPlane.material.color)
                    }
                }(), e.EdgesHelper = function(t, r, n) {
                    var i = void 0 !== r ? r : 16777215;
                    n = void 0 !== n ? n : 1;
                    var o, a = Math.cos(e.Math.degToRad(n)),
                        s = [0, 0],
                        u = {},
                        l = function(e, t) {
                            return e - t
                        },
                        c = ["a", "b", "c"],
                        h = new e.BufferGeometry;
                    t.geometry instanceof e.BufferGeometry ? (o = new e.Geometry, o.fromBufferGeometry(t.geometry)) : o = t.geometry.clone(), o.mergeVertices(), o.computeFaceNormals();
                    for (var p = o.vertices, d = o.faces, f = 0, m = 0, v = d.length; v > m; m++)
                        for (var g = d[m], y = 0; 3 > y; y++) {
                            s[0] = g[c[y]], s[1] = g[c[(y + 1) % 3]], s.sort(l);
                            var b = s.toString();
                            void 0 === u[b] ? (u[b] = {
                                vert1: s[0],
                                vert2: s[1],
                                face1: m,
                                face2: void 0
                            }, f++) : u[b].face2 = m
                        }
                    var x = new Float32Array(2 * f * 3),
                        _ = 0;
                    for (var b in u) {
                        var w = u[b];
                        if (void 0 === w.face2 || d[w.face1].normal.dot(d[w.face2].normal) <= a) {
                            var C = p[w.vert1];
                            x[_++] = C.x, x[_++] = C.y, x[_++] = C.z, C = p[w.vert2], x[_++] = C.x, x[_++] = C.y, x[_++] = C.z
                        }
                    }
                    h.addAttribute("position", new e.BufferAttribute(x, 3)), e.Line.call(this, h, new e.LineBasicMaterial({
                        color: i
                    }), e.LinePieces), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
                }, e.EdgesHelper.prototype = Object.create(e.Line.prototype), e.EdgesHelper.prototype.constructor = e.EdgesHelper, e.FaceNormalsHelper = function(t, r, n, i) {
                    this.object = t, this.size = void 0 !== r ? r : 1;
                    for (var o = void 0 !== n ? n : 16776960, a = void 0 !== i ? i : 1, s = new e.Geometry, u = this.object.geometry.faces, l = 0, c = u.length; c > l; l++) s.vertices.push(new e.Vector3, new e.Vector3);
                    e.Line.call(this, s, new e.LineBasicMaterial({
                        color: o,
                        linewidth: a
                    }), e.LinePieces), this.matrixAutoUpdate = !1, this.normalMatrix = new e.Matrix3, this.update()
                }, e.FaceNormalsHelper.prototype = Object.create(e.Line.prototype), e.FaceNormalsHelper.prototype.constructor = e.FaceNormalsHelper, e.FaceNormalsHelper.prototype.update = function() {
                    var e = this.geometry.vertices,
                        t = this.object,
                        r = t.geometry.vertices,
                        n = t.geometry.faces,
                        i = t.matrixWorld;
                    t.updateMatrixWorld(!0), this.normalMatrix.getNormalMatrix(i);
                    for (var o = 0, a = 0, s = n.length; s > o; o++, a += 2) {
                        var u = n[o];
                        e[a].copy(r[u.a]).add(r[u.b]).add(r[u.c]).divideScalar(3).applyMatrix4(i), e[a + 1].copy(u.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[a])
                    }
                    return this.geometry.verticesNeedUpdate = !0, this
                }, e.GridHelper = function(t, r) {
                    var n = new e.Geometry,
                        i = new e.LineBasicMaterial({
                            vertexColors: e.VertexColors
                        });
                    this.color1 = new e.Color(4473924), this.color2 = new e.Color(8947848);
                    for (var o = -t; t >= o; o += r) {
                        n.vertices.push(new e.Vector3(-t, 0, o), new e.Vector3(t, 0, o), new e.Vector3(o, 0, -t), new e.Vector3(o, 0, t));
                        var a = 0 === o ? this.color1 : this.color2;
                        n.colors.push(a, a, a, a)
                    }
                    e.Line.call(this, n, i, e.LinePieces)
                }, e.GridHelper.prototype = Object.create(e.Line.prototype), e.GridHelper.prototype.constructor = e.GridHelper, e.GridHelper.prototype.setColors = function(e, t) {
                    this.color1.set(e), this.color2.set(t), this.geometry.colorsNeedUpdate = !0
                }, e.HemisphereLightHelper = function(t, r) {
                    e.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.colors = [new e.Color, new e.Color];
                    var n = new e.SphereGeometry(r, 4, 2);
                    n.applyMatrix((new e.Matrix4).makeRotationX(-Math.PI / 2));
                    for (var i = 0, o = 8; o > i; i++) n.faces[i].color = this.colors[4 > i ? 0 : 1];
                    var a = new e.MeshBasicMaterial({
                        vertexColors: e.FaceColors,
                        wireframe: !0
                    });
                    this.lightSphere = new e.Mesh(n, a), this.add(this.lightSphere), this.update()
                }, e.HemisphereLightHelper.prototype = Object.create(e.Object3D.prototype), e.HemisphereLightHelper.prototype.constructor = e.HemisphereLightHelper, e.HemisphereLightHelper.prototype.dispose = function() {
                    this.lightSphere.geometry.dispose(), this.lightSphere.material.dispose()
                }, e.HemisphereLightHelper.prototype.update = function() {
                    var t = new e.Vector3;
                    return function() {
                        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity), this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity), this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()), this.lightSphere.geometry.colorsNeedUpdate = !0
                    }
                }(), e.PointLightHelper = function(t, r) {
                    this.light = t, this.light.updateMatrixWorld();
                    var n = new e.SphereGeometry(r, 4, 2),
                        i = new e.MeshBasicMaterial({
                            wireframe: !0,
                            fog: !1
                        });
                    i.color.copy(this.light.color).multiplyScalar(this.light.intensity), e.Mesh.call(this, n, i), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1
                }, e.PointLightHelper.prototype = Object.create(e.Mesh.prototype), e.PointLightHelper.prototype.constructor = e.PointLightHelper, e.PointLightHelper.prototype.dispose = function() {
                    this.geometry.dispose(), this.material.dispose()
                }, e.PointLightHelper.prototype.update = function() {
                    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
                }, e.SkeletonHelper = function(t) {
                    this.bones = this.getBoneList(t);
                    for (var r = new e.Geometry, n = 0; n < this.bones.length; n++) {
                        var i = this.bones[n];
                        i.parent instanceof e.Bone && (r.vertices.push(new e.Vector3), r.vertices.push(new e.Vector3), r.colors.push(new e.Color(0, 0, 1)), r.colors.push(new e.Color(0, 1, 0)))
                    }
                    var o = new e.LineBasicMaterial({
                        vertexColors: e.VertexColors,
                        depthTest: !1,
                        depthWrite: !1,
                        transparent: !0
                    });
                    e.Line.call(this, r, o, e.LinePieces), this.root = t, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.update()
                }, e.SkeletonHelper.prototype = Object.create(e.Line.prototype), e.SkeletonHelper.prototype.constructor = e.SkeletonHelper, e.SkeletonHelper.prototype.getBoneList = function(t) {
                    var r = [];
                    t instanceof e.Bone && r.push(t);
                    for (var n = 0; n < t.children.length; n++) r.push.apply(r, this.getBoneList(t.children[n]));
                    return r
                }, e.SkeletonHelper.prototype.update = function() {
                    for (var t = this.geometry, r = (new e.Matrix4).getInverse(this.root.matrixWorld), n = new e.Matrix4, i = 0, o = 0; o < this.bones.length; o++) {
                        var a = this.bones[o];
                        a.parent instanceof e.Bone && (n.multiplyMatrices(r, a.matrixWorld), t.vertices[i].setFromMatrixPosition(n), n.multiplyMatrices(r, a.parent.matrixWorld), t.vertices[i + 1].setFromMatrixPosition(n), i += 2)
                    }
                    t.verticesNeedUpdate = !0, t.computeBoundingSphere()
                }, e.SpotLightHelper = function(t) {
                    e.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1;
                    var r = new e.CylinderGeometry(0, 1, 1, 8, 1, !0);
                    r.applyMatrix((new e.Matrix4).makeTranslation(0, -.5, 0)), r.applyMatrix((new e.Matrix4).makeRotationX(-Math.PI / 2));
                    var n = new e.MeshBasicMaterial({
                        wireframe: !0,
                        fog: !1
                    });
                    this.cone = new e.Mesh(r, n), this.add(this.cone), this.update()
                }, e.SpotLightHelper.prototype = Object.create(e.Object3D.prototype), e.SpotLightHelper.prototype.constructor = e.SpotLightHelper, e.SpotLightHelper.prototype.dispose = function() {
                    this.cone.geometry.dispose(), this.cone.material.dispose()
                }, e.SpotLightHelper.prototype.update = function() {
                    var t = new e.Vector3,
                        r = new e.Vector3;
                    return function() {
                        var e = this.light.distance ? this.light.distance : 1e4,
                            n = e * Math.tan(this.light.angle);
                        this.cone.scale.set(n, n, e), t.setFromMatrixPosition(this.light.matrixWorld), r.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(r.sub(t)), this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
                    }
                }(), e.VertexNormalsHelper = function(t, r, n, i) {
                    this.object = t, this.size = void 0 !== r ? r : 1;
                    for (var o = void 0 !== n ? n : 16711680, a = void 0 !== i ? i : 1, s = new e.Geometry, u = t.geometry.faces, l = 0, c = u.length; c > l; l++)
                        for (var h = u[l], p = 0, d = h.vertexNormals.length; d > p; p++) s.vertices.push(new e.Vector3, new e.Vector3);
                    e.Line.call(this, s, new e.LineBasicMaterial({
                        color: o,
                        linewidth: a
                    }), e.LinePieces), this.matrixAutoUpdate = !1, this.normalMatrix = new e.Matrix3, this.update()
                }, e.VertexNormalsHelper.prototype = Object.create(e.Line.prototype), e.VertexNormalsHelper.prototype.constructor = e.VertexNormalsHelper, e.VertexNormalsHelper.prototype.update = function(t) {
                    var r = new e.Vector3;
                    return function(e) {
                        var t = ["a", "b", "c", "d"];
                        this.object.updateMatrixWorld(!0), this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
                        for (var n = this.geometry.vertices, i = this.object.geometry.vertices, o = this.object.geometry.faces, a = this.object.matrixWorld, s = 0, u = 0, l = o.length; l > u; u++)
                            for (var c = o[u], h = 0, p = c.vertexNormals.length; p > h; h++) {
                                var d = c[t[h]],
                                    f = i[d],
                                    m = c.vertexNormals[h];
                                n[s].copy(f).applyMatrix4(a), r.copy(m).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size), r.add(n[s]), s += 1, n[s].copy(r), s += 1
                            }
                        return this.geometry.verticesNeedUpdate = !0, this
                    }
                }(), e.VertexTangentsHelper = function(t, r, n, i) {
                    this.object = t, this.size = void 0 !== r ? r : 1;
                    for (var o = void 0 !== n ? n : 255, a = void 0 !== i ? i : 1, s = new e.Geometry, u = t.geometry.faces, l = 0, c = u.length; c > l; l++)
                        for (var h = u[l], p = 0, d = h.vertexTangents.length; d > p; p++) s.vertices.push(new e.Vector3), s.vertices.push(new e.Vector3);
                    e.Line.call(this, s, new e.LineBasicMaterial({
                        color: o,
                        linewidth: a
                    }), e.LinePieces), this.matrixAutoUpdate = !1, this.update()
                }, e.VertexTangentsHelper.prototype = Object.create(e.Line.prototype), e.VertexTangentsHelper.prototype.constructor = e.VertexTangentsHelper, e.VertexTangentsHelper.prototype.update = function(t) {
                    var r = new e.Vector3;
                    return function(e) {
                        var t = ["a", "b", "c", "d"];
                        this.object.updateMatrixWorld(!0);
                        for (var n = this.geometry.vertices, i = this.object.geometry.vertices, o = this.object.geometry.faces, a = this.object.matrixWorld, s = 0, u = 0, l = o.length; l > u; u++)
                            for (var c = o[u], h = 0, p = c.vertexTangents.length; p > h; h++) {
                                var d = c[t[h]],
                                    f = i[d],
                                    m = c.vertexTangents[h];
                                n[s].copy(f).applyMatrix4(a), r.copy(m).transformDirection(a).multiplyScalar(this.size),
                                    r.add(n[s]), s += 1, n[s].copy(r), s += 1
                            }
                        return this.geometry.verticesNeedUpdate = !0, this
                    }
                }(), e.WireframeHelper = function(t, r) {
                    var n = void 0 !== r ? r : 16777215,
                        i = [0, 0],
                        o = {},
                        a = function(e, t) {
                            return e - t
                        },
                        s = ["a", "b", "c"],
                        u = new e.BufferGeometry;
                    if (t.geometry instanceof e.Geometry) {
                        for (var l = t.geometry.vertices, c = t.geometry.faces, h = 0, p = new Uint32Array(6 * c.length), d = 0, f = c.length; f > d; d++)
                            for (var m = c[d], v = 0; 3 > v; v++) {
                                i[0] = m[s[v]], i[1] = m[s[(v + 1) % 3]], i.sort(a);
                                var g = i.toString();
                                void 0 === o[g] && (p[2 * h] = i[0], p[2 * h + 1] = i[1], o[g] = !0, h++)
                            }
                        for (var y = new Float32Array(2 * h * 3), d = 0, f = h; f > d; d++)
                            for (var v = 0; 2 > v; v++) {
                                var b = l[p[2 * d + v]],
                                    x = 6 * d + 3 * v;
                                y[x + 0] = b.x, y[x + 1] = b.y, y[x + 2] = b.z
                            }
                        u.addAttribute("position", new e.BufferAttribute(y, 3))
                    } else if (t.geometry instanceof e.BufferGeometry)
                        if (void 0 !== t.geometry.attributes.index) {
                            var l = t.geometry.attributes.position.array,
                                _ = t.geometry.attributes.index.array,
                                w = t.geometry.drawcalls,
                                h = 0;
                            0 === w.length && (w = [{
                                count: _.length,
                                index: 0,
                                start: 0
                            }]);
                            for (var p = new Uint32Array(2 * _.length), C = 0, E = w.length; E > C; ++C)
                                for (var S = w[C].start, T = w[C].count, x = w[C].index, d = S, M = S + T; M > d; d += 3)
                                    for (var v = 0; 3 > v; v++) {
                                        i[0] = x + _[d + v], i[1] = x + _[d + (v + 1) % 3], i.sort(a);
                                        var g = i.toString();
                                        void 0 === o[g] && (p[2 * h] = i[0], p[2 * h + 1] = i[1], o[g] = !0, h++)
                                    }
                            for (var y = new Float32Array(2 * h * 3), d = 0, f = h; f > d; d++)
                                for (var v = 0; 2 > v; v++) {
                                    var x = 6 * d + 3 * v,
                                        A = 3 * p[2 * d + v];
                                    y[x + 0] = l[A], y[x + 1] = l[A + 1], y[x + 2] = l[A + 2]
                                }
                            u.addAttribute("position", new e.BufferAttribute(y, 3))
                        } else {
                            for (var l = t.geometry.attributes.position.array, h = l.length / 3, P = h / 3, y = new Float32Array(2 * h * 3), d = 0, f = P; f > d; d++)
                                for (var v = 0; 3 > v; v++) {
                                    var x = 18 * d + 6 * v,
                                        R = 9 * d + 3 * v;
                                    y[x + 0] = l[R], y[x + 1] = l[R + 1], y[x + 2] = l[R + 2];
                                    var A = 9 * d + 3 * ((v + 1) % 3);
                                    y[x + 3] = l[A], y[x + 4] = l[A + 1], y[x + 5] = l[A + 2]
                                }
                            u.addAttribute("position", new e.BufferAttribute(y, 3))
                        }
                    e.Line.call(this, u, new e.LineBasicMaterial({
                        color: n
                    }), e.LinePieces), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
                }, e.WireframeHelper.prototype = Object.create(e.Line.prototype), e.WireframeHelper.prototype.constructor = e.WireframeHelper, e.ImmediateRenderObject = function() {
                    e.Object3D.call(this), this.render = function(e) {}
                }, e.ImmediateRenderObject.prototype = Object.create(e.Object3D.prototype), e.ImmediateRenderObject.prototype.constructor = e.ImmediateRenderObject, e.MorphBlendMesh = function(t, r) {
                    e.Mesh.call(this, t, r), this.animationsMap = {}, this.animationsList = [];
                    var n = this.geometry.morphTargets.length,
                        i = "__default",
                        o = 0,
                        a = n - 1,
                        s = n / 1;
                    this.createAnimation(i, o, a, s), this.setAnimationWeight(i, 1)
                }, e.MorphBlendMesh.prototype = Object.create(e.Mesh.prototype), e.MorphBlendMesh.prototype.constructor = e.MorphBlendMesh, e.MorphBlendMesh.prototype.createAnimation = function(e, t, r, n) {
                    var i = {
                        startFrame: t,
                        endFrame: r,
                        length: r - t + 1,
                        fps: n,
                        duration: (r - t) / n,
                        lastFrame: 0,
                        currentFrame: 0,
                        active: !1,
                        time: 0,
                        direction: 1,
                        weight: 1,
                        directionBackwards: !1,
                        mirroredLoop: !1
                    };
                    this.animationsMap[e] = i, this.animationsList.push(i)
                }, e.MorphBlendMesh.prototype.autoCreateAnimations = function(e) {
                    for (var t, r = /([a-z]+)_?(\d+)/, n = {}, i = this.geometry, o = 0, a = i.morphTargets.length; a > o; o++) {
                        var s = i.morphTargets[o],
                            u = s.name.match(r);
                        if (u && u.length > 1) {
                            var l = u[1];
                            n[l] || (n[l] = {
                                start: 1 / 0,
                                end: -(1 / 0)
                            });
                            var c = n[l];
                            o < c.start && (c.start = o), o > c.end && (c.end = o), t || (t = l)
                        }
                    }
                    for (var l in n) {
                        var c = n[l];
                        this.createAnimation(l, c.start, c.end, e)
                    }
                    this.firstAnimation = t
                }, e.MorphBlendMesh.prototype.setAnimationDirectionForward = function(e) {
                    var t = this.animationsMap[e];
                    t && (t.direction = 1, t.directionBackwards = !1)
                }, e.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(e) {
                    var t = this.animationsMap[e];
                    t && (t.direction = -1, t.directionBackwards = !0)
                }, e.MorphBlendMesh.prototype.setAnimationFPS = function(e, t) {
                    var r = this.animationsMap[e];
                    r && (r.fps = t, r.duration = (r.end - r.start) / r.fps)
                }, e.MorphBlendMesh.prototype.setAnimationDuration = function(e, t) {
                    var r = this.animationsMap[e];
                    r && (r.duration = t, r.fps = (r.end - r.start) / r.duration)
                }, e.MorphBlendMesh.prototype.setAnimationWeight = function(e, t) {
                    var r = this.animationsMap[e];
                    r && (r.weight = t)
                }, e.MorphBlendMesh.prototype.setAnimationTime = function(e, t) {
                    var r = this.animationsMap[e];
                    r && (r.time = t)
                }, e.MorphBlendMesh.prototype.getAnimationTime = function(e) {
                    var t = 0,
                        r = this.animationsMap[e];
                    return r && (t = r.time), t
                }, e.MorphBlendMesh.prototype.getAnimationDuration = function(e) {
                    var t = -1,
                        r = this.animationsMap[e];
                    return r && (t = r.duration), t
                }, e.MorphBlendMesh.prototype.playAnimation = function(t) {
                    var r = this.animationsMap[t];
                    r ? (r.time = 0, r.active = !0) : e.warn("THREE.MorphBlendMesh: animation[" + t + "] undefined in .playAnimation()")
                }, e.MorphBlendMesh.prototype.stopAnimation = function(e) {
                    var t = this.animationsMap[e];
                    t && (t.active = !1)
                }, e.MorphBlendMesh.prototype.update = function(t) {
                    for (var r = 0, n = this.animationsList.length; n > r; r++) {
                        var i = this.animationsList[r];
                        if (i.active) {
                            var o = i.duration / i.length;
                            i.time += i.direction * t, i.mirroredLoop ? (i.time > i.duration || i.time < 0) && (i.direction *= -1, i.time > i.duration && (i.time = i.duration, i.directionBackwards = !0), i.time < 0 && (i.time = 0, i.directionBackwards = !1)) : (i.time = i.time % i.duration, i.time < 0 && (i.time += i.duration));
                            var a = i.startFrame + e.Math.clamp(Math.floor(i.time / o), 0, i.length - 1),
                                s = i.weight;
                            a !== i.currentFrame && (this.morphTargetInfluences[i.lastFrame] = 0, this.morphTargetInfluences[i.currentFrame] = 1 * s, this.morphTargetInfluences[a] = 0, i.lastFrame = i.currentFrame, i.currentFrame = a);
                            var u = i.time % o / o;
                            i.directionBackwards && (u = 1 - u), this.morphTargetInfluences[i.currentFrame] = u * s, this.morphTargetInfluences[i.lastFrame] = (1 - u) * s
                        }
                    }
                },
                function() {
                    var e = 0,
                        t = /MSIE (\d+\.\d+);/.test(navigator.userAgent),
                        r = !!navigator.userAgent.match(/Trident\/7.0/),
                        n = navigator.userAgent.indexOf("rv:11.0");
                    t && (e = new Number(RegExp.$1)), -1 != navigator.appVersion.indexOf("MSIE 10") && (e = 10), r && -1 != n && (e = 11), e > 0 && (HTMLElement.prototype.getBoundingClientRect = function() {
                        var e = HTMLElement.prototype.getBoundingClientRect;
                        return function() {
                            try {
                                return e.apply(this, arguments)
                            } catch (t) {
                                return {
                                    left: "",
                                    right: "",
                                    top: "",
                                    bottom: ""
                                }
                            }
                        }
                    }())
                }(), e
        }(),
        u = this && this.__extends || function(e, t) {
            function r() {
                this.constructor = e
            }
            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
            e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        };
    ! function(e) {
        var t;
        ! function(e) {
            e.VERSION = {
                number: "1.2.5",
                date: "June 23 2016"
            }
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            e.THREE = s
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            function t() {
                var e = document.createElement("canvas");
                try {
                    var t = e.getContext("webgl") || e.getContext("experimental-webgl");
                    return !!t
                } catch (r) {
                    return console.log(r), !1
                }
            }
            e.checkWebGL = t;
            var r = function() {
                function t() {}
                return t.setPickBase = function(e, t, r, n) {
                    var i = 24,
                        o = e << i - t | r,
                        a = o >> 16 & 255,
                        s = o >> 8 & 255,
                        u = 255 & o;
                    n.r = a / 255, n.g = s / 255, n.b = u / 255
                }, t.setPickColor = function(e, t, r, n, i) {
                    var o = 24,
                        a = e << o - t | r,
                        s = a >> 16 & 255,
                        u = a >> 8 & 255,
                        l = 255 & a;
                    n[i] = s / 255, n[i + 1] = u / 255, n[i + 2] = l / 255
                }, t.getIndexedBufferGeometry = function(t) {
                    for (var r = 3 * t.vertices.length, n = new Float32Array(r), i = new Float32Array(r), o = new Uint32Array(3 * t.faces.length), a = Array(t.vertices.length), s = 0; s < t.faces.length; s++) {
                        var u = t.faces[s];
                        a[u.a] = u.vertexNormals[0], a[u.b] = u.vertexNormals[1], a[u.c] = u.vertexNormals[2], o[3 * s] = u.a, o[3 * s + 1] = u.b, o[3 * s + 2] = u.c
                    }
                    for (var s = 0; s < t.vertices.length; s++) {
                        var l = t.vertices[s];
                        n[3 * s] = l.x, n[3 * s + 1] = l.y, n[3 * s + 2] = l.z;
                        var c = a[s];
                        i[3 * s] = c.x, i[3 * s + 1] = c.y, i[3 * s + 2] = c.z
                    }
                    var h = new e.THREE.BufferGeometry;
                    return h.addAttribute("position", new e.THREE.BufferAttribute(n, 3)), h.addAttribute("normal", new e.THREE.BufferAttribute(i, 3)), h.addAttribute("index", new e.THREE.BufferAttribute(o, 1)), h
                }, t
            }();
            e.GeometryHelper = r
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(e, t) {
                    t.r = e.r, t.g = e.g, t.b = e.b
                }

                function n(e) {
                    var t = e.r,
                        r = e.g,
                        n = e.b;
                    return {
                        r: t,
                        g: r,
                        b: n
                    }
                }

                function i(t) {
                    return new e.THREE.Vector3(t.r, t.g, t.b)
                }

                function o(e) {
                    return {
                        r: e.x,
                        g: e.y,
                        b: e.z
                    }
                }

                function a(e, t, r) {
                    return {
                        r: e / 255,
                        g: t / 255,
                        b: r / 255
                    }
                }

                function s(e, t, r) {
                    return 0 > r && (r += 1), r > 1 && (r -= 1), 1 / 6 > r ? e + 6 * (t - e) * r : .5 > r ? t : 2 / 3 > r ? e + (t - e) * (2 / 3 - r) * 6 : e
                }

                function u(e, t, r) {
                    var n, i, o;
                    if (0 == t) n = i = o = r;
                    else {
                        var a = .5 > r ? r * (1 + t) : r + t - r * t,
                            u = 2 * r - a;
                        n = s(u, a, e + 1 / 3), i = s(u, a, e), o = s(u, a, e - 1 / 3)
                    }
                    return {
                        r: n,
                        g: i,
                        b: o
                    }
                }

                function l(e, t, r) {
                    var n, i, o = [];
                    if (0 === t) n = [r, r, r];
                    else switch (e /= 60, i = Math.floor(e), o = [r * (1 - t), r * (1 - t * (e - i)), r * (1 - t * (1 - (e - i)))], i) {
                        case 0:
                            n = [r, o[2], o[0]];
                            break;
                        case 1:
                            n = [o[1], r, o[0]];
                            break;
                        case 2:
                            n = [o[0], r, o[2]];
                            break;
                        case 3:
                            n = [o[0], o[1], r];
                            break;
                        case 4:
                            n = [o[2], o[0], r];
                            break;
                        default:
                            n = [r, o[0], o[1]]
                    }
                    return {
                        r: n[0],
                        g: n[1],
                        b: n[2]
                    }
                }

                function c() {
                    return e.Utils.Palette.getRandomColor()
                }

                function h(e) {
                    return {
                        r: (e >> 16 & 255) / 255,
                        g: (e >> 8 & 255) / 255,
                        b: (255 & e) / 255
                    }
                }
                t.copy = r, t.clone = n, t.toVector = i, t.fromVector = o, t.fromRgb = a, t.fromHsl = u, t.fromHsv = l, t.random = c, t.fromHex = h
            }(t = e.Color || (e.Color = {}));
            var r;
            ! function(e) {
                function r(e) {
                    var t = +e.transparency.alpha;
                    return isNaN(t) && (t = 1), .999 >= t
                }

                function n(e, t, r) {
                    var n = e.colors.get(t);
                    return n ? n : r
                }

                function i(e) {
                    void 0 === e && (e = {});
                    var r = e.colors,
                        n = void 0 === r ? new Map : r,
                        i = e.transparency,
                        o = void 0 === i ? u.Transparency : i,
                        a = e.interactive,
                        s = void 0 === a ? !0 : a,
                        l = n.get("Uniform");
                    return l || (n.set("Uniform", u.UniformColor), l = u.UniformColor), {
                        colors: n,
                        transparency: o,
                        interactive: s,
                        setElementColor: function(e, r) {
                            t.copy(l, r)
                        }
                    }
                }

                function o(e, t) {
                    void 0 === t && (t = {});
                    var r = t.colors,
                        n = void 0 === r ? new Map : r,
                        i = t.transparency,
                        o = void 0 === i ? u.Transparency : i,
                        a = t.interactive,
                        s = void 0 === a ? !0 : a,
                        l = e.getProperty,
                        c = e.setColor;
                    return {
                        colors: n,
                        transparency: o ? o : u.Transparency,
                        interactive: s,
                        setElementColor: function(e, t) {
                            c(l(e), t)
                        }
                    }
                }

                function a(e, t, r) {
                    var n = new c(t, r);
                    return {
                        getProperty: e,
                        setColor: function(e, t) {
                            return n.setColor(e, t)
                        }
                    }
                }

                function s(e, t) {
                    var r = new l(t);
                    return {
                        getProperty: e,
                        setColor: function(e, t) {
                            return r.setColor(e, t)
                        }
                    }
                }
                var u;
                ! function(e) {
                    e.HighlightColor = {
                        r: 1,
                        g: 1,
                        b: 0
                    }, e.SelectionColor = {
                        r: 1,
                        g: 0,
                        b: 0
                    }, e.UniformColor = {
                        r: 68 / 255,
                        g: 130 / 255,
                        b: 255
                    }, e.Transparency = {
                        alpha: 1,
                        writeDepth: !1
                    }
                }(u = e.Default || (e.Default = {})), e.isTransparent = r, e.getColor = n, e.createUniform = i, e.createMapping = o, e.createColorMapMapping = a, e.createPalleteMapping = s;
                var l = function() {
                        function e(e) {
                            this.pallete = e, this.colorIndex = 0, this.colorMap = new Map
                        }
                        return e.prototype.setColor = function(e, r) {
                            var n = this.colorMap.get(e);
                            n || (this.colorIndex = (this.colorIndex + 1) % this.pallete.length | 0, n = this.pallete[this.colorIndex], this.colorMap.set(e, n)), t.copy(n, r)
                        }, e
                    }(),
                    c = function() {
                        function e(e, t) {
                            this.map = e, this.fallbackColor = t
                        }
                        return e.prototype.setColor = function(e, r) {
                            var n = this.map.get(e);
                            n || (n = this.fallbackColor), t.copy(n, r)
                        }, e
                    }()
            }(r = e.Theme || (e.Theme = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t = function() {
                function t() {}
                return t.getPickMaterial = function() {
                    return new e.THREE.ShaderMaterial({
                        attributes: {
                            pColor: {
                                type: "v4",
                                value: []
                            }
                        },
                        vertexShader: t.pickVertexShader,
                        fragmentShader: t.pickFragmentShader,
                        blending: e.THREE.NoBlending,
                        shading: e.THREE.FlatShading,
                        side: e.THREE.DoubleSide
                    })
                }, t.getPickExcludeMaterial = function() {
                    return new e.THREE.MeshBasicMaterial({
                        color: e.THREE.ColorKeywords.white,
                        side: e.THREE.DoubleSide
                    })
                }, t.compareVectorAndColor = function(e, t) {
                    return e.x === t.r && e.y === t.g && e.z === t.b
                }, t.updateMaterial = function(r, n, i) {
                    var o = !1;
                    t.updateTransparency(r, n, i) && (o = !0), r instanceof e.THREE.ShaderMaterial && t.updateHighlightColor(r, n) && (o = !0), o && (r.needsUpdate = !0)
                }, t.updateHighlightColor = function(r, n) {
                    var i = !1,
                        o = r.uniforms.selectionColor.value,
                        a = e.Theme.getColor(n, "Selection", e.Theme.Default.SelectionColor);
                    t.compareVectorAndColor(o, a) || (r.uniforms.selectionColor.value = e.Color.toVector(a), i = !0), o = r.uniforms.highlightColor.value;
                    var s = e.Theme.getColor(n, "Highlight", e.Theme.Default.SelectionColor);
                    return t.compareVectorAndColor(o, s) || (r.uniforms.highlightColor.value = e.Color.toVector(s), i = !0), i
                }, t.updateTransparency = function(t, r, n) {
                    var i = r.transparency,
                        o = +i.alpha;
                    isNaN(o) && (o = 1);
                    var a = .999 >= o,
                        s = !!i.writeDepth;
                    a || (o = 1, s = !0), n && (n.renderOrder = a ? 1 : 0);
                    var u = !1;
                    return (t instanceof e.THREE.MeshPhongMaterial || t instanceof e.THREE.ShaderMaterial) && (t.transparent !== a && (t.transparent = a, u = !0), t.depthWrite !== s && (t.depthWrite = s, u = !0), t.opacity !== o && (t.opacity = o, u = !0), t instanceof e.THREE.ShaderMaterial && t.uniforms.opacity && (t.uniforms.opacity.value = o)), u
                }, t.getMeshMaterial = function(r, n) {
                    void 0 === r && (r = e.THREE.SmoothShading), void 0 === n && (n = !1);
                    var i = t.shader,
                        o = (e.THREE.UniformsUtils.clone(i.uniforms), new e.THREE.ShaderMaterial({
                            uniforms: e.THREE.UniformsUtils.clone(i.uniforms),
                            attributes: {
                                vState: {
                                    type: "f",
                                    value: []
                                }
                            },
                            lights: !0,
                            fog: !0,
                            vertexShader: i.vertexShader,
                            fragmentShader: i.fragmentShader,
                            shading: r,
                            side: e.THREE.DoubleSide,
                            vertexColors: e.THREE.VertexColors,
                            blending: e.THREE.NormalBlending,
                            wireframe: n
                        }));
                    return o
                }, t.getPhongVertexColorMaterial = function() {
                    return new e.THREE.MeshPhongMaterial({
                        specular: 11184810,
                        shininess: 2,
                        shading: e.THREE.SmoothShading,
                        vertexColors: e.THREE.VertexColors,
                        side: e.THREE.DoubleSide,
                        metal: !0
                    })
                }, t.getDefaultHighlightMaterial = function() {
                    return new e.THREE.MeshPhongMaterial({
                        color: 16777215,
                        specular: 11184810,
                        shininess: 2,
                        shading: e.THREE.SmoothShading,
                        side: e.THREE.DoubleSide,
                        metal: !0
                    })
                }, t.applyColorToMap = function(e, t, r, n) {
                    for (var i = r.array, o = {
                            r: .45,
                            g: .45,
                            b: .45
                        }, a = e.vertexRanges, s = 0, u = e.elementIndices; s < u.length; s++) {
                        var l = u[s],
                            c = e.elementMap.get(l),
                            h = e.elementRanges[2 * c],
                            p = e.elementRanges[2 * c + 1];
                        if (h !== p) {
                            n(l, o);
                            for (var d = h; p > d; d += 2)
                                for (var f = a[d], m = a[d + 1], v = f; m > v; v++) i[3 * v] = o.r, i[3 * v + 1] = o.g, i[3 * v + 2] = o.b
                        }
                    }
                    r.needsUpdate = !0
                }, t.pickVertexShader = ["attribute vec4 pColor;", "varying vec4 pC;", "void main() {", "pC = pColor;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"), t.pickFragmentShader = ["varying vec4 pC;", "void main() {", "gl_FragColor = pC;", "}"].join("\n"), t.shader = {
                    uniforms: e.THREE.UniformsUtils.merge([e.THREE.UniformsLib.common, e.THREE.UniformsLib.bump, e.THREE.UniformsLib.normalmap, e.THREE.UniformsLib.fog, e.THREE.UniformsLib.lights, e.THREE.UniformsLib.shadowmap, {
                        emissive: {
                            type: "c",
                            value: new e.THREE.Color(0)
                        },
                        specular: {
                            type: "c",
                            value: new e.THREE.Color(1118481)
                        },
                        shininess: {
                            type: "f",
                            value: 2
                        },
                        wrapRGB: {
                            type: "v3",
                            value: new e.THREE.Vector3(1, 1, 1)
                        },
                        highlightColor: {
                            type: "v3",
                            value: new e.THREE.Vector3(1, 1, 0)
                        },
                        selectionColor: {
                            type: "v3",
                            value: new e.THREE.Vector3(1, 0, 0)
                        }
                    }]),
                    vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "#ifndef FLAT_SHADED", "	varying vec3 vNormal;", "#endif", e.THREE.ShaderChunk.common, e.THREE.ShaderChunk.map_pars_vertex, e.THREE.ShaderChunk.lightmap_pars_vertex, e.THREE.ShaderChunk.envmap_pars_vertex, e.THREE.ShaderChunk.lights_phong_pars_vertex, e.THREE.ShaderChunk.color_pars_vertex, e.THREE.ShaderChunk.morphtarget_pars_vertex, e.THREE.ShaderChunk.skinning_pars_vertex, e.THREE.ShaderChunk.shadowmap_pars_vertex, e.THREE.ShaderChunk.logdepthbuf_pars_vertex, "attribute float vState;", "varying float vS;", "void main() {", "   vS = vState;", e.THREE.ShaderChunk.map_vertex, e.THREE.ShaderChunk.lightmap_vertex, e.THREE.ShaderChunk.color_vertex, e.THREE.ShaderChunk.morphnormal_vertex, e.THREE.ShaderChunk.skinbase_vertex, e.THREE.ShaderChunk.skinnormal_vertex, e.THREE.ShaderChunk.defaultnormal_vertex, "#ifndef FLAT_SHADED", "	vNormal = normalize( transformedNormal );", "#endif", e.THREE.ShaderChunk.morphtarget_vertex, e.THREE.ShaderChunk.skinning_vertex, e.THREE.ShaderChunk.default_vertex, e.THREE.ShaderChunk.logdepthbuf_vertex, "	vViewPosition = -mvPosition.xyz;", e.THREE.ShaderChunk.worldpos_vertex, e.THREE.ShaderChunk.envmap_vertex, e.THREE.ShaderChunk.lights_phong_vertex, e.THREE.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                    fragmentShader: ["#define PHONG", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", "uniform float opacity;", "uniform vec3 highlightColor;", "uniform vec3 selectionColor;", e.THREE.ShaderChunk.common, e.THREE.ShaderChunk.color_pars_fragment, e.THREE.ShaderChunk.map_pars_fragment, e.THREE.ShaderChunk.alphamap_pars_fragment, e.THREE.ShaderChunk.lightmap_pars_fragment, e.THREE.ShaderChunk.envmap_pars_fragment, e.THREE.ShaderChunk.fog_pars_fragment, e.THREE.ShaderChunk.lights_phong_pars_fragment, e.THREE.ShaderChunk.shadowmap_pars_fragment, e.THREE.ShaderChunk.bumpmap_pars_fragment, e.THREE.ShaderChunk.normalmap_pars_fragment, e.THREE.ShaderChunk.specularmap_pars_fragment, e.THREE.ShaderChunk.logdepthbuf_pars_fragment, "varying float vS;", "void main() {", "	vec3 outgoingLight = vec3( 0.0 );", "	vec4 diffuseColor;", "   if (vS < 0.33) { diffuseColor = vec4( vColor, opacity ); }", "   else if (vS - floor(vS + 0.1) > 0.33) { diffuseColor = vec4(highlightColor, opacity); }", "	else { diffuseColor = vec4(selectionColor, opacity); }", e.THREE.ShaderChunk.logdepthbuf_fragment, e.THREE.ShaderChunk.map_fragment, e.THREE.ShaderChunk.alphamap_fragment, e.THREE.ShaderChunk.alphatest_fragment, e.THREE.ShaderChunk.specularmap_fragment, e.THREE.ShaderChunk.lights_phong_fragment, e.THREE.ShaderChunk.lightmap_fragment, e.THREE.ShaderChunk.envmap_fragment, e.THREE.ShaderChunk.shadowmap_fragment, e.THREE.ShaderChunk.linear_to_gamma_fragment, e.THREE.ShaderChunk.fog_fragment, "	gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "}"].join("\n")
                }, t
            }();
            e.MaterialsHelper = t
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t = function() {
                function e() {}
                return e
            }();
            e.GeometryBase = t;
            var r = function() {
                function t() {
                    this.id = -1, this.entity = void 0, this.centroid = new e.THREE.Vector3, this.radius = 0, this.object = void 0, this.theme = void 0, this.disposeList = [], this.pickObject = void 0, this.pickBufferAttributes = [], this.dirty = !1, this.props = {}, this.tag = void 0
                }
                return t.prototype.updateVisibility = function(e) {
                    this.dirty = !0, this.object.visible = e, this.pickObject && (this.pickObject.visible = this.theme.interactive ? e : !1)
                }, t.prototype.getVisibility = function() {
                    return this.object.visible
                }, t.prototype.applyTheme = function(e) {
                    this.dirty = !0, this.theme = e, e.interactive ? this.pickObject && (this.pickObject.visible = this.object.visible) : this.pickObject && (this.pickObject.visible = !1), this.applyThemeInternal(e)
                }, t.prototype.updateId = function(t, r) {
                    this.id = t;
                    for (var n = 0, i = this.pickBufferAttributes; n < i.length; n++) {
                        var o = i[n],
                            a = o.array;
                        if (8 >= r)
                            for (var s = 0, u = a.length; u > s; s += 4) e.Selection.Picking.applySceneIdFast(this.id, s, a);
                        else
                            for (var s = 0, u = a.length; u > s; s += 4) e.Selection.Picking.applySceneIdSlow(r - 8, this.id, s, a);
                        o.needsUpdate = !0
                    }
                }, t.prototype.dispose = function() {
                    for (var e = 0, t = this.disposeList; e < t.length; e++) {
                        var r = t[e];
                        r && r.dispose()
                    }
                    this.disposeList = null, this.disposeList = []
                }, t.prototype.highlight = function(e) {
                    var t = this.highlightInternal(e);
                    return this.dirty = this.dirty || t, t
                }, t.prototype.applySelection = function(e, t) {
                    var r = this.applySelectionInternal(e, t);
                    return this.dirty = this.dirty || r, r
                }, t
            }();
            e.Model = r
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t = function() {
                function e(e) {
                    this.scene = e, this.availableIds = [], this.list = [], this.map = new Map, this.maxId = 1, this._idWidth = 8
                }
                return Object.defineProperty(e.prototype, "idWidth", {
                    get: function() {
                        return this._idWidth
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "all", {
                    get: function() {
                        return this.list
                    },
                    enumerable: !0,
                    configurable: !0
                }), Object.defineProperty(e.prototype, "count", {
                    get: function() {
                        return this.map.size
                    },
                    enumerable: !0,
                    configurable: !0
                }), e.prototype.getBySceneId = function(e) {
                    return this.map.get(e)
                }, e.prototype.add = function(e, t) {
                    void 0 === t && (t = !0);
                    var r = -1;
                    r = this.availableIds.length ? this.availableIds.pop() : this.maxId++, this.map.set(r, e), this.list.push(e), e.updateId(r, 8), e.object && this.scene.scene.add(e.object), e.pickObject && this.scene.pickScene.add(e.pickObject), t ? this.scene.camera.reset() : this.scene.forceRender()
                }, e.prototype.dispose = function(e) {
                    e.object && this.scene.scene.remove(e.object), e.pickObject && this.scene.pickScene.remove(e.pickObject), e.dispose()
                }, e.prototype.removeAndDispose = function(e) {
                    if (this.map.get(e.id)) {
                        this.availableIds.push(e.id), this.dispose(e), this.map["delete"](e.id);
                        var t = this.list.indexOf(e);
                        this.list[t] = this.list[this.list.length - 1], this.list.pop(), e.id === this.maxId && this.maxId--, e.id = -1, this.scene.forceRender()
                    }
                }, e.prototype.clear = function() {
                    for (var e = 0, t = this.list; e < t.length; e++) {
                        var r = t[e];
                        this.dispose(r)
                    }
                    this.list = [], this.maxId = 0, this.availableIds = [], this.map.clear(), this.scene.forceRender()
                }, e
            }();
            e.ModelStore = t
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            ! function(e) {
                e[e.Perspective = 0] = "Perspective", e[e.Orthographic = 1] = "Orthographic"
            }(e.CameraType || (e.CameraType = {}));
            var t = e.CameraType,
                r = function() {
                    function r(t, r) {
                        this.scene = t, this.domElement = r, this.fog = new e.THREE.Fog(0, 0, 500), this.focusPoint = new e.THREE.Vector3(0, 0, 0), this.focusRadius = 0, this.targetDistance = 0, this.nearPlaneDistance = 0, this.nearPlaneDelta = 0, this.fogEnabled = !0, this.fogDelta = 0, this.observers = [], this.setup()
                    }
                    return r.shouldInUpdateInclude = function(e) {
                        return !isNaN(e.centroid.x) && e.getVisibility()
                    }, r.dist = function(e, t) {
                        e.centroid.x - t.centroid.x
                    }, r.prototype.updateFocus = function(t) {
                        if (t.length) {
                            var n = t.filter(function(e) {
                                return r.shouldInUpdateInclude(e)
                            }).sort(function(e, t) {
                                return t.radius - e.radius
                            });
                            if (n.length) {
                                for (var i = [n[0]], o = new e.THREE.Vector3, a = 1; a < n.length; a++) {
                                    for (var s = n[a], u = !0, l = 0, c = i; l < c.length; l++) {
                                        var h = c[l],
                                            p = o.subVectors(s.centroid, h.centroid).length();
                                        if (p < h.radius) {
                                            u = !1;
                                            break
                                        }
                                    }
                                    u && i.push(s)
                                }
                                var d = this.focusPoint;
                                d.x = 0, d.y = 0, d.z = 0;
                                for (var f = 0, m = i; f < m.length; f++) {
                                    var h = m[f];
                                    d.add(h.centroid)
                                }
                                d.multiplyScalar(1 / i.length);
                                for (var v = 0, g = 0, y = n; g < y.length; g++) {
                                    var b = y[g];
                                    v = Math.max(v, d.distanceTo(b.centroid) + b.radius)
                                }
                                this.focusRadius = v
                            }
                        }
                    }, r.prototype.focus = function() {
                        this.controls.reset();
                        var e = this.focusPoint;
                        this.camera.position.set(e.x, e.y, e.z - 4 * this.focusRadius), this.camera.lookAt(e), this.controls.target.set(e.x, e.y, e.z), this.cameraUpdated()
                    }, r.prototype.reset = function() {
                        this.nearPlaneDelta = 0, this.fogDelta = 0, this.updateFocus(this.scene.models.all), this.focus()
                    }, r.prototype.snapshot = function() {
                        return this.controls.getState()
                    }, r.prototype.restore = function(e) {
                        this.controls.setState(e), this.scene.forceRender()
                    }, r.prototype.focusOnModel = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                        this.updateFocus(e), this.nearPlaneDelta = 0, this.fogDelta = 0, this.controls.panAndMoveToDistance(this.focusPoint, 4 * this.focusRadius)
                    }, r.prototype.focusOnPoint = function(e, t) {
                        this.focusPoint.x = e.x, this.focusPoint.y = e.y, this.focusPoint.z = e.z, this.focusRadius = t, this.nearPlaneDelta = 0, this.fogDelta = 0, this.controls.panAndMoveToDistance(this.focusPoint, 4 * t)
                    }, r.prototype.move = function(e) {
                        this.controls.panTo(e)
                    }, r.prototype.updateSize = function(t, r) {
                        var n = this.camera;
                        n instanceof e.THREE.PerspectiveCamera && (n.aspect = t / r), this.camera.updateProjectionMatrix()
                    }, Object.defineProperty(r.prototype, "position", {
                        get: function() {
                            return this.camera.position
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(r.prototype, "object", {
                        get: function() {
                            return this.camera
                        },
                        enumerable: !0,
                        configurable: !0
                    }), r.prototype.dispose = function() {
                        this.unbindCamera && (this.unbindCamera(), this.unbindCamera = void 0), this.controls && (this.controls.destroy(), this.controls = void 0)
                    }, r.prototype.handleMouseWheel = function(e) {
                        var t = 0;
                        e.wheelDelta ? t = e.wheelDelta : e.detail && (t = -e.detail), -.5 > t ? t = -.5 : t > .5 && (t = .5);
                        var r = this.computeNearDistance(),
                            n = r + this.nearPlaneDelta + t;
                        t > 0 && n > this.targetDistance && (t = 0), 0 > t && .01 > n && (t = 0), this.nearPlaneDelta += t, this.fogDelta += t, this.cameraUpdated()
                    }, r.prototype.computeNearDistance = function() {
                        var e = this.controls.target.distanceTo(this.camera.position);
                        return e > this.focusRadius ? e - this.focusRadius : 0
                    }, r.prototype.cameraUpdated = function() {
                        var t = this.scene.options;
                        this.fogEnabled = t.enableFog;
                        var r = this.camera;
                        r instanceof e.THREE.PerspectiveCamera && (r.fov = t.cameraFOV), this.targetDistance = this.controls.target.distanceTo(this.camera.position);
                        var n = this.computeNearDistance() + this.nearPlaneDelta;
                        if (this.camera.near = Math.max(.01, Math.min(n, this.targetDistance - .5)), t.enableFog) {
                            var i = this.targetDistance - this.camera.near + 1 * this.focusRadius - this.nearPlaneDelta,
                                o = this.targetDistance - this.camera.near + 2 * this.focusRadius - this.nearPlaneDelta;
                            this.fog.near = Math.max(i, .1), this.fog.far = Math.max(o, .2)
                        } else this.fog.far = 1000001, this.fog.near = 1e6;
                        this.camera.updateProjectionMatrix(), this.scene.forceRender();
                        for (var a = 0, s = this.observers; a < s.length; a++) {
                            var u = s[a];
                            u.call(null, this)
                        }
                    }, r.prototype.createCamera = function() {
                        if (this.scene.options.cameraType === t.Perspective) this.camera = new e.THREE.PerspectiveCamera(this.scene.options.cameraFOV, this.scene.parentElement.clientWidth / this.scene.parentElement.clientHeight, .1, 1e6);
                        else {
                            var r = this.scene.parentElement.clientWidth,
                                n = this.scene.parentElement.clientHeight,
                                i = 100,
                                o = n / r * i;
                            this.camera = new e.THREE.OrthographicCamera(.5 * i / -2, .5 * i / 2, o / 2, o / -2, .1, 1e6)
                        }
                        this.controls && (this.controls.camera = this.camera, this.reset())
                    }, r.prototype.setup = function() {
                        var t = this;
                        this.dispose(), this.createCamera(), this.controls = new e.CameraControls(this.camera, this.domElement, this.scene);
                        var r = this.scene.options.clearColor;
                        this.fog.color.setRGB(r.r, r.g, r.b), this.scene.scene.fog = this.fog;
                        var n = function(e) {
                                return t.handleMouseWheel(e)
                            },
                            i = function() {
                                return t.cameraUpdated()
                            };
                        this.domElement.addEventListener("mousewheel", n), this.domElement.addEventListener("DOMMouseScroll", n), this.controls.events.addEventListener("change", i), this.unbindCamera = function() {
                            t.controls.events.removeEventListener("change", i), t.domElement.removeEventListener("mousewheel", n), t.domElement.removeEventListener("DOMMouseScroll", n), t.observers = []
                        }, this.reset()
                    }, r.prototype.observe = function(e) {
                        this.observers.push(e)
                    }, r.prototype.stopObserving = function(e) {
                        this.observers = this.observers.filter(function(t) {
                            return t !== e
                        })
                    }, r
                }();
            e.Camera = r
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            t.DefaultSceneOptions = {
                alpha: !1,
                clearColor: {
                    r: 0,
                    g: 0,
                    b: 0
                },
                cameraFOV: 30,
                cameraType: t.CameraType.Perspective,
                enableFog: !0
            };
            var r = function() {
                function e() {
                    this.position = {
                        x: 0,
                        y: 0
                    }, this.lastPosition = {
                        x: 0,
                        y: 0
                    }, this.exactPosition = {
                        x: 0,
                        y: 0
                    }, this.isInside = !1, this.isButtonDown = !1
                }
                return e.prototype.updatePosition = function(e, t) {
                    this.position.x = e, this.position.y = t
                }, e.prototype.update = function() {
                    return this.lastPosition.x === this.position.x && this.lastPosition.y === this.position.y ? !1 : (this.lastPosition.x = this.position.x, this.lastPosition.y = this.position.y, !0)
                }, e.prototype.setExactPosition = function(e) {
                    var t = 0,
                        r = 0;
                    if (e.offsetParent)
                        do t += e.offsetLeft, r += e.offsetTop; while (e = e.offsetParent);
                    this.exactPosition.x = this.position.x - t, this.exactPosition.y = this.position.y - r
                }, e
            }();
            t.MouseInfo = r;
            var n = function() {
                function e() {
                    this.lights = []
                }
                return e.prototype.setup = function(e) {
                    var r = new t.THREE.PointLight(11184810, .75);
                    r.clone();
                    e.add(r), this.lights = [r];
                    var n = new t.THREE.AmbientLight(10066329);
                    e.add(n)
                }, e.prototype.update = function(e) {
                    for (var t = 0, r = this.lights; t < r.length; t++) {
                        var n = r[t];
                        n.position.copy(e)
                    }
                }, e
            }();
            t.DefaultLighting = n;
            var i = function() {
                function e() {
                    this.width = 0, this.height = 0, this.resizing = !1, this.rendered = !1, this.lastRenderTime = 0, this.pickDelta = 0, this.animationFrame = 0
                }
                return e
            }();
            t.RenderState = i;
            var o = function() {
                function o(o, a) {
                    var s = this;
                    void 0 === a && (a = {}), this.renderState = new i, this.mouseInfo = new r, this.pickInfo = new t.Selection.Pick, this.selectInfo = null, this.unbindEvents = [], this.updateSizeInterval = void 0, this.models = new t.ModelStore(this), this.events = new t.THREE.EventDispatcher, this.clearHighlightsCall = function() {
                        return s.clearHighlights(!0)
                    }, this.renderFunc = function(e) {
                        return s.render(e)
                    }, this.pickBuffer = new Uint8Array(4), a = e.Core.Utils.extend({}, a, t.DefaultSceneOptions), this.options = a, this.parentElement = o, this.scene = new t.THREE.Scene, this.pickScene = new t.THREE.Scene, this.pickTarget = new t.THREE.WebGLRenderTarget(1, 1, {
                        format: t.THREE.RGBAFormat,
                        minFilter: t.THREE.LinearFilter
                    }), this.pickTarget.generateMipmaps = !1, this.renderer = new t.THREE.WebGLRenderer({
                        antialias: !0,
                        alpha: a.alpha,
                        preserveDrawingBuffer: !0
                    }), this.renderer.setClearColor(new t.THREE.Color(a.clearColor.r, a.clearColor.g, a.clearColor.b)), this.renderer.autoClear = !0, this.renderer.sortObjects = !1, this.lighting = new n, this.lighting.setup(this.scene), this.parentElement.appendChild(this.renderer.domElement);
                    var u = e.Core.Utils.debounce(function() {
                            return s.handleResize()
                        }, 100),
                        l = function() {
                            s.renderState.resizing = !0, u()
                        };
                    window.addEventListener("resize", l), document.addEventListener("resize", l), this.renderer.domElement.addEventListener("resize", l), this.unbindEvents.push(function() {
                        return window.removeEventListener("resize", l)
                    }), this.unbindEvents.push(function() {
                        return document.removeEventListener("resize", l)
                    }), this.unbindEvents.push(function() {
                        return s.renderer.domElement.removeEventListener("resize", l)
                    }), this.setupMouse(), this.camera = new t.Camera(this, this.renderer.domElement), this.handleResize(), this.renderer.clear(), this.needsRender(), this.renderState.animationFrame = requestAnimationFrame(this.renderFunc)
                }
                return o.prototype.updateOptions = function(r) {
                    r = e.Core.Utils.extend({}, r, this.options);
                    var n = r.cameraType !== this.options.cameraType,
                        i = r.clearColor;
                    this.renderer.setClearColor(new t.THREE.Color(i.r, i.g, i.b)), this.renderer.setClearAlpha(r.alpha ? 0 : 1), this.camera.fog.color.setRGB(i.r, i.g, i.b), this.options = r, n && this.camera.createCamera(), this.camera.cameraUpdated(), this.forceRender()
                }, o.prototype.setupMouse = function() {
                    var e = this,
                        t = function(t) {
                            e.mouseInfo.updatePosition(t.pageX, t.pageY), e.mouseInfo.isInside = !0
                        };
                    this.parentElement.addEventListener("mousemove", t), this.unbindEvents.push(function() {
                        return e.parentElement.removeEventListener("mousemove", t)
                    });
                    var r = function(t) {
                        e.mouseInfo.isInside = !1, e.clearHighlights()
                    };
                    this.parentElement.addEventListener("mouseleave", r), this.unbindEvents.push(function() {
                        return e.parentElement.removeEventListener("mouseleave", r)
                    });
                    var n = function(t) {
                        e.mouseInfo.isInside ? e.handleSelectStart(t.clientX, t.clientY) : e.selectInfo = null, e.clearHighlights(), e.mouseInfo.isButtonDown = !0
                    };
                    this.parentElement.addEventListener("mousedown", n), this.unbindEvents.push(function() {
                        return e.parentElement.removeEventListener("mousedown", n)
                    });
                    var i = function(t) {
                        e.mouseInfo.isButtonDown = !1, e.needsRender(), e.handleSelectEnd(t.clientX, t.clientY), e.clearHighlights(!0)
                    };
                    window.addEventListener("mouseup", i), this.unbindEvents.push(function() {
                        return window.removeEventListener("mouseup", i)
                    });
                    var o = function(t) {
                        var r = t.touches;
                        r.length || (r = t.changedTouches), 1 === r.length && e.handleSelectEnd(r[0].clientX, r[0].clientY), setTimeout(e.clearHighlightsCall, 1e3 / 15)
                    };
                    this.parentElement.addEventListener("touchend", o, !1), this.unbindEvents.push(function() {
                        return e.parentElement.removeEventListener("touchend", o, !1)
                    });
                    try {
                        this.parentElement.addEventListener("touchcancel", o, !1), this.unbindEvents.push(function() {
                            return e.parentElement.removeEventListener("touchcancel", o, !1)
                        })
                    } catch (a) {}
                }, o.prototype.handleSelectStart = function(e, t) {
                    this.pickInfo.selectStart(e, t), this.selectInfo = this.pickInfo.getPickInfo()
                }, o.prototype.handleSelectEnd = function(e, t) {
                    if (this.pickInfo.selectEnd(e, t)) {
                        var r = this.handlePick(!0);
                        this.dispatchSelectEvent(r)
                    }
                    this.selectInfo = null
                }, o.prototype.handleResize = function() {
                    var e = this.parentElement.clientWidth,
                        r = this.parentElement.clientHeight;
                    return this.camera.updateSize(e, r), this.renderState.height === r && this.renderState.width === e ? void(this.renderState.resizing = !1) : (this.renderState.width = e, this.renderState.height = r, this.renderer.setSize(e, r), this.pickTarget = new t.THREE.WebGLRenderTarget(e, r, {
                        format: t.THREE.RGBAFormat,
                        minFilter: t.THREE.LinearFilter
                    }), this.pickTarget.generateMipmaps = !1, this.renderState.resizing = !1, void this.needsRender())
                }, o.prototype.needsRender = function() {
                    this.renderState.rendered = !1
                }, o.prototype.checkDirty = function() {
                    for (var e = !1, t = 0, r = this.models.all; t < r.length; t++) {
                        var n = r[t];
                        e = e || n.dirty, n.dirty = !1
                    }
                    return e
                }, o.prototype.render = function(e) {
                    if (this.renderState.resizing) return void(this.renderState.animationFrame = requestAnimationFrame(this.renderFunc));
                    var t = e - this.renderState.lastRenderTime;
                    this.renderState.pickDelta += t, this.renderState.lastRenderTime = e, this.renderState.pickDelta > 33.3333333 && (this.renderState.pickDelta = this.renderState.pickDelta % 33.3333333, this.handlePick(!1));
                    var r = this.checkDirty();
                    r && (this.renderState.rendered = !1), this.renderState.rendered || (this.lighting.update(this.camera.position), this.renderer.sortObjects = !0, this.renderer.render(this.scene, this.camera.object),
                        this.renderer.sortObjects = !1, this.renderState.rendered = !0, this.mouseInfo.isButtonDown || (this.renderer.setClearAlpha(1), this.renderer.render(this.pickScene, this.camera.object, this.pickTarget), this.renderer.setClearAlpha(this.options.alpha ? 0 : 1))), this.renderState.animationFrame = requestAnimationFrame(this.renderFunc)
                }, o.prototype.dispatchHoverEvent = function() {
                    this.events.dispatchEvent({
                        type: o.hoverEvent,
                        target: null,
                        data: this.pickInfo.getPickInfo()
                    })
                }, o.prototype.dispatchSelectEvent = function(e) {
                    e && this.events.dispatchEvent({
                        type: o.selectEvent,
                        target: null,
                        data: e
                    })
                }, o.prototype.clearHighlights = function(e) {
                    void 0 === e && (e = !0);
                    var t = this.pickInfo,
                        r = this.models.getBySceneId(t.currentPickId),
                        n = !1;
                    return r && (n = r.highlightElement(t.currentPickElementId, !1)), n && e && this.needsRender(), this.pickInfo.reset() && this.dispatchHoverEvent(), n
                }, o.prototype.handlePick = function(e) {
                    if ((e || this.mouseInfo.update() && !this.mouseInfo.isButtonDown) && !this.renderState.resizing && this.mouseInfo.isInside) {
                        this.mouseInfo.setExactPosition(this.parentElement);
                        var r = this.mouseInfo.exactPosition,
                            n = this.pickTarget.height - r.y;
                        if (!(this.pickTarget.width < r.x - 1 || r.x < 0 || this.pickTarget.height < n - 1 || 0 > n)) {
                            this.renderer.readRenderTargetPixels(this.pickTarget, r.x, n, 1, 1, this.pickBuffer);
                            var i = t.Selection.Picking.getSceneId(this.models.idWidth, this.pickBuffer),
                                o = t.Selection.Picking.getElementId(this.models.idWidth, this.pickBuffer),
                                a = this.pickInfo;
                            if (e) {
                                if (255 === i) return void 0;
                                var s = this.models.getBySceneId(i);
                                return s ? {
                                    model: s,
                                    elements: s.getPickElements(o)
                                } : void 0
                            }
                            if (i !== a.currentPickId || o !== a.currentPickElementId) {
                                var u = this.clearHighlights(!1),
                                    s = this.models.getBySceneId(i);
                                return 255 !== i && s ? (a.currentPickId = i, a.currentPickElementId = o, void((s.highlightElement(o, !0) || u) && (this.needsRender(), a.current = {
                                    model: s,
                                    elements: s.getPickElements(o)
                                }, this.dispatchHoverEvent()))) : void(u && this.needsRender())
                            }
                        }
                    }
                }, o.prototype.resized = function() {
                    this.handleResize()
                }, o.prototype.forceRender = function() {
                    this.needsRender()
                }, o.prototype.clear = function() {
                    this.models.clear()
                }, o.prototype.screenshotAsDataURL = function() {
                    return this.renderer.domElement.toDataURL("image/png")
                }, o.prototype.destroy = function() {
                    this.clear();
                    for (var e = 0, t = this.unbindEvents; e < t.length; e++) {
                        var r = t[e];
                        try {
                            r()
                        } catch (n) {}
                    }
                    for (this.unbindEvents = [], cancelAnimationFrame(this.renderState.animationFrame), this.scene = null, this.pickScene = null, this.camera.dispose(), this.camera = null, this.renderer && this.renderer.dispose && this.renderer.dispose(), this.renderer = null, this.pickTarget.dispose(), this.pickTarget = null; this.parentElement.lastChild;) this.parentElement.removeChild(this.parentElement.lastChild)
                }, o.hoverEvent = "hover", o.selectEvent = "select", o
            }();
            t.Scene = o
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t = function() {
                function t(t, r, n) {
                    var i = this;
                    this.camera = t, this.domElement = r, this.scene = n, this.enabled = !0, this.rotateSpeed = 3.33, this.zoomSpeed = 3.33, this.panSpeed = 1, this.noRotate = !1, this.noZoom = !1, this.noPan = !1, this.noRoll = !0, this.staticMoving = !0, this.dynamicDampingFactor = .2, this.minDistance = 1.5, this.maxDistance = 1e5, this.keys = [65, 83, 68], this.target = new e.THREE.Vector3, this.EPS = 1e-6, this.lastPosition = new e.THREE.Vector3, this._state = -1, this._keyDownState = -1, this._prevState = -1, this._eye = new e.THREE.Vector3, this._rotateStart = new e.THREE.Vector3, this._rotateEnd = new e.THREE.Vector3, this._zoomStart = new e.THREE.Vector2, this._zoomEnd = new e.THREE.Vector2, this._touchZoomDistanceStart = 0, this._touchZoomDistanceEnd = 0, this._panStart = new e.THREE.Vector2, this._panEnd = new e.THREE.Vector2, this.target0 = this.target.clone(), this.position0 = this.camera.position.clone(), this.up0 = this.camera.up.clone(), this.changeEvent = {
                        type: "change",
                        target: void 0
                    }, this.startEvent = {
                        type: "start",
                        target: void 0
                    }, this.endEvent = {
                        type: "end",
                        target: void 0
                    }, this.events = new e.THREE.EventDispatcher, this._mouseOnScreen = new e.THREE.Vector2, this._mouseOnBallProjection = new e.THREE.Vector3, this._objectUp = new e.THREE.Vector3, this._mouseOnBall = new e.THREE.Vector3, this._rotationAxis = new e.THREE.Vector3, this._rotationQuaternion = new e.THREE.Quaternion, this._panMouseChange = new e.THREE.Vector2, this._panObjectUp = new e.THREE.Vector3, this._panPan = new e.THREE.Vector3, this._panToDelta = new e.THREE.Vector3, this._panToVector = new e.THREE.Vector3, this.eventHandlers = {
                        keydown: function(e) {
                            return i.keydown(e)
                        },
                        keyup: function(e) {
                            return i.keyup(e)
                        },
                        mousedown: function(e) {
                            return i.mousedown(e)
                        },
                        mouseup: function(e) {
                            return i.mouseup(e)
                        },
                        mousemove: function(e) {
                            return i.mousemove(e)
                        },
                        touchstart: function(e) {
                            return i.touchstart(e)
                        },
                        touchmove: function(e) {
                            return i.touchmove(e)
                        },
                        touchend: function(e) {
                            return i.touchend(e)
                        }
                    }, this.init()
                }
                return t.prototype.getMouseOnScreen = function() {
                    this.scene.mouseInfo.setExactPosition(this.domElement);
                    var e = this.scene.renderState,
                        t = this.scene.mouseInfo.exactPosition;
                    return this._mouseOnScreen.set(t.x / e.width, t.y / e.height), this._mouseOnScreen
                }, t.prototype.getMouseProjectionOnBall = function() {
                    this.scene.mouseInfo.setExactPosition(this.domElement);
                    var e = this.scene.renderState,
                        t = this.scene.mouseInfo.exactPosition,
                        r = .5 * e.width,
                        n = .5 * e.height,
                        i = (t.x - r) / (.5 * e.width),
                        o = -(t.y - n) / (.5 * e.height);
                    this._mouseOnBall.set(i, o, 0);
                    var a = this._mouseOnBall.length();
                    return this.noRoll ? a < Math.SQRT1_2 ? this._mouseOnBall.z = Math.sqrt(1 - a * a) : this._mouseOnBall.z = .5 / a : a > 1 ? this._mouseOnBall.normalize() : this._mouseOnBall.z = Math.sqrt(1 - a * a), this._eye.copy(this.camera.position).sub(this.target), this._mouseOnBallProjection.copy(this.camera.up).setLength(this._mouseOnBall.y), this._mouseOnBallProjection.add(this._objectUp.copy(this.camera.up).cross(this._eye).setLength(this._mouseOnBall.x)), this._mouseOnBallProjection.add(this._eye.setLength(this._mouseOnBall.z)), this._mouseOnBallProjection
                }, t.prototype.rotateCamera = function() {
                    var e = Math.acos(this._rotateStart.dot(this._rotateEnd) / this._rotateStart.length() / this._rotateEnd.length());
                    e && (this._rotationAxis.crossVectors(this._rotateStart, this._rotateEnd).normalize(), e *= this.rotateSpeed, this._rotationQuaternion.setFromAxisAngle(this._rotationAxis, -e), this._eye.applyQuaternion(this._rotationQuaternion), this.camera.up.applyQuaternion(this._rotationQuaternion), this._rotateEnd.applyQuaternion(this._rotationQuaternion), this.staticMoving ? this._rotateStart.copy(this._rotateEnd) : (this._rotationQuaternion.setFromAxisAngle(this._rotationAxis, e * (this.dynamicDampingFactor - 1)), this._rotateStart.applyQuaternion(this._rotationQuaternion)))
                }, t.prototype.zoomCamera = function() {
                    if (4 === this._state) {
                        var e = this._touchZoomDistanceStart / this._touchZoomDistanceEnd;
                        this._touchZoomDistanceStart = this._touchZoomDistanceEnd, this._eye.multiplyScalar(e)
                    } else {
                        var e = 1 - (this._zoomEnd.y - this._zoomStart.y) * this.zoomSpeed;
                        1 !== e && e > 0 && (this._eye.multiplyScalar(e), this.staticMoving ? this._zoomStart.copy(this._zoomEnd) : this._zoomStart.y += (this._zoomEnd.y - this._zoomStart.y) * this.dynamicDampingFactor)
                    }
                }, t.prototype.panCamera = function() {
                    this._panMouseChange.copy(this._panEnd).sub(this._panStart), this._panMouseChange.lengthSq() && (this._panMouseChange.multiplyScalar(this._eye.length() * this.panSpeed), this._panPan.copy(this._eye).cross(this.camera.up).setLength(this._panMouseChange.x), this._panPan.add(this._panObjectUp.copy(this.camera.up).setLength(this._panMouseChange.y)), this.camera.position.add(this._panPan), this.target.add(this._panPan), this.staticMoving ? this._panStart.copy(this._panEnd) : this._panStart.add(this._panMouseChange.subVectors(this._panEnd, this._panStart).multiplyScalar(this.dynamicDampingFactor)))
                }, t.prototype.panTo = function(e) {
                    var t = e.x,
                        r = e.y,
                        n = e.z;
                    this._panToVector.set(t, r, n), this._panToDelta.subVectors(this._panToVector, this.target), this.camera.position.add(this._panToDelta), this.camera.lookAt(this._panToVector), this.target.copy(this._panToVector), this._eye.subVectors(this.camera.position, this.target), this.lastPosition.copy(this.camera.position), this._panToDelta.lengthSq() > this.EPS && this.events.dispatchEvent(this.changeEvent)
                }, t.prototype.panAndMoveToDistance = function(e, t) {
                    var r = e.x,
                        n = e.y,
                        i = e.z;
                    this._panToVector.set(r, n, i), this._panToDelta.subVectors(this._panToVector, this.target), this.camera.position.add(this._panToDelta), this.camera.lookAt(this._panToVector), this.target.copy(this._panToVector), this._eye.subVectors(this.camera.position, this.target), this._eye.setLength(t), this.camera.position.addVectors(this.target, this._eye), this.checkDistances(), this.lastPosition.copy(this.camera.position), this.events.dispatchEvent(this.changeEvent)
                }, t.prototype.checkDistances = function() {
                    this.noZoom && this.noPan || (this._eye.lengthSq() > this.maxDistance * this.maxDistance && this.camera.position.addVectors(this.target, this._eye.setLength(this.maxDistance)), this._eye.lengthSq() < this.minDistance * this.minDistance && this.camera.position.addVectors(this.target, this._eye.setLength(this.minDistance)))
                }, t.prototype.update = function() {
                    this._eye.subVectors(this.camera.position, this.target), this.noRotate || this.rotateCamera(), this.noZoom || this.zoomCamera(), this.noPan || this.panCamera(), this.camera.position.addVectors(this.target, this._eye), this.checkDistances(), this.camera.lookAt(this.target), this.lastPosition.distanceToSquared(this.camera.position) > this.EPS && (this.events.dispatchEvent(this.changeEvent), this.lastPosition.copy(this.camera.position))
                }, t.prototype.reset = function() {
                    this._state = -1, this._prevState = -1, this.target.copy(this.target0), this.camera.position.copy(this.position0), this.camera.up.copy(this.up0), this._eye.subVectors(this.camera.position, this.target), this.camera.lookAt(this.target), this.events.dispatchEvent(this.changeEvent), this.lastPosition.copy(this.camera.position)
                }, t.prototype.getState = function() {
                    return {
                        state: this._state,
                        prevState: this._prevState,
                        target: this.target.clone(),
                        objPos: this.camera.position.clone(),
                        objUp: this.camera.up.clone(),
                        eye: this._eye.clone(),
                        lastPosition: this.lastPosition.clone()
                    }
                }, t.prototype.setState = function(e) {
                    this._state = e.state, this._prevState = e.prevState, this.target.copy(e.target), this.camera.position.copy(e.objPos), this.camera.up.copy(e.objUp), this._eye.copy(e.eye), this.camera.lookAt(this.target), this.events.dispatchEvent(this.changeEvent), this.lastPosition.copy(e.lastPosition)
                }, t.prototype.keydown = function(e) {
                    this.enabled !== !1 && (window.removeEventListener("keydown", this.eventHandlers.keydown, !1), window.addEventListener("keyup", this.eventHandlers.keyup, !1), this._prevState = this._state, -1 === this._state && (e.keyCode !== this.keys[0] || this.noRotate ? e.keyCode !== this.keys[2] || this.noZoom ? e.keyCode !== this.keys[1] || this.noPan || (this._state = 1) : this._state = 2 : this._state = 0, this._keyDownState = this._state))
                }, t.prototype.keyup = function(e) {
                    this.enabled !== !1 && (this._state = this._prevState, this._keyDownState = -1, window.removeEventListener("keyup", this.eventHandlers.keyup, !1), window.addEventListener("keydown", this.eventHandlers.keydown, !1))
                }, t.prototype.mousedown = function(e) {
                    this.enabled !== !1 && (e.preventDefault(), this.scene.mouseInfo.updatePosition(e.pageX, e.pageY), -1 !== this._keyDownState && (this._state = this._keyDownState), -1 === this._state && (this._state = e.button), 0 !== this._state || this.noRotate ? 2 !== this._state || this.noZoom ? 1 !== this._state || this.noPan || (this._panStart.copy(this.getMouseOnScreen()), this._panEnd.copy(this._panStart)) : (this._zoomStart.copy(this.getMouseOnScreen()), this._zoomEnd.copy(this._zoomStart)) : (this._rotateStart.copy(this.getMouseProjectionOnBall()), this._rotateEnd.copy(this._rotateStart)), window.addEventListener("mousemove", this.eventHandlers.mousemove, !1), window.addEventListener("mouseup", this.eventHandlers.mouseup, !1), this.events.dispatchEvent(this.startEvent))
                }, t.prototype.mousemove = function(e) {
                    this.enabled !== !1 && (e.preventDefault(), this.scene.mouseInfo.updatePosition(e.pageX, e.pageY), 0 !== this._state || this.noRotate ? 2 !== this._state || this.noZoom ? 1 !== this._state || this.noPan || this._panEnd.copy(this.getMouseOnScreen()) : this._zoomEnd.copy(this.getMouseOnScreen()) : this._rotateEnd.copy(this.getMouseProjectionOnBall()), this.update())
                }, t.prototype.mouseup = function(e) {
                    this.enabled !== !1 && (e.preventDefault(), this._state = -1, window.removeEventListener("mousemove", this.eventHandlers.mousemove, !1), window.removeEventListener("mouseup", this.eventHandlers.mouseup, !1), this.events.dispatchEvent(this.endEvent))
                }, t.prototype.mousewheel = function(e) {
                    if (this.enabled !== !1) {
                        e.preventDefault();
                        var t = 0;
                        e.wheelDelta ? t = e.wheelDelta / 40 : e.detail && (t = -e.detail / 3), this._zoomStart.y += .01 * t, this.events.dispatchEvent(this.startEvent), this.events.dispatchEvent(this.endEvent)
                    }
                }, t.prototype.touchstart = function(e) {
                    if (this.enabled !== !1) {
                        switch (e.touches.length) {
                            case 1:
                                this._state = 3, this.scene.mouseInfo.updatePosition(e.touches[0].pageX, e.touches[0].pageY), this._rotateStart.copy(this.getMouseProjectionOnBall()), this._rotateEnd.copy(this._rotateStart);
                                break;
                            case 2:
                                this._state = 4;
                                var t = e.touches[0].pageX - e.touches[1].pageX,
                                    r = e.touches[0].pageY - e.touches[1].pageY;
                                this._touchZoomDistanceEnd = this._touchZoomDistanceStart = Math.sqrt(t * t + r * r);
                                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                                    i = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                                this.scene.mouseInfo.updatePosition(n, i), this._panStart.copy(this.getMouseOnScreen()), this._panEnd.copy(this._panStart);
                                break;
                            default:
                                this._state = -1
                        }
                        this.events.dispatchEvent(this.startEvent)
                    }
                }, t.prototype.touchmove = function(e) {
                    if (this.enabled !== !1) switch (e.preventDefault(), e.stopPropagation(), e.touches.length) {
                        case 1:
                            this.scene.mouseInfo.updatePosition(e.touches[0].pageX, e.touches[0].pageY), this._rotateEnd.copy(this.getMouseProjectionOnBall()), this.update();
                            break;
                        case 2:
                            var t = e.touches[0].pageX - e.touches[1].pageX,
                                r = e.touches[0].pageY - e.touches[1].pageY;
                            this._touchZoomDistanceEnd = Math.sqrt(t * t + r * r);
                            var n = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                                i = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                            this.scene.mouseInfo.updatePosition(n, i), this._panEnd.copy(this.getMouseOnScreen()), this.update();
                            break;
                        default:
                            this._state = -1
                    }
                }, t.prototype.touchend = function(e) {
                    if (this.enabled !== !1) {
                        var t = e.touches;
                        switch (t.length || (t = e.changedTouches), t.length) {
                            case 1:
                                this.scene.mouseInfo.updatePosition(t[0].pageX, t[0].pageY), this._rotateEnd.copy(this.getMouseProjectionOnBall()), this._rotateStart.copy(this._rotateEnd);
                                break;
                            case 2:
                                this._touchZoomDistanceStart = this._touchZoomDistanceEnd = 0;
                                var r = (t[0].pageX + t[1].pageX) / 2,
                                    n = (t[0].pageY + t[1].pageY) / 2;
                                this.scene.mouseInfo.updatePosition(r, n), this._panEnd.copy(this.getMouseOnScreen()), this._panStart.copy(this._panEnd)
                        }
                        this._state = -1, this.events.dispatchEvent(this.endEvent)
                    }
                }, t.prototype.preventContextMenu = function(e) {
                    e.preventDefault()
                }, t.prototype.init = function() {
                    this.domElement.addEventListener("contextmenu", this.preventContextMenu, !1), this.domElement.addEventListener("mousedown", this.eventHandlers.mousedown, !1), this.domElement.addEventListener("touchstart", this.eventHandlers.touchstart, !1), this.domElement.addEventListener("touchend", this.eventHandlers.touchend, !1), this.domElement.addEventListener("touchmove", this.eventHandlers.touchmove, !1), window.addEventListener("keydown", this.eventHandlers.keydown, !1), this.update()
                }, t.prototype.destroy = function() {
                    this.domElement.removeEventListener("contextmenu", this.preventContextMenu, !1), this.domElement.removeEventListener("mousedown", this.eventHandlers.mousedown, !1), window.removeEventListener("keydown", this.eventHandlers.keydown, !1), this.domElement.removeEventListener("touchstart", this.eventHandlers.touchstart, !1), this.domElement.removeEventListener("touchend", this.eventHandlers.touchend, !1), this.domElement.removeEventListener("touchmove", this.eventHandlers.touchmove, !1), this.camera = void 0, this.domElement = void 0
                }, t
            }();
            e.CameraControls = t
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(t) {
                function r(e, t, r, n) {
                    var i = !1;
                    if (3 === n)
                        for (var o = t; r > o; o++) {
                            var a = e[o],
                                s = 0 | a;
                            .33 > a - s && (e[o] = s + .55, i = !0)
                        } else if (4 === n)
                            for (var o = t; r > o; o++) {
                                var a = e[o],
                                    s = 0 | a;
                                a - s > .33 && (e[o] = s, i = !0)
                            } else if (1 === n)
                                for (var o = t; r > o; o++) e[o] = e[o] + 1, i = !0;
                            else if (2 === n) {
                        for (var o = t; r > o; o++)
                            if (e[o] > .75) {
                                var a = e[o] - 1;
                                0 > a && (a = 0), e[o] = a, i = !0
                            }
                    } else
                        for (var o = t; r > o; o++) {
                            var a = e[o];
                            e[o] = 0, i = i || 0 !== a
                        }
                    return i
                }

                function n(e, t) {
                    var n = e.array,
                        i = r(n, 0, n.length, t);
                    return i && (e.needsUpdate = !0), i
                }
                var i = function() {
                    function e() {
                        this.current = null, this.currentPickId = -1, this.currentPickElementId = -1, this.selectPos = {
                            x: 0,
                            y: 0
                        }
                    }
                    return e.prototype.getPickInfo = function() {
                        return this.current ? {
                            model: this.current.model,
                            elements: this.current.elements
                        } : this.current
                    }, e.prototype.reset = function() {
                        var e = null !== this.current;
                        return this.currentPickId = -1, this.currentPickElementId = -1, this.current = null, e
                    }, e.prototype.selectStart = function(e, t) {
                        this.selectPos.x = e, this.selectPos.y = t
                    }, e.prototype.selectEnd = function(e, t) {
                        var r = e - this.selectPos.x,
                            n = t - this.selectPos.y;
                        return 4.5 > r * r + n * n
                    }, e
                }();
                t.Pick = i;
                var o;
                ! function(e) {
                    function t(e, t) {
                        var r = e >> 16 & 255,
                            n = e >> 8 & 255,
                            i = 255 & e;
                        t.r = i / 255, t.g = n / 255, t.b = r / 255
                    }

                    function r(e, t, r) {
                        r[t + 3] = e / 255
                    }

                    function n(e, t, r, n) {
                        var i = (t & (1 << e) - 1) << 8 - e,
                            o = t >> e;
                        n[r + 3] = o / 255;
                        var a = 255 * n[r + 2] | 0;
                        n[r + 2] = (a | i) / 255
                    }

                    function i(e, t) {
                        var r = (1 << 16 - e) - 1;
                        return t[0] | t[1] << 8 | (t[2] & r) << 16
                    }

                    function o(e, t) {
                        var r = e - 8,
                            n = t[2] & (1 << r) - 1 << 8 - r >> 8 - r,
                            i = t[3] << r;
                        return n | i
                    }
                    e.assignPickColor = t, e.applySceneIdFast = r, e.applySceneIdSlow = n, e.getElementId = i, e.getSceneId = o
                }(o = t.Picking || (t.Picking = {}));
                var a = function() {
                    function t(t) {
                        this.elementCount = t, this.elementMap = new Map, this.elementIndex = 0, this.elementRangeIndex = 0, this.rangeIndex = 0, this.added = 0, this.elementIndices = new e.Core.Utils.ChunkedArrayBuilder(function(e) {
                            return new Int32Array(e)
                        }, t, 1), this.elementRanges = new Int32Array(2 * t), this.vertexRanges = new e.Core.Utils.ChunkedArrayBuilder(function(e) {
                            return new Int32Array(e)
                        }, t, 2)
                    }
                    return t.prototype.startElement = function(e) {
                        this.elementIndex = e, this.elementRangeIndex = this.elementMap.size, this.rangeIndex = this.vertexRanges.elementCount, this.added = 0
                    }, t.prototype.addVertexRange = function(e, t) {
                        this.added++, this.vertexRanges.add2(e, t)
                    }, t.prototype.endElement = function() {
                        this.elementIndices.add(this.elementIndex), this.elementMap.set(this.elementIndex, this.elementRangeIndex), this.elementRanges[2 * this.elementRangeIndex] = 2 * this.rangeIndex, this.elementRanges[2 * this.elementRangeIndex + 1] = 2 * (this.rangeIndex + this.added)
                    }, t.prototype.getMap = function() {
                        return new s(this.elementIndices.compact(), this.elementMap, this.elementRanges, this.vertexRanges.compact())
                    }, t
                }();
                t.VertexMapBuilder = a;
                var s = function() {
                    function e(e, t, r, n) {
                        this.elementIndices = e, this.elementMap = t, this.elementRanges = r, this.vertexRanges = n
                    }
                    return e
                }();
                t.VertexMap = s, t.applyActionToRange = r, t.applyActionToBuffer = n
            }(r = t.Selection || (t.Selection = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                function n(e) {
                    for (var t = new Int32Array(e.data.annotation.length), r = e.data.annotation, n = 0, i = t.length; i > n; n++) t[n] = n;
                    return Array.prototype.sort.call(t, function(e, t) {
                        var n = r[e] - r[t];
                        return n ? n : e - t
                    }), t
                }

                function i(e, t, r, n) {
                    for (var i = e, o = e + 1; t > i;) {
                        for (; t >= o && r[o] - r[o - 1] < 1.1;) o++;
                        n.addVertexRange(r[i], r[o - 1] + 1), i = o, o += 1
                    }
                }

                function o(e) {
                    for (var r = n(e), o = e.data.annotation, a = 0, s = 0, u = r.length - 1; u > s; s++) o[r[s]] !== o[r[s + 1]] && a++;
                    for (var l = new t.Selection.VertexMapBuilder(a), c = new Int32Array(r.length), s = 0, u = r.length; u > s; s++) c[s] = o[r[s]];
                    var h = o[r[0]];
                    l.startElement(h);
                    for (var s = 0, u = r.length; u > s; s++) {
                        var p = o[r[s]];
                        p !== h && (l.endElement(), l.startElement(p), h = p);
                        var d = s;
                        for (s++; p === o[r[s]];) s++;
                        var f = s;
                        s--, i(d, f, r, l)
                    }
                    return l.endElement(), l.getMap()
                }

                function a(e) {
                    var r = new t.Selection.VertexMapBuilder(1);
                    return r.startElement(0), r.addVertexRange(0, e.vertexCount), r.endElement(), r.getMap()
                }

                function s(e, t) {
                    e.computation.update("Computing selection map..."), e.computation.schedule(function() {
                        e.data.annotation ? e.geom.elementToVertexMap = o(e) : e.geom.elementToVertexMap = a(e), t()
                    }, 1e3 / 15)
                }

                function l(e, r, n) {
                    var i = 1e5,
                        o = r.data.triangleIndices,
                        a = r.data.annotation;
                    if (e >= r.triCount) return void n();
                    var s = r.pickPlatesVertices,
                        u = r.pickPlatesTris,
                        c = r.pickPlatesColors,
                        h = r.data.vertices,
                        p = {
                            r: .45,
                            g: .45,
                            b: .45
                        },
                        d = r.pickTris;
                    if (r.computation.update("Creating selection geometry...", r.computation.abortRequest, e, r.triCount), r.computation.abortRequested) return void r.computation.abort();
                    for (var f = 0, m = e, v = Math.min(e + i, r.triCount); v > m; m++) {
                        var g = o[3 * m],
                            y = o[3 * m + 1],
                            b = o[3 * m + 2],
                            x = a[g],
                            _ = a[y],
                            w = a[b];
                        if (x !== _ || _ !== w) {
                            var C = x === _ ? x : _;
                            s.add3(h[3 * g], h[3 * g + 1], h[3 * g + 2]), s.add3(h[3 * y], h[3 * y + 1], h[3 * y + 2]), s.add3(h[3 * b], h[3 * b + 1], h[3 * b + 2]), u.add3(f++, f++, f++), 0 > C ? (p.r = 0, p.g = 0, p.b = 0) : t.Selection.Picking.assignPickColor(C, p), c.add4(p.r, p.g, p.b, 0), c.add4(p.r, p.g, p.b, 0), c.add4(p.r, p.g, p.b, 0)
                        } else d.add3(g, y, b)
                    }
                    r.platesVertexCount += f, r.computation.schedule(function() {
                        return l(e + i, r, n)
                    })
                }

                function c(r) {
                    var n = {
                            r: .45,
                            g: .45,
                            b: .45
                        },
                        i = (r.data.vertices, r.data.annotation);
                    r.data.triangleIndices;
                    r.pickTris = e.Core.Utils.ChunkedArrayBuilder.forIndexBuffer(r.triCount);
                    for (var o = r.pickColorBuffer, a = 0, s = r.vertexCount; s > a; a++) {
                        var u = i[a];
                        u >= 0 && (t.Selection.Picking.assignPickColor(u, n), o[4 * a] = n.r, o[4 * a + 1] = n.g, o[4 * a + 2] = n.b)
                    }
                }

                function h(e) {
                    var r = new t.THREE.BufferGeometry;
                    r.addAttribute("position", new t.THREE.BufferAttribute(e.data.vertices, 3)), r.addAttribute("index", new t.THREE.BufferAttribute(e.data.triangleIndices, 1)), r.addAttribute("pColor", new t.THREE.BufferAttribute(e.pickColorBuffer, 4)), e.geom.pickGeometry = r, r = new t.THREE.BufferGeometry, r.addAttribute("position", new t.THREE.BufferAttribute(new Float32Array(0), 3)), r.addAttribute("index", new t.THREE.BufferAttribute(new Uint32Array(0), 1)), r.addAttribute("pColor", new t.THREE.BufferAttribute(new Float32Array(0), 4)), e.geom.pickPlatesGeometry = r
                }

                function p(e) {
                    var r = new t.THREE.BufferGeometry;
                    r.addAttribute("position", new t.THREE.BufferAttribute(e.data.vertices, 3)), r.addAttribute("index", new t.THREE.BufferAttribute(e.pickTris.compact(), 1)), r.addAttribute("pColor", new t.THREE.BufferAttribute(e.pickColorBuffer, 4)), e.geom.pickGeometry = r, r = new t.THREE.BufferGeometry, r.addAttribute("position", new t.THREE.BufferAttribute(e.pickPlatesVertices.compact(), 3)), r.addAttribute("index", new t.THREE.BufferAttribute(e.pickPlatesTris.compact(), 1)), r.addAttribute("pColor", new t.THREE.BufferAttribute(e.pickPlatesColors.compact(), 4)), e.geom.pickPlatesGeometry = r
                }

                function d(e, t, r, n) {
                    if (r > n) {
                        var i = r;
                        r = n, n = i
                    }
                    var o = ((r + n) * (r + n + 1) + n) / 2 | 0;
                    t.size !== t.add(o).size && e.add2(r, n)
                }

                function f(r) {
                    for (var n = r.data.triangleIndices, i = new e.Core.Utils.ChunkedArrayBuilder(function(e) {
                            return new Uint32Array(e)
                        }, 1.5 * r.triCount | 0, 2), o = new Set, a = 0, s = n.length; s > a; a += 3) {
                        var u = n[a],
                            l = n[a + 1],
                            c = n[a + 2];
                        d(i, o, u, l), d(i, o, u, c), d(i, o, l, c)
                    }
                    return new t.THREE.BufferAttribute(i.compact(), 1)
                }

                function m(e, r) {
                    var n = new t.THREE.BufferGeometry;
                    n.addAttribute("position", new t.THREE.BufferAttribute(r.data.vertices, 3)), n.addAttribute("normal", new t.THREE.BufferAttribute(r.data.normals, 3)), n.addAttribute("color", new t.THREE.BufferAttribute(new Float32Array(3 * r.data.vertices.length), 3)), e ? n.addAttribute("index", f(r)) : n.addAttribute("index", new t.THREE.BufferAttribute(r.data.triangleIndices, 1)), r.geom.geometry = n, r.geom.vertexStateBuffer = new t.THREE.BufferAttribute(new Float32Array(r.data.vertices.length), 1), n.addAttribute("vState", r.geom.vertexStateBuffer)
                }

                function v(t, r) {
                    t.computation.update("Creating selection geometry..."), t.computation.schedule(function() {
                        t.pickColorBuffer = new Float32Array(4 * t.vertexCount), t.data.annotation ? (c(t), t.pickPlatesVertices = e.Core.Utils.ChunkedArrayBuilder.forVertex3D(Math.max(t.vertexCount / 10, 10)), t.pickPlatesTris = e.Core.Utils.ChunkedArrayBuilder.forIndexBuffer(Math.max(t.triCount / 10, 10)), t.pickPlatesColors = new e.Core.Utils.ChunkedArrayBuilder(function(e) {
                            return new Float32Array(e)
                        }, Math.max(t.vertexCount / 10, 10), 4), t.platesVertexCount = 0, l(0, t, function() {
                            p(t), r()
                        })) : (h(t), r())
                    })
                }

                function g(t, r, n, i) {
                    var o = {
                        data: t,
                        computation: r,
                        geom: new y,
                        vertexCount: t.vertices.length / 3 | 0,
                        triCount: t.triangleIndices.length / 3 | 0
                    };
                    r.update("Creating geometry...");
                    e.Core.Geometry.Surface.computeNormals(t).bind(function(t) {
                        return e.Core.Geometry.Surface.computeBoundingSphere(t)
                    }).run(r).result.then(function() {
                        r.schedule(function() {
                            s(o, function() {
                                v(o, function() {
                                    m(n, o), o.geom.vertexToElementMap = o.data.annotation, i(o.geom)
                                })
                            })
                        })
                    })["catch"](r.reject)
                }
                r.buildGeometry = g;
                var y = function(e) {
                    function t() {
                        e.call(this), this.geometry = void 0, this.vertexToElementMap = void 0, this.elementToVertexMap = void 0, this.pickGeometry = void 0, this.pickPlatesGeometry = void 0, this.vertexStateBuffer = void 0, this.center = void 0, this.radius = void 0
                    }
                    return u(t, e), t.prototype.dispose = function() {
                        this.geometry.dispose(), this.pickGeometry && (this.pickGeometry.dispose(), this.pickPlatesGeometry.dispose())
                    }, t
                }(t.GeometryBase);
                r.Geometry = y
            }(r = t.Surface || (t.Surface = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                r.DefaultSurfaceModelParameters = {
                    isWireframe: !1
                };
                var n = function(n) {
                    function i() {
                        n.apply(this, arguments)
                    }
                    return u(i, n), i.prototype.applySelectionInternal = function(e, r) {
                        for (var n = this.geometry.vertexStateBuffer, i = n.array, o = this.geometry.elementToVertexMap, a = o.vertexRanges, s = !1, u = 0, l = e; u < l.length; u++) {
                            var c = l[u];
                            if (o.elementMap.has(c)) {
                                var h = o.elementMap.get(c),
                                    p = o.elementRanges[2 * h],
                                    d = o.elementRanges[2 * h + 1];
                                if (p !== d)
                                    for (var f = p; d > f; f += 2) {
                                        var m = a[f],
                                            v = a[f + 1];
                                        s = t.Selection.applyActionToRange(i, m, v, r) || s
                                    }
                            }
                        }
                        return s ? (n.needsUpdate = !0, !0) : !1
                    }, i.prototype.highlightElement = function(e, t) {
                        return this.applySelection([e], t ? 3 : 4)
                    }, i.prototype.highlightInternal = function(e) {
                        return t.Selection.applyActionToBuffer(this.geometry.vertexStateBuffer, e ? 3 : 4)
                    }, i.prototype.getPickElements = function(e) {
                        return [e]
                    }, i.prototype.applyThemeInternal = function(e) {
                        var r = {
                            r: 0,
                            g: 0,
                            b: 0
                        };
                        t.MaterialsHelper.updateMaterial(this.material, e, this.object);
                        var n = this.geometry.geometry.attributes.color.array,
                            i = this.geometry.vertexToElementMap;
                        if (i)
                            for (var o = 0, a = n.length / 3 | 0; a > o; o++) {
                                var s = i[o];
                                0 > s ? (r.r = 0, r.g = 0, r.b = 0) : e.setElementColor(s, r), n[3 * o] = r.r, n[3 * o + 1] = r.g, n[3 * o + 2] = r.b
                            } else {
                                e.setElementColor(0, r);
                                for (var o = 0, a = n.length / 3 | 0; a > o; o++) n[3 * o] = r.r, n[3 * o + 1] = r.g, n[3 * o + 2] = r.b
                            }
                        t.Theme.isTransparent(e) || !e.interactive ? this.pickObject && (this.pickObject.visible = !1) : this.pickObject && (this.pickObject.visible = this.object.visible), this.geometry.geometry.getAttribute("color").needsUpdate = !0
                    }, i.prototype.createObjects = function() {
                        var e = new t.THREE.Mesh(this.geometry.geometry, this.material),
                            r = null;
                        if (this.geometry.pickGeometry) {
                            r = new t.THREE.Object3D;
                            var n = new t.THREE.Mesh(this.geometry.pickGeometry, this.pickMaterial);
                            r.add(n), n = new t.THREE.Mesh(this.geometry.pickPlatesGeometry, this.pickMaterial), r.add(n)
                        }
                        return {
                            main: e,
                            pick: r
                        }
                    }, i.create = function(n, o) {
                        var a = o.surface,
                            s = o.theme,
                            u = o.parameters,
                            l = void 0 === u ? r.DefaultSurfaceModelParameters : u,
                            c = o.props;
                        return e.Core.Computation.create(function(e) {
                            r.buildGeometry(a, e, !!l.isWireframe, function(r) {
                                var o = new i;
                                o.surface = a, o.material = t.MaterialsHelper.getMeshMaterial(t.THREE.FlatShading, !!l.isWireframe), o.geometry = r, o.pickMaterial = t.MaterialsHelper.getPickMaterial(), o.entity = n, o.centroid = (new t.THREE.Vector3).copy(a.boundingSphere.center), o.radius = a.boundingSphere.radius, c && (o.props = c), o.disposeList.push(o.geometry, o.material, o.pickMaterial);
                                var u = o.createObjects();
                                o.object = u.main, o.pickObject = u.pick, o.applyTheme(s), o.pickBufferAttributes = [o.geometry.pickGeometry.attributes.pColor], e.resolve(o)
                            })
                        })
                    }, i
                }(t.Model);
                r.Model = n
            }(r = t.Surface || (t.Surface = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    function n(e, t, r, n, i) {
                        l.build(e, t, r, n, i)
                    }
                    var i = function() {
                            function r() {}
                            return r.analyze = function(r, n) {
                                var i, o = 0;
                                i = n, o = i.length;
                                for (var a = r.atoms, s = a.x, u = a.y, l = a.z, c = a.elementSymbol, h = a.name, p = a.altLoc, d = a.residueIndex, f = a.entityIndex, m = r.entities.entityType, v = e.Core.Structure.EntityType.Water, g = r.residues.name, y = 2, b = new e.Core.Geometry.SubdivisionTree3D(i, function(e, t) {
                                        t.add(s[e], u[e], l[e])
                                    }), x = r.componentBonds, _ = b.createContextRadius(y + 1, !1), w = _.buffer, C = new Set, E = new e.Core.Utils.ChunkedArrayBuilder(function(e) {
                                        return new Int32Array(e)
                                    }, 1.33 * i.length | 0, 3), S = new t.THREE.Vector3, T = new t.THREE.Vector3, M = 1, A = 0, P = 0, R = 0; o > P;) {
                                    var k = d[i[P]];
                                    for (R = P; o > R && d[i[R]] == k;) R++;
                                    var I = void 0;
                                    if (x && (I = x.entries.get(g[d[i[P]]]))) {
                                        for (var D = P; R - 1 > D; D++) {
                                            var B = i[D],
                                                L = h[B],
                                                V = p[B],
                                                N = I.map.get(L);
                                            if (N) {
                                                for (var O = D + 1; R > O; O++) {
                                                    var F = i[O],
                                                        U = p[F];
                                                    if (V === U) {
                                                        var z = N.get(h[F]);
                                                        z && (E.add3(B, F, z), A += z)
                                                    }
                                                }
                                                C.add(B)
                                            }
                                        }
                                        C.add(i[R - 1])
                                    }
                                    for (var D = P; R > D; D++) {
                                        var H = i[D];
                                        w.reset(), _.nearest(s[H], u[H], l[H], y), S.set(s[H], u[H], l[H]);
                                        for (var j = "H" === c[H], V = p[H], G = m[f[H]] === v, q = w.count, W = 0; q > W; W++) {
                                            var X = i[w.indices[W]];
                                            if (X !== H && !C.has(X)) {
                                                var Y = T.set(s[X], u[X], l[X]).sub(S).length(),
                                                    K = "H" === c[X];
                                                if (j && K || G && !K) continue;
                                                if (j || K) {
                                                    1.1 > Y && (E.add3(H, X, 1), A++);
                                                    continue
                                                }
                                                Y && V === p[X] && (E.add3(H, X, 1), A++)
                                            }
                                        }
                                        C.add(H)
                                    }
                                    M++, P = R
                                }
                                return {
                                    bonds: E.compact(),
                                    stickCount: A,
                                    residueCount: M
                                }
                            }, r
                        }(),
                        o = function() {
                            function e(e, r, n, i, o, a, s, u) {
                                this.template = e, this.templateVB = r, this.templateNB = n, this.templateIB = i, this.templateVertexCount = o, this.vertices = a, this.normals = s, this.indices = u, this.atomsVector = new t.THREE.Vector3, this.center = new t.THREE.Vector3, this.rotationAxis = new t.THREE.Vector3, this.upVector = new t.THREE.Vector3(0, 1, 0), this.scaleMatrix = new t.THREE.Matrix4, this.rotationMatrix = new t.THREE.Matrix4, this.translationMatrix = new t.THREE.Matrix4, this.offsetMatrix = new t.THREE.Matrix4, this.finalMatrix = new t.THREE.Matrix4, this.sticksDone = 0, this.radius = .15, this.offset = new t.THREE.Vector3, this.a = new t.THREE.Vector3, this.b = new t.THREE.Vector3
                            }
                            return e
                        }(),
                        a = function() {
                            function e(r, n, i) {
                                this.model = r, this.atomIndices = n, this.params = i, this.tessalation = this.params.tessalation, this.atomRadius = this.params.atomRadius, this.bondRadius = this.params.bondRadius, this.hideBonds = this.params.hideBonds, this.bondTemplate = e.getBondTemplate(1, this.tessalation), this.atomTemplate = e.getAtomTemplate(1, this.tessalation), this.bondTemplateVertexBuffer = this.bondTemplate.attributes.position.array, this.bondTemplateVertexBufferLength = this.bondTemplateVertexBuffer.length, this.bondTemplateVertexCount = this.bondTemplateVertexBufferLength / 3 | 0, this.bondTemplateIndexBuffer = this.bondTemplate.attributes.index.array, this.bondTemplateIndexBufferLength = this.bondTemplateIndexBuffer.length, this.bondTemplateNormalBuffer = this.bondTemplate.attributes.normal.array, this.atomTemplateVertexBuffer = this.atomTemplate.attributes.position.array, this.atomTemplateVertexBufferLength = this.atomTemplateVertexBuffer.length, this.atomTemplateVertexCount = this.atomTemplateVertexBufferLength / 3 | 0, this.atomTemplateIndexBuffer = this.atomTemplate.attributes.index.array, this.atomTemplateIndexBufferLength = this.atomTemplateIndexBuffer.length, this.atomTemplateNormalBuffer = this.atomTemplate.attributes.normal.array, this.atomBufferSize = this.atomTemplateVertexBufferLength * this.atomIndices.length, this.atomVertices = new Float32Array(this.atomBufferSize), this.atomNormals = new Float32Array(this.atomBufferSize), this.atomTriangleIndices = new Uint32Array(this.atomTemplateIndexBufferLength * this.atomIndices.length), this.atomColors = new Float32Array(this.atomBufferSize), this.atomPickColors = new Float32Array(4 * this.atomTemplateVertexCount * this.atomIndices.length), this.atoms = this.model.atoms, this.cX = this.atoms.x, this.cY = this.atoms.y, this.cZ = this.atoms.z, this.atomSymbols = this.atoms.elementSymbol, this.residueIndex = this.atoms.residueIndex, this.atomsDone = 0, this.offset = 0, this.bondsDone = 0, this.atomsVector = new t.THREE.Vector3, this.center = new t.THREE.Vector3, this.rotationAxis = new t.THREE.Vector3, this.up = new t.THREE.Vector3(0, 1, 0), this.scaleMatrix = new t.THREE.Matrix4, this.rotationMatrix = new t.THREE.Matrix4, this.translationMatrix = new t.THREE.Matrix4, this.atom1Vec = new t.THREE.Vector3, this.atom2Vec = new t.THREE.Vector3, this.pickColor = {
                                    r: .1,
                                    g: .1,
                                    b: .1
                                }, this.atomMapBuilder = new t.Selection.VertexMapBuilder(this.atomIndices.length), this.tempVector = new t.THREE.Vector3(0, 0, 0), this.bs = void 0
                            }
                            return e.getBondTemplate = function(e, r) {
                                var n;
                                switch (r) {
                                    case 0:
                                        n = 2;
                                        break;
                                    case 1:
                                        n = 4;
                                        break;
                                    case 2:
                                        n = 6;
                                        break;
                                    case 3:
                                        n = 8;
                                        break;
                                    case 4:
                                        n = 10;
                                        break;
                                    case 5:
                                        n = 12;
                                        break;
                                    default:
                                        n = 14
                                }
                                var i = t.GeometryHelper.getIndexedBufferGeometry(new t.THREE.LatheGeometry([new t.THREE.Vector3(0, e, -0.5), new t.THREE.Vector3(0, e, .5)], n, Math.PI));
                                return i.applyMatrix((new t.THREE.Matrix4).makeRotationAxis(new t.THREE.Vector3(1, 0, 0), -Math.PI / 2)), i
                            }, e.getAtomTemplate = function(e, r) {
                                var n;
                                switch (r) {
                                    case 0:
                                        n = new t.THREE.OctahedronGeometry(e, 0);
                                        break;
                                    case 1:
                                        n = new t.THREE.OctahedronGeometry(e, 1);
                                        break;
                                    case 2:
                                        n = new t.THREE.IcosahedronGeometry(e, 0);
                                        break;
                                    case 3:
                                        n = new t.THREE.IcosahedronGeometry(e, 1);
                                        break;
                                    case 4:
                                        n = new t.THREE.IcosahedronGeometry(e, 2);
                                        break;
                                    case 5:
                                        n = new t.THREE.OctahedronGeometry(e, 3);
                                        break;
                                    default:
                                        n = new t.THREE.IcosahedronGeometry(e, 3)
                                }
                                return t.GeometryHelper.getIndexedBufferGeometry(n)
                            }, e
                        }(),
                        s = function() {
                            function e(e) {
                                this.state = e, this.model = this.state.model, this.atomIndices = this.state.atomIndices, this.info = i.analyze(this.state.model, this.state.atomIndices), this.bondMapBuilder = new t.Selection.VertexMapBuilder(this.info.residueCount), this.bondBufferSize = this.state.bondTemplateVertexBufferLength * this.info.stickCount, this.bondVertices = new Float32Array(this.bondBufferSize), this.bondNormals = new Float32Array(this.bondBufferSize), this.bondColors = new Float32Array(this.bondBufferSize), this.bondIndices = new Uint32Array(this.state.bondTemplateIndexBufferLength * this.info.stickCount), this.bondRadius = this.state.params.bondRadius, this.residueIndex = this.model.atoms.residueIndex, this.currentResidueIndex = this.residueIndex[this.info.bonds[0]], this.bondMapVertexOffsetStart = 0, this.bondMapVertexOffsetEnd = 0, this.bondState = new o(this.state.bondTemplate, this.state.bondTemplateVertexBuffer, this.state.bondTemplateNormalBuffer, this.state.bondTemplateIndexBuffer, this.state.bondTemplateVertexCount, this.bondVertices, this.bondNormals, this.bondIndices), this.bondCount = this.info.bonds.length / 3 | 0
                            }
                            return e
                        }(),
                        l = function() {
                            function n() {}
                            return n.prototype.dispose = function() {
                                this.atomsGeometry.dispose(), this.bondsGeometry.dispose(), this.pickGeometry.dispose()
                            }, n.addAtom = function(e, r) {
                                r.atomMapBuilder.startElement(e);
                                var n = r.atomRadius(e);
                                r.scaleMatrix.makeScale(n, n, n), r.tempVector.set(r.cX[e], r.cY[e], r.cZ[e]), r.translationMatrix.makeTranslation(r.tempVector.x, r.tempVector.y, r.tempVector.z).multiply(r.scaleMatrix), r.atomTemplate.applyMatrix(r.translationMatrix);
                                for (var i = 0; i < r.atomTemplateVertexBufferLength; i++) r.offset = r.atomsDone * r.atomTemplateVertexBufferLength + i, r.atomVertices[r.offset] = r.atomTemplateVertexBuffer[i], r.atomNormals[r.offset] = r.atomTemplateNormalBuffer[i];
                                for (var i = 0; i < r.atomTemplateIndexBufferLength; i++) r.offset = r.atomTemplateIndexBufferLength * r.atomsDone + i, r.atomTriangleIndices[r.offset] = r.atomTemplateIndexBuffer[i] + r.atomTemplateVertexCount * r.atomsDone;
                                t.Selection.Picking.assignPickColor(e, r.pickColor);
                                for (var i = 0; i < r.atomTemplateVertexCount; i++) r.offset = r.atomsDone * r.atomTemplateVertexCount * 4 + 4 * i, r.atomPickColors[r.offset] = r.pickColor.r, r.atomPickColors[r.offset + 1] = r.pickColor.g, r.atomPickColors[r.offset + 2] = r.pickColor.b;
                                r.scaleMatrix.getInverse(r.translationMatrix), r.atomTemplate.applyMatrix(r.scaleMatrix), r.atomMapBuilder.addVertexRange(r.atomsDone * r.atomTemplateVertexCount, (r.atomsDone + 1) * r.atomTemplateVertexCount), r.atomMapBuilder.endElement(), r.atomsDone++
                            }, n.addBond = function(e, t, r) {
                                var i = r.info.bonds[3 * e],
                                    o = r.info.bonds[3 * e + 1],
                                    a = r.info.bonds[3 * e + 2];
                                r.currentResidueIndex !== r.residueIndex[i] && (r.bondMapBuilder.addVertexRange(r.bondMapVertexOffsetStart, r.bondMapVertexOffsetEnd), r.bondMapVertexOffsetStart = r.bondMapVertexOffsetEnd, r.bondMapBuilder.endElement(), r.currentResidueIndex = r.residueIndex[i], r.bondMapBuilder.startElement(r.currentResidueIndex)), t.tempVector.set(t.cX[i], t.cY[i], t.cZ[i]), r.bondState.a.set(t.tempVector.x, t.tempVector.y, t.tempVector.z), t.tempVector.set(t.cX[o], t.cY[o], t.cZ[o]), r.bondState.b.set(t.tempVector.x, t.tempVector.y, t.tempVector.z);
                                var s = r.bondRadius,
                                    u = 2 * s / 3,
                                    l = s / 2,
                                    c = r.bondState;
                                switch (a) {
                                    case 2:
                                        c.radius = l, c.offset.x = u, c.offset.y = u, n.addBondPart(c), c.offset.x = -u, c.offset.y = -u, n.addBondPart(c);
                                        break;
                                    case 3:
                                        c.radius = l, c.offset.x = 0, c.offset.y = u, n.addBondPart(c), c.offset.x = -Math.cos(Math.PI / 3) * u, c.offset.y = -Math.sin(Math.PI / 3) * u, n.addBondPart(c), c.offset.x = -c.offset.x, n.addBondPart(c);
                                        break;
                                    case 4:
                                        c.radius = l / 2, c.offset.x = u, c.offset.y = u, n.addBondPart(c), c.offset.x = -u, c.offset.y = -u, n.addBondPart(c), c.offset.x = -u, c.offset.y = u, n.addBondPart(c), c.offset.x = u, c.offset.y = -u, n.addBondPart(c);
                                        break;
                                    default:
                                        c.radius = s, c.offset.x = 0, c.offset.y = 0, n.addBondPart(c)
                                }
                                r.bondMapVertexOffsetEnd += a * r.state.bondTemplateVertexBufferLength
                            }, n.addBondPart = function(e) {
                                e.atomsVector.subVectors(e.a, e.b);
                                var t = e.atomsVector.length();
                                e.center.addVectors(e.a, e.b).divideScalar(2), e.rotationAxis.crossVectors(e.atomsVector, e.upVector).normalize();
                                var r = e.atomsVector.angleTo(e.upVector);
                                e.scaleMatrix.makeScale(e.radius, t, e.radius), e.offsetMatrix.makeTranslation(e.offset.x, e.offset.y, e.offset.z), e.rotationMatrix.makeRotationAxis(e.rotationAxis, -r), e.translationMatrix.makeTranslation(e.center.x, e.center.y, e.center.z), e.finalMatrix = e.translationMatrix.multiply(e.rotationMatrix).multiply(e.offsetMatrix).multiply(e.scaleMatrix), e.template.applyMatrix(e.finalMatrix), e.vertices.set(e.templateVB, e.templateVB.length * e.sticksDone), e.normals.set(e.templateNB, e.templateVB.length * e.sticksDone);
                                for (var n = e.templateIB, i = e.indices, o = e.templateIB.length * e.sticksDone, a = e.templateVertexCount * e.sticksDone, s = 0; s < n.length; s++) i[o++] = n[s] + a;
                                e.rotationMatrix.getInverse(e.finalMatrix), e.template.applyMatrix(e.rotationMatrix), e.sticksDone++
                            }, n.getEmptyBondsGeometry = function() {
                                var e = new t.THREE.BufferGeometry;
                                e.addAttribute("position", new t.THREE.BufferAttribute(new Float32Array(0), 3)), e.addAttribute("normal", new t.THREE.BufferAttribute(new Float32Array(0), 3)), e.addAttribute("index", new t.THREE.BufferAttribute(new Uint32Array(0), 1)), e.addAttribute("color", new t.THREE.BufferAttribute(new Float32Array(0), 3));
                                var r = new t.Selection.VertexMapBuilder(1);
                                return {
                                    bondsGeometry: e,
                                    bondVertexMap: r.getMap()
                                }
                            }, n.getBondsGeometry = function(e) {
                                var r = new t.THREE.BufferGeometry;
                                return r.addAttribute("position", new t.THREE.BufferAttribute(e.bondVertices, 3)), r.addAttribute("normal", new t.THREE.BufferAttribute(e.bondNormals, 3)), r.addAttribute("index", new t.THREE.BufferAttribute(e.bondIndices, 1)), r.addAttribute("color", new t.THREE.BufferAttribute(e.bondColors, 3)), {
                                    bondsGeometry: r,
                                    bondVertexMap: e.bondMapBuilder.getMap()
                                }
                            }, n.getAtomsGeometry = function(e) {
                                var r = new t.THREE.BufferGeometry;
                                r.addAttribute("position", new t.THREE.BufferAttribute(e.atomVertices, 3)), r.addAttribute("normal", new t.THREE.BufferAttribute(e.atomNormals, 3)), r.addAttribute("index", new t.THREE.BufferAttribute(e.atomTriangleIndices, 1)), r.addAttribute("color", new t.THREE.BufferAttribute(e.atomColors, 3));
                                var n = new Float32Array(e.atomVertices.length),
                                    i = new t.THREE.BufferAttribute(n, 1);
                                r.addAttribute("vState", i);
                                var o = new t.THREE.BufferGeometry;
                                return o.addAttribute("position", new t.THREE.BufferAttribute(e.atomVertices, 3)), o.addAttribute("index", new t.THREE.BufferAttribute(e.atomTriangleIndices, 1)), o.addAttribute("pColor", new t.THREE.BufferAttribute(e.atomPickColors, 4)), {
                                    vertexStateBuffer: i,
                                    atomsGeometry: r,
                                    atomsPickGeometry: o,
                                    atomVertexMap: e.atomMapBuilder.getMap()
                                }
                            }, n.addAtomsChunk = function(e, t, r, i) {
                                var o = 1250;
                                if (r.abortRequested) return void r.abort();
                                if (e >= t.atomIndices.length) return void i();
                                r.update("Adding atoms...", r.abortRequest, e, t.atomIndices.length);
                                for (var a = e, s = Math.min(e + o, t.atomIndices.length); s > a; a++) n.addAtom(t.atomIndices[a], t);
                                r.schedule(function() {
                                    return n.addAtomsChunk(e + o, t, r, i)
                                })
                            }, n.addBondsChunk = function(e, t, r, i, o) {
                                var a = 1250;
                                if (i.abortRequested) return void i.abort();
                                if (e >= r.bondCount) return void o();
                                i.update("Adding bonds...", i.abortRequest, e, r.bondCount);
                                for (var s = e, u = Math.min(e + a, r.bondCount); u > s; s++) n.addBond(s, t, r);
                                i.schedule(function() {
                                    return n.addBondsChunk(e + a, t, r, i, o)
                                })
                            }, n.addBonds = function(e, t, r) {
                                return e.params.hideBonds ? void r() : (t.update("Computing bonds..."), void t.schedule(function() {
                                    var i = new s(e);
                                    e.bs = i, i.currentResidueIndex = i.residueIndex[i.info.bonds[0]], i.bondMapBuilder.startElement(i.currentResidueIndex), n.addBondsChunk(0, e, i, t, function() {
                                        i.bondMapBuilder.addVertexRange(i.bondMapVertexOffsetStart, i.bondMapVertexOffsetEnd), i.bondMapBuilder.endElement(), t.update("Finishing up..."), t.schedule(r, 1e3 / 30)
                                    })
                                }))
                            }, n.addAtoms = function(e, t, r) {
                                n.addAtomsChunk(0, e, t, r)
                            }, n.build = function(t, i, o, s, u) {
                                s.update("Creating atoms..."), s.schedule(function() {
                                    var l = new a(t, o, e.Core.Utils.extend({}, i, r.DefaultBallsAndSticksModelParameters));
                                    n.addAtoms(l, s, function() {
                                        n.addBonds(l, s, function() {
                                            var e = new c;
                                            if (l.bs) {
                                                var t = n.getBondsGeometry(l.bs);
                                                e.bondsGeometry = t.bondsGeometry, e.bondVertexMap = t.bondVertexMap
                                            } else {
                                                var t = n.getEmptyBondsGeometry();
                                                e.bondsGeometry = t.bondsGeometry, e.bondVertexMap = t.bondVertexMap
                                            }
                                            var r = n.getAtomsGeometry(l);
                                            e.vertexStateBuffer = r.vertexStateBuffer, e.atomsGeometry = r.atomsGeometry, e.pickGeometry = r.atomsPickGeometry, e.atomVertexMap = r.atomVertexMap, u(e)
                                        })
                                    })
                                })
                            }, n
                        }();
                    r.buildGeometry = n;
                    var c = function(e) {
                        function t() {
                            e.apply(this, arguments), this.atomsGeometry = void 0, this.bondsGeometry = void 0, this.pickGeometry = void 0, this.atomVertexMap = void 0, this.bondVertexMap = void 0, this.vertexStateBuffer = void 0
                        }
                        return u(t, e), t.prototype.dispose = function() {
                            this.atomsGeometry.dispose(), this.bondsGeometry.dispose(), this.pickGeometry.dispose()
                        }, t
                    }(t.GeometryBase);
                    r.BallsAndSticksGeometry = c
                }(n = r.BallsAndSticks || (r.BallsAndSticks = {}))
            }(r = t.Molecule || (t.Molecule = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    n.DefaultBallsAndSticksModelParameters = {
                        tessalation: 3,
                        atomRadius: function() {
                            return .4
                        },
                        hideBonds: !1,
                        bondRadius: .15
                    };
                    var i = function(i) {
                        function o() {
                            i.apply(this, arguments)
                        }
                        return u(o, i), o.prototype.applySelectionInternal = function(e, r) {
                            for (var n = this.ballsAndSticks.vertexStateBuffer, i = n.array, o = this.ballsAndSticks.atomVertexMap, a = o.vertexRanges, s = !1, u = 0, l = e; u < l.length; u++) {
                                var c = l[u];
                                if (o.elementMap.has(c)) {
                                    var h = o.elementMap.get(c),
                                        p = o.elementRanges[2 * h],
                                        d = o.elementRanges[2 * h + 1];
                                    if (p !== d)
                                        for (var f = p; d > f; f += 2) {
                                            var m = a[f],
                                                v = a[f + 1];
                                            s = t.Selection.applyActionToRange(i, m, v, r) || s
                                        }
                                }
                            }
                            return s ? (n.needsUpdate = !0, !0) : !1
                        }, o.prototype.getPickElements = function(e) {
                            return [e]
                        }, o.prototype.highlightElement = function(e, t) {
                            return this.applySelection([e], t ? 3 : 4)
                        }, o.prototype.highlightInternal = function(e) {
                            return t.Selection.applyActionToBuffer(this.ballsAndSticks.vertexStateBuffer, e ? 3 : 4)
                        }, o.prototype.applyThemeInternal = function(e) {
                            var n = this,
                                i = this.ballsAndSticks.atomVertexMap;
                            t.MaterialsHelper.applyColorToMap(i, i.elementIndices, this.ballsAndSticks.atomsGeometry.attributes.color, function(e, t) {
                                return n.theme.setElementColor(e, t)
                            }), i = this.ballsAndSticks.bondVertexMap;
                            var o = t.Theme.getColor(e, "Bond", r.Colors.DefaultBondColor);
                            t.MaterialsHelper.applyColorToMap(i, i.elementIndices, this.ballsAndSticks.bondsGeometry.attributes.color, function(e, r) {
                                return t.Color.copy(o, r)
                            }), t.MaterialsHelper.updateMaterial(this.material, e, this.object), t.MaterialsHelper.updateMaterial(this.bondsMaterial, e, this.object)
                        }, o.prototype.createObjects = function() {
                            var e = new t.THREE.Object3D;
                            e.add(new t.THREE.Mesh(this.ballsAndSticks.atomsGeometry, this.material)), e.add(new t.THREE.Mesh(this.ballsAndSticks.bondsGeometry, this.bondsMaterial));
                            var r = new t.THREE.Mesh(this.ballsAndSticks.pickGeometry, this.pickMaterial);
                            return {
                                main: e,
                                pick: r
                            }
                        }, o.create = function(r, i) {
                            var a = i.model,
                                s = i.atomIndices,
                                u = i.theme,
                                l = i.params,
                                c = i.props;
                            return e.Core.Computation.create(function(e) {
                                n.buildGeometry(a, l, s, e, function(n) {
                                    var i = new o;
                                    i.molecule = a, i.ballsAndSticks = n, i.material = t.MaterialsHelper.getMeshMaterial(), i.bondsMaterial = new t.THREE.MeshPhongMaterial({
                                        specular: 11184810,
                                        shininess: 1,
                                        shading: t.THREE.SmoothShading,
                                        side: t.THREE.FrontSide,
                                        vertexColors: t.THREE.VertexColors
                                    }), i.pickMaterial = t.MaterialsHelper.getPickMaterial(), i.entity = r, i.ballsAndSticks.atomsGeometry.computeBoundingSphere(), i.centroid = i.ballsAndSticks.atomsGeometry.boundingSphere.center, i.radius = i.ballsAndSticks.atomsGeometry.boundingSphere.radius, c && (i.props = c);
                                    var s = i.createObjects();
                                    i.object = s.main, i.applyTheme(u), i.disposeList.push(i.ballsAndSticks, i.material, i.bondsMaterial, i.pickMaterial), i.pickObject = s.pick, i.pickBufferAttributes = [i.ballsAndSticks.pickGeometry.attributes.pColor], e.resolve(i)
                                })
                            })
                        }, o
                    }(t.Model);
                    n.Model = i
                }(n = r.BallsAndSticks || (r.BallsAndSticks = {}))
            }(r = t.Molecule || (t.Molecule = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n;
                    ! function(r) {
                        function n(t, n, o, a, s, u, l) {
                            var c = e.Core.Utils.extend({}, a, r.CartoonsGeometryParams.Default),
                                h = {
                                    computation: u,
                                    model: t,
                                    atomIndices: n,
                                    linearSegments: o,
                                    parameters: a,
                                    isTrace: s,
                                    params: c,
                                    state: new r.CartoonsGeometryState(c, t.residues.count),
                                    units: void 0,
                                    strandArrays: void 0,
                                    strandTemplate: void 0,
                                    builder: new r.Builder,
                                    geom: new i
                                };
                            h.computation.update("Building units..."), h.computation.schedule(function() {
                                h.units = r.CartoonAsymUnit.buildUnits(h.model, h.atomIndices, h.linearSegments), r.buildUnitsChunk(0, h, function() {
                                    h.strandTemplate && h.strandTemplate.geometry.dispose(), h.geom.vertexMap = h.state.vertexMap.getMap(), r.createGeometry(h);
                                    for (var e = h.geom, t = 0, n = Object.keys(h); t < n.length; t++) {
                                        var i = n[t];
                                        Object.prototype.hasOwnProperty.call(h, i) && (h[i] = void 0)
                                    }
                                    l(e)
                                })
                            })
                        }
                        var i = function(e) {
                            function t() {
                                e.apply(this, arguments), this.geometry = void 0, this.pickGeometry = void 0, this.vertexMap = void 0, this.vertexStateBuffer = void 0
                            }
                            return u(t, e), t.prototype.dispose = function() {
                                this.geometry.dispose(), this.pickGeometry.dispose()
                            }, t
                        }(t.GeometryBase);
                        r.Data = i, r.create = n
                    }(n = r.Geometry || (r.Geometry = {}))
                }(n = r.Cartoons || (r.Cartoons = {}))
            }(r = t.Molecule || (t.Molecule = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n;
                    ! function(r) {
                        function n(e) {
                            var r, n = e.params.strandLineWidth,
                                i = e.params.tessalation,
                                o = 0,
                                a = 0;
                            switch (i) {
                                case 0:
                                    a = 2, o = 1;
                                    break;
                                case 1:
                                    a = 3, o = 2;
                                    break;
                                case 2:
                                    a = 4, o = 2;
                                    break;
                                case 3:
                                    a = 8, o = 4;
                                    break;
                                case 4:
                                    a = 10, o = 6;
                                    break;
                                case 5:
                                    a = 14, o = 6;
                                    break;
                                default:
                                    a = 16, o = 8
                            }
                            for (var s = [], u = Math.PI / 2 / o, l = 0; o >= l; l++) s[l] = new t.THREE.Vector3(0, n * Math.cos(l * u), .1 * Math.sin(l * u)), s[l].z += .9;
                            r = new t.THREE.LatheGeometry([new t.THREE.Vector3(0, n, 0)].concat(s), a, Math.PI);
                            var c = t.GeometryHelper.getIndexedBufferGeometry(r);
                            e.strandTemplate = {
                                vertex: c.attributes.position.array,
                                normal: c.attributes.normal.array,
                                index: c.attributes.index.array,
                                geometry: c
                            };
                            var h = e.model.atoms,
                                p = e.model.residues;
                            e.strandArrays = {
                                startIndex: p.atomStartIndex,
                                endIndex: p.atomEndIndex,
                                x: h.x,
                                y: h.y,
                                z: h.z,
                                name: h.name
                            }
                        }

                        function i(e, t) {
                            for (var r = t.state, i = t.params, o = (t.model.atoms, t.model.residues, t.builder), a = 0, s = e.residueCount; s > a; a++) {
                                r.vertexMap.startElement(e.residueIndex[a]);
                                var u = r.verticesDone;
                                r.residueIndex = a;
                                var l = e.structureStarts.has(e.residueIndex[a]),
                                    c = e.structureEnds.has(e.residueIndex[a]);
                                if (t.isTrace) switch (e.residueType[a]) {
                                    case 5:
                                        o.addTube(e, r, i.strandWidth, i.strandWidth), (l || c) && o.addTubeCap(e, r, i.strandWidth, i.strandWidth, l, c), t.strandTemplate || n(t), o.addStrandLine(e, r, t.strandTemplate, t.strandArrays, e.residueIndex[a]);
                                        break;
                                    default:
                                        o.addTube(e, r, i.turnWidth, i.turnWidth), (l || c) && o.addTubeCap(e, r, i.turnWidth, i.turnWidth, l, c)
                                } else switch (e.residueType[a]) {
                                    case 1:
                                        o.addTube(e, r, i.helixWidth, i.helixHeight), l ? o.addTubeCap(e, r, i.helixWidth, i.helixHeight, !0, !1) : c && o.addTubeCap(e, r, i.helixWidth, i.helixHeight, !1, !0);
                                        break;
                                    case 3:
                                        o.addSheet(e, r, l, c), (l || c) && o.addSheetCap(e, r, l, c);
                                        break;
                                    case 5:
                                        o.addTube(e, r, i.strandWidth, i.strandWidth), (l || c) && o.addTubeCap(e, r, i.strandWidth, i.strandWidth, l, c), t.strandTemplate || n(t), o.addStrandLine(e, r, t.strandTemplate, t.strandArrays, e.residueIndex[a]);
                                        break;
                                    default:
                                        o.addTube(e, r, i.turnWidth, i.turnWidth), (l || c) && o.addTubeCap(e, r, i.turnWidth, i.turnWidth, l, c)
                                }
                                r.vertexMap.addVertexRange(u, r.verticesDone), r.vertexMap.endElement()
                            }
                        }

                        function o(e, t, r) {
                            var n = 1e4;
                            if (e >= t.units.length) return void r();
                            if (t.computation.abortRequested) return void t.computation.abort();
                            for (var a = 0, s = e; n > a && s < t.units.length;) i(t.units[s], t), a += t.units[s].residueCount, s++;
                            t.computation.update("Building units...", t.computation.abortRequest, e, t.units.length), t.computation.schedule(function() {
                                return o(s, t, r)
                            })
                        }

                        function a(e) {
                            var r = e.state,
                                n = new Float32Array(r.vertexBuffer.compact()),
                                i = new Float32Array(r.normalBuffer.compact()),
                                o = new Float32Array(3 * r.verticesDone),
                                a = new Float32Array(4 * r.verticesDone),
                                s = new Uint32Array(r.indexBuffer.compact()),
                                u = new Float32Array(r.verticesDone),
                                l = new t.THREE.BufferGeometry;
                            l.addAttribute("position", new t.THREE.BufferAttribute(n, 3)), l.addAttribute("normal", new t.THREE.BufferAttribute(i, 3)), l.addAttribute("index", new t.THREE.BufferAttribute(s, 1)), l.addAttribute("color", new t.THREE.BufferAttribute(o, 3)), e.geom.vertexStateBuffer = new t.THREE.BufferAttribute(u, 1), l.addAttribute("vState", e.geom.vertexStateBuffer), e.geom.geometry = l;
                            for (var c = e.geom.vertexMap, h = {
                                    r: .45,
                                    g: .45,
                                    b: .45
                                }, p = c.vertexRanges, d = 0, f = c.elementIndices; d < f.length; d++) {
                                var m = f[d],
                                    v = c.elementMap.get(m),
                                    g = c.elementRanges[2 * v],
                                    y = c.elementRanges[2 * v + 1];
                                if (g !== y) {
                                    t.Selection.Picking.assignPickColor(m, h);
                                    for (var b = g; y > b; b += 2)
                                        for (var x = p[b], _ = p[b + 1], w = x; _ > w; w++) a[4 * w] = h.r, a[4 * w + 1] = h.g, a[4 * w + 2] = h.b
                                }
                            }
                            var C = new t.THREE.BufferGeometry;
                            C.addAttribute("position", new t.THREE.BufferAttribute(n, 3)), C.addAttribute("index", new t.THREE.BufferAttribute(s, 1)), C.addAttribute("pColor", new t.THREE.BufferAttribute(a, 4)), e.geom.pickGeometry = C
                        }
                        var s = function() {
                            function t(t) {
                                this.typeBuilder = e.Core.Utils.ArrayBuilder.forArray(1e4), this.residueType = [], this.uPositions = new Float32Array(0), this.vPositions = new Float32Array(0), this.pPositions = new Float32Array(0), this.dPositions = new Float32Array(0), this.uvLength = 0, this.residueCount = 0, this.typeBuilder = e.Core.Utils.ArrayBuilder.forArray(t + 4), this.uPositionsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(t + 4), this.vPositionsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(t + 4), this.pPositionsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(t + 4), this.dPositionsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(t + 4), this.typeBuilder.add(0), this.typeBuilder.add(0), this.uPositionsBuilder.add3(0, 0, 0), this.uPositionsBuilder.add3(0, 0, 0), this.vPositionsBuilder.add3(0, 0, 0), this.vPositionsBuilder.add3(0, 0, 0)
                            }
                            return t.prototype.addResidue = function(e, t, r) {
                                var n = t.atomStartIndex[e],
                                    i = t.atomEndIndex[e],
                                    o = !1,
                                    a = !1,
                                    s = t.name;
                                if (5 !== r)
                                    for (var u = n; i > u && (o || "CA" !== s[u] ? a || "O" !== s[u] || (this.vPositionsBuilder.add3(t.x[u], t.y[u], t.z[u]), a = !0) : (this.uPositionsBuilder.add3(t.x[u], t.y[u], t.z[u]), o = !0), !o || !a); u++);
                                else
                                    for (var u = n; i > u && (o || "O5'" !== s[u] ? a || "C3'" !== s[u] || (this.vPositionsBuilder.add3(t.x[u], t.y[u], t.z[u]), a = !0) : (this.uPositionsBuilder.add3(t.x[u], t.y[u], t.z[u]), o = !0), !o || !a); u++);
                                if (!a) {
                                    var l = this.pPositionsBuilder.array,
                                        c = l.length;
                                    this.vPositionsBuilder.add3(l[c - 3], l[c - 2], l[c - 1])
                                }
                                this.typeBuilder.add(r)
                            }, t.prototype.finishResidues = function() {
                                this.typeBuilder.add(0), this.typeBuilder.add(0), this.uPositionsBuilder.add3(0, 0, 0), this.uPositionsBuilder.add3(0, 0, 0), this.vPositionsBuilder.add3(0, 0, 0), this.vPositionsBuilder.add3(0, 0, 0), this.residueType = this.typeBuilder.array, this.uPositions = this.uPositionsBuilder.array, this.vPositions = this.vPositionsBuilder.array, this.typeBuilder = null, this.uPositionsBuilder = null, this.vPositionsBuilder = null, this.uvLength = this.residueType.length, this.residueCount = this.uvLength - 4
                            }, t.prototype.addControlPoint = function(e, t) {
                                this.pPositionsBuilder.add3(e.x, e.y, e.z), this.dPositionsBuilder.add3(t.x, t.y, t.z)
                            }, t.prototype.finishContols = function() {
                                this.pPositions = this.pPositionsBuilder.array, this.dPositions = this.dPositionsBuilder.array, this.pPositionsBuilder = null, this.dPositionsBuilder = null
                            }, t
                        }();
                        r.CartoonAsymUnitState = s;
                        var u = function() {
                            function r(r, n, i) {
                                this.model = r, this.elements = n, this.linearSegmentCount = i, this.tempA = new t.THREE.Vector3, this.tempB = new t.THREE.Vector3, this.tempC = new t.THREE.Vector3, this.controlPoints = new Float32Array(0), this.torsionVectors = new Float32Array(0), this.normalVectors = new Float32Array(0), this.residueCount = 0, this.structureStarts = new Set, this.structureEnds = new Set, this.residueType = [], this.residueIndex = new Int32Array(0);
                                for (var o = 0, a = this.elements; o < a.length; o++) {
                                    var u = a[o];
                                    this.residueCount += u.endResidueIndex - u.startResidueIndex
                                }
                                var l = new s(this.residueCount);
                                this.controlPointsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(this.residueCount * this.linearSegmentCount + 1), this.torsionVectorsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(this.residueCount * this.linearSegmentCount + 1), this.normalVectorsBuilder = e.Core.Utils.ArrayBuilder.forVertex3D(this.residueCount * this.linearSegmentCount + 1), this.createControlPoints(l)
                            }
                            return r.maskSplit = function(t, r, n) {
                                for (var i = t, o = t.startResidueIndex, a = t.endResidueIndex, s = o; a > s; s++)
                                    if (r[s]) {
                                        for (i.startResidueIndex !== s && (i = new e.Core.Structure.SecondaryStructureElement(t.type, t.startResidueId, t.endResidueId), i.startResidueIndex = s); a > s && r[s];) s++;
                                        i.endResidueIndex = s, n[n.length] = i
                                    }
                            }, r.hasNames = function(e, t, r, n, i, o, a) {
                                for (var s = !1, u = !1, l = t; r > l; l++)
                                    if (s || n[e[l]] !== i ? u || n[e[l]] !== o || (u = !0) : s = !0, s && u) return !0;
                                return a && s
                            }, r.createMask = function(e, t) {
                                for (var n = new Uint8Array(e.residues.count), i = e.atoms, o = i.residueIndex, a = i.name, s = e.residues.secondaryStructureIndex, u = e.secondaryStructure, l = 0, c = t.length - 1; c > l; l++) {
                                    var h = t[l],
                                        p = l,
                                        d = o[h];
                                    for (l++; d === o[t[l]];) l++;
                                    var f = u[s[d]].type;
                                    0 !== f && (5 === f ? n[d] = +r.hasNames(t, p, l, a, "O5'", "C3'", !1) : n[d] = +r.hasNames(t, p, l, a, "CA", "O", !0), l--)
                                }
                                return n
                            }, r.throwIfEmpty = function(e) {
                                if (0 === e.length) throw "Cartoons cannot be constructred from this model/selection."
                            }, r.buildUnits = function(e, t, n) {
                                for (var i = r.createMask(e, t), o = [], a = 0, s = e.secondaryStructure; a < s.length; a++) {
                                    var u = s[a];
                                    r.maskSplit(u, i, o)
                                }
                                r.throwIfEmpty(o);
                                var l = o[0],
                                    c = e.residues.asymId,
                                    h = e.residues.authSeqNumber,
                                    p = [],
                                    d = [],
                                    f = 0;
                                l.type === f && (l = null);
                                for (var m = 0, v = o; m < v.length; m++) {
                                    var u = v[m];
                                    u.type === f ? (p.length > 0 && d.push(new r(e, p, n)), l = null, p = []) : (null === l && (l = u), c[l.endResidueIndex - 1] !== c[u.startResidueIndex] || l !== u && h[u.startResidueIndex] - h[l.endResidueIndex - 1] > 1 || l.startResidueIndex !== u.startResidueIndex && u.startResidueIndex - l.endResidueIndex > 0 ? (p.length > 0 ? d.push(new r(e, p, n)) : null !== l && d.push(new r(e, [l], n)), l = null, p = [u]) : p[p.length] = u), l = u
                                }
                                return p.length > 0 && d.push(new r(e, p, n)), d
                            }, r.prototype.createControlPoints = function(e) {
                                this.initPositions(e), this.initControlsPoints(e), this.computeSplines(e), this.controlPoints = this.controlPointsBuilder.array, this.torsionVectors = this.torsionVectorsBuilder.array, this.normalVectors = this.normalVectorsBuilder.array, this.controlPointsBuilder = null, this.torsionVectorsBuilder = null, this.normalVectorsBuilder = null
                            }, r.prototype.initPositions = function(e) {
                                for (var t = this.model.residues, r = this.model.atoms, n = {
                                        atomStartIndex: t.atomStartIndex,
                                        atomEndIndex: t.atomEndIndex,
                                        name: r.name,
                                        x: r.x,
                                        y: r.y,
                                        z: r.z
                                    }, i = [], o = 0, a = 0, s = 0, u = this.elements; s < u.length; s++) {
                                    var l = u[s];
                                    for (this.structureStarts.add(l.startResidueIndex), this.structureEnds.add(l.endResidueIndex - 1), a = l.startResidueIndex; a < l.endResidueIndex; a++) e.addResidue(a, n, l.type), i[i.length] = l.type
                                }
                                this.residueIndex = new Int32Array(this.residueCount);
                                for (var c = 0, h = this.elements; c < h.length; c++) {
                                    var l = h[c];
                                    for (a = l.startResidueIndex; a < l.endResidueIndex; a++) this.residueIndex[o++] = a
                                }
                                this.residueType = i, e.finishResidues();
                                var p = this.residueCount;
                                if (e.residueType[0] = e.residueType[2], e.residueType[1] = e.residueType[3], e.residueType[e.residueType.length - 2] = e.residueType[e.residueType.length - 4], e.residueType[e.residueType.length - 1] = e.residueType[e.residueType.length - 3], p > 2) {
                                    var d = 2,
                                        f = 3,
                                        m = 4;
                                    5 !== e.residueType[0] ? (this.reflectPositions(e.uPositions, 0, 1, d, f, f, m, .4, .6), this.reflectPositions(e.vPositions, 0, 1, d, f, f, m, .4, .6)) : (this.reflectPositions(e.uPositions, 1, 0, d, f, f, m, .5, .5), this.reflectPositions(e.vPositions, 1, 0, d, f, f, m, .5, .5)), d = p + 1, f = p, m = p - 1, 5 !== e.residueType[p - 1] ? (this.reflectPositions(e.uPositions, p + 2, p + 3, d, f, f, m, .4, .6), this.reflectPositions(e.vPositions, p + 2, p + 3, d, f, f, m, .4, .6)) : (this.reflectPositions(e.uPositions, p + 2, p + 3, d, f, f, m, .5, .5), this.reflectPositions(e.vPositions, p + 2, p + 3, d, f, f, m, .5, .5))
                                } else if (2 === p)
                                    for (a = 0; 2 > a; a++) e.uPositions[3 * a] = e.uPositions[6], e.uPositions[3 * a + 1] = e.uPositions[7], e.uPositions[3 * a + 2] = e.uPositions[8], e.vPositions[3 * a] = e.vPositions[6], e.vPositions[3 * a + 1] = e.vPositions[7], e.vPositions[3 * a + 2] = e.vPositions[8], e.uPositions[3 * (p + 2) + 3 * a] = e.uPositions[3 * (p + 1)], e.uPositions[3 * (p + 2) + 3 * a + 1] = e.uPositions[3 * (p + 1) + 1], e.uPositions[3 * (p + 2) + 3 * a + 2] = e.uPositions[3 * (p + 1) + 2], e.vPositions[3 * (p + 2) + 3 * a] = e.vPositions[3 * (p + 1)], e.vPositions[3 * (p + 2) + 3 * a + 1] = e.vPositions[3 * (p + 1) + 1], e.vPositions[3 * (p + 2) + 3 * a + 2] = e.vPositions[3 * (p + 1) + 2];
                                else
                                    for (var v = [e.uPositions[6] - e.vPositions[6], e.uPositions[7] - e.vPositions[7], e.uPositions[8] - e.vPositions[8]], g = 0; 2 > g; g++)
                                        for (var y = 0; 3 > y; y++) e.uPositions[3 * g + y] = e.uPositions[6 + y] - .5 * (g + 1) * v[y], e.uPositions[9 + 3 * g + y] = e.uPositions[6 + y] + .5 * (g + 1) * v[y], e.vPositions[3 * g + y] = e.vPositions[6 + y] + .5 * (g + 1) * v[y], e.vPositions[9 + 3 * g + y] = e.vPositions[6 + y] - .5 * (g + 1) * v[y]
                            }, r.prototype.initControlsPoints = function(e) {
                                for (var r = new t.THREE.Vector3, n = e.uvLength - 1, i = new t.THREE.Vector3, o = new t.THREE.Vector3, a = new t.THREE.Vector3, s = new t.THREE.Vector3, u = new t.THREE.Vector3, l = new t.THREE.Vector3, c = new t.THREE.Vector3, h = new t.THREE.Vector3, p = 1, d = 0; n > d; d++) u.set(e.uPositions[3 * d], e.uPositions[3 * d + 1], e.uPositions[3 * d + 2]), l.set(e.vPositions[3 * d], e.vPositions[3 * d + 1], e.vPositions[3 * d + 2]), d++, c.set(e.uPositions[3 * d], e.uPositions[3 * d + 1], e.uPositions[3 * d + 2]), d--, h.set((u.x + c.x) / 2, (u.y + c.y) / 2, (u.z + c.z) / 2), i.subVectors(c, u), o.subVectors(l, u), a.crossVectors(i, o), s.crossVectors(a, i), a.normalize(), s.normalize(), e.residueType[d] === p && e.residueType[d + 1] === p && h.set(h.x + 1.5 * a.x, h.y + 1.5 * a.y, h.z + 1.5 * a.z), d > 0 && s.angleTo(r) > Math.PI / 2 && s.negate(), r.copy(s), i.addVectors(h, s), e.addControlPoint(h, i);
                                e.finishContols()
                            }, r.prototype.computeSplines = function(e) {
                                for (var n = new t.THREE.Vector3, i = new t.THREE.Vector3, o = new t.THREE.Vector3, a = e.residueCount, s = e.pPositions, u = e.dPositions, l = new t.THREE.Vector3, c = new t.THREE.Vector3, h = new t.THREE.Vector3, p = new t.THREE.Vector3, d = new t.THREE.Vector3, f = new t.THREE.Vector3, m = new t.THREE.Vector3, v = new t.THREE.Vector3, g = new t.THREE.Vector3, y = new t.THREE.Vector3, b = 0; a > b; b++) {
                                    l.set(s[3 * b], s[3 * b + 1], s[3 * b + 2]), b++, c.set(s[3 * b], s[3 * b + 1], s[3 * b + 2]), b++, h.set(s[3 * b], s[3 * b + 1], s[3 * b + 2]), b++, p.set(s[3 * b], s[3 * b + 1], s[3 * b + 2]), b -= 3, d.set(u[3 * b], u[3 * b + 1], u[3 * b + 2]), b++, f.set(u[3 * b], u[3 * b + 1], u[3 * b + 2]), b++, m.set(u[3 * b], u[3 * b + 1], u[3 * b + 2]), b++, v.set(u[3 * b], u[3 * b + 1], u[3 * b + 2]), b -= 3;
                                    for (var x = 1; x <= this.linearSegmentCount; x++) {
                                        var _ = 1 * x / this.linearSegmentCount;
                                        .5 > _ ? (r.spline(i, l, c, h, _ + .5), r.spline(o, d, f, m, _ + .5)) : (r.spline(i, c, h, p, _ - .5), r.spline(o, f, m, v, _ - .5)), 0 === b && 1 === x && (r.spline(n, l, c, h, .5), r.spline(g, d, f, m, .5), r.reflect(y, n, i, 1), this.addSplineNode(y, n, g)), this.addSplineNode(n, i, o), n.copy(i)
                                    }
                                }
                            }, r.prototype.addSplineNode = function(e, t, r) {
                                this.controlPointsBuilder.add3(t.x, t.y, t.z);
                                var n = this.tempA.subVectors(r, t);
                                n.normalize(), this.torsionVectorsBuilder.add3(n.x, n.y, n.z);
                                var i = this.tempB.subVectors(t, e),
                                    o = this.tempC.crossVectors(n, i);
                                o.normalize(), this.normalVectorsBuilder.add3(o.x, o.y, o.z)
                            }, r.prototype.reflectPositions = function(e, t, n, i, o, a, s, u, l) {
                                this.tempA.set(e[3 * i], e[3 * i + 1], e[3 * i + 2]), this.tempB.set(e[3 * o], e[3 * o + 1], e[3 * o + 2]), r.reflect(this.tempC, this.tempA, this.tempB, u), e[3 * t] = this.tempC.x, e[3 * t + 1] = this.tempC.y, e[3 * t + 2] = this.tempC.z, this.tempA.set(e[3 * a], e[3 * a + 1], e[3 * a + 2]), this.tempB.set(e[3 * s], e[3 * s + 1], e[3 * s + 2]), r.reflect(this.tempC, this.tempA, this.tempB, l), e[3 * n] = this.tempC.x, e[3 * n + 1] = this.tempC.y, e[3 * n + 2] = this.tempC.z
                            }, r.reflect = function(e, t, r, n) {
                                e.set(t.x - n * (r.x - t.x), t.y - n * (r.y - t.y), t.z - n * (r.z - t.z))
                            }, r.spline = function(e, t, r, n, i) {
                                var o = Math.pow(1 - i, 2) / 2,
                                    a = Math.pow(i, 2) / 2,
                                    s = 1 - o - a,
                                    u = o * t.x + s * r.x + a * n.x,
                                    l = o * t.y + s * r.y + a * n.y,
                                    c = o * t.z + s * r.z + a * n.z;
                                e.set(u, l, c)
                            }, r
                        }();
                        r.CartoonAsymUnit = u;
                        var l = function() {
                            function e() {
                                this.radialSegmentCount = 10, this.turnWidth = .1, this.strandWidth = .15, this.strandLineWidth = .1, this.helixWidth = 1.1, this.helixHeight = .1, this.sheetWidth = 1.1, this.sheetHeight = .1, this.arrowWidth = 1.7, this.tessalation = 2
                            }
                            return e.Default = new e, e
                        }();
                        r.CartoonsGeometryParams = l;
                        var c = function() {
                            function r(r, n) {
                                this.params = r, this.residueIndex = 0, this.verticesDone = 0, this.trianglesDone = 0, this.vertexBuffer = e.Core.Utils.ChunkedArrayBuilder.forVertex3D(), this.normalBuffer = e.Core.Utils.ChunkedArrayBuilder.forVertex3D(), this.indexBuffer = e.Core.Utils.ChunkedArrayBuilder.forIndexBuffer(), this.translationMatrix = new t.THREE.Matrix4, this.scaleMatrix = new t.THREE.Matrix4, this.rotationMatrix = new t.THREE.Matrix4, this.invMatrix = new t.THREE.Matrix4, this.vertexMap = new t.Selection.VertexMapBuilder(n)
                            }
                            return r.prototype.addVertex = function(e, t) {
                                this.vertexBuffer.add3(e.x, e.y, e.z), this.normalBuffer.add3(t.x, t.y, t.z), this.verticesDone++
                            }, r.prototype.addTriangle = function(e, t, r) {
                                this.indexBuffer.add3(e, t, r), this.trianglesDone++
                            }, r.prototype.addTriangles = function(e, t, r, n, i, o) {
                                this.indexBuffer.add3(e, t, r), this.indexBuffer.add3(n, i, o), this.trianglesDone += 2
                            }, r
                        }();
                        r.CartoonsGeometryState = c, r.buildUnit = i, r.buildUnitsChunk = o, r.createGeometry = a;
                        var h = function() {
                            function e() {
                                this.tempVectors = [new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3, new t.THREE.Vector3]
                            }
                            return e.prototype.setVector = function(e, t, r) {
                                return r.set(e[3 * t], e[3 * t + 1], e[3 * t + 2]), r
                            }, e.prototype.addTube = function(e, t, r, n) {
                                var i = t.verticesDone,
                                    o = 0,
                                    a = 0,
                                    s = this.tempVectors[0],
                                    u = this.tempVectors[1],
                                    l = this.tempVectors[2],
                                    c = this.tempVectors[3],
                                    h = this.tempVectors[4],
                                    p = this.tempVectors[5],
                                    d = this.tempVectors[6],
                                    f = t.residueIndex * e.linearSegmentCount,
                                    m = f + e.linearSegmentCount,
                                    v = e.controlPoints,
                                    g = e.linearSegmentCount + 1,
                                    y = e.torsionVectors,
                                    b = e.normalVectors,
                                    x = t.params.radialSegmentCount;
                                for (o = f; m >= o; o++)
                                    for (this.setVector(y, o, p), this.setVector(b, o, d), a = 0; x > a; a++) {
                                        var _ = 2 * Math.PI * a / x;
                                        c.copy(p), h.copy(d), s.addVectors(c.multiplyScalar(r * Math.cos(_)), h.multiplyScalar(n * Math.sin(_))), c.copy(p), h.copy(d), u.addVectors(c.multiplyScalar(n * Math.cos(_)), h.multiplyScalar(r * Math.sin(_))), u.normalize(), this.setVector(v, o, l), l.add(s), t.addVertex(l, u)
                                    }
                                for (o = 0; g - 1 > o; o++)
                                    for (a = 0; x > a; a++) t.addTriangles(i + o * x + a, i + (o + 1) * x + (a + 1) % x, i + o * x + (a + 1) % x, i + o * x + a, i + (o + 1) * x + a, i + (o + 1) * x + (a + 1) % x)
                            }, e.prototype.addTubeCap = function(e, t, r, n, i, o) {
                                var a, s = t.verticesDone,
                                    u = this.tempVectors[0],
                                    l = this.tempVectors[1],
                                    c = this.tempVectors[2],
                                    h = this.tempVectors[3],
                                    p = this.tempVectors[4],
                                    d = this.tempVectors[5],
                                    f = this.tempVectors[6],
                                    m = this.tempVectors[7],
                                    v = t.residueIndex * e.linearSegmentCount,
                                    g = e.controlPoints,
                                    y = e.linearSegmentCount + 1,
                                    b = e.torsionVectors,
                                    x = e.normalVectors,
                                    _ = t.params.radialSegmentCount;
                                this.setVector(b, v, f), this.setVector(x, v, m), l.crossVectors(f, m), o && l.negate();
                                var w = v + (i ? 0 : y - 1);
                                this.setVector(g, w, u), t.addVertex(u, l), this.setVector(b, w, p), this.setVector(x, w, d);
                                for (var C = 0; _ > C; C++) a = 2 * Math.PI * C / _, c.copy(p), h.copy(d), u.addVectors(c.multiplyScalar(Math.cos(a) * r), h.multiplyScalar(Math.sin(a) * n)), this.setVector(g, w, f), u.add(f), t.addVertex(u, l), i ? t.addTriangle(s, s + C + 1, s + (C + 1) % _ + 1) : t.addTriangle(s, s + (C + 1) % _ + 1, s + C + 1)
                            }, e.prototype.addSheet = function(e, t, r, n) {
                                var i = t.verticesDone,
                                    o = t.params,
                                    a = 0,
                                    s = 0,
                                    u = this.tempVectors[0],
                                    l = this.tempVectors[1],
                                    c = this.tempVectors[2],
                                    h = this.tempVectors[3],
                                    p = this.tempVectors[4],
                                    d = this.tempVectors[5],
                                    f = (this.tempVectors[6], this.tempVectors[7]),
                                    m = this.tempVectors[8],
                                    v = this.tempVectors[9],
                                    g = t.residueIndex * e.linearSegmentCount,
                                    y = g + e.linearSegmentCount,
                                    b = e.controlPoints,
                                    x = (e.linearSegmentCount + 1, e.torsionVectors),
                                    _ = e.normalVectors,
                                    w = (t.params.radialSegmentCount, 0),
                                    C = 0;
                                for (h.set(0, 0, 0), n && (this.setVector(b, y, f), this.setVector(b, g, m), w = o.arrowWidth / d.subVectors(f, m).length()), a = g; y >= a; a++) C = n ? o.arrowWidth * (1 - (a - g) / e.linearSegmentCount) : o.sheetWidth, this.setVector(x, a, u), u.multiplyScalar(C), this.setVector(_, a, l), l.multiplyScalar(o.sheetHeight), n && (this.setVector(_, a, f), this.setVector(x, a, m), h.crossVectors(f, m).multiplyScalar(w)), this.setVector(b, a, c), this.setVector(_, a, p), this.setVector(x, a, v), f.copy(c).add(u).add(l),
                                    m.copy(p), t.addVertex(f, m), f.copy(c).sub(u).add(l), t.addVertex(f, m), f.copy(c).sub(u).add(l), m.copy(v).negate().add(h), t.addVertex(f, m), f.copy(c).sub(u).sub(l), t.addVertex(f, m), f.copy(c).sub(u).sub(l), m.copy(p).negate(), t.addVertex(f, m), f.copy(c).add(u).sub(l), t.addVertex(f, m), f.copy(c).add(u).sub(l), m.copy(v).add(h), t.addVertex(f, m), f.copy(c).add(u).add(l), t.addVertex(f, m);
                                for (a = 0; a < e.linearSegmentCount; a++)
                                    for (s = 0; 4 > s; s++) t.addTriangles(i + 8 * a + 2 * s, i + 8 * (a + 1) + 2 * s + 1, i + 8 * a + 2 * s + 1, i + 8 * a + 2 * s, i + 8 * (a + 1) + 2 * s, i + 8 * (a + 1) + 2 * s + 1)
                            }, e.prototype.addSheetCap = function(e, t, r, n) {
                                var i = t.params,
                                    o = t.residueIndex * e.linearSegmentCount,
                                    a = this.setVector(e.controlPoints, o, this.tempVectors[0]),
                                    s = this.setVector(e.torsionVectors, o, this.tempVectors[1]).multiplyScalar(i.sheetWidth),
                                    u = this.setVector(e.normalVectors, o, this.tempVectors[2]).multiplyScalar(i.sheetHeight),
                                    l = this.tempVectors[3].addVectors(a, s).add(u),
                                    c = this.tempVectors[4].subVectors(a, s).add(u),
                                    h = this.tempVectors[5].subVectors(a, s).sub(u),
                                    p = this.tempVectors[6].addVectors(a, s).sub(u);
                                if (r) this.addSheepCapSection(t, l, c, h, p);
                                else {
                                    var d = this.setVector(e.torsionVectors, o, this.tempVectors[7]).multiplyScalar(i.arrowWidth),
                                        f = this.tempVectors[8].addVectors(a, d).add(u),
                                        m = this.tempVectors[9].subVectors(a, d).add(u),
                                        v = this.tempVectors[10].subVectors(a, d).sub(u),
                                        g = this.tempVectors[11].addVectors(a, d).sub(u);
                                    this.addSheepCapSection(t, f, l, p, g), this.addSheepCapSection(t, c, m, v, h)
                                }
                            }, e.prototype.addSheepCapSection = function(e, t, r, n, i) {
                                var o = e.verticesDone,
                                    a = this.tempVectors[12].crossVectors(this.tempVectors[13].subVectors(r, t), this.tempVectors[14].subVectors(i, t)).normalize();
                                e.addVertex(t, a), e.addVertex(r, a), e.addVertex(n, a), e.addVertex(i, a), e.addTriangles(o, o + 1, o + 2, o + 2, o + 3, o)
                            }, e.prototype.findN3 = function(e, t, r) {
                                for (var n = t.startIndex[e], i = t.endIndex[e], o = (t.name, n); i > o; o++)
                                    if ("N3" === t.name[o]) {
                                        r.set(t.x[o], t.y[o], t.z[o]);
                                        break
                                    }
                                return r
                            }, e.prototype.addStrandLine = function(e, r, n, i, o) {
                                var a, s = this.tempVectors[0],
                                    u = this.tempVectors[1],
                                    l = n.vertex,
                                    c = n.normal,
                                    h = n.index,
                                    p = r.verticesDone,
                                    d = l.length,
                                    f = h.length,
                                    m = r.residueIndex * e.linearSegmentCount + (.5 * e.linearSegmentCount + 1 | 0),
                                    v = this.setVector(e.controlPoints, m, this.tempVectors[2]),
                                    g = this.findN3(o, i, this.tempVectors[3]).sub(v),
                                    y = g.length();
                                for (g.normalize(), r.translationMatrix.makeTranslation(v.x, v.y, v.z), r.scaleMatrix.makeScale(1, 1, y), r.rotationMatrix.makeRotationAxis(new t.THREE.Vector3(-g.y, g.x, 0), Math.acos(g.z)), r.translationMatrix.multiply(r.rotationMatrix).multiply(r.scaleMatrix), n.geometry.applyMatrix(r.translationMatrix), a = 0; d > a; a += 3) s.set(l[a], l[a + 1], l[a + 2]), u.set(c[a], c[a + 1], c[a + 2]), r.addVertex(s, u);
                                for (a = 0; f > a; a += 3) r.addTriangle(p + h[a], p + h[a + 1], p + h[a + 2]);
                                r.invMatrix.getInverse(r.translationMatrix), n.geometry.applyMatrix(r.invMatrix)
                            }, e
                        }();
                        r.Builder = h
                    }(n = r.Geometry || (r.Geometry = {}))
                }(n = r.Cartoons || (r.Cartoons = {}))
            }(r = t.Molecule || (t.Molecule = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    ! function(e) {
                        e[e.Default = 0] = "Default", e[e.AlphaTrace = 1] = "AlphaTrace"
                    }(r.CartoonsModelType || (r.CartoonsModelType = {}));
                    var n = r.CartoonsModelType;
                    r.DefaultCartoonsModelParameters = {
                        tessalation: 3,
                        drawingType: n.Default
                    };
                    var i = function(i) {
                        function o() {
                            i.apply(this, arguments)
                        }
                        return u(o, i), o.prototype.applySelectionInternal = function(e, r) {
                            for (var n = this.cartoons.vertexStateBuffer, i = n.array, o = this.cartoons.vertexMap, a = o.vertexRanges, s = !1, u = this.model.atoms.residueIndex, l = 0, c = e.length; c > l; l++) {
                                var h = u[e[l]];
                                for (l++; u[e[l]] === h;) l++;
                                if (l--, o.elementMap.has(h)) {
                                    var p = o.elementMap.get(h),
                                        d = o.elementRanges[2 * p],
                                        f = o.elementRanges[2 * p + 1];
                                    if (d !== f)
                                        for (var m = d; f > m; m += 2) {
                                            var v = a[m],
                                                g = a[m + 1];
                                            s = t.Selection.applyActionToRange(i, v, g, r) || s
                                        }
                                }
                            }
                            return s ? (n.needsUpdate = !0, !0) : !1
                        }, o.prototype.getPickElements = function(e) {
                            for (var t = this.model.residues, r = t.atomStartIndex, n = t.atomEndIndex, i = [], o = r[e], a = n[e]; a > o; o++) this.queryContext.hasAtom(o) && i.push(o);
                            return i
                        }, o.prototype.highlightElement = function(e, t) {
                            return this.applySelection([this.model.residues.atomStartIndex[e]], t ? 3 : 4)
                        }, o.prototype.highlightInternal = function(e) {
                            return t.Selection.applyActionToBuffer(this.cartoons.vertexStateBuffer, e ? 3 : 4)
                        }, o.prototype.applyColoring = function(e) {
                            for (var t = this.model.residues, r = t.atomStartIndex, n = t.atomEndIndex, i = {
                                    r: .1,
                                    g: .1,
                                    b: .1
                                }, o = {
                                    r: .1,
                                    g: .1,
                                    b: .1
                                }, a = this.cartoons.vertexMap, s = (a.elementIndices, this.cartoons.geometry.attributes.color), u = s.array, l = a.vertexRanges, c = 0, h = this.model.residues.count; h > c; c++) {
                                o.r = 0, o.g = 0, o.b = 0;
                                for (var p = 0, d = r[c], f = n[c]; f > d; d++) this.queryContext.hasAtom(d) && (e.setElementColor(d, i), o.r += i.r, o.g += i.g, o.b += i.b, p++);
                                if (p) {
                                    i.r = o.r / p, i.g = o.g / p, i.b = o.b / p;
                                    var m = a.elementMap.get(c),
                                        v = a.elementRanges[2 * m],
                                        g = a.elementRanges[2 * m + 1];
                                    if (v !== g)
                                        for (var y = v; g > y; y += 2)
                                            for (var b = l[y], x = l[y + 1], _ = b; x > _; _++) u[3 * _] = i.r, u[3 * _ + 1] = i.g, u[3 * _ + 2] = i.b
                                }
                            }
                            s.needsUpdate = !0
                        }, o.prototype.applyThemeInternal = function(e) {
                            this.cartoons.vertexMap;
                            this.applyColoring(e), t.MaterialsHelper.updateMaterial(this.material, e, this.object)
                        }, o.prototype.createObjects = function() {
                            return {
                                main: new t.THREE.Mesh(this.cartoons.geometry, this.material),
                                pick: new t.THREE.Mesh(this.cartoons.pickGeometry, this.pickMaterial)
                            }
                        }, o.create = function(i, a) {
                            var s = a.model,
                                u = a.queryContext,
                                l = a.atomIndices,
                                c = a.theme,
                                h = a.params,
                                p = a.props;
                            return e.Core.Computation.create(function(a) {
                                var d = 0,
                                    f = 0;
                                switch (a.update("Computing cartoons..."), h = e.Core.Utils.extend({}, h, r.DefaultCartoonsModelParameters), h.tessalation) {
                                    case 0:
                                        d = 1, f = 2;
                                        break;
                                    case 1:
                                        d = 4, f = 3;
                                        break;
                                    case 2:
                                        d = 6, f = 5;
                                        break;
                                    case 3:
                                        d = 10, f = 8;
                                        break;
                                    case 4:
                                        d = 12, f = 10;
                                        break;
                                    case 5:
                                        d = 16, f = 14;
                                        break;
                                    default:
                                        d = 18, f = 16
                                }
                                r.Geometry.create(s, l, d, {
                                    radialSegmentCount: f,
                                    tessalation: h.tessalation
                                }, h.drawingType === n.AlphaTrace, a, function(e) {
                                    var r = new o;
                                    r.cartoons = e, r.queryContext = u, r.material = t.MaterialsHelper.getMeshMaterial(), r.pickMaterial = t.MaterialsHelper.getPickMaterial(), p && (r.props = p), r.entity = i, r.cartoons.geometry.computeBoundingSphere(), r.centroid = r.cartoons.geometry.boundingSphere.center, r.radius = r.cartoons.geometry.boundingSphere.radius;
                                    var n = r.createObjects();
                                    r.object = n.main, r.pickObject = n.pick, r.pickBufferAttributes = [r.cartoons.pickGeometry.attributes.pColor], r.model = s, r.applyTheme(c), r.disposeList.push(r.cartoons, r.material, r.pickMaterial), a.resolve(r)
                                })
                            })
                        }, o
                    }(t.Model);
                    r.Model = i
                }(n = r.Cartoons || (r.Cartoons = {}))
            }(r = t.Molecule || (t.Molecule = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    e.DefaultBondColor = {
                            r: .6,
                            g: .6,
                            b: .6
                        }, e.DefaultElementColor = {
                            r: .6,
                            g: .6,
                            b: .6
                        }, e.DefaultElementColorMap = new Map, e.DefaultPallete = [],
                        function() {
                            for (var t = [
                                    ["Ac", .43921, .67058, .98039],
                                    ["Al", .74901, .65098, .65098],
                                    ["Am", .32941, .36078, .94901],
                                    ["Sb", .6196, .38823, .7098],
                                    ["Ar", .50196, .8196, .89019],
                                    ["As", .74117, .50196, .89019],
                                    ["At", .45882, .3098, .27058],
                                    ["Ba", 0, .78823, 0],
                                    ["Bk", .54117, .3098, .89019],
                                    ["Be", .76078, 1, 0],
                                    ["Bi", .6196, .3098, .7098],
                                    ["Bh", .87843, 0, .2196],
                                    ["B", 1, .7098, .7098],
                                    ["Br", .65098, .16078, .16078],
                                    ["Cd", 1, .85098, .56078],
                                    ["Ca", .23921, 1, 0],
                                    ["Cf", .63137, .21176, .83137],
                                    ["C", .45, .45, .45],
                                    ["Ce", 1, 1, .78039],
                                    ["Cs", .34117, .09019, .56078],
                                    ["Cl", .12156, .94117, .12156],
                                    ["Cr", .54117, .6, .78039],
                                    ["Co", .94117, .5647, .62745],
                                    ["Cu", .78431, .50196, .2],
                                    ["Cm", .47058, .36078, .89019],
                                    ["D", .9, .9, .9],
                                    ["Db", .8196, 0, .3098],
                                    ["Dy", .12156, 1, .78039],
                                    ["Es", .70196, .12156, .83137],
                                    ["Er", 0, .90196, .45882],
                                    ["Eu", .38039, 1, .78039],
                                    ["Fm", .70196, .12156, .72941],
                                    ["F", .70196, 1, 1],
                                    ["Fr", .25882, 0, .4],
                                    ["Gd", .27058, 1, .78039],
                                    ["Ga", .76078, .56078, .56078],
                                    ["Ge", .4, .56078, .56078],
                                    ["Au", 1, .8196, .13725],
                                    ["Hf", .30196, .76078, 1],
                                    ["Hs", .90196, 0, .18039],
                                    ["He", .85098, 1, 1],
                                    ["Ho", 0, 1, .61176],
                                    ["H", .9, .9, .9],
                                    ["In", .65098, .45882, .45098],
                                    ["I", .58039, 0, .58039],
                                    ["Ir", .09019, .32941, .52941],
                                    ["Fe", .698, .13, .13],
                                    ["Kr", .36078, .72156, .8196],
                                    ["La", .43921, .83137, 1],
                                    ["Lr", .78039, 0, .4],
                                    ["Pb", .34117, .34901, .38039],
                                    ["Li", .8, .50196, 1],
                                    ["Lu", 0, .67058, .14117],
                                    ["Mg", .54117, 1, 0],
                                    ["Mn", .61176, .47843, .78039],
                                    ["Mt", .92156, 0, .14901],
                                    ["Md", .70196, .05098, .65098],
                                    ["Hg", .72156, .72156, .81568],
                                    ["Mo", .32941, .7098, .7098],
                                    ["Nd", .78039, 1, .78039],
                                    ["Ne", .70196, .89019, .96078],
                                    ["Np", 0, .50196, 1],
                                    ["Ni", .31372, .81568, .31372],
                                    ["Nb", .45098, .76078, .78823],
                                    ["N", 0, .5, 1],
                                    ["No", .74117, .05098, .52941],
                                    ["Os", .14901, .4, .58823],
                                    ["O", 1, .3, .3],
                                    ["Pd", 0, .41176, .52156],
                                    ["P", 1, .50196, 0],
                                    ["Pt", .81568, .81568, .87843],
                                    ["Pu", 0, .4196, 1],
                                    ["Po", .67058, .36078, 0],
                                    ["K", .56078, .25098, .83137],
                                    ["Pr", .85098, 1, .78039],
                                    ["Pm", .63921, 1, .78039],
                                    ["Pa", 0, .63137, 1],
                                    ["Ra", 0, .49019, 0],
                                    ["Rn", .25882, .5098, .58823],
                                    ["Re", .14901, .49019, .67058],
                                    ["Rh", .03921, .49019, .54901],
                                    ["Rb", .43921, .18039, .69019],
                                    ["Ru", .14117, .56078, .56078],
                                    ["Rf", .8, 0, .34901],
                                    ["Sm", .56078, 1, .78039],
                                    ["Sc", .90196, .90196, .90196],
                                    ["Sg", .85098, 0, .27058],
                                    ["Se", 1, .63137, 0],
                                    ["Si", .94117, .78431, .62745],
                                    ["Ag", .75294, .75294, .75294],
                                    ["Na", .67058, .36078, .94901],
                                    ["Sr", 0, 1, 0],
                                    ["S", .9, .775, .25],
                                    ["Ta", .30196, .65098, 1],
                                    ["Tc", .23137, .6196, .6196],
                                    ["Te", .83137, .47843, 0],
                                    ["Tb", .18823, 1, .78039],
                                    ["Tl", .65098, .32941, .30196],
                                    ["Th", 0, .72941, 1],
                                    ["Tm", 0, .83137, .32156],
                                    ["Sn", .4, .50196, .50196],
                                    ["Ti", .74901, .76078, .78039],
                                    ["W", .12941, .58039, .83921],
                                    ["U", 0, .56078, 1],
                                    ["V", .65098, .65098, .67058],
                                    ["Xe", .25882, .6196, .69019],
                                    ["Yb", 0, .74901, .2196],
                                    ["Y", .58039, 1, 1],
                                    ["Zn", .49019, .50196, .69019],
                                    ["Zr", .58039, .87843, .87843]
                                ], r = (new Map, 0), n = t; r < n.length; r++) {
                                var i = n[r],
                                    o = i[0],
                                    a = {
                                        r: i[1],
                                        g: i[2],
                                        b: i[3]
                                    };
                                e.DefaultElementColorMap.set(o, a), e.DefaultElementColorMap.set(o.toUpperCase(), a), e.DefaultElementColorMap.set(o.toLowerCase(), a), e.DefaultPallete.push(a)
                            }
                        }()
                }(t = e.Colors || (e.Colors = {}))
            }(t = e.Molecule || (e.Molecule = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t = function() {
                    function e() {}
                    return e.getRandomColor = function(t) {
                        void 0 === t && (t = 0);
                        for (var r = 0;;) {
                            r++;
                            var n = e.randomMix({
                                    r: 166 / 255,
                                    g: 0,
                                    b: 100 / 255
                                }, {
                                    r: 1,
                                    g: 1,
                                    b: 0
                                }, {
                                    r: 0,
                                    g: 100 / 255,
                                    b: 1
                                }, t),
                                i = Math.abs(e.previous.r - n.r) + Math.abs(e.previous.g - n.g) + Math.abs(e.previous.b - n.b);
                            if (i > 100 || 10 === r) return e.previous = n, n
                        }
                    }, e.randomMix = function(e, t, r, n) {
                        var i = 0 | Math.floor(3 * Math.random()),
                            o = 0 === i ? Math.random() * n : Math.random(),
                            a = 1 === i ? Math.random() * n : Math.random(),
                            s = 2 === i ? Math.random() * n : Math.random(),
                            u = o + a + s;
                        return o /= u, a /= u, s /= u, {
                            r: o * e.r + a * t.r + s * r.r,
                            g: o * e.g + a * t.g + s * r.g,
                            b: o * e.b + a * t.b + s * r.b
                        }
                    }, e.interpolate = function(e, t, r, n, i, o) {
                        var a = void 0 !== o ? o : {
                                r: .1,
                                g: .1,
                                b: .1
                            },
                            s = (i - e) / (r - e);
                        return a.r = t.r + (n.r - t.r) * s, a.g = t.g + (n.g - t.g) * s, a.b = t.b + (n.b - t.b) * s, a
                    }, e.previous = e.randomMix({
                        r: .75,
                        g: 0,
                        b: .25
                    }, {
                        r: 1,
                        g: .5,
                        b: 0
                    }, {
                        r: 0,
                        g: .35,
                        b: 1
                    }, .5), e
                }();
                e.Palette = t
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Visualization || (e.Visualization = {}))
    }(o || (o = {}));
    var l;
    ! function(e, t) {
        l = t()
    }({}, function() {
        function e(e, t) {
            t && (e.prototype = Object.create(t.prototype)), e.prototype.constructor = e
        }

        function t(e) {
            return o(e) ? e : P(e)
        }

        function r(e) {
            return a(e) ? e : R(e)
        }

        function n(e) {
            return s(e) ? e : k(e)
        }

        function i(e) {
            return o(e) && !u(e) ? e : I(e)
        }

        function o(e) {
            return !(!e || !e[ur])
        }

        function a(e) {
            return !(!e || !e[lr])
        }

        function s(e) {
            return !(!e || !e[cr])
        }

        function u(e) {
            return a(e) || s(e)
        }

        function l(e) {
            return !(!e || !e[hr])
        }

        function c(e) {
            return e.value = !1, e
        }

        function h(e) {
            e && (e.value = !0)
        }

        function p() {}

        function d(e, t) {
            t = t || 0;
            for (var r = Math.max(0, e.length - t), n = new Array(r), i = 0; r > i; i++) n[i] = e[i + t];
            return n
        }

        function f(e) {
            return void 0 === e.size && (e.size = e.__iterate(v)), e.size
        }

        function m(e, t) {
            if ("number" != typeof t) {
                var r = t >>> 0;
                if ("" + r !== t || 4294967295 === r) return NaN;
                t = r
            }
            return 0 > t ? f(e) + t : t
        }

        function v() {
            return !0
        }

        function g(e, t, r) {
            return (0 === e || void 0 !== r && -r >= e) && (void 0 === t || void 0 !== r && t >= r)
        }

        function y(e, t) {
            return x(e, t, 0)
        }

        function b(e, t) {
            return x(e, t, t)
        }

        function x(e, t, r) {
            return void 0 === e ? r : 0 > e ? Math.max(0, t + e) : void 0 === t ? e : Math.min(t, e)
        }

        function _(e) {
            this.next = e
        }

        function w(e, t, r, n) {
            var i = 0 === e ? t : 1 === e ? r : [t, r];
            return n ? n.value = i : n = {
                value: i,
                done: !1
            }, n
        }

        function C() {
            return {
                value: void 0,
                done: !0
            }
        }

        function E(e) {
            return !!M(e)
        }

        function S(e) {
            return e && "function" == typeof e.next
        }

        function T(e) {
            var t = M(e);
            return t && t.call(e)
        }

        function M(e) {
            var t = e && (wr && e[wr] || e[Cr]);
            return "function" == typeof t ? t : void 0
        }

        function A(e) {
            return e && "number" == typeof e.length
        }

        function P(e) {
            return null === e || void 0 === e ? O() : o(e) ? e.toSeq() : z(e)
        }

        function R(e) {
            return null === e || void 0 === e ? O().toKeyedSeq() : o(e) ? a(e) ? e.toSeq() : e.fromEntrySeq() : F(e)
        }

        function k(e) {
            return null === e || void 0 === e ? O() : o(e) ? a(e) ? e.entrySeq() : e.toIndexedSeq() : U(e)
        }

        function I(e) {
            return (null === e || void 0 === e ? O() : o(e) ? a(e) ? e.entrySeq() : e : U(e)).toSetSeq()
        }

        function D(e) {
            this._array = e, this.size = e.length
        }

        function B(e) {
            var t = Object.keys(e);
            this._object = e, this._keys = t, this.size = t.length
        }

        function L(e) {
            this._iterable = e, this.size = e.length || e.size
        }

        function V(e) {
            this._iterator = e, this._iteratorCache = []
        }

        function N(e) {
            return !(!e || !e[Sr])
        }

        function O() {
            return Tr || (Tr = new D([]))
        }

        function F(e) {
            var t = Array.isArray(e) ? new D(e).fromEntrySeq() : S(e) ? new V(e).fromEntrySeq() : E(e) ? new L(e).fromEntrySeq() : "object" == typeof e ? new B(e) : void 0;
            if (!t) throw new TypeError("Expected Array or iterable object of [k, v] entries, or keyed object: " + e);
            return t
        }

        function U(e) {
            var t = H(e);
            if (!t) throw new TypeError("Expected Array or iterable object of values: " + e);
            return t
        }

        function z(e) {
            var t = H(e) || "object" == typeof e && new B(e);
            if (!t) throw new TypeError("Expected Array or iterable object of values, or keyed object: " + e);
            return t
        }

        function H(e) {
            return A(e) ? new D(e) : S(e) ? new V(e) : E(e) ? new L(e) : void 0
        }

        function j(e, t, r, n) {
            var i = e._cache;
            if (i) {
                for (var o = i.length - 1, a = 0; o >= a; a++) {
                    var s = i[r ? o - a : a];
                    if (t(s[1], n ? s[0] : a, e) === !1) return a + 1
                }
                return a
            }
            return e.__iterateUncached(t, r)
        }

        function G(e, t, r, n) {
            var i = e._cache;
            if (i) {
                var o = i.length - 1,
                    a = 0;
                return new _(function() {
                    var e = i[r ? o - a : a];
                    return a++ > o ? C() : w(t, n ? e[0] : a - 1, e[1])
                })
            }
            return e.__iteratorUncached(t, r)
        }

        function q(e, t) {
            return t ? W(t, e, "", {
                "": e
            }) : X(e)
        }

        function W(e, t, r, n) {
            return Array.isArray(t) ? e.call(n, r, k(t).map(function(r, n) {
                return W(e, r, n, t)
            })) : Y(t) ? e.call(n, r, R(t).map(function(r, n) {
                return W(e, r, n, t)
            })) : t
        }

        function X(e) {
            return Array.isArray(e) ? k(e).map(X).toList() : Y(e) ? R(e).map(X).toMap() : e
        }

        function Y(e) {
            return e && (e.constructor === Object || void 0 === e.constructor)
        }

        function K(e, t) {
            if (e === t || e !== e && t !== t) return !0;
            if (!e || !t) return !1;
            if ("function" == typeof e.valueOf && "function" == typeof t.valueOf) {
                if (e = e.valueOf(), t = t.valueOf(), e === t || e !== e && t !== t) return !0;
                if (!e || !t) return !1
            }
            return "function" == typeof e.equals && "function" == typeof t.equals && e.equals(t) ? !0 : !1
        }

        function Q(e, t) {
            if (e === t) return !0;
            if (!o(t) || void 0 !== e.size && void 0 !== t.size && e.size !== t.size || void 0 !== e.__hash && void 0 !== t.__hash && e.__hash !== t.__hash || a(e) !== a(t) || s(e) !== s(t) || l(e) !== l(t)) return !1;
            if (0 === e.size && 0 === t.size) return !0;
            var r = !u(e);
            if (l(e)) {
                var n = e.entries();
                return t.every(function(e, t) {
                    var i = n.next().value;
                    return i && K(i[1], e) && (r || K(i[0], t))
                }) && n.next().done
            }
            var i = !1;
            if (void 0 === e.size)
                if (void 0 === t.size) "function" == typeof e.cacheResult && e.cacheResult();
                else {
                    i = !0;
                    var c = e;
                    e = t, t = c
                }
            var h = !0,
                p = t.__iterate(function(t, n) {
                    return (r ? e.has(t) : i ? K(t, e.get(n, vr)) : K(e.get(n, vr), t)) ? void 0 : (h = !1, !1)
                });
            return h && e.size === p
        }

        function Z(e, t) {
            if (!(this instanceof Z)) return new Z(e, t);
            if (this._value = e, this.size = void 0 === t ? 1 / 0 : Math.max(0, t), 0 === this.size) {
                if (Mr) return Mr;
                Mr = this
            }
        }

        function $(e, t) {
            if (!e) throw new Error(t)
        }

        function J(e, t, r) {
            if (!(this instanceof J)) return new J(e, t, r);
            if ($(0 !== r, "Cannot step a Range by 0"), e = e || 0, void 0 === t && (t = 1 / 0), r = void 0 === r ? 1 : Math.abs(r), e > t && (r = -r), this._start = e, this._end = t, this._step = r, this.size = Math.max(0, Math.ceil((t - e) / r - 1) + 1), 0 === this.size) {
                if (Ar) return Ar;
                Ar = this
            }
        }

        function ee() {
            throw TypeError("Abstract")
        }

        function te() {}

        function re() {}

        function ne() {}

        function ie(e) {
            return e >>> 1 & 1073741824 | 3221225471 & e
        }

        function oe(e) {
            if (e === !1 || null === e || void 0 === e) return 0;
            if ("function" == typeof e.valueOf && (e = e.valueOf(), e === !1 || null === e || void 0 === e)) return 0;
            if (e === !0) return 1;
            var t = typeof e;
            if ("number" === t) {
                var r = 0 | e;
                for (r !== e && (r ^= 4294967295 * e); e > 4294967295;) e /= 4294967295, r ^= e;
                return ie(r)
            }
            if ("string" === t) return e.length > Vr ? ae(e) : se(e);
            if ("function" == typeof e.hashCode) return e.hashCode();
            if ("object" === t) return ue(e);
            if ("function" == typeof e.toString) return se(e.toString());
            throw new Error("Value type " + t + " cannot be hashed.")
        }

        function ae(e) {
            var t = Fr[e];
            return void 0 === t && (t = se(e), Or === Nr && (Or = 0, Fr = {}), Or++, Fr[e] = t), t
        }

        function se(e) {
            for (var t = 0, r = 0; r < e.length; r++) t = 31 * t + e.charCodeAt(r) | 0;
            return ie(t)
        }

        function ue(e) {
            var t;
            if (Dr && (t = Pr.get(e), void 0 !== t)) return t;
            if (t = e[Lr], void 0 !== t) return t;
            if (!Ir) {
                if (t = e.propertyIsEnumerable && e.propertyIsEnumerable[Lr], void 0 !== t) return t;
                if (t = le(e), void 0 !== t) return t
            }
            if (t = ++Br, 1073741824 & Br && (Br = 0), Dr) Pr.set(e, t);
            else {
                if (void 0 !== kr && kr(e) === !1) throw new Error("Non-extensible objects are not allowed as keys.");
                if (Ir) Object.defineProperty(e, Lr, {
                    enumerable: !1,
                    configurable: !1,
                    writable: !1,
                    value: t
                });
                else if (void 0 !== e.propertyIsEnumerable && e.propertyIsEnumerable === e.constructor.prototype.propertyIsEnumerable) e.propertyIsEnumerable = function() {
                    return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments)
                }, e.propertyIsEnumerable[Lr] = t;
                else {
                    if (void 0 === e.nodeType) throw new Error("Unable to set a non-enumerable property on object.");
                    e[Lr] = t
                }
            }
            return t
        }

        function le(e) {
            if (e && e.nodeType > 0) switch (e.nodeType) {
                case 1:
                    return e.uniqueID;
                case 9:
                    return e.documentElement && e.documentElement.uniqueID
            }
        }

        function ce(e) {
            $(e !== 1 / 0, "Cannot perform this action with an infinite size.")
        }

        function he(e) {
            return null === e || void 0 === e ? we() : pe(e) && !l(e) ? e : we().withMutations(function(t) {
                var n = r(e);
                ce(n.size), n.forEach(function(e, r) {
                    return t.set(r, e)
                })
            })
        }

        function pe(e) {
            return !(!e || !e[Ur])
        }

        function de(e, t) {
            this.ownerID = e, this.entries = t
        }

        function fe(e, t, r) {
            this.ownerID = e, this.bitmap = t, this.nodes = r
        }

        function me(e, t, r) {
            this.ownerID = e, this.count = t, this.nodes = r
        }

        function ve(e, t, r) {
            this.ownerID = e, this.keyHash = t, this.entries = r
        }

        function ge(e, t, r) {
            this.ownerID = e, this.keyHash = t, this.entry = r
        }

        function ye(e, t, r) {
            this._type = t, this._reverse = r, this._stack = e._root && xe(e._root)
        }

        function be(e, t) {
            return w(e, t[0], t[1])
        }

        function xe(e, t) {
            return {
                node: e,
                index: 0,
                __prev: t
            }
        }

        function _e(e, t, r, n) {
            var i = Object.create(zr);
            return i.size = e, i._root = t, i.__ownerID = r, i.__hash = n, i.__altered = !1, i
        }

        function we() {
            return Hr || (Hr = _e(0))
        }

        function Ce(e, t, r) {
            var n, i;
            if (e._root) {
                var o = c(gr),
                    a = c(yr);
                if (n = Ee(e._root, e.__ownerID, 0, void 0, t, r, o, a), !a.value) return e;
                i = e.size + (o.value ? r === vr ? -1 : 1 : 0)
            } else {
                if (r === vr) return e;
                i = 1, n = new de(e.__ownerID, [
                    [t, r]
                ])
            }
            return e.__ownerID ? (e.size = i, e._root = n, e.__hash = void 0, e.__altered = !0, e) : n ? _e(i, n) : we()
        }

        function Ee(e, t, r, n, i, o, a, s) {
            return e ? e.update(t, r, n, i, o, a, s) : o === vr ? e : (h(s), h(a), new ge(t, n, [i, o]))
        }

        function Se(e) {
            return e.constructor === ge || e.constructor === ve
        }

        function Te(e, t, r, n, i) {
            if (e.keyHash === n) return new ve(t, n, [e.entry, i]);
            var o, a = (0 === r ? e.keyHash : e.keyHash >>> r) & mr,
                s = (0 === r ? n : n >>> r) & mr,
                u = a === s ? [Te(e, t, r + dr, n, i)] : (o = new ge(t, n, i), s > a ? [e, o] : [o, e]);
            return new fe(t, 1 << a | 1 << s, u)
        }

        function Me(e, t, r, n) {
            e || (e = new p);
            for (var i = new ge(e, oe(r), [r, n]), o = 0; o < t.length; o++) {
                var a = t[o];
                i = i.update(e, 0, void 0, a[0], a[1])
            }
            return i
        }

        function Ae(e, t, r, n) {
            for (var i = 0, o = 0, a = new Array(r), s = 0, u = 1, l = t.length; l > s; s++, u <<= 1) {
                var c = t[s];
                void 0 !== c && s !== n && (i |= u, a[o++] = c)
            }
            return new fe(e, i, a)
        }

        function Pe(e, t, r, n, i) {
            for (var o = 0, a = new Array(fr), s = 0; 0 !== r; s++, r >>>= 1) a[s] = 1 & r ? t[o++] : void 0;
            return a[n] = i, new me(e, o + 1, a)
        }

        function Re(e, t, n) {
            for (var i = [], a = 0; a < n.length; a++) {
                var s = n[a],
                    u = r(s);
                o(s) || (u = u.map(function(e) {
                    return q(e)
                })), i.push(u)
            }
            return De(e, t, i)
        }

        function ke(e, t, r) {
            return e && e.mergeDeep && o(t) ? e.mergeDeep(t) : K(e, t) ? e : t
        }

        function Ie(e) {
            return function(t, r, n) {
                if (t && t.mergeDeepWith && o(r)) return t.mergeDeepWith(e, r);
                var i = e(t, r, n);
                return K(t, i) ? t : i
            }
        }

        function De(e, t, r) {
            return r = r.filter(function(e) {
                return 0 !== e.size
            }), 0 === r.length ? e : 0 !== e.size || e.__ownerID || 1 !== r.length ? e.withMutations(function(e) {
                for (var n = t ? function(r, n) {
                        e.update(n, vr, function(e) {
                            return e === vr ? r : t(e, r, n)
                        })
                    } : function(t, r) {
                        e.set(r, t)
                    }, i = 0; i < r.length; i++) r[i].forEach(n)
            }) : e.constructor(r[0])
        }

        function Be(e, t, r, n) {
            var i = e === vr,
                o = t.next();
            if (o.done) {
                var a = i ? r : e,
                    s = n(a);
                return s === a ? e : s
            }
            $(i || e && e.set, "invalid keyPath");
            var u = o.value,
                l = i ? vr : e.get(u, vr),
                c = Be(l, t, r, n);
            return c === l ? e : c === vr ? e.remove(u) : (i ? we() : e).set(u, c)
        }

        function Le(e) {
            return e -= e >> 1 & 1431655765, e = (858993459 & e) + (e >> 2 & 858993459), e = e + (e >> 4) & 252645135, e += e >> 8, e += e >> 16, 127 & e
        }

        function Ve(e, t, r, n) {
            var i = n ? e : d(e);
            return i[t] = r, i
        }

        function Ne(e, t, r, n) {
            var i = e.length + 1;
            if (n && t + 1 === i) return e[t] = r, e;
            for (var o = new Array(i), a = 0, s = 0; i > s; s++) s === t ? (o[s] = r, a = -1) : o[s] = e[s + a];
            return o
        }

        function Oe(e, t, r) {
            var n = e.length - 1;
            if (r && t === n) return e.pop(), e;
            for (var i = new Array(n), o = 0, a = 0; n > a; a++) a === t && (o = 1), i[a] = e[a + o];
            return i
        }

        function Fe(e) {
            var t = Ge();
            if (null === e || void 0 === e) return t;
            if (Ue(e)) return e;
            var r = n(e),
                i = r.size;
            return 0 === i ? t : (ce(i), i > 0 && fr > i ? je(0, i, dr, null, new ze(r.toArray())) : t.withMutations(function(e) {
                e.setSize(i), r.forEach(function(t, r) {
                    return e.set(r, t)
                })
            }))
        }

        function Ue(e) {
            return !(!e || !e[Wr])
        }

        function ze(e, t) {
            this.array = e, this.ownerID = t
        }

        function He(e, t) {
            function r(e, t, r) {
                return 0 === t ? n(e, r) : i(e, t, r)
            }

            function n(e, r) {
                var n = r === s ? u && u.array : e && e.array,
                    i = r > o ? 0 : o - r,
                    l = a - r;
                return l > fr && (l = fr),
                    function() {
                        if (i === l) return Kr;
                        var e = t ? --l : i++;
                        return n && n[e]
                    }
            }

            function i(e, n, i) {
                var s, u = e && e.array,
                    l = i > o ? 0 : o - i >> n,
                    c = (a - i >> n) + 1;
                return c > fr && (c = fr),
                    function() {
                        for (;;) {
                            if (s) {
                                var e = s();
                                if (e !== Kr) return e;
                                s = null
                            }
                            if (l === c) return Kr;
                            var o = t ? --c : l++;
                            s = r(u && u[o], n - dr, i + (o << n))
                        }
                    }
            }
            var o = e._origin,
                a = e._capacity,
                s = Ze(a),
                u = e._tail;
            return r(e._root, e._level, 0)
        }

        function je(e, t, r, n, i, o, a) {
            var s = Object.create(Xr);
            return s.size = t - e, s._origin = e, s._capacity = t, s._level = r, s._root = n, s._tail = i, s.__ownerID = o, s.__hash = a, s.__altered = !1, s
        }

        function Ge() {
            return Yr || (Yr = je(0, 0, dr))
        }

        function qe(e, t, r) {
            if (t = m(e, t), t !== t) return e;
            if (t >= e.size || 0 > t) return e.withMutations(function(e) {
                0 > t ? Ke(e, t).set(0, r) : Ke(e, 0, t + 1).set(t, r)
            });
            t += e._origin;
            var n = e._tail,
                i = e._root,
                o = c(yr);
            return t >= Ze(e._capacity) ? n = We(n, e.__ownerID, 0, t, r, o) : i = We(i, e.__ownerID, e._level, t, r, o), o.value ? e.__ownerID ? (e._root = i, e._tail = n, e.__hash = void 0, e.__altered = !0, e) : je(e._origin, e._capacity, e._level, i, n) : e
        }

        function We(e, t, r, n, i, o) {
            var a = n >>> r & mr,
                s = e && a < e.array.length;
            if (!s && void 0 === i) return e;
            var u;
            if (r > 0) {
                var l = e && e.array[a],
                    c = We(l, t, r - dr, n, i, o);
                return c === l ? e : (u = Xe(e, t), u.array[a] = c, u)
            }
            return s && e.array[a] === i ? e : (h(o), u = Xe(e, t), void 0 === i && a === u.array.length - 1 ? u.array.pop() : u.array[a] = i, u)
        }

        function Xe(e, t) {
            return t && e && t === e.ownerID ? e : new ze(e ? e.array.slice() : [], t)
        }

        function Ye(e, t) {
            if (t >= Ze(e._capacity)) return e._tail;
            if (t < 1 << e._level + dr) {
                for (var r = e._root, n = e._level; r && n > 0;) r = r.array[t >>> n & mr], n -= dr;
                return r
            }
        }

        function Ke(e, t, r) {
            void 0 !== t && (t = 0 | t), void 0 !== r && (r = 0 | r);
            var n = e.__ownerID || new p,
                i = e._origin,
                o = e._capacity,
                a = i + t,
                s = void 0 === r ? o : 0 > r ? o + r : i + r;
            if (a === i && s === o) return e;
            if (a >= s) return e.clear();
            for (var u = e._level, l = e._root, c = 0; 0 > a + c;) l = new ze(l && l.array.length ? [void 0, l] : [], n), u += dr, c += 1 << u;
            c && (a += c, i += c, s += c, o += c);
            for (var h = Ze(o), d = Ze(s); d >= 1 << u + dr;) l = new ze(l && l.array.length ? [l] : [], n), u += dr;
            var f = e._tail,
                m = h > d ? Ye(e, s - 1) : d > h ? new ze([], n) : f;
            if (f && d > h && o > a && f.array.length) {
                l = Xe(l, n);
                for (var v = l, g = u; g > dr; g -= dr) {
                    var y = h >>> g & mr;
                    v = v.array[y] = Xe(v.array[y], n)
                }
                v.array[h >>> dr & mr] = f
            }
            if (o > s && (m = m && m.removeAfter(n, 0, s)), a >= d) a -= d, s -= d, u = dr, l = null, m = m && m.removeBefore(n, 0, a);
            else if (a > i || h > d) {
                for (c = 0; l;) {
                    var b = a >>> u & mr;
                    if (b !== d >>> u & mr) break;
                    b && (c += (1 << u) * b), u -= dr, l = l.array[b]
                }
                l && a > i && (l = l.removeBefore(n, u, a - c)), l && h > d && (l = l.removeAfter(n, u, d - c)), c && (a -= c, s -= c)
            }
            return e.__ownerID ? (e.size = s - a, e._origin = a, e._capacity = s, e._level = u, e._root = l, e._tail = m, e.__hash = void 0, e.__altered = !0, e) : je(a, s, u, l, m)
        }

        function Qe(e, t, r) {
            for (var i = [], a = 0, s = 0; s < r.length; s++) {
                var u = r[s],
                    l = n(u);
                l.size > a && (a = l.size), o(u) || (l = l.map(function(e) {
                    return q(e)
                })), i.push(l)
            }
            return a > e.size && (e = e.setSize(a)), De(e, t, i)
        }

        function Ze(e) {
            return fr > e ? 0 : e - 1 >>> dr << dr
        }

        function $e(e) {
            return null === e || void 0 === e ? tt() : Je(e) ? e : tt().withMutations(function(t) {
                var n = r(e);
                ce(n.size), n.forEach(function(e, r) {
                    return t.set(r, e)
                })
            })
        }

        function Je(e) {
            return pe(e) && l(e)
        }

        function et(e, t, r, n) {
            var i = Object.create($e.prototype);
            return i.size = e ? e.size : 0, i._map = e, i._list = t, i.__ownerID = r, i.__hash = n, i
        }

        function tt() {
            return Qr || (Qr = et(we(), Ge()))
        }

        function rt(e, t, r) {
            var n, i, o = e._map,
                a = e._list,
                s = o.get(t),
                u = void 0 !== s;
            if (r === vr) {
                if (!u) return e;
                a.size >= fr && a.size >= 2 * o.size ? (i = a.filter(function(e, t) {
                    return void 0 !== e && s !== t
                }), n = i.toKeyedSeq().map(function(e) {
                    return e[0]
                }).flip().toMap(), e.__ownerID && (n.__ownerID = i.__ownerID = e.__ownerID)) : (n = o.remove(t), i = s === a.size - 1 ? a.pop() : a.set(s, void 0))
            } else if (u) {
                if (r === a.get(s)[1]) return e;
                n = o, i = a.set(s, [t, r])
            } else n = o.set(t, a.size), i = a.set(a.size, [t, r]);
            return e.__ownerID ? (e.size = n.size, e._map = n, e._list = i, e.__hash = void 0, e) : et(n, i)
        }

        function nt(e, t) {
            this._iter = e, this._useKeys = t, this.size = e.size
        }

        function it(e) {
            this._iter = e, this.size = e.size
        }

        function ot(e) {
            this._iter = e, this.size = e.size
        }

        function at(e) {
            this._iter = e, this.size = e.size
        }

        function st(e) {
            var t = At(e);
            return t._iter = e, t.size = e.size, t.flip = function() {
                return e
            }, t.reverse = function() {
                var t = e.reverse.apply(this);
                return t.flip = function() {
                    return e.reverse()
                }, t
            }, t.has = function(t) {
                return e.includes(t)
            }, t.includes = function(t) {
                return e.has(t)
            }, t.cacheResult = Pt, t.__iterateUncached = function(t, r) {
                var n = this;
                return e.__iterate(function(e, r) {
                    return t(r, e, n) !== !1
                }, r)
            }, t.__iteratorUncached = function(t, r) {
                if (t === _r) {
                    var n = e.__iterator(t, r);
                    return new _(function() {
                        var e = n.next();
                        if (!e.done) {
                            var t = e.value[0];
                            e.value[0] = e.value[1], e.value[1] = t
                        }
                        return e
                    })
                }
                return e.__iterator(t === xr ? br : xr, r)
            }, t
        }

        function ut(e, t, r) {
            var n = At(e);
            return n.size = e.size, n.has = function(t) {
                return e.has(t)
            }, n.get = function(n, i) {
                var o = e.get(n, vr);
                return o === vr ? i : t.call(r, o, n, e)
            }, n.__iterateUncached = function(n, i) {
                var o = this;
                return e.__iterate(function(e, i, a) {
                    return n(t.call(r, e, i, a), i, o) !== !1
                }, i)
            }, n.__iteratorUncached = function(n, i) {
                var o = e.__iterator(_r, i);
                return new _(function() {
                    var i = o.next();
                    if (i.done) return i;
                    var a = i.value,
                        s = a[0];
                    return w(n, s, t.call(r, a[1], s, e), i)
                })
            }, n
        }

        function lt(e, t) {
            var r = At(e);
            return r._iter = e, r.size = e.size, r.reverse = function() {
                return e
            }, e.flip && (r.flip = function() {
                var t = st(e);
                return t.reverse = function() {
                    return e.flip()
                }, t
            }), r.get = function(r, n) {
                return e.get(t ? r : -1 - r, n)
            }, r.has = function(r) {
                return e.has(t ? r : -1 - r)
            }, r.includes = function(t) {
                return e.includes(t)
            }, r.cacheResult = Pt, r.__iterate = function(t, r) {
                var n = this;
                return e.__iterate(function(e, r) {
                    return t(e, r, n)
                }, !r)
            }, r.__iterator = function(t, r) {
                return e.__iterator(t, !r)
            }, r
        }

        function ct(e, t, r, n) {
            var i = At(e);
            return n && (i.has = function(n) {
                var i = e.get(n, vr);
                return i !== vr && !!t.call(r, i, n, e)
            }, i.get = function(n, i) {
                var o = e.get(n, vr);
                return o !== vr && t.call(r, o, n, e) ? o : i
            }), i.__iterateUncached = function(i, o) {
                var a = this,
                    s = 0;
                return e.__iterate(function(e, o, u) {
                    return t.call(r, e, o, u) ? (s++, i(e, n ? o : s - 1, a)) : void 0
                }, o), s
            }, i.__iteratorUncached = function(i, o) {
                var a = e.__iterator(_r, o),
                    s = 0;
                return new _(function() {
                    for (;;) {
                        var o = a.next();
                        if (o.done) return o;
                        var u = o.value,
                            l = u[0],
                            c = u[1];
                        if (t.call(r, c, l, e)) return w(i, n ? l : s++, c, o)
                    }
                })
            }, i
        }

        function ht(e, t, r) {
            var n = he().asMutable();
            return e.__iterate(function(i, o) {
                n.update(t.call(r, i, o, e), 0, function(e) {
                    return e + 1
                })
            }), n.asImmutable()
        }

        function pt(e, t, r) {
            var n = a(e),
                i = (l(e) ? $e() : he()).asMutable();
            e.__iterate(function(o, a) {
                i.update(t.call(r, o, a, e), function(e) {
                    return e = e || [], e.push(n ? [a, o] : o), e
                })
            });
            var o = Mt(e);
            return i.map(function(t) {
                return Et(e, o(t))
            })
        }

        function dt(e, t, r, n) {
            var i = e.size;
            if (void 0 !== t && (t = 0 | t), void 0 !== r && (r = 0 | r), g(t, r, i)) return e;
            var o = y(t, i),
                a = b(r, i);
            if (o !== o || a !== a) return dt(e.toSeq().cacheResult(), t, r, n);
            var s, u = a - o;
            u === u && (s = 0 > u ? 0 : u);
            var l = At(e);
            return l.size = 0 === s ? s : e.size && s || void 0, !n && N(e) && s >= 0 && (l.get = function(t, r) {
                return t = m(this, t), t >= 0 && s > t ? e.get(t + o, r) : r
            }), l.__iterateUncached = function(t, r) {
                var i = this;
                if (0 === s) return 0;
                if (r) return this.cacheResult().__iterate(t, r);
                var a = 0,
                    u = !0,
                    l = 0;
                return e.__iterate(function(e, r) {
                    return u && (u = a++ < o) ? void 0 : (l++, t(e, n ? r : l - 1, i) !== !1 && l !== s)
                }), l
            }, l.__iteratorUncached = function(t, r) {
                if (0 !== s && r) return this.cacheResult().__iterator(t, r);
                var i = 0 !== s && e.__iterator(t, r),
                    a = 0,
                    u = 0;
                return new _(function() {
                    for (; a++ < o;) i.next();
                    if (++u > s) return C();
                    var e = i.next();
                    return n || t === xr ? e : t === br ? w(t, u - 1, void 0, e) : w(t, u - 1, e.value[1], e)
                })
            }, l
        }

        function ft(e, t, r) {
            var n = At(e);
            return n.__iterateUncached = function(n, i) {
                var o = this;
                if (i) return this.cacheResult().__iterate(n, i);
                var a = 0;
                return e.__iterate(function(e, i, s) {
                    return t.call(r, e, i, s) && ++a && n(e, i, o)
                }), a
            }, n.__iteratorUncached = function(n, i) {
                var o = this;
                if (i) return this.cacheResult().__iterator(n, i);
                var a = e.__iterator(_r, i),
                    s = !0;
                return new _(function() {
                    if (!s) return C();
                    var e = a.next();
                    if (e.done) return e;
                    var i = e.value,
                        u = i[0],
                        l = i[1];
                    return t.call(r, l, u, o) ? n === _r ? e : w(n, u, l, e) : (s = !1, C())
                })
            }, n
        }

        function mt(e, t, r, n) {
            var i = At(e);
            return i.__iterateUncached = function(i, o) {
                var a = this;
                if (o) return this.cacheResult().__iterate(i, o);
                var s = !0,
                    u = 0;
                return e.__iterate(function(e, o, l) {
                    return s && (s = t.call(r, e, o, l)) ? void 0 : (u++, i(e, n ? o : u - 1, a))
                }), u
            }, i.__iteratorUncached = function(i, o) {
                var a = this;
                if (o) return this.cacheResult().__iterator(i, o);
                var s = e.__iterator(_r, o),
                    u = !0,
                    l = 0;
                return new _(function() {
                    var e, o, c;
                    do {
                        if (e = s.next(), e.done) return n || i === xr ? e : i === br ? w(i, l++, void 0, e) : w(i, l++, e.value[1], e);
                        var h = e.value;
                        o = h[0], c = h[1], u && (u = t.call(r, c, o, a))
                    } while (u);
                    return i === _r ? e : w(i, o, c, e)
                })
            }, i
        }

        function vt(e, t) {
            var n = a(e),
                i = [e].concat(t).map(function(e) {
                    return o(e) ? n && (e = r(e)) : e = n ? F(e) : U(Array.isArray(e) ? e : [e]), e
                }).filter(function(e) {
                    return 0 !== e.size
                });
            if (0 === i.length) return e;
            if (1 === i.length) {
                var u = i[0];
                if (u === e || n && a(u) || s(e) && s(u)) return u
            }
            var l = new D(i);
            return n ? l = l.toKeyedSeq() : s(e) || (l = l.toSetSeq()), l = l.flatten(!0), l.size = i.reduce(function(e, t) {
                if (void 0 !== e) {
                    var r = t.size;
                    if (void 0 !== r) return e + r
                }
            }, 0), l
        }

        function gt(e, t, r) {
            var n = At(e);
            return n.__iterateUncached = function(n, i) {
                function a(e, l) {
                    var c = this;
                    e.__iterate(function(e, i) {
                        return (!t || t > l) && o(e) ? a(e, l + 1) : n(e, r ? i : s++, c) === !1 && (u = !0), !u
                    }, i)
                }
                var s = 0,
                    u = !1;
                return a(e, 0), s
            }, n.__iteratorUncached = function(n, i) {
                var a = e.__iterator(n, i),
                    s = [],
                    u = 0;
                return new _(function() {
                    for (; a;) {
                        var e = a.next();
                        if (e.done === !1) {
                            var l = e.value;
                            if (n === _r && (l = l[1]), t && !(s.length < t) || !o(l)) return r ? e : w(n, u++, l, e);
                            s.push(a), a = l.__iterator(n, i)
                        } else a = s.pop()
                    }
                    return C()
                })
            }, n
        }

        function yt(e, t, r) {
            var n = Mt(e);
            return e.toSeq().map(function(i, o) {
                return n(t.call(r, i, o, e))
            }).flatten(!0)
        }

        function bt(e, t) {
            var r = At(e);
            return r.size = e.size && 2 * e.size - 1, r.__iterateUncached = function(r, n) {
                var i = this,
                    o = 0;
                return e.__iterate(function(e, n) {
                    return (!o || r(t, o++, i) !== !1) && r(e, o++, i) !== !1
                }, n), o
            }, r.__iteratorUncached = function(r, n) {
                var i, o = e.__iterator(xr, n),
                    a = 0;
                return new _(function() {
                    return (!i || a % 2) && (i = o.next(), i.done) ? i : a % 2 ? w(r, a++, t) : w(r, a++, i.value, i)
                })
            }, r
        }

        function xt(e, t, r) {
            t || (t = Rt);
            var n = a(e),
                i = 0,
                o = e.toSeq().map(function(t, n) {
                    return [n, t, i++, r ? r(t, n, e) : t]
                }).toArray();
            return o.sort(function(e, r) {
                return t(e[3], r[3]) || e[2] - r[2]
            }).forEach(n ? function(e, t) {
                o[t].length = 2
            } : function(e, t) {
                o[t] = e[1]
            }), n ? R(o) : s(e) ? k(o) : I(o)
        }

        function _t(e, t, r) {
            if (t || (t = Rt), r) {
                var n = e.toSeq().map(function(t, n) {
                    return [t, r(t, n, e)]
                }).reduce(function(e, r) {
                    return wt(t, e[1], r[1]) ? r : e
                });
                return n && n[0]
            }
            return e.reduce(function(e, r) {
                return wt(t, e, r) ? r : e
            })
        }

        function wt(e, t, r) {
            var n = e(r, t);
            return 0 === n && r !== t && (void 0 === r || null === r || r !== r) || n > 0
        }

        function Ct(e, r, n) {
            var i = At(e);
            return i.size = new D(n).map(function(e) {
                return e.size
            }).min(), i.__iterate = function(e, t) {
                for (var r, n = this.__iterator(xr, t), i = 0; !(r = n.next()).done && e(r.value, i++, this) !== !1;);
                return i
            }, i.__iteratorUncached = function(e, i) {
                var o = n.map(function(e) {
                        return e = t(e), T(i ? e.reverse() : e)
                    }),
                    a = 0,
                    s = !1;
                return new _(function() {
                    var t;
                    return s || (t = o.map(function(e) {
                        return e.next()
                    }), s = t.some(function(e) {
                        return e.done
                    })), s ? C() : w(e, a++, r.apply(null, t.map(function(e) {
                        return e.value
                    })))
                })
            }, i
        }

        function Et(e, t) {
            return N(e) ? t : e.constructor(t)
        }

        function St(e) {
            if (e !== Object(e)) throw new TypeError("Expected [K, V] tuple: " + e)
        }

        function Tt(e) {
            return ce(e.size), f(e)
        }

        function Mt(e) {
            return a(e) ? r : s(e) ? n : i
        }

        function At(e) {
            return Object.create((a(e) ? R : s(e) ? k : I).prototype)
        }

        function Pt() {
            return this._iter.cacheResult ? (this._iter.cacheResult(), this.size = this._iter.size, this) : P.prototype.cacheResult.call(this)
        }

        function Rt(e, t) {
            return e > t ? 1 : t > e ? -1 : 0;
        }

        function kt(e) {
            var r = T(e);
            if (!r) {
                if (!A(e)) throw new TypeError("Expected iterable or array-like: " + e);
                r = T(t(e))
            }
            return r
        }

        function It(e, t) {
            var r, n = function(o) {
                    if (o instanceof n) return o;
                    if (!(this instanceof n)) return new n(o);
                    if (!r) {
                        r = !0;
                        var a = Object.keys(e);
                        Lt(i, a), i.size = a.length, i._name = t, i._keys = a, i._defaultValues = e
                    }
                    this._map = he(o)
                },
                i = n.prototype = Object.create(Zr);
            return i.constructor = n, n
        }

        function Dt(e, t, r) {
            var n = Object.create(Object.getPrototypeOf(e));
            return n._map = t, n.__ownerID = r, n
        }

        function Bt(e) {
            return e._name || e.constructor.name || "Record"
        }

        function Lt(e, t) {
            try {
                t.forEach(Vt.bind(void 0, e))
            } catch (r) {}
        }

        function Vt(e, t) {
            Object.defineProperty(e, t, {
                get: function() {
                    return this.get(t)
                },
                set: function(e) {
                    $(this.__ownerID, "Cannot set on an immutable record."), this.set(t, e)
                }
            })
        }

        function Nt(e) {
            return null === e || void 0 === e ? zt() : Ot(e) && !l(e) ? e : zt().withMutations(function(t) {
                var r = i(e);
                ce(r.size), r.forEach(function(e) {
                    return t.add(e)
                })
            })
        }

        function Ot(e) {
            return !(!e || !e[$r])
        }

        function Ft(e, t) {
            return e.__ownerID ? (e.size = t.size, e._map = t, e) : t === e._map ? e : 0 === t.size ? e.__empty() : e.__make(t)
        }

        function Ut(e, t) {
            var r = Object.create(Jr);
            return r.size = e ? e.size : 0, r._map = e, r.__ownerID = t, r
        }

        function zt() {
            return en || (en = Ut(we()))
        }

        function Ht(e) {
            return null === e || void 0 === e ? qt() : jt(e) ? e : qt().withMutations(function(t) {
                var r = i(e);
                ce(r.size), r.forEach(function(e) {
                    return t.add(e)
                })
            })
        }

        function jt(e) {
            return Ot(e) && l(e)
        }

        function Gt(e, t) {
            var r = Object.create(tn);
            return r.size = e ? e.size : 0, r._map = e, r.__ownerID = t, r
        }

        function qt() {
            return rn || (rn = Gt(tt()))
        }

        function Wt(e) {
            return null === e || void 0 === e ? Kt() : Xt(e) ? e : Kt().unshiftAll(e)
        }

        function Xt(e) {
            return !(!e || !e[nn])
        }

        function Yt(e, t, r, n) {
            var i = Object.create(on);
            return i.size = e, i._head = t, i.__ownerID = r, i.__hash = n, i.__altered = !1, i
        }

        function Kt() {
            return an || (an = Yt(0))
        }

        function Qt(e, t) {
            var r = function(r) {
                e.prototype[r] = t[r]
            };
            return Object.keys(t).forEach(r), Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(t).forEach(r), e
        }

        function Zt(e, t) {
            return t
        }

        function $t(e, t) {
            return [t, e]
        }

        function Jt(e) {
            return function() {
                return !e.apply(this, arguments)
            }
        }

        function er(e) {
            return function() {
                return -e.apply(this, arguments)
            }
        }

        function tr(e) {
            return "string" == typeof e ? JSON.stringify(e) : e
        }

        function rr() {
            return d(arguments)
        }

        function nr(e, t) {
            return t > e ? 1 : e > t ? -1 : 0
        }

        function ir(e) {
            if (e.size === 1 / 0) return 0;
            var t = l(e),
                r = a(e),
                n = t ? 1 : 0,
                i = e.__iterate(r ? t ? function(e, t) {
                    n = 31 * n + ar(oe(e), oe(t)) | 0
                } : function(e, t) {
                    n = n + ar(oe(e), oe(t)) | 0
                } : t ? function(e) {
                    n = 31 * n + oe(e) | 0
                } : function(e) {
                    n = n + oe(e) | 0
                });
            return or(i, n)
        }

        function or(e, t) {
            return t = Rr(t, 3432918353), t = Rr(t << 15 | t >>> -15, 461845907), t = Rr(t << 13 | t >>> -13, 5), t = (t + 3864292196 | 0) ^ e, t = Rr(t ^ t >>> 16, 2246822507), t = Rr(t ^ t >>> 13, 3266489909), t = ie(t ^ t >>> 16)
        }

        function ar(e, t) {
            return e ^ t + 2654435769 + (e << 6) + (e >> 2) | 0
        }
        var sr = Array.prototype.slice;
        e(r, t), e(n, t), e(i, t), t.isIterable = o, t.isKeyed = a, t.isIndexed = s, t.isAssociative = u, t.isOrdered = l, t.Keyed = r, t.Indexed = n, t.Set = i;
        var ur = "@@__IMMUTABLE_ITERABLE__@@",
            lr = "@@__IMMUTABLE_KEYED__@@",
            cr = "@@__IMMUTABLE_INDEXED__@@",
            hr = "@@__IMMUTABLE_ORDERED__@@",
            pr = "delete",
            dr = 5,
            fr = 1 << dr,
            mr = fr - 1,
            vr = {},
            gr = {
                value: !1
            },
            yr = {
                value: !1
            },
            br = 0,
            xr = 1,
            _r = 2,
            wr = "function" == typeof Symbol && Symbol.iterator,
            Cr = "@@iterator",
            Er = wr || Cr;
        _.prototype.toString = function() {
            return "[Iterator]"
        }, _.KEYS = br, _.VALUES = xr, _.ENTRIES = _r, _.prototype.inspect = _.prototype.toSource = function() {
            return this.toString()
        }, _.prototype[Er] = function() {
            return this
        }, e(P, t), P.of = function() {
            return P(arguments)
        }, P.prototype.toSeq = function() {
            return this
        }, P.prototype.toString = function() {
            return this.__toString("Seq {", "}")
        }, P.prototype.cacheResult = function() {
            return !this._cache && this.__iterateUncached && (this._cache = this.entrySeq().toArray(), this.size = this._cache.length), this
        }, P.prototype.__iterate = function(e, t) {
            return j(this, e, t, !0)
        }, P.prototype.__iterator = function(e, t) {
            return G(this, e, t, !0)
        }, e(R, P), R.prototype.toKeyedSeq = function() {
            return this
        }, e(k, P), k.of = function() {
            return k(arguments)
        }, k.prototype.toIndexedSeq = function() {
            return this
        }, k.prototype.toString = function() {
            return this.__toString("Seq [", "]")
        }, k.prototype.__iterate = function(e, t) {
            return j(this, e, t, !1)
        }, k.prototype.__iterator = function(e, t) {
            return G(this, e, t, !1)
        }, e(I, P), I.of = function() {
            return I(arguments)
        }, I.prototype.toSetSeq = function() {
            return this
        }, P.isSeq = N, P.Keyed = R, P.Set = I, P.Indexed = k;
        var Sr = "@@__IMMUTABLE_SEQ__@@";
        P.prototype[Sr] = !0, e(D, k), D.prototype.get = function(e, t) {
            return this.has(e) ? this._array[m(this, e)] : t
        }, D.prototype.__iterate = function(e, t) {
            for (var r = this._array, n = r.length - 1, i = 0; n >= i; i++)
                if (e(r[t ? n - i : i], i, this) === !1) return i + 1;
            return i
        }, D.prototype.__iterator = function(e, t) {
            var r = this._array,
                n = r.length - 1,
                i = 0;
            return new _(function() {
                return i > n ? C() : w(e, i, r[t ? n - i++ : i++])
            })
        }, e(B, R), B.prototype.get = function(e, t) {
            return void 0 === t || this.has(e) ? this._object[e] : t
        }, B.prototype.has = function(e) {
            return this._object.hasOwnProperty(e)
        }, B.prototype.__iterate = function(e, t) {
            for (var r = this._object, n = this._keys, i = n.length - 1, o = 0; i >= o; o++) {
                var a = n[t ? i - o : o];
                if (e(r[a], a, this) === !1) return o + 1
            }
            return o
        }, B.prototype.__iterator = function(e, t) {
            var r = this._object,
                n = this._keys,
                i = n.length - 1,
                o = 0;
            return new _(function() {
                var a = n[t ? i - o : o];
                return o++ > i ? C() : w(e, a, r[a])
            })
        }, B.prototype[hr] = !0, e(L, k), L.prototype.__iterateUncached = function(e, t) {
            if (t) return this.cacheResult().__iterate(e, t);
            var r = this._iterable,
                n = T(r),
                i = 0;
            if (S(n))
                for (var o; !(o = n.next()).done && e(o.value, i++, this) !== !1;);
            return i
        }, L.prototype.__iteratorUncached = function(e, t) {
            if (t) return this.cacheResult().__iterator(e, t);
            var r = this._iterable,
                n = T(r);
            if (!S(n)) return new _(C);
            var i = 0;
            return new _(function() {
                var t = n.next();
                return t.done ? t : w(e, i++, t.value)
            })
        }, e(V, k), V.prototype.__iterateUncached = function(e, t) {
            if (t) return this.cacheResult().__iterate(e, t);
            for (var r = this._iterator, n = this._iteratorCache, i = 0; i < n.length;)
                if (e(n[i], i++, this) === !1) return i;
            for (var o; !(o = r.next()).done;) {
                var a = o.value;
                if (n[i] = a, e(a, i++, this) === !1) break
            }
            return i
        }, V.prototype.__iteratorUncached = function(e, t) {
            if (t) return this.cacheResult().__iterator(e, t);
            var r = this._iterator,
                n = this._iteratorCache,
                i = 0;
            return new _(function() {
                if (i >= n.length) {
                    var t = r.next();
                    if (t.done) return t;
                    n[i] = t.value
                }
                return w(e, i, n[i++])
            })
        };
        var Tr;
        e(Z, k), Z.prototype.toString = function() {
            return 0 === this.size ? "Repeat []" : "Repeat [ " + this._value + " " + this.size + " times ]"
        }, Z.prototype.get = function(e, t) {
            return this.has(e) ? this._value : t
        }, Z.prototype.includes = function(e) {
            return K(this._value, e)
        }, Z.prototype.slice = function(e, t) {
            var r = this.size;
            return g(e, t, r) ? this : new Z(this._value, b(t, r) - y(e, r))
        }, Z.prototype.reverse = function() {
            return this
        }, Z.prototype.indexOf = function(e) {
            return K(this._value, e) ? 0 : -1
        }, Z.prototype.lastIndexOf = function(e) {
            return K(this._value, e) ? this.size : -1
        }, Z.prototype.__iterate = function(e, t) {
            for (var r = 0; r < this.size; r++)
                if (e(this._value, r, this) === !1) return r + 1;
            return r
        }, Z.prototype.__iterator = function(e, t) {
            var r = this,
                n = 0;
            return new _(function() {
                return n < r.size ? w(e, n++, r._value) : C()
            })
        }, Z.prototype.equals = function(e) {
            return e instanceof Z ? K(this._value, e._value) : Q(e)
        };
        var Mr;
        e(J, k), J.prototype.toString = function() {
            return 0 === this.size ? "Range []" : "Range [ " + this._start + "..." + this._end + (1 !== this._step ? " by " + this._step : "") + " ]"
        }, J.prototype.get = function(e, t) {
            return this.has(e) ? this._start + m(this, e) * this._step : t
        }, J.prototype.includes = function(e) {
            var t = (e - this._start) / this._step;
            return t >= 0 && t < this.size && t === Math.floor(t)
        }, J.prototype.slice = function(e, t) {
            return g(e, t, this.size) ? this : (e = y(e, this.size), t = b(t, this.size), e >= t ? new J(0, 0) : new J(this.get(e, this._end), this.get(t, this._end), this._step))
        }, J.prototype.indexOf = function(e) {
            var t = e - this._start;
            if (t % this._step === 0) {
                var r = t / this._step;
                if (r >= 0 && r < this.size) return r
            }
            return -1
        }, J.prototype.lastIndexOf = function(e) {
            return this.indexOf(e)
        }, J.prototype.__iterate = function(e, t) {
            for (var r = this.size - 1, n = this._step, i = t ? this._start + r * n : this._start, o = 0; r >= o; o++) {
                if (e(i, o, this) === !1) return o + 1;
                i += t ? -n : n
            }
            return o
        }, J.prototype.__iterator = function(e, t) {
            var r = this.size - 1,
                n = this._step,
                i = t ? this._start + r * n : this._start,
                o = 0;
            return new _(function() {
                var a = i;
                return i += t ? -n : n, o > r ? C() : w(e, o++, a)
            })
        }, J.prototype.equals = function(e) {
            return e instanceof J ? this._start === e._start && this._end === e._end && this._step === e._step : Q(this, e)
        };
        var Ar;
        e(ee, t), e(te, ee), e(re, ee), e(ne, ee), ee.Keyed = te, ee.Indexed = re, ee.Set = ne;
        var Pr, Rr = "function" == typeof Math.imul && -2 === Math.imul(4294967295, 2) ? Math.imul : function(e, t) {
                e = 0 | e, t = 0 | t;
                var r = 65535 & e,
                    n = 65535 & t;
                return r * n + ((e >>> 16) * n + r * (t >>> 16) << 16 >>> 0) | 0
            },
            kr = Object.isExtensible,
            Ir = function() {
                try {
                    return Object.defineProperty({}, "@", {}), !0
                } catch (e) {
                    return !1
                }
            }(),
            Dr = "function" == typeof WeakMap;
        Dr && (Pr = new WeakMap);
        var Br = 0,
            Lr = "__immutablehash__";
        "function" == typeof Symbol && (Lr = Symbol(Lr));
        var Vr = 16,
            Nr = 255,
            Or = 0,
            Fr = {};
        e(he, te), he.of = function() {
            var e = sr.call(arguments, 0);
            return we().withMutations(function(t) {
                for (var r = 0; r < e.length; r += 2) {
                    if (r + 1 >= e.length) throw new Error("Missing value for key: " + e[r]);
                    t.set(e[r], e[r + 1])
                }
            })
        }, he.prototype.toString = function() {
            return this.__toString("Map {", "}")
        }, he.prototype.get = function(e, t) {
            return this._root ? this._root.get(0, void 0, e, t) : t
        }, he.prototype.set = function(e, t) {
            return Ce(this, e, t)
        }, he.prototype.setIn = function(e, t) {
            return this.updateIn(e, vr, function() {
                return t
            })
        }, he.prototype.remove = function(e) {
            return Ce(this, e, vr)
        }, he.prototype.deleteIn = function(e) {
            return this.updateIn(e, function() {
                return vr
            })
        }, he.prototype.update = function(e, t, r) {
            return 1 === arguments.length ? e(this) : this.updateIn([e], t, r)
        }, he.prototype.updateIn = function(e, t, r) {
            r || (r = t, t = void 0);
            var n = Be(this, kt(e), t, r);
            return n === vr ? void 0 : n
        }, he.prototype.clear = function() {
            return 0 === this.size ? this : this.__ownerID ? (this.size = 0, this._root = null, this.__hash = void 0, this.__altered = !0, this) : we()
        }, he.prototype.merge = function() {
            return Re(this, void 0, arguments)
        }, he.prototype.mergeWith = function(e) {
            var t = sr.call(arguments, 1);
            return Re(this, e, t)
        }, he.prototype.mergeIn = function(e) {
            var t = sr.call(arguments, 1);
            return this.updateIn(e, we(), function(e) {
                return "function" == typeof e.merge ? e.merge.apply(e, t) : t[t.length - 1]
            })
        }, he.prototype.mergeDeep = function() {
            return Re(this, ke, arguments)
        }, he.prototype.mergeDeepWith = function(e) {
            var t = sr.call(arguments, 1);
            return Re(this, Ie(e), t)
        }, he.prototype.mergeDeepIn = function(e) {
            var t = sr.call(arguments, 1);
            return this.updateIn(e, we(), function(e) {
                return "function" == typeof e.mergeDeep ? e.mergeDeep.apply(e, t) : t[t.length - 1]
            })
        }, he.prototype.sort = function(e) {
            return $e(xt(this, e))
        }, he.prototype.sortBy = function(e, t) {
            return $e(xt(this, t, e))
        }, he.prototype.withMutations = function(e) {
            var t = this.asMutable();
            return e(t), t.wasAltered() ? t.__ensureOwner(this.__ownerID) : this
        }, he.prototype.asMutable = function() {
            return this.__ownerID ? this : this.__ensureOwner(new p)
        }, he.prototype.asImmutable = function() {
            return this.__ensureOwner()
        }, he.prototype.wasAltered = function() {
            return this.__altered
        }, he.prototype.__iterator = function(e, t) {
            return new ye(this, e, t)
        }, he.prototype.__iterate = function(e, t) {
            var r = this,
                n = 0;
            return this._root && this._root.iterate(function(t) {
                return n++, e(t[1], t[0], r)
            }, t), n
        }, he.prototype.__ensureOwner = function(e) {
            return e === this.__ownerID ? this : e ? _e(this.size, this._root, e, this.__hash) : (this.__ownerID = e, this.__altered = !1, this)
        }, he.isMap = pe;
        var Ur = "@@__IMMUTABLE_MAP__@@",
            zr = he.prototype;
        zr[Ur] = !0, zr[pr] = zr.remove, zr.removeIn = zr.deleteIn, de.prototype.get = function(e, t, r, n) {
            for (var i = this.entries, o = 0, a = i.length; a > o; o++)
                if (K(r, i[o][0])) return i[o][1];
            return n
        }, de.prototype.update = function(e, t, r, n, i, o, a) {
            for (var s = i === vr, u = this.entries, l = 0, c = u.length; c > l && !K(n, u[l][0]); l++);
            var p = c > l;
            if (p ? u[l][1] === i : s) return this;
            if (h(a), (s || !p) && h(o), !s || 1 !== u.length) {
                if (!p && !s && u.length >= jr) return Me(e, u, n, i);
                var f = e && e === this.ownerID,
                    m = f ? u : d(u);
                return p ? s ? l === c - 1 ? m.pop() : m[l] = m.pop() : m[l] = [n, i] : m.push([n, i]), f ? (this.entries = m, this) : new de(e, m)
            }
        }, fe.prototype.get = function(e, t, r, n) {
            void 0 === t && (t = oe(r));
            var i = 1 << ((0 === e ? t : t >>> e) & mr),
                o = this.bitmap;
            return 0 === (o & i) ? n : this.nodes[Le(o & i - 1)].get(e + dr, t, r, n)
        }, fe.prototype.update = function(e, t, r, n, i, o, a) {
            void 0 === r && (r = oe(n));
            var s = (0 === t ? r : r >>> t) & mr,
                u = 1 << s,
                l = this.bitmap,
                c = 0 !== (l & u);
            if (!c && i === vr) return this;
            var h = Le(l & u - 1),
                p = this.nodes,
                d = c ? p[h] : void 0,
                f = Ee(d, e, t + dr, r, n, i, o, a);
            if (f === d) return this;
            if (!c && f && p.length >= Gr) return Pe(e, p, l, s, f);
            if (c && !f && 2 === p.length && Se(p[1 ^ h])) return p[1 ^ h];
            if (c && f && 1 === p.length && Se(f)) return f;
            var m = e && e === this.ownerID,
                v = c ? f ? l : l ^ u : l | u,
                g = c ? f ? Ve(p, h, f, m) : Oe(p, h, m) : Ne(p, h, f, m);
            return m ? (this.bitmap = v, this.nodes = g, this) : new fe(e, v, g)
        }, me.prototype.get = function(e, t, r, n) {
            void 0 === t && (t = oe(r));
            var i = (0 === e ? t : t >>> e) & mr,
                o = this.nodes[i];
            return o ? o.get(e + dr, t, r, n) : n
        }, me.prototype.update = function(e, t, r, n, i, o, a) {
            void 0 === r && (r = oe(n));
            var s = (0 === t ? r : r >>> t) & mr,
                u = i === vr,
                l = this.nodes,
                c = l[s];
            if (u && !c) return this;
            var h = Ee(c, e, t + dr, r, n, i, o, a);
            if (h === c) return this;
            var p = this.count;
            if (c) {
                if (!h && (p--, qr > p)) return Ae(e, l, p, s)
            } else p++;
            var d = e && e === this.ownerID,
                f = Ve(l, s, h, d);
            return d ? (this.count = p, this.nodes = f, this) : new me(e, p, f)
        }, ve.prototype.get = function(e, t, r, n) {
            for (var i = this.entries, o = 0, a = i.length; a > o; o++)
                if (K(r, i[o][0])) return i[o][1];
            return n
        }, ve.prototype.update = function(e, t, r, n, i, o, a) {
            void 0 === r && (r = oe(n));
            var s = i === vr;
            if (r !== this.keyHash) return s ? this : (h(a), h(o), Te(this, e, t, r, [n, i]));
            for (var u = this.entries, l = 0, c = u.length; c > l && !K(n, u[l][0]); l++);
            var p = c > l;
            if (p ? u[l][1] === i : s) return this;
            if (h(a), (s || !p) && h(o), s && 2 === c) return new ge(e, this.keyHash, u[1 ^ l]);
            var f = e && e === this.ownerID,
                m = f ? u : d(u);
            return p ? s ? l === c - 1 ? m.pop() : m[l] = m.pop() : m[l] = [n, i] : m.push([n, i]), f ? (this.entries = m, this) : new ve(e, this.keyHash, m)
        }, ge.prototype.get = function(e, t, r, n) {
            return K(r, this.entry[0]) ? this.entry[1] : n
        }, ge.prototype.update = function(e, t, r, n, i, o, a) {
            var s = i === vr,
                u = K(n, this.entry[0]);
            return (u ? i === this.entry[1] : s) ? this : (h(a), s ? void h(o) : u ? e && e === this.ownerID ? (this.entry[1] = i, this) : new ge(e, this.keyHash, [n, i]) : (h(o), Te(this, e, t, oe(n), [n, i])))
        }, de.prototype.iterate = ve.prototype.iterate = function(e, t) {
            for (var r = this.entries, n = 0, i = r.length - 1; i >= n; n++)
                if (e(r[t ? i - n : n]) === !1) return !1
        }, fe.prototype.iterate = me.prototype.iterate = function(e, t) {
            for (var r = this.nodes, n = 0, i = r.length - 1; i >= n; n++) {
                var o = r[t ? i - n : n];
                if (o && o.iterate(e, t) === !1) return !1
            }
        }, ge.prototype.iterate = function(e, t) {
            return e(this.entry)
        }, e(ye, _), ye.prototype.next = function() {
            for (var e = this._type, t = this._stack; t;) {
                var r, n = t.node,
                    i = t.index++;
                if (n.entry) {
                    if (0 === i) return be(e, n.entry)
                } else if (n.entries) {
                    if (r = n.entries.length - 1, r >= i) return be(e, n.entries[this._reverse ? r - i : i])
                } else if (r = n.nodes.length - 1, r >= i) {
                    var o = n.nodes[this._reverse ? r - i : i];
                    if (o) {
                        if (o.entry) return be(e, o.entry);
                        t = this._stack = xe(o, t)
                    }
                    continue
                }
                t = this._stack = this._stack.__prev
            }
            return C()
        };
        var Hr, jr = fr / 4,
            Gr = fr / 2,
            qr = fr / 4;
        e(Fe, re), Fe.of = function() {
            return this(arguments)
        }, Fe.prototype.toString = function() {
            return this.__toString("List [", "]")
        }, Fe.prototype.get = function(e, t) {
            if (e = m(this, e), e >= 0 && e < this.size) {
                e += this._origin;
                var r = Ye(this, e);
                return r && r.array[e & mr]
            }
            return t
        }, Fe.prototype.set = function(e, t) {
            return qe(this, e, t)
        }, Fe.prototype.remove = function(e) {
            return this.has(e) ? 0 === e ? this.shift() : e === this.size - 1 ? this.pop() : this.splice(e, 1) : this
        }, Fe.prototype.insert = function(e, t) {
            return this.splice(e, 0, t)
        }, Fe.prototype.clear = function() {
            return 0 === this.size ? this : this.__ownerID ? (this.size = this._origin = this._capacity = 0, this._level = dr, this._root = this._tail = null, this.__hash = void 0, this.__altered = !0, this) : Ge()
        }, Fe.prototype.push = function() {
            var e = arguments,
                t = this.size;
            return this.withMutations(function(r) {
                Ke(r, 0, t + e.length);
                for (var n = 0; n < e.length; n++) r.set(t + n, e[n])
            })
        }, Fe.prototype.pop = function() {
            return Ke(this, 0, -1)
        }, Fe.prototype.unshift = function() {
            var e = arguments;
            return this.withMutations(function(t) {
                Ke(t, -e.length);
                for (var r = 0; r < e.length; r++) t.set(r, e[r])
            })
        }, Fe.prototype.shift = function() {
            return Ke(this, 1)
        }, Fe.prototype.merge = function() {
            return Qe(this, void 0, arguments)
        }, Fe.prototype.mergeWith = function(e) {
            var t = sr.call(arguments, 1);
            return Qe(this, e, t)
        }, Fe.prototype.mergeDeep = function() {
            return Qe(this, ke, arguments)
        }, Fe.prototype.mergeDeepWith = function(e) {
            var t = sr.call(arguments, 1);
            return Qe(this, Ie(e), t)
        }, Fe.prototype.setSize = function(e) {
            return Ke(this, 0, e)
        }, Fe.prototype.slice = function(e, t) {
            var r = this.size;
            return g(e, t, r) ? this : Ke(this, y(e, r), b(t, r))
        }, Fe.prototype.__iterator = function(e, t) {
            var r = 0,
                n = He(this, t);
            return new _(function() {
                var t = n();
                return t === Kr ? C() : w(e, r++, t)
            })
        }, Fe.prototype.__iterate = function(e, t) {
            for (var r, n = 0, i = He(this, t);
                (r = i()) !== Kr && e(r, n++, this) !== !1;);
            return n
        }, Fe.prototype.__ensureOwner = function(e) {
            return e === this.__ownerID ? this : e ? je(this._origin, this._capacity, this._level, this._root, this._tail, e, this.__hash) : (this.__ownerID = e, this)
        }, Fe.isList = Ue;
        var Wr = "@@__IMMUTABLE_LIST__@@",
            Xr = Fe.prototype;
        Xr[Wr] = !0, Xr[pr] = Xr.remove, Xr.setIn = zr.setIn, Xr.deleteIn = Xr.removeIn = zr.removeIn, Xr.update = zr.update, Xr.updateIn = zr.updateIn, Xr.mergeIn = zr.mergeIn, Xr.mergeDeepIn = zr.mergeDeepIn, Xr.withMutations = zr.withMutations, Xr.asMutable = zr.asMutable, Xr.asImmutable = zr.asImmutable, Xr.wasAltered = zr.wasAltered, ze.prototype.removeBefore = function(e, t, r) {
            if (r === t ? 1 << t : 0 === this.array.length) return this;
            var n = r >>> t & mr;
            if (n >= this.array.length) return new ze([], e);
            var i, o = 0 === n;
            if (t > 0) {
                var a = this.array[n];
                if (i = a && a.removeBefore(e, t - dr, r), i === a && o) return this
            }
            if (o && !i) return this;
            var s = Xe(this, e);
            if (!o)
                for (var u = 0; n > u; u++) s.array[u] = void 0;
            return i && (s.array[n] = i), s
        }, ze.prototype.removeAfter = function(e, t, r) {
            if (r === (t ? 1 << t : 0) || 0 === this.array.length) return this;
            var n = r - 1 >>> t & mr;
            if (n >= this.array.length) return this;
            var i;
            if (t > 0) {
                var o = this.array[n];
                if (i = o && o.removeAfter(e, t - dr, r), i === o && n === this.array.length - 1) return this
            }
            var a = Xe(this, e);
            return a.array.splice(n + 1), i && (a.array[n] = i), a
        };
        var Yr, Kr = {};
        e($e, he), $e.of = function() {
            return this(arguments)
        }, $e.prototype.toString = function() {
            return this.__toString("OrderedMap {", "}")
        }, $e.prototype.get = function(e, t) {
            var r = this._map.get(e);
            return void 0 !== r ? this._list.get(r)[1] : t
        }, $e.prototype.clear = function() {
            return 0 === this.size ? this : this.__ownerID ? (this.size = 0, this._map.clear(), this._list.clear(), this) : tt()
        }, $e.prototype.set = function(e, t) {
            return rt(this, e, t)
        }, $e.prototype.remove = function(e) {
            return rt(this, e, vr)
        }, $e.prototype.wasAltered = function() {
            return this._map.wasAltered() || this._list.wasAltered()
        }, $e.prototype.__iterate = function(e, t) {
            var r = this;
            return this._list.__iterate(function(t) {
                return t && e(t[1], t[0], r)
            }, t)
        }, $e.prototype.__iterator = function(e, t) {
            return this._list.fromEntrySeq().__iterator(e, t)
        }, $e.prototype.__ensureOwner = function(e) {
            if (e === this.__ownerID) return this;
            var t = this._map.__ensureOwner(e),
                r = this._list.__ensureOwner(e);
            return e ? et(t, r, e, this.__hash) : (this.__ownerID = e, this._map = t, this._list = r, this)
        }, $e.isOrderedMap = Je, $e.prototype[hr] = !0, $e.prototype[pr] = $e.prototype.remove;
        var Qr;
        e(nt, R), nt.prototype.get = function(e, t) {
            return this._iter.get(e, t)
        }, nt.prototype.has = function(e) {
            return this._iter.has(e)
        }, nt.prototype.valueSeq = function() {
            return this._iter.valueSeq()
        }, nt.prototype.reverse = function() {
            var e = this,
                t = lt(this, !0);
            return this._useKeys || (t.valueSeq = function() {
                return e._iter.toSeq().reverse()
            }), t
        }, nt.prototype.map = function(e, t) {
            var r = this,
                n = ut(this, e, t);
            return this._useKeys || (n.valueSeq = function() {
                return r._iter.toSeq().map(e, t)
            }), n
        }, nt.prototype.__iterate = function(e, t) {
            var r, n = this;
            return this._iter.__iterate(this._useKeys ? function(t, r) {
                return e(t, r, n)
            } : (r = t ? Tt(this) : 0, function(i) {
                return e(i, t ? --r : r++, n)
            }), t)
        }, nt.prototype.__iterator = function(e, t) {
            if (this._useKeys) return this._iter.__iterator(e, t);
            var r = this._iter.__iterator(xr, t),
                n = t ? Tt(this) : 0;
            return new _(function() {
                var i = r.next();
                return i.done ? i : w(e, t ? --n : n++, i.value, i)
            })
        }, nt.prototype[hr] = !0, e(it, k), it.prototype.includes = function(e) {
            return this._iter.includes(e)
        }, it.prototype.__iterate = function(e, t) {
            var r = this,
                n = 0;
            return this._iter.__iterate(function(t) {
                return e(t, n++, r)
            }, t)
        }, it.prototype.__iterator = function(e, t) {
            var r = this._iter.__iterator(xr, t),
                n = 0;
            return new _(function() {
                var t = r.next();
                return t.done ? t : w(e, n++, t.value, t)
            })
        }, e(ot, I), ot.prototype.has = function(e) {
            return this._iter.includes(e)
        }, ot.prototype.__iterate = function(e, t) {
            var r = this;
            return this._iter.__iterate(function(t) {
                return e(t, t, r)
            }, t)
        }, ot.prototype.__iterator = function(e, t) {
            var r = this._iter.__iterator(xr, t);
            return new _(function() {
                var t = r.next();
                return t.done ? t : w(e, t.value, t.value, t)
            })
        }, e(at, R), at.prototype.entrySeq = function() {
            return this._iter.toSeq()
        }, at.prototype.__iterate = function(e, t) {
            var r = this;
            return this._iter.__iterate(function(t) {
                if (t) {
                    St(t);
                    var n = o(t);
                    return e(n ? t.get(1) : t[1], n ? t.get(0) : t[0], r)
                }
            }, t)
        }, at.prototype.__iterator = function(e, t) {
            var r = this._iter.__iterator(xr, t);
            return new _(function() {
                for (;;) {
                    var t = r.next();
                    if (t.done) return t;
                    var n = t.value;
                    if (n) {
                        St(n);
                        var i = o(n);
                        return w(e, i ? n.get(0) : n[0], i ? n.get(1) : n[1], t)
                    }
                }
            })
        }, it.prototype.cacheResult = nt.prototype.cacheResult = ot.prototype.cacheResult = at.prototype.cacheResult = Pt, e(It, te), It.prototype.toString = function() {
            return this.__toString(Bt(this) + " {", "}")
        }, It.prototype.has = function(e) {
            return this._defaultValues.hasOwnProperty(e)
        }, It.prototype.get = function(e, t) {
            if (!this.has(e)) return t;
            var r = this._defaultValues[e];
            return this._map ? this._map.get(e, r) : r
        }, It.prototype.clear = function() {
            if (this.__ownerID) return this._map && this._map.clear(), this;
            var e = this.constructor;
            return e._empty || (e._empty = Dt(this, we()))
        }, It.prototype.set = function(e, t) {
            if (!this.has(e)) throw new Error('Cannot set unknown key "' + e + '" on ' + Bt(this));
            if (this._map && !this._map.has(e)) {
                var r = this._defaultValues[e];
                if (t === r) return this
            }
            var n = this._map && this._map.set(e, t);
            return this.__ownerID || n === this._map ? this : Dt(this, n)
        }, It.prototype.remove = function(e) {
            if (!this.has(e)) return this;
            var t = this._map && this._map.remove(e);
            return this.__ownerID || t === this._map ? this : Dt(this, t)
        }, It.prototype.wasAltered = function() {
            return this._map.wasAltered()
        }, It.prototype.__iterator = function(e, t) {
            var n = this;
            return r(this._defaultValues).map(function(e, t) {
                return n.get(t)
            }).__iterator(e, t)
        }, It.prototype.__iterate = function(e, t) {
            var n = this;
            return r(this._defaultValues).map(function(e, t) {
                return n.get(t)
            }).__iterate(e, t)
        }, It.prototype.__ensureOwner = function(e) {
            if (e === this.__ownerID) return this;
            var t = this._map && this._map.__ensureOwner(e);
            return e ? Dt(this, t, e) : (this.__ownerID = e, this._map = t, this)
        };
        var Zr = It.prototype;
        Zr[pr] = Zr.remove, Zr.deleteIn = Zr.removeIn = zr.removeIn, Zr.merge = zr.merge, Zr.mergeWith = zr.mergeWith, Zr.mergeIn = zr.mergeIn, Zr.mergeDeep = zr.mergeDeep, Zr.mergeDeepWith = zr.mergeDeepWith, Zr.mergeDeepIn = zr.mergeDeepIn, Zr.setIn = zr.setIn, Zr.update = zr.update, Zr.updateIn = zr.updateIn, Zr.withMutations = zr.withMutations, Zr.asMutable = zr.asMutable, Zr.asImmutable = zr.asImmutable, e(Nt, ne), Nt.of = function() {
            return this(arguments)
        }, Nt.fromKeys = function(e) {
            return this(r(e).keySeq())
        }, Nt.prototype.toString = function() {
            return this.__toString("Set {", "}")
        }, Nt.prototype.has = function(e) {
            return this._map.has(e)
        }, Nt.prototype.add = function(e) {
            return Ft(this, this._map.set(e, !0))
        }, Nt.prototype.remove = function(e) {
            return Ft(this, this._map.remove(e))
        }, Nt.prototype.clear = function() {
            return Ft(this, this._map.clear())
        }, Nt.prototype.union = function() {
            var e = sr.call(arguments, 0);
            return e = e.filter(function(e) {
                return 0 !== e.size
            }), 0 === e.length ? this : 0 !== this.size || this.__ownerID || 1 !== e.length ? this.withMutations(function(t) {
                for (var r = 0; r < e.length; r++) i(e[r]).forEach(function(e) {
                    return t.add(e)
                })
            }) : this.constructor(e[0])
        }, Nt.prototype.intersect = function() {
            var e = sr.call(arguments, 0);
            if (0 === e.length) return this;
            e = e.map(function(e) {
                return i(e)
            });
            var t = this;
            return this.withMutations(function(r) {
                t.forEach(function(t) {
                    e.every(function(e) {
                        return e.includes(t)
                    }) || r.remove(t)
                })
            })
        }, Nt.prototype.subtract = function() {
            var e = sr.call(arguments, 0);
            if (0 === e.length) return this;
            e = e.map(function(e) {
                return i(e)
            });
            var t = this;
            return this.withMutations(function(r) {
                t.forEach(function(t) {
                    e.some(function(e) {
                        return e.includes(t)
                    }) && r.remove(t)
                })
            })
        }, Nt.prototype.merge = function() {
            return this.union.apply(this, arguments)
        }, Nt.prototype.mergeWith = function(e) {
            var t = sr.call(arguments, 1);
            return this.union.apply(this, t)
        }, Nt.prototype.sort = function(e) {
            return Ht(xt(this, e))
        }, Nt.prototype.sortBy = function(e, t) {
            return Ht(xt(this, t, e))
        }, Nt.prototype.wasAltered = function() {
            return this._map.wasAltered()
        }, Nt.prototype.__iterate = function(e, t) {
            var r = this;
            return this._map.__iterate(function(t, n) {
                return e(n, n, r)
            }, t)
        }, Nt.prototype.__iterator = function(e, t) {
            return this._map.map(function(e, t) {
                return t
            }).__iterator(e, t)
        }, Nt.prototype.__ensureOwner = function(e) {
            if (e === this.__ownerID) return this;
            var t = this._map.__ensureOwner(e);
            return e ? this.__make(t, e) : (this.__ownerID = e, this._map = t, this)
        }, Nt.isSet = Ot;
        var $r = "@@__IMMUTABLE_SET__@@",
            Jr = Nt.prototype;
        Jr[$r] = !0, Jr[pr] = Jr.remove, Jr.mergeDeep = Jr.merge, Jr.mergeDeepWith = Jr.mergeWith, Jr.withMutations = zr.withMutations, Jr.asMutable = zr.asMutable, Jr.asImmutable = zr.asImmutable, Jr.__empty = zt, Jr.__make = Ut;
        var en;
        e(Ht, Nt), Ht.of = function() {
            return this(arguments)
        }, Ht.fromKeys = function(e) {
            return this(r(e).keySeq())
        }, Ht.prototype.toString = function() {
            return this.__toString("OrderedSet {", "}")
        }, Ht.isOrderedSet = jt;
        var tn = Ht.prototype;
        tn[hr] = !0, tn.__empty = qt, tn.__make = Gt;
        var rn;
        e(Wt, re), Wt.of = function() {
            return this(arguments)
        }, Wt.prototype.toString = function() {
            return this.__toString("Stack [", "]")
        }, Wt.prototype.get = function(e, t) {
            var r = this._head;
            for (e = m(this, e); r && e--;) r = r.next;
            return r ? r.value : t
        }, Wt.prototype.peek = function() {
            return this._head && this._head.value
        }, Wt.prototype.push = function() {
            if (0 === arguments.length) return this;
            for (var e = this.size + arguments.length, t = this._head, r = arguments.length - 1; r >= 0; r--) t = {
                value: arguments[r],
                next: t
            };
            return this.__ownerID ? (this.size = e, this._head = t, this.__hash = void 0, this.__altered = !0, this) : Yt(e, t)
        }, Wt.prototype.pushAll = function(e) {
            if (e = n(e), 0 === e.size) return this;
            ce(e.size);
            var t = this.size,
                r = this._head;
            return e.reverse().forEach(function(e) {
                t++, r = {
                    value: e,
                    next: r
                }
            }), this.__ownerID ? (this.size = t, this._head = r, this.__hash = void 0, this.__altered = !0, this) : Yt(t, r)
        }, Wt.prototype.pop = function() {
            return this.slice(1)
        }, Wt.prototype.unshift = function() {
            return this.push.apply(this, arguments)
        }, Wt.prototype.unshiftAll = function(e) {
            return this.pushAll(e)
        }, Wt.prototype.shift = function() {
            return this.pop.apply(this, arguments)
        }, Wt.prototype.clear = function() {
            return 0 === this.size ? this : this.__ownerID ? (this.size = 0, this._head = void 0, this.__hash = void 0, this.__altered = !0, this) : Kt()
        }, Wt.prototype.slice = function(e, t) {
            if (g(e, t, this.size)) return this;
            var r = y(e, this.size),
                n = b(t, this.size);
            if (n !== this.size) return re.prototype.slice.call(this, e, t);
            for (var i = this.size - r, o = this._head; r--;) o = o.next;
            return this.__ownerID ? (this.size = i, this._head = o, this.__hash = void 0, this.__altered = !0, this) : Yt(i, o)
        }, Wt.prototype.__ensureOwner = function(e) {
            return e === this.__ownerID ? this : e ? Yt(this.size, this._head, e, this.__hash) : (this.__ownerID = e, this.__altered = !1, this)
        }, Wt.prototype.__iterate = function(e, t) {
            if (t) return this.reverse().__iterate(e);
            for (var r = 0, n = this._head; n && e(n.value, r++, this) !== !1;) n = n.next;
            return r
        }, Wt.prototype.__iterator = function(e, t) {
            if (t) return this.reverse().__iterator(e);
            var r = 0,
                n = this._head;
            return new _(function() {
                if (n) {
                    var t = n.value;
                    return n = n.next, w(e, r++, t)
                }
                return C()
            })
        }, Wt.isStack = Xt;
        var nn = "@@__IMMUTABLE_STACK__@@",
            on = Wt.prototype;
        on[nn] = !0, on.withMutations = zr.withMutations, on.asMutable = zr.asMutable, on.asImmutable = zr.asImmutable, on.wasAltered = zr.wasAltered;
        var an;
        t.Iterator = _, Qt(t, {
            toArray: function() {
                ce(this.size);
                var e = new Array(this.size || 0);
                return this.valueSeq().__iterate(function(t, r) {
                    e[r] = t
                }), e
            },
            toIndexedSeq: function() {
                return new it(this)
            },
            toJS: function() {
                return this.toSeq().map(function(e) {
                    return e && "function" == typeof e.toJS ? e.toJS() : e
                }).__toJS()
            },
            toJSON: function() {
                return this.toSeq().map(function(e) {
                    return e && "function" == typeof e.toJSON ? e.toJSON() : e
                }).__toJS()
            },
            toKeyedSeq: function() {
                return new nt(this, !0)
            },
            toMap: function() {
                return he(this.toKeyedSeq())
            },
            toObject: function() {
                ce(this.size);
                var e = {};
                return this.__iterate(function(t, r) {
                    e[r] = t
                }), e
            },
            toOrderedMap: function() {
                return $e(this.toKeyedSeq())
            },
            toOrderedSet: function() {
                return Ht(a(this) ? this.valueSeq() : this)
            },
            toSet: function() {
                return Nt(a(this) ? this.valueSeq() : this)
            },
            toSetSeq: function() {
                return new ot(this)
            },
            toSeq: function() {
                return s(this) ? this.toIndexedSeq() : a(this) ? this.toKeyedSeq() : this.toSetSeq()
            },
            toStack: function() {
                return Wt(a(this) ? this.valueSeq() : this)
            },
            toList: function() {
                return Fe(a(this) ? this.valueSeq() : this)
            },
            toString: function() {
                return "[Iterable]"
            },
            __toString: function(e, t) {
                return 0 === this.size ? e + t : e + " " + this.toSeq().map(this.__toStringMapper).join(", ") + " " + t
            },
            concat: function() {
                var e = sr.call(arguments, 0);
                return Et(this, vt(this, e))
            },
            includes: function(e) {
                return this.some(function(t) {
                    return K(t, e)
                })
            },
            entries: function() {
                return this.__iterator(_r)
            },
            every: function(e, t) {
                ce(this.size);
                var r = !0;
                return this.__iterate(function(n, i, o) {
                    return e.call(t, n, i, o) ? void 0 : (r = !1, !1)
                }), r
            },
            filter: function(e, t) {
                return Et(this, ct(this, e, t, !0))
            },
            find: function(e, t, r) {
                var n = this.findEntry(e, t);
                return n ? n[1] : r
            },
            findEntry: function(e, t) {
                var r;
                return this.__iterate(function(n, i, o) {
                    return e.call(t, n, i, o) ? (r = [i, n], !1) : void 0
                }), r
            },
            findLastEntry: function(e, t) {
                return this.toSeq().reverse().findEntry(e, t)
            },
            forEach: function(e, t) {
                return ce(this.size), this.__iterate(t ? e.bind(t) : e)
            },
            join: function(e) {
                ce(this.size), e = void 0 !== e ? "" + e : ",";
                var t = "",
                    r = !0;
                return this.__iterate(function(n) {
                    r ? r = !1 : t += e, t += null !== n && void 0 !== n ? n.toString() : ""
                }), t
            },
            keys: function() {
                return this.__iterator(br)
            },
            map: function(e, t) {
                return Et(this, ut(this, e, t))
            },
            reduce: function(e, t, r) {
                ce(this.size);
                var n, i;
                return arguments.length < 2 ? i = !0 : n = t, this.__iterate(function(t, o, a) {
                    i ? (i = !1, n = t) : n = e.call(r, n, t, o, a)
                }), n
            },
            reduceRight: function(e, t, r) {
                var n = this.toKeyedSeq().reverse();
                return n.reduce.apply(n, arguments)
            },
            reverse: function() {
                return Et(this, lt(this, !0))
            },
            slice: function(e, t) {
                return Et(this, dt(this, e, t, !0))
            },
            some: function(e, t) {
                return !this.every(Jt(e), t)
            },
            sort: function(e) {
                return Et(this, xt(this, e))
            },
            values: function() {
                return this.__iterator(xr)
            },
            butLast: function() {
                return this.slice(0, -1)
            },
            isEmpty: function() {
                return void 0 !== this.size ? 0 === this.size : !this.some(function() {
                    return !0
                })
            },
            count: function(e, t) {
                return f(e ? this.toSeq().filter(e, t) : this)
            },
            countBy: function(e, t) {
                return ht(this, e, t)
            },
            equals: function(e) {
                return Q(this, e)
            },
            entrySeq: function() {
                var e = this;
                if (e._cache) return new D(e._cache);
                var t = e.toSeq().map($t).toIndexedSeq();
                return t.fromEntrySeq = function() {
                    return e.toSeq()
                }, t
            },
            filterNot: function(e, t) {
                return this.filter(Jt(e), t)
            },
            findLast: function(e, t, r) {
                return this.toKeyedSeq().reverse().find(e, t, r)
            },
            first: function() {
                return this.find(v)
            },
            flatMap: function(e, t) {
                return Et(this, yt(this, e, t))
            },
            flatten: function(e) {
                return Et(this, gt(this, e, !0))
            },
            fromEntrySeq: function() {
                return new at(this)
            },
            get: function(e, t) {
                return this.find(function(t, r) {
                    return K(r, e)
                }, void 0, t)
            },
            getIn: function(e, t) {
                for (var r, n = this, i = kt(e); !(r = i.next()).done;) {
                    var o = r.value;
                    if (n = n && n.get ? n.get(o, vr) : vr, n === vr) return t
                }
                return n
            },
            groupBy: function(e, t) {
                return pt(this, e, t)
            },
            has: function(e) {
                return this.get(e, vr) !== vr
            },
            hasIn: function(e) {
                return this.getIn(e, vr) !== vr
            },
            isSubset: function(e) {
                return e = "function" == typeof e.includes ? e : t(e), this.every(function(t) {
                    return e.includes(t)
                })
            },
            isSuperset: function(e) {
                return e = "function" == typeof e.isSubset ? e : t(e), e.isSubset(this)
            },
            keySeq: function() {
                return this.toSeq().map(Zt).toIndexedSeq()
            },
            last: function() {
                return this.toSeq().reverse().first()
            },
            max: function(e) {
                return _t(this, e)
            },
            maxBy: function(e, t) {
                return _t(this, t, e)
            },
            min: function(e) {
                return _t(this, e ? er(e) : nr)
            },
            minBy: function(e, t) {
                return _t(this, t ? er(t) : nr, e)
            },
            rest: function() {
                return this.slice(1)
            },
            skip: function(e) {
                return this.slice(Math.max(0, e))
            },
            skipLast: function(e) {
                return Et(this, this.toSeq().reverse().skip(e).reverse())
            },
            skipWhile: function(e, t) {
                return Et(this, mt(this, e, t, !0))
            },
            skipUntil: function(e, t) {
                return this.skipWhile(Jt(e), t)
            },
            sortBy: function(e, t) {
                return Et(this, xt(this, t, e))
            },
            take: function(e) {
                return this.slice(0, Math.max(0, e))
            },
            takeLast: function(e) {
                return Et(this, this.toSeq().reverse().take(e).reverse())
            },
            takeWhile: function(e, t) {
                return Et(this, ft(this, e, t))
            },
            takeUntil: function(e, t) {
                return this.takeWhile(Jt(e), t);
            },
            valueSeq: function() {
                return this.toIndexedSeq()
            },
            hashCode: function() {
                return this.__hash || (this.__hash = ir(this))
            }
        });
        var sn = t.prototype;
        sn[ur] = !0, sn[Er] = sn.values, sn.__toJS = sn.toArray, sn.__toStringMapper = tr, sn.inspect = sn.toSource = function() {
                return this.toString()
            }, sn.chain = sn.flatMap, sn.contains = sn.includes,
            function() {
                try {
                    Object.defineProperty(sn, "length", {
                        get: function() {
                            if (!t.noLengthWarning) {
                                var e;
                                try {
                                    throw new Error
                                } catch (r) {
                                    e = r.stack
                                }
                                if (-1 === e.indexOf("_wrapObject")) return console && console.warn && console.warn("iterable.length has been deprecated, use iterable.size or iterable.count(). This warning will become a silent error in a future version. " + e), this.size
                            }
                        }
                    })
                } catch (e) {}
            }(), Qt(r, {
                flip: function() {
                    return Et(this, st(this))
                },
                findKey: function(e, t) {
                    var r = this.findEntry(e, t);
                    return r && r[0]
                },
                findLastKey: function(e, t) {
                    return this.toSeq().reverse().findKey(e, t)
                },
                keyOf: function(e) {
                    return this.findKey(function(t) {
                        return K(t, e)
                    })
                },
                lastKeyOf: function(e) {
                    return this.findLastKey(function(t) {
                        return K(t, e)
                    })
                },
                mapEntries: function(e, t) {
                    var r = this,
                        n = 0;
                    return Et(this, this.toSeq().map(function(i, o) {
                        return e.call(t, [o, i], n++, r)
                    }).fromEntrySeq())
                },
                mapKeys: function(e, t) {
                    var r = this;
                    return Et(this, this.toSeq().flip().map(function(n, i) {
                        return e.call(t, n, i, r)
                    }).flip())
                }
            });
        var un = r.prototype;
        un[lr] = !0, un[Er] = sn.entries, un.__toJS = sn.toObject, un.__toStringMapper = function(e, t) {
            return JSON.stringify(t) + ": " + tr(e)
        }, Qt(n, {
            toKeyedSeq: function() {
                return new nt(this, !1)
            },
            filter: function(e, t) {
                return Et(this, ct(this, e, t, !1))
            },
            findIndex: function(e, t) {
                var r = this.findEntry(e, t);
                return r ? r[0] : -1
            },
            indexOf: function(e) {
                var t = this.toKeyedSeq().keyOf(e);
                return void 0 === t ? -1 : t
            },
            lastIndexOf: function(e) {
                var t = this.toKeyedSeq().reverse().keyOf(e);
                return void 0 === t ? -1 : t
            },
            reverse: function() {
                return Et(this, lt(this, !1))
            },
            slice: function(e, t) {
                return Et(this, dt(this, e, t, !1))
            },
            splice: function(e, t) {
                var r = arguments.length;
                if (t = Math.max(0 | t, 0), 0 === r || 2 === r && !t) return this;
                e = y(e, 0 > e ? this.count() : this.size);
                var n = this.slice(0, e);
                return Et(this, 1 === r ? n : n.concat(d(arguments, 2), this.slice(e + t)))
            },
            findLastIndex: function(e, t) {
                var r = this.toKeyedSeq().findLastKey(e, t);
                return void 0 === r ? -1 : r
            },
            first: function() {
                return this.get(0)
            },
            flatten: function(e) {
                return Et(this, gt(this, e, !1))
            },
            get: function(e, t) {
                return e = m(this, e), 0 > e || this.size === 1 / 0 || void 0 !== this.size && e > this.size ? t : this.find(function(t, r) {
                    return r === e
                }, void 0, t)
            },
            has: function(e) {
                return e = m(this, e), e >= 0 && (void 0 !== this.size ? this.size === 1 / 0 || e < this.size : -1 !== this.indexOf(e))
            },
            interpose: function(e) {
                return Et(this, bt(this, e))
            },
            interleave: function() {
                var e = [this].concat(d(arguments)),
                    t = Ct(this.toSeq(), k.of, e),
                    r = t.flatten(!0);
                return t.size && (r.size = t.size * e.length), Et(this, r)
            },
            last: function() {
                return this.get(-1)
            },
            skipWhile: function(e, t) {
                return Et(this, mt(this, e, t, !1))
            },
            zip: function() {
                var e = [this].concat(d(arguments));
                return Et(this, Ct(this, rr, e))
            },
            zipWith: function(e) {
                var t = d(arguments);
                return t[0] = this, Et(this, Ct(this, e, t))
            }
        }), n.prototype[cr] = !0, n.prototype[hr] = !0, Qt(i, {
            get: function(e, t) {
                return this.has(e) ? e : t
            },
            includes: function(e) {
                return this.has(e)
            },
            keySeq: function() {
                return this.valueSeq()
            }
        }), i.prototype.has = sn.includes, i.prototype.contains = i.prototype.includes, Qt(R, r.prototype), Qt(k, n.prototype), Qt(I, i.prototype), Qt(te, r.prototype), Qt(re, n.prototype), Qt(ne, i.prototype);
        var ln = {
            Iterable: t,
            Seq: P,
            Collection: ee,
            Map: he,
            OrderedMap: $e,
            List: Fe,
            Stack: Wt,
            Set: Nt,
            OrderedSet: Ht,
            Record: It,
            Range: J,
            Repeat: Z,
            is: K,
            fromJS: q
        };
        return ln
    });
    var c = {};
    (function() {
        function e(e) {
            throw e
        }

        function t(e, t) {
            var r = e.split("."),
                n = T;
            !(r[0] in n) && n.execScript && n.execScript("var " + r[0]);
            for (var i; r.length && (i = r.shift());) r.length || t === E ? n = n[i] ? n[i] : n[i] = {} : n[i] = t
        }

        function r(t, r) {
            this.index = "number" == typeof r ? r : 0, this.m = 0, this.buffer = t instanceof(M ? Uint8Array : Array) ? t : new(M ? Uint8Array : Array)(32768), 2 * this.buffer.length <= this.index && e(Error("invalid index")), this.buffer.length <= this.index && this.f()
        }

        function n(e, t, r) {
            var n, i = "number" == typeof t ? t : t = 0,
                o = "number" == typeof r ? r : e.length;
            for (n = -1, i = 7 & o; i--; ++t) n = n >>> 8 ^ L[255 & (n ^ e[t])];
            for (i = o >> 3; i--; t += 8) n = n >>> 8 ^ L[255 & (n ^ e[t])], n = n >>> 8 ^ L[255 & (n ^ e[t + 1])], n = n >>> 8 ^ L[255 & (n ^ e[t + 2])], n = n >>> 8 ^ L[255 & (n ^ e[t + 3])], n = n >>> 8 ^ L[255 & (n ^ e[t + 4])], n = n >>> 8 ^ L[255 & (n ^ e[t + 5])], n = n >>> 8 ^ L[255 & (n ^ e[t + 6])], n = n >>> 8 ^ L[255 & (n ^ e[t + 7])];
            return (4294967295 ^ n) >>> 0
        }

        function i() {}

        function o(e) {
            this.buffer = new(M ? Uint16Array : Array)(2 * e), this.length = 0
        }

        function a(e) {
            var t, r, n, i, o, a, s, u, l, c, h = e.length,
                p = 0,
                d = Number.POSITIVE_INFINITY;
            for (u = 0; h > u; ++u) e[u] > p && (p = e[u]), e[u] < d && (d = e[u]);
            for (t = 1 << p, r = new(M ? Uint32Array : Array)(t), n = 1, i = 0, o = 2; p >= n;) {
                for (u = 0; h > u; ++u)
                    if (e[u] === n) {
                        for (a = 0, s = i, l = 0; n > l; ++l) a = a << 1 | 1 & s, s >>= 1;
                        for (c = n << 16 | u, l = a; t > l; l += o) r[l] = c;
                        ++i
                    }++n, i <<= 1, o <<= 1
            }
            return [r, p, d]
        }

        function s(e, t) {
            this.k = N, this.I = 0, this.input = M && e instanceof Array ? new Uint8Array(e) : e, this.b = 0, t && (t.lazy && (this.I = t.lazy), "number" == typeof t.compressionType && (this.k = t.compressionType), t.outputBuffer && (this.a = M && t.outputBuffer instanceof Array ? new Uint8Array(t.outputBuffer) : t.outputBuffer), "number" == typeof t.outputIndex && (this.b = t.outputIndex)), this.a || (this.a = new(M ? Uint8Array : Array)(32768))
        }

        function u(e, t) {
            this.length = e, this.Q = t
        }

        function l(t, r) {
            function n(t, r) {
                var n, i = t.Q,
                    o = [],
                    a = 0;
                n = z[t.length], o[a++] = 65535 & n, o[a++] = n >> 16 & 255, o[a++] = n >> 24;
                var s;
                switch (S) {
                    case 1 === i:
                        s = [0, i - 1, 0];
                        break;
                    case 2 === i:
                        s = [1, i - 2, 0];
                        break;
                    case 3 === i:
                        s = [2, i - 3, 0];
                        break;
                    case 4 === i:
                        s = [3, i - 4, 0];
                        break;
                    case 6 >= i:
                        s = [4, i - 5, 1];
                        break;
                    case 8 >= i:
                        s = [5, i - 7, 1];
                        break;
                    case 12 >= i:
                        s = [6, i - 9, 2];
                        break;
                    case 16 >= i:
                        s = [7, i - 13, 2];
                        break;
                    case 24 >= i:
                        s = [8, i - 17, 3];
                        break;
                    case 32 >= i:
                        s = [9, i - 25, 3];
                        break;
                    case 48 >= i:
                        s = [10, i - 33, 4];
                        break;
                    case 64 >= i:
                        s = [11, i - 49, 4];
                        break;
                    case 96 >= i:
                        s = [12, i - 65, 5];
                        break;
                    case 128 >= i:
                        s = [13, i - 97, 5];
                        break;
                    case 192 >= i:
                        s = [14, i - 129, 6];
                        break;
                    case 256 >= i:
                        s = [15, i - 193, 6];
                        break;
                    case 384 >= i:
                        s = [16, i - 257, 7];
                        break;
                    case 512 >= i:
                        s = [17, i - 385, 7];
                        break;
                    case 768 >= i:
                        s = [18, i - 513, 8];
                        break;
                    case 1024 >= i:
                        s = [19, i - 769, 8];
                        break;
                    case 1536 >= i:
                        s = [20, i - 1025, 9];
                        break;
                    case 2048 >= i:
                        s = [21, i - 1537, 9];
                        break;
                    case 3072 >= i:
                        s = [22, i - 2049, 10];
                        break;
                    case 4096 >= i:
                        s = [23, i - 3073, 10];
                        break;
                    case 6144 >= i:
                        s = [24, i - 4097, 11];
                        break;
                    case 8192 >= i:
                        s = [25, i - 6145, 11];
                        break;
                    case 12288 >= i:
                        s = [26, i - 8193, 12];
                        break;
                    case 16384 >= i:
                        s = [27, i - 12289, 12];
                        break;
                    case 24576 >= i:
                        s = [28, i - 16385, 13];
                        break;
                    case 32768 >= i:
                        s = [29, i - 24577, 13];
                        break;
                    default:
                        e("invalid distance")
                }
                n = s, o[a++] = n[0], o[a++] = n[1], o[a++] = n[2];
                var u, l;
                for (u = 0, l = o.length; l > u; ++u) m[v++] = o[u];
                y[o[0]]++, b[o[3]]++, g = t.length + r - 1, p = null
            }
            var i, o, a, s, u, l, h, p, d, f = {},
                m = M ? new Uint16Array(2 * r.length) : [],
                v = 0,
                g = 0,
                y = new(M ? Uint32Array : Array)(286),
                b = new(M ? Uint32Array : Array)(30),
                x = t.I;
            if (!M) {
                for (a = 0; 285 >= a;) y[a++] = 0;
                for (a = 0; 29 >= a;) b[a++] = 0
            }
            for (y[256] = 1, i = 0, o = r.length; o > i; ++i) {
                for (a = u = 0, s = 3; s > a && i + a !== o; ++a) u = u << 8 | r[i + a];
                if (f[u] === E && (f[u] = []), l = f[u], !(0 < g--)) {
                    for (; 0 < l.length && 32768 < i - l[0];) l.shift();
                    if (i + 3 >= o) {
                        for (p && n(p, -1), a = 0, s = o - i; s > a; ++a) d = r[i + a], m[v++] = d, ++y[d];
                        break
                    }
                    0 < l.length ? (h = c(r, i, l), p ? p.length < h.length ? (d = r[i - 1], m[v++] = d, ++y[d], n(h, 0)) : n(p, -1) : h.length < x ? p = h : n(h, 0)) : p ? n(p, -1) : (d = r[i], m[v++] = d, ++y[d])
                }
                l.push(i)
            }
            return m[v++] = 256, y[256]++, t.W = y, t.V = b, M ? m.subarray(0, v) : m
        }

        function c(e, t, r) {
            var n, i, o, a, s, l, c = 0,
                h = e.length;
            a = 0, l = r.length;
            e: for (; l > a; a++) {
                if (n = r[l - a - 1], o = 3, c > 3) {
                    for (s = c; s > 3; s--)
                        if (e[n + s - 1] !== e[t + s - 1]) continue e;
                    o = c
                }
                for (; 258 > o && h > t + o && e[n + o] === e[t + o];) ++o;
                if (o > c && (i = n, c = o), 258 === o) break
            }
            return new u(c, t - i)
        }

        function h(e, t) {
            var r, n, i, a, s, u = e.length,
                l = new o(572),
                c = new(M ? Uint8Array : Array)(u);
            if (!M)
                for (a = 0; u > a; a++) c[a] = 0;
            for (a = 0; u > a; ++a) 0 < e[a] && l.push(a, e[a]);
            if (r = Array(l.length / 2), n = new(M ? Uint32Array : Array)(l.length / 2), 1 === r.length) return c[l.pop().index] = 1, c;
            for (a = 0, s = l.length / 2; s > a; ++a) r[a] = l.pop(), n[a] = r[a].value;
            for (i = p(n, n.length, t), a = 0, s = r.length; s > a; ++a) c[r[a].index] = i[a];
            return c
        }

        function p(e, t, r) {
            function n(e) {
                var r = d[e][f[e]];
                r === t ? (n(e + 1), n(e + 1)) : --h[r], ++f[e]
            }
            var i, o, a, s, u, l = new(M ? Uint16Array : Array)(r),
                c = new(M ? Uint8Array : Array)(r),
                h = new(M ? Uint8Array : Array)(t),
                p = Array(r),
                d = Array(r),
                f = Array(r),
                m = (1 << r) - t,
                v = 1 << r - 1;
            for (l[r - 1] = t, o = 0; r > o; ++o) v > m ? c[o] = 0 : (c[o] = 1, m -= v), m <<= 1, l[r - 2 - o] = (l[r - 1 - o] / 2 | 0) + t;
            for (l[0] = c[0], p[0] = Array(l[0]), d[0] = Array(l[0]), o = 1; r > o; ++o) l[o] > 2 * l[o - 1] + c[o] && (l[o] = 2 * l[o - 1] + c[o]), p[o] = Array(l[o]), d[o] = Array(l[o]);
            for (i = 0; t > i; ++i) h[i] = r;
            for (a = 0; a < l[r - 1]; ++a) p[r - 1][a] = e[a], d[r - 1][a] = a;
            for (i = 0; r > i; ++i) f[i] = 0;
            for (1 === c[r - 1] && (--h[0], ++f[r - 1]), o = r - 2; o >= 0; --o) {
                for (s = i = 0, u = f[o + 1], a = 0; a < l[o]; a++) s = p[o + 1][u] + p[o + 1][u + 1], s > e[i] ? (p[o][a] = s, d[o][a] = t, u += 2) : (p[o][a] = e[i], d[o][a] = i, ++i);
                f[o] = 0, 1 === c[o] && n(o)
            }
            return h
        }

        function d(e) {
            var t, r, n, i, o = new(M ? Uint16Array : Array)(e.length),
                a = [],
                s = [],
                u = 0;
            for (t = 0, r = e.length; r > t; t++) a[e[t]] = (0 | a[e[t]]) + 1;
            for (t = 1, r = 16; r >= t; t++) s[t] = u, u += 0 | a[t], u <<= 1;
            for (t = 0, r = e.length; r > t; t++)
                for (u = s[e[t]], s[e[t]] += 1, n = o[t] = 0, i = e[t]; i > n; n++) o[t] = o[t] << 1 | 1 & u, u >>>= 1;
            return o
        }

        function f(e, t) {
            this.input = e, this.b = this.c = 0, this.i = {}, t && (t.flags && (this.i = t.flags), "string" == typeof t.filename && (this.filename = t.filename), "string" == typeof t.comment && (this.A = t.comment), t.deflateOptions && (this.l = t.deflateOptions)), this.l || (this.l = {})
        }

        function m(t, r) {
            switch (this.p = [], this.q = 32768, this.e = this.j = this.c = this.u = 0, this.input = M ? new Uint8Array(t) : t, this.w = !1, this.r = X, this.M = !1, (r || !(r = {})) && (r.index && (this.c = r.index), r.bufferSize && (this.q = r.bufferSize), r.bufferType && (this.r = r.bufferType), r.resize && (this.M = r.resize)), this.r) {
                case W:
                    this.b = 32768, this.a = new(M ? Uint8Array : Array)(32768 + this.q + 258);
                    break;
                case X:
                    this.b = 0, this.a = new(M ? Uint8Array : Array)(this.q), this.f = this.U, this.B = this.R, this.s = this.T;
                    break;
                default:
                    e(Error("invalid inflate mode"))
            }
        }

        function v(t, r) {
            for (var n, i = t.j, o = t.e, a = t.input, s = t.c, u = a.length; r > o;) s >= u && e(Error("input buffer is broken")), i |= a[s++] << o, o += 8;
            return n = i & (1 << r) - 1, t.j = i >>> r, t.e = o - r, t.c = s, n
        }

        function g(e, t) {
            for (var r, n, i = e.j, o = e.e, a = e.input, s = e.c, u = a.length, l = t[0], c = t[1]; c > o && !(s >= u);) i |= a[s++] << o, o += 8;
            return r = l[i & (1 << c) - 1], n = r >>> 16, e.j = i >> n, e.e = o - n, e.c = s, 65535 & r
        }

        function y(e) {
            function t(e, t, r) {
                var n, i, o, a = this.J;
                for (o = 0; e > o;) switch (n = g(this, t)) {
                    case 16:
                        for (i = 3 + v(this, 2); i--;) r[o++] = a;
                        break;
                    case 17:
                        for (i = 3 + v(this, 3); i--;) r[o++] = 0;
                        a = 0;
                        break;
                    case 18:
                        for (i = 11 + v(this, 7); i--;) r[o++] = 0;
                        a = 0;
                        break;
                    default:
                        a = r[o++] = n
                }
                return this.J = a, r
            }
            var r, n, i, o, s = v(e, 5) + 257,
                u = v(e, 5) + 1,
                l = v(e, 4) + 4,
                c = new(M ? Uint8Array : Array)($.length);
            for (o = 0; l > o; ++o) c[$[o]] = v(e, 3);
            if (!M)
                for (o = l, l = c.length; l > o; ++o) c[$[o]] = 0;
            r = a(c), n = new(M ? Uint8Array : Array)(s), i = new(M ? Uint8Array : Array)(u), e.J = 0, e.s(a(t.call(e, s, r, n)), a(t.call(e, u, r, i)))
        }

        function b(e) {
            this.input = e, this.c = 0, this.t = [], this.D = !1
        }

        function x(e) {
            if ("string" == typeof e) {
                var t, r, n = e.split("");
                for (t = 0, r = n.length; r > t; t++) n[t] = (255 & n[t].charCodeAt(0)) >>> 0;
                e = n
            }
            for (var i, o = 1, a = 0, s = e.length, u = 0; s > 0;) {
                i = s > 1024 ? 1024 : s, s -= i;
                do o += e[u++], a += o; while (--i);
                o %= 65521, a %= 65521
            }
            return (a << 16 | o) >>> 0
        }

        function _(t, r) {
            var n, i;
            switch (this.input = t, this.c = 0, (r || !(r = {})) && (r.index && (this.c = r.index), r.verify && (this.$ = r.verify)), n = t[this.c++], i = t[this.c++], 15 & n) {
                case de:
                    this.method = de;
                    break;
                default:
                    e(Error("unsupported compression method"))
            }
            0 !== ((n << 8) + i) % 31 && e(Error("invalid fcheck flag:" + ((n << 8) + i) % 31)), 32 & i && e(Error("fdict flag is not supported")), this.L = new m(t, {
                index: this.c,
                bufferSize: r.bufferSize,
                bufferType: r.bufferType,
                resize: r.resize
            })
        }

        function w(e, t) {
            this.input = e, this.a = new(M ? Uint8Array : Array)(32768), this.k = fe.o;
            var r, n = {};
            !t && (t = {}) || "number" != typeof t.compressionType || (this.k = t.compressionType);
            for (r in t) n[r] = t[r];
            n.outputBuffer = this.a, this.K = new s(this.input, n)
        }

        function C(e, r) {
            var n, i, o, a;
            if (Object.keys) n = Object.keys(r);
            else
                for (i in n = [], o = 0, r) n[o++] = i;
            for (o = 0, a = n.length; a > o; ++o) i = n[o], t(e + "." + i, r[i])
        }
        var E = void 0,
            S = !0,
            T = this,
            M = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array && "undefined" != typeof DataView;
        r.prototype.f = function() {
            var e, t = this.buffer,
                r = t.length,
                n = new(M ? Uint8Array : Array)(r << 1);
            if (M) n.set(t);
            else
                for (e = 0; r > e; ++e) n[e] = t[e];
            return this.buffer = n
        }, r.prototype.d = function(e, t, r) {
            var n, i = this.buffer,
                o = this.index,
                a = this.m,
                s = i[o];
            if (r && t > 1 && (e = t > 8 ? (D[255 & e] << 24 | D[e >>> 8 & 255] << 16 | D[e >>> 16 & 255] << 8 | D[e >>> 24 & 255]) >> 32 - t : D[e] >> 8 - t), 8 > t + a) s = s << t | e, a += t;
            else
                for (n = 0; t > n; ++n) s = s << 1 | e >> t - n - 1 & 1, 8 === ++a && (a = 0, i[o++] = D[s], s = 0, o === i.length && (i = this.f()));
            i[o] = s, this.buffer = i, this.m = a, this.index = o
        }, r.prototype.finish = function() {
            var e, t = this.buffer,
                r = this.index;
            return 0 < this.m && (t[r] <<= 8 - this.m, t[r] = D[t[r]], r++), M ? e = t.subarray(0, r) : (t.length = r, e = t), e
        };
        var A, P = new(M ? Uint8Array : Array)(256);
        for (A = 0; 256 > A; ++A) {
            for (var R = A, k = R, I = 7, R = R >>> 1; R; R >>>= 1) k <<= 1, k |= 1 & R, --I;
            P[A] = (k << I & 255) >>> 0
        }
        var D = P,
            B = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117],
            L = M ? new Uint32Array(B) : B;
        i.prototype.getName = function() {
            return this.name
        }, i.prototype.getData = function() {
            return this.data
        }, i.prototype.Y = function() {
            return this.Z
        }, t("Zlib.GunzipMember", i), t("Zlib.GunzipMember.prototype.getName", i.prototype.getName), t("Zlib.GunzipMember.prototype.getData", i.prototype.getData), t("Zlib.GunzipMember.prototype.getMtime", i.prototype.Y), o.prototype.getParent = function(e) {
            return 2 * ((e - 2) / 4 | 0)
        }, o.prototype.push = function(e, t) {
            var r, n, i, o = this.buffer;
            for (r = this.length, o[this.length++] = t, o[this.length++] = e; r > 0 && (n = this.getParent(r), o[r] > o[n]);) i = o[r], o[r] = o[n], o[n] = i, i = o[r + 1], o[r + 1] = o[n + 1], o[n + 1] = i, r = n;
            return this.length
        }, o.prototype.pop = function() {
            var e, t, r, n, i, o = this.buffer;
            for (t = o[0], e = o[1], this.length -= 2, o[0] = o[this.length], o[1] = o[this.length + 1], i = 0;
                (n = 2 * i + 2, !(n >= this.length)) && (n + 2 < this.length && o[n + 2] > o[n] && (n += 2), o[n] > o[i]);) r = o[i], o[i] = o[n], o[n] = r, r = o[i + 1], o[i + 1] = o[n + 1], o[n + 1] = r, i = n;
            return {
                index: e,
                value: t,
                length: this.length
            }
        };
        var V, N = 2,
            O = {
                NONE: 0,
                v: 1,
                o: N,
                ba: 3
            },
            F = [];
        for (V = 0; 288 > V; V++) switch (S) {
            case 143 >= V:
                F.push([V + 48, 8]);
                break;
            case 255 >= V:
                F.push([V - 144 + 400, 9]);
                break;
            case 279 >= V:
                F.push([V - 256 + 0, 7]);
                break;
            case 287 >= V:
                F.push([V - 280 + 192, 8]);
                break;
            default:
                e("invalid literal: " + V)
        }
        s.prototype.g = function() {
            var t, n, i, o, a = this.input;
            switch (this.k) {
                case 0:
                    for (i = 0, o = a.length; o > i;) {
                        n = M ? a.subarray(i, i + 65535) : a.slice(i, i + 65535), i += n.length;
                        var s = n,
                            u = i === o,
                            c = E,
                            p = E,
                            f = E,
                            m = E,
                            v = E,
                            g = this.a,
                            y = this.b;
                        if (M) {
                            for (g = new Uint8Array(this.a.buffer); g.length <= y + s.length + 5;) g = new Uint8Array(g.length << 1);
                            g.set(this.a)
                        }
                        if (c = u ? 1 : 0, g[y++] = 0 | c, p = s.length, f = ~p + 65536 & 65535, g[y++] = 255 & p, g[y++] = p >>> 8 & 255, g[y++] = 255 & f, g[y++] = f >>> 8 & 255, M) g.set(s, y), y += s.length, g = g.subarray(0, y);
                        else {
                            for (m = 0, v = s.length; v > m; ++m) g[y++] = s[m];
                            g.length = y
                        }
                        this.b = y, this.a = g
                    }
                    break;
                case 1:
                    var b = new r(M ? new Uint8Array(this.a.buffer) : this.a, this.b);
                    b.d(1, 1, S), b.d(1, 2, S);
                    var x, _, w, C = l(this, a);
                    for (x = 0, _ = C.length; _ > x; x++)
                        if (w = C[x], r.prototype.d.apply(b, F[w]), w > 256) b.d(C[++x], C[++x], S), b.d(C[++x], 5), b.d(C[++x], C[++x], S);
                        else if (256 === w) break;
                    this.a = b.finish(), this.b = this.a.length;
                    break;
                case N:
                    var T, A, P, R, k, I, D, B, L, V, O, U, z, H, j, G = new r(M ? new Uint8Array(this.a.buffer) : this.a, this.b),
                        q = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                        W = Array(19);
                    for (T = N, G.d(1, 1, S), G.d(T, 2, S), A = l(this, a), I = h(this.W, 15), D = d(I), B = h(this.V, 7), L = d(B), P = 286; P > 257 && 0 === I[P - 1]; P--);
                    for (R = 30; R > 1 && 0 === B[R - 1]; R--);
                    var X, Y, K, Q, Z, $, J = P,
                        ee = R,
                        te = new(M ? Uint32Array : Array)(J + ee),
                        re = new(M ? Uint32Array : Array)(316),
                        ne = new(M ? Uint8Array : Array)(19);
                    for (X = Y = 0; J > X; X++) te[Y++] = I[X];
                    for (X = 0; ee > X; X++) te[Y++] = B[X];
                    if (!M)
                        for (X = 0, Q = ne.length; Q > X; ++X) ne[X] = 0;
                    for (X = Z = 0, Q = te.length; Q > X; X += Y) {
                        for (Y = 1; Q > X + Y && te[X + Y] === te[X]; ++Y);
                        if (K = Y, 0 === te[X])
                            if (3 > K)
                                for (; 0 < K--;) re[Z++] = 0, ne[0]++;
                            else
                                for (; K > 0;) $ = 138 > K ? K : 138, $ > K - 3 && K > $ && ($ = K - 3), 10 >= $ ? (re[Z++] = 17, re[Z++] = $ - 3, ne[17]++) : (re[Z++] = 18, re[Z++] = $ - 11, ne[18]++), K -= $;
                        else if (re[Z++] = te[X], ne[te[X]]++, K--, 3 > K)
                            for (; 0 < K--;) re[Z++] = te[X], ne[te[X]]++;
                        else
                            for (; K > 0;) $ = 6 > K ? K : 6, $ > K - 3 && K > $ && ($ = K - 3), re[Z++] = 16, re[Z++] = $ - 3, ne[16]++, K -= $
                    }
                    for (t = M ? re.subarray(0, Z) : re.slice(0, Z), V = h(ne, 7), H = 0; 19 > H; H++) W[H] = V[q[H]];
                    for (k = 19; k > 4 && 0 === W[k - 1]; k--);
                    for (O = d(V), G.d(P - 257, 5, S), G.d(R - 1, 5, S), G.d(k - 4, 4, S), H = 0; k > H; H++) G.d(W[H], 3, S);
                    for (H = 0, j = t.length; j > H; H++)
                        if (U = t[H], G.d(O[U], V[U], S), U >= 16) {
                            switch (H++, U) {
                                case 16:
                                    z = 2;
                                    break;
                                case 17:
                                    z = 3;
                                    break;
                                case 18:
                                    z = 7;
                                    break;
                                default:
                                    e("invalid code: " + U)
                            }
                            G.d(t[H], z, S)
                        }
                    var ie, oe, ae, se, ue, le, ce, he, pe = [D, I],
                        de = [L, B];
                    for (ue = pe[0], le = pe[1], ce = de[0], he = de[1], ie = 0, oe = A.length; oe > ie; ++ie)
                        if (ae = A[ie], G.d(ue[ae], le[ae], S), ae > 256) G.d(A[++ie], A[++ie], S), se = A[++ie], G.d(ce[se], he[se], S), G.d(A[++ie], A[++ie], S);
                        else if (256 === ae) break;
                    this.a = G.finish(), this.b = this.a.length;
                    break;
                default:
                    e("invalid compression type")
            }
            return this.a
        };
        var U = function() {
                function t(t) {
                    switch (S) {
                        case 3 === t:
                            return [257, t - 3, 0];
                        case 4 === t:
                            return [258, t - 4, 0];
                        case 5 === t:
                            return [259, t - 5, 0];
                        case 6 === t:
                            return [260, t - 6, 0];
                        case 7 === t:
                            return [261, t - 7, 0];
                        case 8 === t:
                            return [262, t - 8, 0];
                        case 9 === t:
                            return [263, t - 9, 0];
                        case 10 === t:
                            return [264, t - 10, 0];
                        case 12 >= t:
                            return [265, t - 11, 1];
                        case 14 >= t:
                            return [266, t - 13, 1];
                        case 16 >= t:
                            return [267, t - 15, 1];
                        case 18 >= t:
                            return [268, t - 17, 1];
                        case 22 >= t:
                            return [269, t - 19, 2];
                        case 26 >= t:
                            return [270, t - 23, 2];
                        case 30 >= t:
                            return [271, t - 27, 2];
                        case 34 >= t:
                            return [272, t - 31, 2];
                        case 42 >= t:
                            return [273, t - 35, 3];
                        case 50 >= t:
                            return [274, t - 43, 3];
                        case 58 >= t:
                            return [275, t - 51, 3];
                        case 66 >= t:
                            return [276, t - 59, 3];
                        case 82 >= t:
                            return [277, t - 67, 4];
                        case 98 >= t:
                            return [278, t - 83, 4];
                        case 114 >= t:
                            return [279, t - 99, 4];
                        case 130 >= t:
                            return [280, t - 115, 4];
                        case 162 >= t:
                            return [281, t - 131, 5];
                        case 194 >= t:
                            return [282, t - 163, 5];
                        case 226 >= t:
                            return [283, t - 195, 5];
                        case 257 >= t:
                            return [284, t - 227, 5];
                        case 258 === t:
                            return [285, t - 258, 0];
                        default:
                            e("invalid length: " + t)
                    }
                }
                var r, n, i = [];
                for (r = 3; 258 >= r; r++) n = t(r), i[r] = n[2] << 24 | n[1] << 16 | n[0];
                return i
            }(),
            z = M ? new Uint32Array(U) : U;
        f.prototype.g = function() {
            var e, t, r, i, o, a, u, l, c = new(M ? Uint8Array : Array)(32768),
                h = 0,
                p = this.input,
                d = this.c,
                f = this.filename,
                m = this.A;
            if (c[h++] = 31, c[h++] = 139, c[h++] = 8, e = 0, this.i.fname && (e |= G), this.i.fcomment && (e |= q), this.i.fhcrc && (e |= j), c[h++] = e, t = (Date.now ? Date.now() : +new Date) / 1e3 | 0, c[h++] = 255 & t, c[h++] = t >>> 8 & 255, c[h++] = t >>> 16 & 255, c[h++] = t >>> 24 & 255, c[h++] = 0, c[h++] = H, this.i.fname !== E) {
                for (u = 0, l = f.length; l > u; ++u) a = f.charCodeAt(u), a > 255 && (c[h++] = a >>> 8 & 255), c[h++] = 255 & a;
                c[h++] = 0
            }
            if (this.i.comment) {
                for (u = 0, l = m.length; l > u; ++u) a = m.charCodeAt(u), a > 255 && (c[h++] = a >>> 8 & 255), c[h++] = 255 & a;
                c[h++] = 0
            }
            return this.i.fhcrc && (r = 65535 & n(c, 0, h), c[h++] = 255 & r, c[h++] = r >>> 8 & 255), this.l.outputBuffer = c, this.l.outputIndex = h, o = new s(p, this.l), c = o.g(), h = o.b, M && (h + 8 > c.buffer.byteLength ? (this.a = new Uint8Array(h + 8), this.a.set(new Uint8Array(c.buffer)), c = this.a) : c = new Uint8Array(c.buffer)), i = n(p, E, E), c[h++] = 255 & i, c[h++] = i >>> 8 & 255, c[h++] = i >>> 16 & 255, c[h++] = i >>> 24 & 255, l = p.length, c[h++] = 255 & l, c[h++] = l >>> 8 & 255, c[h++] = l >>> 16 & 255, c[h++] = l >>> 24 & 255, this.c = d, M && h < c.length && (this.a = c = c.subarray(0, h)), c
        };
        var H = 255,
            j = 2,
            G = 8,
            q = 16;
        t("Zlib.Gzip", f), t("Zlib.Gzip.prototype.compress", f.prototype.g);
        var W = 0,
            X = 1,
            Y = {
                O: W,
                N: X
            };
        m.prototype.h = function() {
            for (; !this.w;) {
                var t = v(this, 3);
                switch (1 & t && (this.w = S), t >>>= 1) {
                    case 0:
                        var r = this.input,
                            n = this.c,
                            i = this.a,
                            o = this.b,
                            a = r.length,
                            s = E,
                            u = E,
                            l = i.length,
                            c = E;
                        switch (this.e = this.j = 0, n + 1 >= a && e(Error("invalid uncompressed block header: LEN")), s = r[n++] | r[n++] << 8, n + 1 >= a && e(Error("invalid uncompressed block header: NLEN")), u = r[n++] | r[n++] << 8, s === ~u && e(Error("invalid uncompressed block header: length verify")), n + s > r.length && e(Error("input buffer is broken")), this.r) {
                            case W:
                                for (; o + s > i.length;) {
                                    if (c = l - o, s -= c, M) i.set(r.subarray(n, n + c), o), o += c, n += c;
                                    else
                                        for (; c--;) i[o++] = r[n++];
                                    this.b = o, i = this.f(), o = this.b
                                }
                                break;
                            case X:
                                for (; o + s > i.length;) i = this.f({
                                    F: 2
                                });
                                break;
                            default:
                                e(Error("invalid inflate mode"))
                        }
                        if (M) i.set(r.subarray(n, n + s), o), o += s, n += s;
                        else
                            for (; s--;) i[o++] = r[n++];
                        this.c = n, this.b = o, this.a = i;
                        break;
                    case 1:
                        this.s(ce, pe);
                        break;
                    case 2:
                        y(this);
                        break;
                    default:
                        e(Error("unknown BTYPE: " + t))
                }
            }
            return this.B()
        };
        var K, Q, Z = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
            $ = M ? new Uint16Array(Z) : Z,
            J = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258],
            ee = M ? new Uint16Array(J) : J,
            te = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0],
            re = M ? new Uint8Array(te) : te,
            ne = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],
            ie = M ? new Uint16Array(ne) : ne,
            oe = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
            ae = M ? new Uint8Array(oe) : oe,
            se = new(M ? Uint8Array : Array)(288);
        for (K = 0, Q = se.length; Q > K; ++K) se[K] = 143 >= K ? 8 : 255 >= K ? 9 : 279 >= K ? 7 : 8;
        var ue, le, ce = a(se),
            he = new(M ? Uint8Array : Array)(30);
        for (ue = 0, le = he.length; le > ue; ++ue) he[ue] = 5;
        var pe = a(he);
        m.prototype.s = function(e, t) {
            var r = this.a,
                n = this.b;
            this.C = e;
            for (var i, o, a, s, u = r.length - 258; 256 !== (i = g(this, e));)
                if (256 > i) n >= u && (this.b = n, r = this.f(), n = this.b), r[n++] = i;
                else
                    for (o = i - 257, s = ee[o], 0 < re[o] && (s += v(this, re[o])), i = g(this, t), a = ie[i], 0 < ae[i] && (a += v(this, ae[i])), n >= u && (this.b = n, r = this.f(), n = this.b); s--;) r[n] = r[n++ - a];
            for (; 8 <= this.e;) this.e -= 8, this.c--;
            this.b = n
        }, m.prototype.T = function(e, t) {
            var r = this.a,
                n = this.b;
            this.C = e;
            for (var i, o, a, s, u = r.length; 256 !== (i = g(this, e));)
                if (256 > i) n >= u && (r = this.f(), u = r.length), r[n++] = i;
                else
                    for (o = i - 257, s = ee[o], 0 < re[o] && (s += v(this, re[o])), i = g(this, t), a = ie[i], 0 < ae[i] && (a += v(this, ae[i])), n + s > u && (r = this.f(), u = r.length); s--;) r[n] = r[n++ - a];
            for (; 8 <= this.e;) this.e -= 8, this.c--;
            this.b = n
        }, m.prototype.f = function() {
            var e, t, r = new(M ? Uint8Array : Array)(this.b - 32768),
                n = this.b - 32768,
                i = this.a;
            if (M) r.set(i.subarray(32768, r.length));
            else
                for (e = 0, t = r.length; t > e; ++e) r[e] = i[e + 32768];
            if (this.p.push(r), this.u += r.length, M) i.set(i.subarray(n, n + 32768));
            else
                for (e = 0; 32768 > e; ++e) i[e] = i[n + e];
            return this.b = 32768, i
        }, m.prototype.U = function(e) {
            var t, r, n, i, o = this.input.length / this.c + 1 | 0,
                a = this.input,
                s = this.a;
            return e && ("number" == typeof e.F && (o = e.F), "number" == typeof e.P && (o += e.P)), 2 > o ? (r = (a.length - this.c) / this.C[2], i = 258 * (r / 2) | 0, n = i < s.length ? s.length + i : s.length << 1) : n = s.length * o, M ? (t = new Uint8Array(n), t.set(s)) : t = s, this.a = t
        }, m.prototype.B = function() {
            var e, t, r, n, i, o = 0,
                a = this.a,
                s = this.p,
                u = new(M ? Uint8Array : Array)(this.u + (this.b - 32768));
            if (0 === s.length) return M ? this.a.subarray(32768, this.b) : this.a.slice(32768, this.b);
            for (t = 0, r = s.length; r > t; ++t)
                for (e = s[t], n = 0, i = e.length; i > n; ++n) u[o++] = e[n];
            for (t = 32768, r = this.b; r > t; ++t) u[o++] = a[t];
            return this.p = [], this.buffer = u
        }, m.prototype.R = function() {
            var e, t = this.b;
            return M ? this.M ? (e = new Uint8Array(t), e.set(this.a.subarray(0, t))) : e = this.a.subarray(0, t) : (this.a.length > t && (this.a.length = t), e = this.a), this.buffer = e
        }, b.prototype.X = function() {
            return this.D || this.h(), this.t.slice()
        }, b.prototype.h = function() {
            for (var t = this.input.length; this.c < t;) {
                var r = new i,
                    o = E,
                    a = E,
                    s = E,
                    u = E,
                    l = E,
                    c = E,
                    h = E,
                    p = E,
                    d = E,
                    f = this.input,
                    v = this.c;
                switch (r.G = f[v++], r.H = f[v++], (31 !== r.G || 139 !== r.H) && e(Error("invalid file signature:" + r.G + "," + r.H)), r.z = f[v++], r.z) {
                    case 8:
                        break;
                    default:
                        e(Error("unknown compression method: " + r.z))
                }
                if (r.n = f[v++], p = f[v++] | f[v++] << 8 | f[v++] << 16 | f[v++] << 24, r.Z = new Date(1e3 * p), r.fa = f[v++], r.ea = f[v++], 0 < (4 & r.n) && (r.aa = f[v++] | f[v++] << 8, v += r.aa), 0 < (r.n & G)) {
                    for (h = [], c = 0; 0 < (l = f[v++]);) h[c++] = String.fromCharCode(l);
                    r.name = h.join("")
                }
                if (0 < (r.n & q)) {
                    for (h = [], c = 0; 0 < (l = f[v++]);) h[c++] = String.fromCharCode(l);
                    r.A = h.join("")
                }
                0 < (r.n & j) && (r.S = 65535 & n(f, 0, v), r.S !== (f[v++] | f[v++] << 8) && e(Error("invalid header crc16"))), o = f[f.length - 4] | f[f.length - 3] << 8 | f[f.length - 2] << 16 | f[f.length - 1] << 24, f.length - v - 4 - 4 < 512 * o && (u = o), a = new m(f, {
                    index: v,
                    bufferSize: u
                }), r.data = s = a.h(), v = a.c, r.ca = d = (f[v++] | f[v++] << 8 | f[v++] << 16 | f[v++] << 24) >>> 0, n(s, E, E) !== d && e(Error("invalid CRC-32 checksum: 0x" + n(s, E, E).toString(16) + " / 0x" + d.toString(16))), r.da = o = (f[v++] | f[v++] << 8 | f[v++] << 16 | f[v++] << 24) >>> 0, (4294967295 & s.length) !== o && e(Error("invalid input size: " + (4294967295 & s.length) + " / " + o)), this.t.push(r), this.c = v
            }
            this.D = S;
            var g, y, b, x = this.t,
                _ = 0,
                w = 0;
            for (g = 0, y = x.length; y > g; ++g) w += x[g].data.length;
            if (M)
                for (b = new Uint8Array(w), g = 0; y > g; ++g) b.set(x[g].data, _), _ += x[g].data.length;
            else {
                for (b = [], g = 0; y > g; ++g) b[g] = x[g].data;
                b = Array.prototype.concat.apply([], b)
            }
            return b
        }, t("Zlib.Gunzip", b), t("Zlib.Gunzip.prototype.decompress", b.prototype.h), t("Zlib.Gunzip.prototype.getMembers", b.prototype.X), _.prototype.h = function() {
            var t, r, n = this.input;
            return t = this.L.h(), this.c = this.L.c, this.$ && (r = (n[this.c++] << 24 | n[this.c++] << 16 | n[this.c++] << 8 | n[this.c++]) >>> 0, r !== x(t) && e(Error("invalid adler-32 checksum"))), t
        };
        var de = 8,
            fe = O;
        w.prototype.g = function() {
            var t, r, n, i, o, a, s, u = 0;
            switch (s = this.a, t = de) {
                case de:
                    r = Math.LOG2E * Math.log(32768) - 8;
                    break;
                default:
                    e(Error("invalid compression method"))
            }
            switch (n = r << 4 | t, s[u++] = n, t) {
                case de:
                    switch (this.k) {
                        case fe.NONE:
                            o = 0;
                            break;
                        case fe.v:
                            o = 1;
                            break;
                        case fe.o:
                            o = 2;
                            break;
                        default:
                            e(Error("unsupported compression type"))
                    }
                    break;
                default:
                    e(Error("invalid compression method"))
            }
            return i = o << 6 | 0, s[u++] = i | 31 - (256 * n + i) % 31, a = x(this.input), this.K.b = u, s = this.K.g(), u = s.length, M && (s = new Uint8Array(s.buffer), s.length <= u + 4 && (this.a = new Uint8Array(s.length + 4), this.a.set(s), s = this.a), s = s.subarray(0, u + 4)), s[u++] = a >> 24 & 255, s[u++] = a >> 16 & 255, s[u++] = a >> 8 & 255, s[u++] = 255 & a, s
        }, t("Zlib.Inflate", _), t("Zlib.Inflate.prototype.decompress", _.prototype.h), C("Zlib.Inflate.BufferType", {
            ADAPTIVE: Y.N,
            BLOCK: Y.O
        }), t("Zlib.Deflate", w), t("Zlib.Deflate.compress", function(e, t) {
            return new w(e, t).g()
        }), t("Zlib.Deflate.prototype.compress", w.prototype.g), C("Zlib.Deflate.CompressionType", {
            NONE: fe.NONE,
            FIXED: fe.v,
            DYNAMIC: fe.o
        })
    }).call(c);
    var o, h = c.Zlib,
        u = this && this.__extends || function(e, t) {
            function r() {
                this.constructor = e
            }
            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
            e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        };
    ! function(e) {
        var t;
        ! function(e) {
            e.VERSION = {
                number: "1.0.6",
                date: "June 22 2016"
            }
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            t.Immutable = l, t.Rx = e.Core.Rx, t.Promise = e.Core.Promise
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                function n(e) {
                    return f(e, !1)
                }

                function i(e) {
                    return f(e, !0)
                }

                function o(e, t) {
                    return f(e, "Binary" === t)
                }

                function a(e) {
                    return v(e, !1)
                }

                function s(e) {
                    return v(e, !0)
                }

                function u(e, t) {
                    return v(e, "Binary" === t)
                }

                function l(e) {
                    var t = new h.Gunzip(new Uint8Array(e));
                    return t.decompress()
                }

                function c(e) {
                    for (var t = g, r = [], n = [], i = 512, o = 0, a = e.length; a > o; o += i) {
                        for (var s = 0, u = o, l = Math.min(o + i, a); l > u; u++) n[s++] = t[e[u]];
                        i > s ? r[r.length] = n.splice(0, s).join("") : r[r.length] = n.join("")
                    }
                    return r.join("")
                }

                function p(e, t, r, n) {
                    try {
                        var i = n.target.result;
                        r ? (e.update("Decompressing..."), e.schedule(function() {
                            var r = l(i);
                            t ? e.resolve(r.buffer) : e.resolve(c(r))
                        }, 1e3 / 30)) : e.resolve(i)
                    } catch (n) {
                        e.reject(n)
                    }
                }

                function d(e, t, r, n, i) {
                    e.update(t), r.onerror = function(t) {
                        var r = t.target.error;
                        return e.reject(r ? r : "Failed.")
                    }, r.onabort = function() {
                        return e.abort()
                    };
                    var o = function() {
                        return r.abort()
                    };
                    r.onprogress = function(r) {
                        r.lengthComputable ? e.update(t, o, r.loaded, r.total) : e.update(t + " " + (r.loaded / 1024 / 1024).toFixed(2) + " MB", o)
                    }, r.onload = i
                }

                function f(r, n) {
                    return t.Task.fromComputation("Open File", "Background", e.Core.Computation.create(function(e) {
                        var t = new FileReader,
                            i = /\.gz$/i.test(r.name);
                        d(e, "Reading...", t, n, function(t) {
                            return p(e, n, i, t)
                        }), i || n ? t.readAsArrayBuffer(r) : t.readAsBinaryString(r)
                    }))
                }

                function m(e, t, r) {
                    var n = r.target;
                    n.status >= 200 && n.status < 400 ? t ? e.resolve(r.target.response) : e.resolve(r.target.responseText) : e.reject(n.statusText), y.deposit(r.target)
                }

                function v(r, n) {
                    return t.Task.fromComputation("Download", "Background", e.Core.Computation.create(function(e) {
                        var t = y.get();
                        e.update("Waiting for server...", function() {
                            return t.abort()
                        }), d(e, "Downloading...", t, n, function(t) {
                            return m(e, n, t)
                        }), t.open("get", r, !0), t.responseType = n ? "arraybuffer" : "text", t.send()
                    }))
                }
                r.readStringFromFile = n, r.readArrayBufferFromFile = i, r.readFromFile = o, r.ajaxGetString = a, r.ajaxGetArrayBuffer = s, r.ajaxGet = u;
                var g = function() {
                        for (var e = [], t = 0; 256 > t; t++) e[t] = String.fromCharCode(t);
                        return e
                    }(),
                    y = function() {
                        function e() {}
                        return e.get = function() {
                            return this.pool.length ? this.pool.pop() : new XMLHttpRequest
                        }, e.emptyFunc = function() {}, e.deposit = function(t) {
                            this.pool.length < this.poolSize && (t.onabort = e.emptyFunc, t.onerror = e.emptyFunc, t.onload = e.emptyFunc, t.onprogress = e.emptyFunc, this.pool.push())
                        }, e.pool = [], e.poolSize = 15, e
                    }()
            }(r = t.Utils || (t.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(t) {
                var r;
                ! function(t) {
                    function r(e) {
                        return e && "." !== e && "?" !== e ? e : null
                    }

                    function n(e) {
                        var t = e.match(o);
                        if (!t) return void 0;
                        var n = 0 | +t[1],
                            i = r(t[2]),
                            a = r(t[3]),
                            s = r(t[4]);
                        return {
                            entityId: s,
                            authSeqNumber: n,
                            authAsymId: i,
                            insCode: a
                        }
                    }

                    function i(t, r) {
                        void 0 === r && (r = ",");
                        var i = t.split(r).map(function(e) {
                            return n(e)
                        }).filter(function(e) {
                            return !!e
                        });
                        return e.Core.Structure.Query.Builder.toQuery((o = e.Core.Structure.Query).residues.apply(o, i));
                        var o
                    }
                    var o = /^\s*([1-9][0-9]*)\s+([_.;:""&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]+)(?:\s+i[:]([.]|[a-zA-Z0-9]))?(?:\s+e[:]([.]|[a-zA-Z0-9]+))?/;
                    t.parseAuthResidueId = i
                }(r = t.Query || (t.Query = {}))
            }(r = t.Utils || (t.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    var t = function() {
                        function e(e, t, r) {
                            this.isError = e, this.value = t, this.error = r
                        }
                        return e.prototype.bind = function(e) {
                            return this.isError ? this : e(this.value)
                        }, e
                    }();
                    e.ValueOrError = t;
                    var t;
                    ! function(e) {
                        function t(t) {
                            return new e(!0, void 0, t)
                        }

                        function r(t) {
                            return new e(!0, t)
                        }
                        e.error = t, e.value = r
                    }(t = e.ValueOrError || (e.ValueOrError = {}))
                }(t = e.Query || (e.Query = {}))
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t = function() {
                    function e() {
                        this.first = null, this.last = null
                    }
                    return e.prototype.addFirst = function(e) {
                        e.inList = !0, this.first && (this.first.previous = e), e.next = this.first, this.first = e
                    }, e.prototype.addLast = function(e) {
                        null != this.last && (this.last.next = e), e.previous = this.last, this.last = e, null == this.first && (this.first = e),
                            e.inList = !0
                    }, e.prototype.remove = function(e) {
                        e.inList && (e.inList = !1, null !== e.previous ? e.previous.next = e.next : null === e.previous && (this.first = e.next), null !== e.next ? e.next.previous = e.previous : null === e.next && (this.last = e.previous), e.next = null, e.previous = null)
                    }, e
                }();
                e.LinkedList = t
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                function t(e) {
                    return (10 > e ? "0" : "") + e
                }

                function r(e) {
                    var r = e.getHours(),
                        n = e.getMinutes(),
                        i = e.getSeconds();
                    return r + ":" + t(n) + ":" + t(i)
                }

                function n(e, t) {
                    var r = Math.pow(10, t);
                    return Math.round(r * e) / r
                }

                function i(e) {
                    if (e.isIndeterminate) return e.message;
                    var t = (100 * e.current / e.max).toFixed(2);
                    return e.message + " " + t + "%"
                }

                function o() {
                    var e = (new Date).getTime();
                    window.performance && "function" == typeof window.performance.now && (e += performance.now());
                    var t = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t) {
                        var r = (e + 16 * Math.random()) % 16 | 0;
                        return e = Math.floor(e / 16), ("x" == t ? r : 3 & r | 8).toString(16)
                    });
                    return t
                }
                e.formatTime = r, e.round = n, e.formatProgress = i, e.generateUUID = o
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                function t(e) {
                    return n || (n = r()),
                        function(e, t) {
                            return function(r) {
                                var n = t.get(e[r]);
                                return void 0 !== n ? n : 1
                            }
                        }(e.atoms.elementSymbol, n)
                }

                function r() {
                    var e = {
                            H: 1.1,
                            He: 1.4,
                            Li: 1.81,
                            Be: 1.53,
                            B: 1.92,
                            C: 1.7,
                            N: 1.55,
                            O: 1.52,
                            F: 1.47,
                            Ne: 1.54,
                            Na: 2.27,
                            Mg: 1.73,
                            Al: 1.84,
                            Si: 2.1,
                            P: 1.8,
                            S: 1.8,
                            Cl: 1.75,
                            Ar: 1.88,
                            K: 2.75,
                            Ca: 2.31,
                            Sc: 2.16,
                            Ti: 1.87,
                            V: 1.79,
                            Cr: 1.89,
                            Mn: 1.97,
                            Fe: 1.94,
                            Co: 1.92,
                            Ni: 1.84,
                            Cu: 1.86,
                            Zn: 2.1,
                            Ga: 1.87,
                            Ge: 2.11,
                            As: 1.85,
                            Se: 1.9,
                            Br: 1.83,
                            Kr: 2.02,
                            Rb: 3.03,
                            Sr: 2.49,
                            Y: 2.19,
                            Zr: 1.86,
                            Nb: 2.07,
                            Mo: 2.09,
                            Tc: 2.09,
                            Ru: 2.07,
                            Rh: 1.95,
                            Pd: 2.02,
                            Ag: 2.03,
                            Cd: 2.3,
                            In: 1.93,
                            Sn: 2.17,
                            Sb: 2.06,
                            Te: 2.06,
                            I: 1.98,
                            Xe: 2.16,
                            Cs: 3.43,
                            Ba: 2.68,
                            La: 2.4,
                            Ce: 2.35,
                            Pr: 2.39,
                            Nd: 2.29,
                            Pm: 2.36,
                            Sm: 2.29,
                            Eu: 2.33,
                            Gd: 2.37,
                            Tb: 2.21,
                            Dy: 2.29,
                            Ho: 2.16,
                            Er: 2.35,
                            Tm: 2.27,
                            Yb: 2.42,
                            Lu: 2.21,
                            Hf: 2.12,
                            Ta: 2.17,
                            W: 2.1,
                            Re: 2.17,
                            Os: 2.16,
                            Ir: 2.02,
                            Pt: 2.09,
                            Au: 2.17,
                            Hg: 2.09,
                            Tl: 1.96,
                            Pb: 2.02,
                            Bi: 2.07,
                            Po: 1.97,
                            At: 2.02,
                            Rn: 2.2,
                            Fr: 3.48,
                            Ra: 2.83,
                            Ac: 2.6,
                            Th: 2.37,
                            Pa: 2.43,
                            U: 2.4,
                            Np: 2.21,
                            Pu: 2.43,
                            Am: 2.44,
                            Cm: 2.45,
                            Bk: 2.44,
                            Cf: 2.45,
                            Es: 2.45,
                            Fm: 2.45,
                            Md: 2.46,
                            No: 2.46,
                            Lr: 2.46
                        },
                        t = new Map;
                    for (var r in e) t.set(r, e[r]), t.set(r.toUpperCase(), e[r]), t.set(r.toLowerCase(), e[r]);
                    return t
                }
                var n = void 0;
                e.vdwRadiusFromElementSymbol = t
            }(t = e.Utils || (e.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(t) {
                function r(t) {
                    return e.Core.Utils.extend({}, t)
                }

                function n(e, t) {
                    if (!e) return t ? !1 : !0;
                    if (!t) return !1;
                    var r = Object.keys(e);
                    if (Object.keys(t).length !== r.length) return !1;
                    for (var n = 0, i = r; n < i.length; n++) {
                        var o = i[n];
                        if (!u.call(e, o) || e[o] !== t[o]) return !1
                    }
                    return !0
                }

                function i(e, t) {
                    if (!e) return t ? !1 : !0;
                    if (!t) return !1;
                    var r = Object.keys(e);
                    if (Object.keys(t).length !== r.length) return !1;
                    for (var n = 0, o = r; n < o.length; n++) {
                        var a = o[n];
                        if (!u.call(e, a)) return !1;
                        var s = e[a],
                            l = t[a];
                        if ("object" == typeof s && "object" == typeof l) {
                            if (!i(s, l)) return !1
                        } else if (s !== l) return !1
                    }
                    return !0
                }

                function o(e) {
                    for (var t = 1; t < arguments.length; t++)
                        for (var r = arguments[t], n = 0, i = Object.keys(r); n < i.length; n++) {
                            var o = i[n];
                            u.call(r, o) && (e[o] = r[o])
                        }
                    return e
                }

                function a(e, n) {
                    for (var i = !1, o = 0, a = Object.keys(n); o < a.length; o++) {
                        var s = a[o];
                        if (u.call(n, s) && n[s] !== e[s]) {
                            i = !0;
                            break
                        }
                    }
                    return i ? t.assign(r(e), n) : e
                }

                function s(e) {
                    for (var r = e, n = 1; n < arguments.length; n++)
                        if (arguments[n] && (r = a(e, arguments[n]), r !== e)) {
                            for (var i = n + 1; i < arguments.length; i++) r = t.assign(r, arguments[i]);
                            break
                        }
                    return r
                }
                var u = Object.prototype.hasOwnProperty;
                t.shallowClone = r, t.shallowEqual = n, t.deepEqual = i, t.assign = Object.assign || o, t.merge = s
            }(r = t.Utils || (t.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    function n(e) {
                        return t.Tree.Node.findClosestNodeOfType(e, [t.Entity.Molecule.Model])
                    }

                    function i(e) {
                        return t.Tree.Node.findClosestNodeOfType(e, [t.Entity.Molecule.Molecule])
                    }

                    function o(r) {
                        var i = t.Tree.Node.findClosestNodeOfType(r, [t.Entity.Molecule.Model, t.Entity.Molecule.Selection]);
                        if (t.Entity.isMoleculeModel(i)) return i.props.model.queryContext;
                        var o = i.tree.context.entityCache,
                            a = o.get(i, t.Entity.Cache.Keys.QueryContext);
                        return a ? a : (a = e.Core.Structure.Query.Context.ofAtomIndices(n(i).props.model, i.props.indices), o.set(i, t.Entity.Cache.Keys.QueryContext, a))
                    }

                    function a(e, t, r, n, i, o) {
                        for (var a = e.atoms, s = a.x, u = a.y, l = a.z, c = n.atoms.x, h = n.atoms.y, p = n.atoms.z, d = Number.POSITIVE_INFINITY, f = t; r > f; f++)
                            for (var m = i; o > m; m++) {
                                var v = s[f] - c[m],
                                    g = u[f] - h[m],
                                    y = l[f] - p[m];
                                d = Math.min(d, v * v + g * g + y * y)
                            }
                        return Math.sqrt(d)
                    }

                    function s(e, t, r, n) {
                        for (var i = e.atoms, o = i.x, a = i.y, s = i.z, u = r.atoms.x, l = r.atoms.y, c = r.atoms.z, h = Number.POSITIVE_INFINITY, p = 0, d = t; p < d.length; p++)
                            for (var f = d[p], m = 0, v = n; m < v.length; m++) {
                                var g = v[m],
                                    y = o[f] - u[g],
                                    b = a[f] - l[g],
                                    x = s[f] - c[g];
                                h = Math.min(h, y * y + b * b + x * x)
                            }
                        return Math.sqrt(h)
                    }

                    function u(t, r) {
                        var i = n(t);
                        i || console.warn("Could not find a model for query selection.");
                        var a = o(t);
                        try {
                            var s = e.Core.Structure.Query.Builder.toQuery(r);
                            return {
                                model: i,
                                indices: s(a).unionAtomIndices(),
                                queryContext: a
                            }
                        } catch (u) {
                            return console.error("Query Execution", u), {}
                        }
                    }

                    function l(e, t) {
                        for (var r = e.atoms.residueIndex, n = [], i = e.residues.atomStartIndex[r[t]], o = e.residues.atomEndIndex[r[t]]; o > i; i++) n.push(i);
                        return n
                    }

                    function c(e, t, r) {
                        for (var n = e.atoms, i = (n.count, n.x), o = n.y, a = n.z, s = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE], u = [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE], l = 0, c = t; l < c.length; l++) {
                            var h = c[l];
                            s[0] = Math.min(i[h], s[0]), s[1] = Math.min(o[h], s[1]), s[2] = Math.min(a[h], s[2]), u[0] = Math.max(i[h], u[0]), u[1] = Math.max(o[h], u[1]), u[2] = Math.max(a[h], u[2])
                        }
                        return s[0] = s[0] - r, s[1] = s[1] - r, s[2] = s[2] - r, u[0] = u[0] + r, u[1] = u[1] + r, u[2] = u[2] + r, {
                            bottomLeft: s,
                            topRight: u
                        }
                    }

                    function h(e, t, r) {
                        r.x = 0, r.y = 0, r.z = 0;
                        for (var n = e.atoms, i = n.x, o = n.y, a = n.z, s = 0, u = t; s < u.length; s++) {
                            var l = u[s];
                            r.x += i[l], r.y += o[l], r.z += a[l]
                        }
                        var c = t.length;
                        r.x /= c, r.y /= c, r.z /= c;
                        for (var h = 0, p = 0, d = t; p < d.length; p++) {
                            var l = d[p],
                                f = r.x - i[l],
                                m = r.y - o[l],
                                v = r.z - a[l];
                            h = Math.max(h, f * f + m * m + v * v)
                        }
                        return Math.sqrt(h)
                    }
                    r.findModel = n, r.findMolecule = i, r.findQueryContext = o, r.getDistance = a, r.getDistanceSet = s, r.getModelAndIndicesFromQuery = u, r.getResidueIndices = l, r.getBox = c;
                    var p = function() {
                        function e(e) {
                            this.model = e, this.center = {
                                x: 0,
                                y: 0,
                                z: 0
                            }, this.radiusSquared = 0, this.count = 0, this.x = e.atoms.x, this.y = e.atoms.y, this.z = e.atoms.z
                        }
                        return e.prototype.addAtom = function(e) {
                            this.count++, this.center.x += this.x[e], this.center.y += this.y[e], this.center.z += this.z[e]
                        }, e.prototype.finishedAdding = function() {
                            this.center.x /= this.count, this.center.y /= this.count, this.center.z /= this.count
                        }, e.prototype.radiusVisit = function(e) {
                            var t = this.center.x - this.x[e],
                                r = this.center.y - this.y[e],
                                n = this.center.z - this.z[e];
                            this.radiusSquared = Math.max(this.radiusSquared, t * t + r * r + n * n)
                        }, e
                    }();
                    r.CentroidHelper = p, r.getCentroidAndRadius = h
                }(n = r.Molecule || (r.Molecule = {}))
            }(r = t.Utils || (t.Utils = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function t() {
                        this.LOG_DISPATCH_STREAM = !1, this.lanes = [];
                        for (var r = 0; r <= t.Lane.Task; r++) this.lanes.push(new e.Rx.Subject)
                    }
                    return t.prototype.dispatch = function(e) {
                        this.LOG_DISPATCH_STREAM && console.log(e.type.name, t.Lane[e.type.lane], e.data), this.lanes[e.type.lane].onNext(e)
                    }, t.prototype.schedule = function(e, t, r) {
                        return void 0 === r && (r = 1e3 / 31), setTimeout(function() {
                            if (t) try {
                                e.call(null)
                            } catch (r) {
                                t.call(null, "" + r)
                            } else e.call(null)
                        }, r)
                    }, t.prototype.getStream = function(e) {
                        return this.lanes[e.lane].filter(function(t) {
                            return t.type === e
                        })
                    }, t.prototype.finished = function() {
                        this.lanes.forEach(function(e) {
                            return e.onCompleted()
                        })
                    }, t
                }();
                t.Dispatcher = r;
                var r;
                ! function(e) {
                    ! function(e) {
                        e[e.Slow = 0] = "Slow", e[e.Fast = 1] = "Fast", e[e.Log = 2] = "Log", e[e.Busy = 3] = "Busy", e[e.Transformer = 4] = "Transformer", e[e.Task = 5] = "Task"
                    }(e.Lane || (e.Lane = {}));
                    e.Lane
                }(r = t.Dispatcher || (t.Dispatcher = {}))
            }(t = e.Service || (e.Service = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function t(e) {
                        this.context = e
                    }
                    return t.prototype.log = function(t) {
                        e.Event.Log.dispatch(this.context, t)
                    }, t.prototype.message = function(e) {
                        this.log({
                            type: t.EntryType.Message,
                            timestamp: new Date,
                            message: e
                        })
                    }, t.prototype.error = function(e) {
                        this.log({
                            type: t.EntryType.Error,
                            timestamp: new Date,
                            message: e
                        })
                    }, t.prototype.warning = function(e) {
                        this.log({
                            type: t.EntryType.Warning,
                            timestamp: new Date,
                            message: e
                        })
                    }, t.prototype.info = function(e) {
                        this.log({
                            type: t.EntryType.Info,
                            timestamp: new Date,
                            message: e
                        })
                    }, t
                }();
                t.Logger = r;
                var r;
                ! function(e) {
                    ! function(e) {
                        e[e.Message = 0] = "Message", e[e.Error = 1] = "Error", e[e.Warning = 2] = "Warning", e[e.Info = 3] = "Info"
                    }(e.EntryType || (e.EntryType = {}));
                    e.EntryType
                }(r = t.Logger || (t.Logger = {}))
            }(t = e.Service || (e.Service = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            t.serialTaskId = 0;
            var r = function() {
                function r(e, r, n) {
                    this.name = e, this.type = r, this.task = n, this._id = t.serialTaskId++, this.reportTime = !1
                }
                return Object.defineProperty(r.prototype, "id", {
                    get: function() {
                        return this._id
                    },
                    enumerable: !0,
                    configurable: !0
                }), r.prototype.bind = function(e, t, n) {
                    var i = this;
                    return r.create(e, t, function(e) {
                        i.run(e.context).then(function(t) {
                            n(t).run(e.context).then(e.resolve)["catch"](e.reject)
                        })["catch"](e.reject)
                    })
                }, r.prototype.map = function(e, t, n) {
                    var i = this;
                    return r.create(e, t, function(e) {
                        i.run(e.context).then(function(t) {
                            return e.resolve(n(t))
                        })["catch"](e.reject)
                    })
                }, r.prototype.run = function(n) {
                    var i, o = this,
                        a = new e.Core.Promise(function(e, a) {
                            t.Event.Task.Started.dispatch(n, o), n.performance.start("task" + o.id), i = new r.Context(n, o, e, a);
                            try {
                                o.task(new r.Context(n, o, e, a))
                            } catch (s) {
                                i.reject(s)
                            }
                        });
                    return new r.Running(a, i)
                }, r.prototype.setReportTime = function(e) {
                    return this.reportTime = e, this
                }, r
            }();
            t.Task = r;
            var r;
            ! function(r) {
                function n(e, t, n) {
                    return new r(e, t, n)
                }

                function i(e, t, r) {
                    return n(e, t, function(e) {
                        e.resolve(r)
                    })
                }

                function o(e, t, r) {
                    return n(e, "Normal", function(e) {
                        e.reject(r)
                    })
                }

                function a(e, r, i) {
                    return n(e, r, function(e) {
                        var r = i.run();
                        r.progress.subscribe(function(r) {
                            return e.update(t.Utils.formatProgress(r), r.requestAbort)
                        }), r.result.then(function(t) {
                            return e.resolve(t)
                        })["catch"](function(t) {
                            return e.reject(t)
                        })
                    })
                }

                function s(e, r) {
                    return void 0 === r && (r = !1), new t.Promise(function(t, n) {
                        var i = [],
                            o = function(a) {
                                return a >= e.length ? void t(i) : void e[a]().then(function(e) {
                                    i.push(e), o(a + 1)
                                })["catch"](function(e) {
                                    r ? o(a + 1) : n(e)
                                })
                            };
                        o(0)
                    })
                }

                function u(e, t, r, i, o) {
                    return void 0 === o && (o = !1), n(t, r, function(t) {
                        var r = [],
                            n = function(a) {
                                return a >= i.length ? void t.resolve(r) : void i[a]().run(e).then(function(e) {
                                    r.push(e), n(a + 1)
                                })["catch"](function(e) {
                                    o ? n(a + 1) : t.reject(e)
                                })
                            };
                        n(0)
                    })
                }

                function l(e, r) {
                    return new t.Promise(function(t, n) {
                        try {
                            r(t, n)
                        } catch (i) {
                            e.logger.error("Error (Generic): " + i)
                        }
                    })
                }

                function c(e, t) {
                    return l(e, function(r, n) {
                        var i = function(o) {
                            if (o >= t.length) return void r(void 0);
                            var a = t[o];
                            a.stateUpdate(), e.dispatcher.schedule(function() {
                                a.action(), i(o + 1)
                            }, n)
                        };
                        i(0)
                    })
                }
                var h = function() {
                    function e(e, t) {
                        this.promise = e, this.ctx = t
                    }
                    return e.prototype.then = function(e) {
                        return this.promise.then(e)
                    }, e.prototype["catch"] = function(e) {
                        return this.promise["catch"](e)
                    }, e.prototype.discard = function() {
                        this.ctx.discard()
                    }, e
                }();
                r.Running = h, r.create = n, r.resolve = i, r.reject = o, r.fromComputation = a, r.sequencePromises = s, r.sequence = u, r.guardedPromise = l, r.split = c;
                var p = function() {
                    function r(e, t, r, n) {
                        this.context = e, this.task = t, this._resolve = r, this._reject = n, this.schedulingTime = 0, this.scheduleId = 0, this.abort = void 0, this.discarded = !1, this.resolve = this.resolve_task.bind(this), this.reject = this.reject_task.bind(this)
                    }
                    return r.prototype.discard = function() {
                        try {
                            this.abort && this.abort()
                        } catch (e) {}
                        this.discarded = !0
                    }, r.prototype.update = function(e, r) {
                        t.Event.Task.StateUpdated.dispatch(this.context, {
                            taskId: this.task.id,
                            type: this.task.type,
                            name: this.task.name,
                            message: e,
                            abort: r
                        }), this.abort = r
                    }, r.prototype.schedule = function(e, t) {
                        var r = this,
                            n = this.scheduleId++,
                            i = "task" + this.task.id + "-" + n;
                        this.context.performance.start(i), this.context.dispatcher.schedule(function() {
                            r.context.performance.end(i), r.schedulingTime += r.context.performance.time(i), e()
                        }, function(e) {
                            r.context.performance.end(i), r.reject(e)
                        }, t)
                    }, r.prototype.resolve_task = function(r) {
                        if (this.abort = void 0, this.discarded) return void this.reject("Discarded.");
                        try {
                            if (this.context.performance.end("task" + this.task.id), this.task.reportTime) {
                                var n = this.context.performance.time("task" + this.task.id) - this.schedulingTime;
                                "Silent" !== this.task.type && this.context.logger.info(this.task.name + " finished in " + e.Core.Utils.PerformanceMonitor.format(n) + ".")
                            }
                        } finally {
                            this._resolve(r), t.Event.Task.Completed.dispatch(this.context, this.task.id)
                        }
                    }, r.prototype.reject_task = function(e) {
                        this.abort = void 0, this.context.performance.end("task" + this.task.id), this.context.performance.formatTime("task" + this.task.id);
                        try {
                            if (!this.discarded)
                                if ("Silent" === this.task.type) e.warn ? this.context.logger.warning("Warning (" + this.task.name + "): " + e.message) : console.error("Error (" + this.task.name + "): " + e, e);
                                else if ("Child" !== this.task.type)
                                if (e.warn) this.context.logger.warning("Warning (" + this.task.name + "): " + e.message);
                                else {
                                    var r = "" + e;
                                    r.indexOf("Aborted") >= 0 ? this.context.logger.info(this.task.name + ": Aborted.") : this.context.logger.error("Error (" + this.task.name + "): " + e)
                                }
                            else {
                                var r = "" + e;
                                !e.warn && r.indexOf("Aborted") < 0 && console.log(e)
                            }
                        } catch (r) {
                            console.log(r)
                        } finally {
                            this._reject(e), t.Event.Task.Completed.dispatch(this.context, this.task.id)
                        }
                    }, r
                }();
                r.Context = p
            }(r = t.Task || (t.Task = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                function t(e, t) {
                    return Object.create(r, {
                        name: {
                            writable: !1,
                            configurable: !1,
                            value: e
                        },
                        lane: {
                            writable: !1,
                            configurable: !1,
                            value: t
                        }
                    })
                }
                var r = {
                    dispatch: function(e, t) {
                        e.dispatcher.dispatch({
                            type: this,
                            data: t
                        })
                    },
                    getStream: function(e) {
                        return e.dispatcher.getStream(this)
                    }
                };
                e.create = t
            }(t = e.Event || (e.Event = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = e.Service.Dispatcher.Lane;
                t.Log = t.create("bs.Log", r.Log);
                var n;
                ! function(e) {
                    e.LayoutChanged = t.create("bs.Common.LayoutChanged", r.Slow)
                }(n = t.Common || (t.Common = {}));
                var i;
                ! function(e) {
                    e.Started = t.create("bs.Tasks.Started", r.Task), e.Completed = t.create("bs.Tasks.Completed", r.Task), e.StateUpdated = t.create("bs.Tasks.StateUpdated", r.Busy)
                }(i = t.Task || (t.Task = {}));
                var o;
                ! function(e) {
                    e.NodeUpdated = t.create("bs.Tree.NodeUpdated", r.Slow), e.NodeAdded = t.create("bs.Tree.NodeAdded", r.Slow), e.NodeRemoved = t.create("bs.Tree.NodeRemoved", r.Slow), e.TransformStarted = t.create("bs.Tree.TransformStarted", r.Slow), e.TransformFinished = t.create("bs.Tree.TransformFinished", r.Slow), e.TransformerApply = t.create("bs.Tree.TransformerApplied", r.Transformer)
                }(o = t.Tree || (t.Tree = {}));
                var a;
                ! function(e) {
                    e.CurrentChanged = t.create("bs.Entity.CurrentChanged", r.Slow)
                }(a = t.Entity || (t.Entity = {}));
                var s;
                ! function(e) {
                    e.Highlight = t.create("bs.Visuals.HoverElement", r.Fast)
                }(s = t.Interactivity || (t.Interactivity = {}));
                var u;
                ! function(e) {
                    e.VisualHoverElement = t.create("bs.Visual.HoverElement", r.Fast), e.VisualSelectElement = t.create("bs.Visual.SelectElement", r.Fast), e.CameraChanged = t.create("bs.Visual.CameraChanged", r.Fast)
                }(u = t.Visual || (t.Visual = {}));
                var l;
                ! function(e) {
                    e.ModelHighlight = t.create("bs.Molecule.ModelHighlight", r.Fast), e.ModelSelect = t.create("bs.Molecule.ModelSelect", r.Fast)
                }(l = t.Molecule || (t.Molecule = {}))
            }(t = e.Event || (e.Event = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n, i = t.Service.Dispatcher.Lane,
                    o = t.Event.create;
                ! function(e) {
                    e.RemoveNode = o("bs.cmd.Tree.RemoveNode", i.Slow), e.ApplyTransform = o("bs.cmd.Tree.ApplyTransform", i.Slow)
                }(n = r.Tree || (r.Tree = {}));
                var a;
                ! function(e) {
                    e.SetCurrent = o("bs.cmd.Entity.SetCurrentNode", i.Slow), e.ToggleExpanded = o("bs.cmd.Entity.ToggleExpanded", i.Slow), e.SetVisibility = o("bs.cmd.Entity.SetVisibility", i.Slow), e.Focus = o("bs.cmd.Entity.Focus", i.Slow), e.Highlight = o("bs.cmd.Entity.Highlight", i.Slow)
                }(a = r.Entity || (r.Entity = {}));
                var s;
                ! function(t) {
                    t.SetState = e.Bootstrap.Event.create("lm.cmd.Layout.SetState", i.Slow), t.SetViewportOptions = o("bs.cmd.Layout.SetViewportOptions", i.Slow)
                }(s = r.Layout || (r.Layout = {}));
                var u;
                ! function(e) {
                    e.FocusQuery = o("bs.cmd.Molecule.FocusQuery", i.Slow), e.Highlight = o("bs.cmd.Molecule.Highlight", i.Slow), e.CreateSelectInteraction = o("bs.cmd.Molecule.CreateSelectInteraction", i.Slow)
                }(u = r.Molecule || (r.Molecule = {}));
                var l;
                ! function(e) {
                    e.ResetScene = o("bs.cmd.Visual.ResetScene", i.Slow), e.ResetTheme = o("bs.cmd.Visual.ResetTheme", i.Slow), e.UpdateBasicTheme = o("bs.cmd.Visual.UpdateBasicTheme", i.Slow)
                }(l = r.Visual || (r.Visual = {}))
            }(r = t.Command || (t.Command = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(e, t) {
                    var r = {
                        version: 0,
                        refs: new Map,
                        nodes: new Set,
                        root: t,
                        context: e
                    };
                    return t.parent = t, t.tree = r, r
                }

                function n(e) {
                    var t = e.tree.refs.get(e.ref);
                    t ? t.push(e) : e.tree.refs.set(e.ref, [e])
                }

                function i(e) {
                    t.Node.forEach(e, function(e) {
                        return n(e)
                    })
                }

                function o(e, t) {
                    var r = e.refs.get(t.ref);
                    if (r) {
                        var n = r.indexOf(t);
                        0 > n || (r[n] = r[r.length - 1], r.pop(), r.length || e.refs["delete"](t.ref))
                    }
                }

                function a(r) {
                    if (!r.parent) throw "Cannot add a node without a parent.";
                    var n = r.parent.tree;
                    t.Node.forEach(r, function(e) {
                        return e.tree = n
                    }), t.Node.addChild(r.parent, r), i(r), e.Entity.nodeUpdated(r.parent), s(r)
                }

                function s(r) {
                    var n = r.tree.context;
                    t.Node.forEachPreorder(r, function(t) {
                        e.Event.Tree.NodeAdded.dispatch(n, t)
                    })
                }

                function u(r, n, o) {
                    t.Node.replaceChild(n.parent, n, o), h(r.context, n), t.Node.forEach(o, function(e) {
                        return e.tree = r
                    }), i(o);
                    for (var a = 0, u = o.children; a < u.length; a++) {
                        var l = u[a];
                        s(l)
                    }
                    e.Entity.nodeUpdated(o.parent), e.Event.Tree.NodeAdded.dispatch(r.context, o), r.context.currentEntity === n && e.Entity.setCurrent(o)
                }

                function l(r) {
                    if (r) {
                        for (var n; r !== r.parent;) n = r, t.Node.update(r), r = r.parent;
                        n && e.Event.Tree.NodeUpdated.dispatch(r.tree.context, n)
                    }
                }

                function c(r) {
                    var n = r.root.children;
                    r.root.children = [], t.Node.update(r.root), e.Entity.nodeUpdated(r.root), r.refs.clear();
                    for (var i = 0, o = n; i < o.length; i++) {
                        var a = o[i];
                        h(r.context, a)
                    }
                    e.Command.Entity.SetCurrent.dispatch(r.context, r.root)
                }

                function h(r, n) {
                    t.Node.forEach(n, function(t) {
                        o(r.tree, t), e.Event.Tree.NodeRemoved.dispatch(r, t), t.tree = void 0
                    })
                }

                function p(r) {
                    if (r && r.tree) {
                        if (r.parent === r) return void c(r.tree);
                        var n = t.Node.isHidden(r),
                            i = r.index,
                            o = r.parent,
                            a = r.tree.context;
                        t.Node.removeChild(o, r), e.Entity.nodeUpdated(o), h(a, r), n || (o.children[i] && !t.Node.isHidden(o.children[i]) ? e.Command.Entity.SetCurrent.dispatch(a, o.children[i]) : e.Command.Entity.SetCurrent.dispatch(a, o)), r.transform.props.isBinding && !o.children.length && p(r.parent)
                    }
                }
                t.create = r, t.add = a, t.update = u, t.updatePath = l, t.remove = p
            }(t = e.Tree || (e.Tree = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    function r(e, t) {
                        return e && e.type === t
                    }

                    function n(e, t) {
                        for (;;) {
                            if (e === t) return !0;
                            if (e = e.parent, !e || e === e.parent) return !1
                        }
                    }

                    function i(e, t) {
                        if (!e) return void 0;
                        for (var n = e.parent;;) {
                            if (r(n, t)) return n;
                            if (n = n.parent, n.parent === n) return void 0
                        }
                    }

                    function o(e, t) {
                        if (!e) return void 0;
                        for (var r = e;;) {
                            if (t.indexOf(r.type) >= 0) return r;
                            if (r = r.parent, r.parent === r) return t.indexOf(r.type) >= 0 ? r : void 0
                        }
                    }

                    function a() {
                        return g++
                    }

                    function s(e) {
                        return e.version++, e
                    }

                    function u(t, r) {
                        var n = e.Utils.merge(t.props, r);
                        return n === t.props ? t : s(t)
                    }

                    function l(t, r) {
                        var n = e.Utils.merge(t.state, r);
                        return n === t.state ? t : (t.state = n, s(t))
                    }

                    function c(e, t) {
                        return t.index = e.children.length, e.children.push(t), s(e)
                    }

                    function h(e, t) {
                        for (var r = e.children, n = t.index, i = r.length - 1; i > n; n++) {
                            var o = r[n + 1];
                            o.index--, r[n] = o
                        }
                        return r.pop(), s(e)
                    }

                    function p(e, t, r) {
                        return r ? (r.index = t.index, e.children[r.index] = r, s(e)) : h(e, t)
                    }

                    function d(e, t) {
                        for (var r = 0, n = e.children; r < n.length; r++) {
                            var i = n[r];
                            d(i, t)
                        }
                        t(e)
                    }

                    function f(e, t) {
                        t(e);
                        for (var r = 0, n = e.children; r < n.length; r++) {
                            var i = n[r];
                            d(i, t)
                        }
                    }

                    function m(e) {
                        var t = [];
                        return d(e, function(e) {
                            return t.push(e)
                        }), t
                    }

                    function v(e) {
                        if (e.isHidden) return !0;
                        var t = e.parent;
                        if (!t) return e.isHidden;
                        for (; t.parent !== t;) {
                            if (t.isHidden) return !0;
                            if (t = t.parent, !t) return !1
                        }
                        return !1
                    }
                    t.Null = {}, t.is = r, t.hasAncestor = n, t.findAncestor = i, t.findClosestNodeOfType = o;
                    var g = 0;
                    t.createId = a, t.update = s, t.withProps = u, t.withState = l, t.addChild = c, t.removeChild = h, t.replaceChild = p, t.forEach = d, t.forEachPreorder = f, t.collect = m, t.isHidden = v
                }(r = t.Node || (t.Node = {}))
            }(t = e.Tree || (e.Tree = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(t) {
                    function r(e, t) {
                        return n(e)(t)
                    }

                    function n(e) {
                        var r, n = e ? e : t.root();
                        return r = o(n) ? n.compile() : i(n) ? t.byValue(n).compile() : a(n) ? n : t.byRef(n).compile()
                    }

                    function i(e) {
                        return void 0 !== e.ref
                    }

                    function o(e) {
                        return void 0 !== e.compile
                    }

                    function a(e) {
                        return "function" == typeof e
                    }

                    function s(e) {
                        return Object.create(w.BuilderPrototype, {
                            compile: {
                                writable: !1,
                                configurable: !1,
                                value: e
                            }
                        })
                    }

                    function u(e) {
                        return e ? e : []
                    }

                    function l() {
                        return s(function() {
                            return function(e) {
                                return [e.root]
                            }
                        })
                    }

                    function c(e) {
                        return s(function() {
                            return function(t) {
                                return u(t.refs.get(e))
                            }
                        })
                    }

                    function h(e) {
                        return s(function() {
                            return function(t) {
                                return [e]
                            }
                        })
                    }

                    function p(e, t) {
                        var r = n(e);
                        return s(function() {
                            return function(e) {
                                for (var n = [], i = 0, o = r(e); i < o.length; i++)
                                    for (var a = o[i], s = 0, u = t(a); s < u.length; s++) {
                                        var l = u[s];
                                        n.push(l)
                                    }
                                return n
                            }
                        })
                    }

                    function d(e, t) {
                        var r = n(e);
                        return s(function() {
                            return function(e) {
                                for (var n = [], i = 0, o = r(e); i < o.length; i++) {
                                    var a = o[i],
                                        s = t(a);
                                    s && n.push(s)
                                }
                                return n
                            }
                        })
                    }

                    function f(e) {
                        var t = n(e);
                        return s(function() {
                            return function(e) {
                                for (var r = new Set, n = [], i = 0, o = t(e); i < o.length; i++) {
                                    var a = o[i];
                                    r.has(a.id) || (r.add(a.id), n.push(a))
                                }
                                return n
                            }
                        })
                    }

                    function m(e) {
                        var t = n(e);
                        return s(function() {
                            return function(e) {
                                return [t(e)[0]]
                            }
                        })
                    }

                    function v(e, t) {
                        return p(e, function(e) {
                            return t(e) ? [e] : []
                        })
                    }

                    function g(t) {
                        return p(t, function(t) {
                            return e.Node.collect(t)
                        })
                    }

                    function y(e) {
                        return p(e, function(e) {
                            return e.children
                        })
                    }

                    function b(e, t) {
                        return v(e, function(e) {
                            return e.type === t
                        })
                    }

                    function x(t, r) {
                        return f(d(t, function(t) {
                            return e.Node.findAncestor(t, r)
                        }))
                    }

                    function _(e) {
                        return f(d(e, function(e) {
                            return e.parent
                        }))
                    }
                    t.select = r, t.compile = n;
                    var w;
                    ! function(e) {
                        function t(t, r) {
                            e.BuilderPrototype[t] = function() {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t - 0] = arguments[t];
                                return r.call.apply(r, [void 0, this].concat(e))
                            }
                        }
                        e.BuilderPrototype = {}, e.registerModifier = t
                    }(w = t.Helpers || (t.Helpers = {})), t.root = l, t.byRef = c, t.byValue = h, w.registerModifier("flatMap", p), t.flatMap = p, w.registerModifier("mapEntity", d), t.mapEntity = d, w.registerModifier("unique", f), t.unique = f, w.registerModifier("first", m), t.first = m, w.registerModifier("filter", v), t.filter = v, w.registerModifier("subtree", g), t.subtree = g, w.registerModifier("children", y), t.children = y, w.registerModifier("ofType", b), t.ofType = b, w.registerModifier("ancestorOfType", x), t.ancestorOfType = x, w.registerModifier("parent", _), t.parent = _
                }(t = e.Selection || (e.Selection = {}))
            }(t = e.Tree || (e.Tree = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    function n(e, t, r) {
                        return new a(e, t, r)
                    }

                    function i(e, t, r, i) {
                        return n({
                            id: e,
                            name: e,
                            description: "",
                            from: t,
                            to: r,
                            validateParams: function() {
                                return void 0
                            },
                            defaultParams: function() {
                                return {}
                            }
                        }, i)
                    }

                    function o(r, i, o) {
                        return n(r, function(n, a, s) {
                            return e.Task.create(r.name, "Background", function(e) {
                                var r = i(n, a, s);
                                t.Transform.apply(n, r).run(n).then(function(r) {
                                    o && n.logger.message(o), e.resolve(t.Node.Null)
                                })["catch"](e.reject)
                            })
                        })
                    }
                    var a = function() {
                        function r(e, t, r) {
                            this.info = e, this.transform = t, this.updater = r
                        }
                        return r.prototype.getTarget = function(e) {
                            var r = this.info;
                            return r.from.length ? t.Node.findClosestNodeOfType(e, r.from) : e
                        }, r.prototype.checkTypes = function(e, t) {
                            if (t.transformer !== this) return "The transform is calling an invalid transformer (got " + t.transformer.info.name + ", expected " + this.info.name + ")";
                            var r = this.info;
                            return r.from.length && r.from.indexOf(e.type) < 0 ? "Transform (" + r.name + "): type error, expected '" + r.from.map(function(e) {
                                return e.info.name
                            }).join("/") + "', got '" + e.type.info.name + "'." : void 0
                        }, r.prototype.validateParams = function(e) {
                            var t = this.info;
                            if (t.validateParams) {
                                var r = t.validateParams(e.params);
                                if (r && r.length > 0) return "Invalid params: " + r.join(", ") + "."
                            }
                            return void 0
                        }, r.prototype.validate = function(t, r) {
                            var n = this.info;
                            if (!t) return e.Task.reject(n.name, "Normal", "Could not find a suitable node to apply the transformer to.");
                            var i = this.checkTypes(t, r);
                            if (i) return e.Task.reject(n.name, "Normal", i);
                            var o = this.validateParams(r);
                            return o ? e.Task.reject(n.name, "Normal", o) : void 0
                        }, r.prototype.apply = function(t, r, n) {
                            if (this.info.isComposed) return this.transform(t, r, n);
                            var i = this.getTarget(r),
                                o = this.validate(i, n);
                            return o ? o : (e.Event.Tree.TransformerApply.dispatch(t, {
                                a: i,
                                t: n
                            }), this.transform(t, i, n))
                        }, r.prototype.update = function(t, r, n) {
                            var i = r.parent;
                            if (this.info.isComposed && !this.updater) return this.transform(t, i, n);
                            if (this.updater) {
                                var o = this.validateParams(n);
                                if (o) return e.Task.reject(this.info.name, "Normal", o);
                                var a = this.updater(t, r, n);
                                if (a) return a
                            }
                            return e.Event.Tree.TransformerApply.dispatch(t, {
                                a: r.parent,
                                t: n
                            }), this.transform(t, i, n)
                        }, r.prototype.create = function(e, r) {
                            return t.Transform.create(e, r ? r : {}, this)
                        }, r
                    }();
                    r.create = n, r.internal = i, r.action = o
                }(r = t.Transformer || (t.Transformer = {}))
            }(t = e.Tree || (e.Tree = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    function n(t, r, n) {
                        var i = e.Utils.shallowClone(r);
                        return i.ref || (i.ref = e.Utils.generateUUID()), new c(t, i, n)
                    }

                    function i(t, r) {
                        var n = t.select(r.selector),
                            i = n.map(function(e) {
                                return function() {
                                    return r.transform.update(t, e)
                                }
                            });
                        return e.Task.sequence(t, "Update transform", "Child", i, !0)
                    }

                    function o(t, r) {
                        var n = t.select(r.selector),
                            i = n.map(function(e) {
                                return function() {
                                    return r.transform.apply(t, e)
                                }
                            });
                        return e.Task.sequence(t, "Apply transform", "Child", i, !0)
                    }

                    function a(e) {
                        return !!e.selector
                    }

                    function s(e) {
                        return !!e.compile
                    }

                    function u(t, r) {
                        var n;
                        try {
                            n = a(r) ? [r] : s(r) ? r.compile() : r
                        } catch (i) {
                            return e.Task.reject("Apply transforms", "Child", i)
                        }
                        var u = n.map(function(e) {
                            return function() {
                                return o(t, e)
                            }
                        });
                        return e.Task.sequence(t, "Apply transforms", "Child", u, !0)
                    }

                    function l(t, r) {
                        var n;
                        try {
                            n = a(r) ? [r] : s(r) ? r.compile() : r
                        } catch (o) {
                            return e.Task.reject("Apply transforms", "Child", o)
                        }
                        var u = n.map(function(e) {
                            return function() {
                                return i(t, e)
                            }
                        });
                        return e.Task.sequence(t, "Apply transforms", "Child", u, !0)
                    }
                    var c = function() {
                        function r(e, t, r) {
                            this.params = e, this.props = t, this.transformer = r, this.isUpdate = !1
                        }
                        return r.prototype.resolveAdd = function(e, r, n) {
                            return n === t.Node.Null ? void e.resolve(n) : (n.ref = this.props.ref, this.props.isHidden && (n.isHidden = !0), n.tree || (n.parent = r, t.add(n)), void e.resolve(n))
                        }, r.prototype.resolveUpdate = function(e, r, n) {
                            if (n === t.Node.Null) return void e.resolve(n);
                            var i = r.parent;
                            n.ref = this.props.ref, n.parent = i, n.tag = r.tag, n.state = r.state, this.props.isHidden && (n.isHidden = !0), t.update(e.context.tree, r, n), e.resolve(n)
                        }, r.prototype.apply = function(t, r) {
                            var n = this;
                            return e.Task.create(this.transformer.info.name, "Child", function(i) {
                                e.Event.Tree.TransformStarted.dispatch(t, n), n.transformer.apply(t, r, n).run(i.context).then(function(o) {
                                    n.resolveAdd(i, r, o), e.Event.Tree.TransformFinished.dispatch(t, {
                                        transform: n
                                    })
                                })["catch"](function(r) {
                                    i.reject(r), e.Event.Tree.TransformFinished.dispatch(t, {
                                        transform: n,
                                        error: r
                                    })
                                })
                            })
                        }, r.prototype.update = function(t, r) {
                            var n = this;
                            return e.Task.create(this.transformer.info.name, "Child", function(i) {
                                n.isUpdate = !0, n.props.ref = r.transform.props.ref, e.Event.Tree.TransformStarted.dispatch(t, n), r.transform.props.isBinding && (n.props.isBinding = !0), n.transformer.update(t, r, n).run(t).then(function(o) {
                                    n.resolveUpdate(i, r, o), e.Event.Tree.TransformFinished.dispatch(t, {
                                        transform: n
                                    })
                                })["catch"](function(r) {
                                    i.reject(r), e.Event.Tree.TransformFinished.dispatch(t, {
                                        transform: n,
                                        error: r
                                    })
                                })
                            })
                        }, r
                    }();
                    r.create = n, r.updateInstance = i, r.applyInstance = o, r.apply = u, r.update = l
                }(r = t.Transform || (t.Transform = {}))
            }(t = e.Tree || (e.Tree = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    function t() {
                        return new r.Impl(void 0, [])
                    }
                    e.build = t;
                    var r;
                    ! function(e) {
                        var t = function() {
                            function e(e, t) {
                                this.last = e, this.transforms = t
                            }
                            return e.prototype.add = function(t, r, n, i) {
                                var o = {
                                    selector: t,
                                    transform: r.create(n, i)
                                };
                                return this.transforms.push(o), this.last = o, new e(o, this.transforms)
                            }, e.prototype.then = function(t, r, n) {
                                if (!this.last) throw "Cannot 'then' on an empty builder";
                                var i = t.create(r, n),
                                    o = {
                                        selector: this.last.transform.props.ref,
                                        transform: i
                                    };
                                return this.transforms.push(o), new e(o, this.transforms)
                            }, e.prototype.compile = function() {
                                return this.transforms
                            }, e
                        }();
                        e.Impl = t
                    }(r = e.Builder || (e.Builder = {}))
                }(t = e.Transform || (e.Transform = {}))
            }(t = e.Tree || (e.Tree = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                function t(e, t) {
                    if (!e && !t) return !0;
                    if (!e || !t) return !1;
                    if (e.visual !== t.visual || e.entity !== t.entity) return !1;
                    if (!e.elements && !t.elements) return !0;
                    if (!e.elements || !t.elements || e.elements.length !== t.elements.length) return !1;
                    for (var r = e.elements, n = t.elements, i = 0, o = r.length; o > i; i++)
                        if (r[i] !== n[i]) return !1;
                    return !0
                }
                e.interactivityInfoEqual = t
            }(t = e.Interactivity || (e.Interactivity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function t(t) {
                        var r = this;
                        this.context = t, this.providers = [], this.empty = [], e.Event.Visual.VisualHoverElement.getStream(t).subscribe(function(n) {
                            return e.Event.Interactivity.Highlight.dispatch(t, r.getInfo(n.data))
                        })
                    }
                    return t.prototype.addProvider = function(e) {
                        this.providers.push(e)
                    }, t.prototype.removeProvider = function(t) {
                        this.providers = this.providers.filter(function(e) {
                            return e !== t
                        }), e.Event.Interactivity.Highlight.dispatch(this.context, [])
                    }, t.prototype.getInfo = function(e) {
                        if (!e) return this.empty;
                        for (var t = [], r = 0, n = this.providers; r < n.length; r++) {
                            var i = n[r],
                                o = i.call(null, e);
                            o && t.push(o)
                        }
                        return t
                    }, t
                }();
                t.HighlightManager = r
            }(t = e.Interactivity || (e.Interactivity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    function r(e, t, r) {
                        for (var n, i, o, a, s = t.structure, u = s.atoms, l = u.residueIndex, c = u.chainIndex, h = u.entityIndex, p = u.name, d = u.authName, f = u.id, m = u.occupancy, v = u.tempFactor, g = u.elementSymbol, y = u.x, b = u.y, x = u.z, _ = u.altLoc, w = s.residues, C = w.name, E = w.authName, S = w.seqNumber, T = w.authSeqNumber, M = w.insCode, A = w.isHet, P = s.chains, R = P.asymId, k = P.authAsymId, I = s.entities.entityId, D = -1, B = -1, L = -1, V = -1, N = function() {
                                return n = {
                                    index: B,
                                    entityId: I[B]
                                }
                            }, O = function() {
                                return i = {
                                    index: L,
                                    asymId: R[L],
                                    authAsymId: k[L],
                                    entity: n
                                }
                            }, F = function() {
                                return o = {
                                    index: V,
                                    name: C[V],
                                    authName: E[V],
                                    seqNumber: S[V],
                                    authSeqNumber: T[V],
                                    insCode: M[V],
                                    isHet: A[V],
                                    chain: i
                                }
                            }, U = function() {
                                return a = {
                                    index: D,
                                    id: f[D],
                                    name: p[D],
                                    authName: d[D],
                                    elementSymbol: g[D],
                                    occupancy: m[D],
                                    tempFactor: v[D],
                                    x: y[D],
                                    y: b[D],
                                    z: x[D],
                                    altLoc: _[D],
                                    residue: o
                                }
                            }, z = [], H = [], j = [], G = [], q = 0; q < r.length; q++) D = r[q], t.hasAtom(D) && (B !== h[D] && (B = h[D], z.push(N())), L !== c[D] && (L = c[D], H.push(O())), V !== l[D] && (V = l[D], j.push(F())), G.push(U()));
                        return {
                            modelRef: e.ref,
                            moleculeId: s.id,
                            modelId: s.modelId,
                            atoms: G,
                            residues: j,
                            chains: H,
                            entities: z
                        }
                    }

                    function n(t) {
                        if (!t.entity || !e.Tree.Node.is(t.entity, e.Entity.Molecule.Model) && !e.Tree.Node.is(t.entity, e.Entity.Molecule.Selection)) return void 0;
                        var n = e.Utils.Molecule.findQueryContext(t.entity),
                            i = e.Utils.Molecule.findModel(t.entity);
                        return n && i ? r(i, n, t.elements) : void 0
                    }

                    function i(t) {
                        var r = [];
                        return 1 !== t.occupancy && r.push("occupancy " + e.Utils.round(t.occupancy, 2)), t.altLoc && r.push("alt. loc " + t.altLoc), r.length ? " <small>[" + r.join(", ") + "]</small>" : ""
                    }

                    function o(t) {
                        return "<span><b>" + t.name + " " + t.elementSymbol + " " + t.id + "</b>" + i(t) + " at (" + e.Utils.round(t.x, 1) + ", " + e.Utils.round(t.y, 1) + ", " + e.Utils.round(t.z, 1) + ")</span>"
                    }

                    function a(e) {
                        return "<span>" + e.name + " " + e.elementSymbol + " " + e.id + i(e) + "</span>"
                    }

                    function s(e) {
                        return "<span>" + e.authName + " " + e.chain.asymId + " " + e.authSeqNumber + (null !== e.insCode ? " i: " + e.insCode : "") + "</span>"
                    }

                    function u(e) {
                        return e && e.atoms.length ? 1 === e.atoms.length ? "<span>" + o(e.atoms[0]) + " on <b><small>" + s(e.residues[0]) + "</small></b></span>" : 1 === e.residues.length ? "<span><b>" + s(e.residues[0]) + "</b></span>" : "<span><small>" + e.atoms.length + " atoms on</small> <b>" + e.residues.length + " residues</b></span>" : "";
                    }

                    function l(e) {
                        return e && e.atoms.length ? 1 === e.atoms.length ? "<span><b>" + a(e.atoms[0]) + "<b></span>" : 1 === e.residues.length ? "<span><b>" + s(e.residues[0]) + "</b></span>" : "<span><b>" + e.residues.length + " residues</b></span>" : ""
                    }

                    function c(t) {
                        return t.entity && (e.Tree.Node.is(t.entity, e.Entity.Molecule.Model) || e.Tree.Node.is(t.entity, e.Entity.Molecule.Selection)) ? !0 : !1
                    }
                    t.transformMoleculeAtomIndices = r, t.transformInteraction = n, t.formatInfo = u, t.formatInfoShort = l, t.isMoleculeModelInteractivity = c
                }(r = t.Molecule || (t.Molecule = {}))
            }(t = e.Interactivity || (e.Interactivity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n = function() {
                    function e(e, r) {
                        var n = this;
                        this.context = e, this.scene = r, this.entries = new Map, this.originalThemes = new Map, t.Event.Tree.NodeAdded.getStream(e).subscribe(function(e) {
                            t.Entity.isClass(e.data, t.Entity.VisualClass) && n.add(e.data)
                        }), t.Event.Tree.NodeRemoved.getStream(e).subscribe(function(e) {
                            t.Entity.isClass(e.data, t.Entity.VisualClass) && n.remove(e.data)
                        }), t.Event.Tree.NodeUpdated.getStream(e).subscribe(function(e) {
                            if (t.Entity.isVisual(e.data)) {
                                var r = n.entries.get(e.data.id);
                                if (r) {
                                    var i = 2 !== r.state.visibility;
                                    r.props.model.getVisibility() !== i && r.props.model.updateVisibility(i)
                                }
                            }
                        }), t.Command.Visual.UpdateBasicTheme.getStream(e).subscribe(function(e) {
                            if (n.entries.get(e.data.visual.id) && t.Entity.isVisual(e.data.visual)) {
                                var r = e.data.visual;
                                n.originalThemes.get(r.id) || n.originalThemes.set(r.id, r.props.model.theme), r.props.model.applyTheme(e.data.theme)
                            }
                        }), t.Command.Molecule.Highlight.getStream(e).subscribe(function(e) {
                            return n.highlightMoleculeModel(e.data)
                        }), t.Command.Visual.ResetTheme.getStream(e).subscribe(function(e) {
                            return n.resetThemesAndHighlight(e.data && e.data.selection)
                        })
                    }
                    return e.prototype.add = function(e) {
                        if (this.entries.has(e.id) || !e.props.model) return !1;
                        this.entries.set(e.id, e), this.scene.scene.models.add(e.props.model, 1 === this.entries.size);
                        var t = 2 !== e.state.visibility;
                        return e.props.model.getVisibility() !== t && e.props.model.updateVisibility(t), e.props.model.tag = e, !0
                    }, e.prototype.remove = function(e) {
                        return this.entries.has(e.id) ? (this.entries["delete"](e.id), this.originalThemes["delete"](e.id), this.scene.scene.models.removeAndDispose(e.props.model), e.props.model.tag = void 0, e.props.model = void 0, !0) : !1
                    }, e.prototype.get = function(e) {
                        return this.entries.get(e)
                    }, e.prototype.resetThemesAndHighlight = function(e) {
                        var r = this;
                        if (!e) return this.originalThemes.forEach(function(e, t) {
                            r.entries.get(t).props.model.applyTheme(e)
                        }), this.originalThemes.clear(), this.entries.forEach(function(e) {
                            return e.props.model.highlight(!1)
                        }), void this.scene.scene.forceRender();
                        for (var n = this.context.select(e), i = 0, o = n; i < o.length; i++) {
                            var a = o[i];
                            if (t.Entity.isVisual(a) && this.originalThemes.has(a.id)) {
                                var s = a,
                                    u = this.originalThemes.get(s.id);
                                s.props.model.applyTheme(u), s.props.model.highlight(!1), this.originalThemes["delete"](s.id)
                            }
                        }
                        this.scene.scene.forceRender()
                    }, e.prototype.highlightMoleculeModel = function(e) {
                        var r = this,
                            n = t.Utils.Molecule.findModel(e.model);
                        if (!n) return void console.warn("Highlight: Trying to highlight a non-molecule model entity, ignoring...");
                        var i = [];
                        if (this.context.select(t.Tree.Selection.byValue(e.model).subtree()).forEach(function(e) {
                                t.Entity.isVisual(e) && r.entries.get(e.id) && i.push(e)
                            }), i.length) {
                            var o = t.Utils.Molecule.getModelAndIndicesFromQuery(n, e.query);
                            if (o.model && o.indices.length)
                                for (var a = e.isOn ? 3 : 4, s = 0, u = i; s < u.length; s++) {
                                    var l = u[s];
                                    l.props.model.applySelection(o.indices, a)
                                }
                        }
                    }, e
                }();
                r.DisplayList = n;
                var i = function() {
                    function r(r, i, o) {
                        var a = this;
                        this.context = i, this._destroyed = !1, this.cameraChanged = new t.Rx.Subject, this.cameraObserver = function(e) {
                            return a.cameraChanged.onNext(e)
                        }, this.models = new n(i, this), this.scene = new e.Visualization.Scene(r, o), this.scene.camera.observe(this.cameraObserver), this.scene.events.addEventListener("hover", function(e) {
                            return a.handleEvent(e, t.Event.Visual.VisualHoverElement)
                        }), this.scene.events.addEventListener("select", function(e) {
                            return a.handleEvent(e, t.Event.Visual.VisualSelectElement)
                        }), this.cameraChanged.throttle(1e3 / 30).subscribe(function(e) {
                            t.Event.Visual.CameraChanged.dispatch(a.context, e)
                        }), t.Command.Entity.Focus.getStream(i).subscribe(function(e) {
                            if (1 === e.data.length) {
                                var r = e.data[0];
                                t.Entity.isMoleculeSelection(r) ? a.focusMoleculeModelSelection(r) : t.Entity.isClass(r, t.Entity.VisualClass) && a.scene.camera.focusOnModel(r.props.model)
                            } else(n = a.scene.camera).focusOnModel.apply(n, e.data.filter(function(e) {
                                return t.Entity.isClass(e, t.Entity.VisualClass)
                            }).map(function(e) {
                                return e.props.model
                            }));
                            var n
                        }), t.Command.Entity.Highlight.getStream(i).subscribe(function(e) {
                            for (var r = 0, n = e.data.entities; r < n.length; r++) {
                                var i = n[r];
                                t.Entity.isClass(i, t.Entity.VisualClass) && i.props.model && i.props.model.highlight(e.data.isOn)
                            }
                        }), t.Command.Visual.ResetScene.getStream(i).subscribe(function(e) {
                            return a.resetScene()
                        }), t.Command.Molecule.FocusQuery.getStream(i).subscribe(function(e) {
                            return a.focusMoleculeModelOnQuery(e.data)
                        })
                    }
                    return r.prototype.resetScene = function() {
                        this._destroyed || (t.Event.Visual.VisualSelectElement.dispatch(this.context, {}), this.models.resetThemesAndHighlight(), this.scene.camera.reset())
                    }, Object.defineProperty(r.prototype, "camera", {
                        get: function() {
                            return this.scene.camera
                        },
                        enumerable: !0,
                        configurable: !0
                    }), r.prototype.destroy = function() {
                        this._destroyed || (this.scene.camera.stopObserving(this.cameraObserver), this.scene.destroy(), this.scene = void 0, this._destroyed = !0)
                    }, r.prototype.handleEvent = function(e, t) {
                        var r = e.data;
                        r && r.model ? t.dispatch(this.context, {
                            entity: r.model.entity,
                            visual: r.model.tag,
                            elements: r.elements
                        }) : t.dispatch(this.context, {})
                    }, r.prototype.focusMoleculeModelSelection = function(e) {
                        if (!t.Tree.Node.is(e, t.Entity.Molecule.Selection)) return void console.warn("Focus: Trying to focus on non-molecule selection, ignoring...");
                        var r = t.Utils.Molecule.findModel(e);
                        if (!r) return void console.warn("Focus: Molecule model for selection not found, ignoring...");
                        var n = {
                                x: .1,
                                y: .1,
                                z: .1
                            },
                            i = t.Utils.Molecule.getCentroidAndRadius(r.props.model, e.props.indices, n);
                        this.scene.camera.focusOnPoint(n, i)
                    }, r.prototype.focusMoleculeModelOnQuery = function(e) {
                        var r = t.Utils.Molecule.getModelAndIndicesFromQuery(e.model, e.query);
                        if (r.model && r.indices.length) {
                            var n = {
                                    x: .1,
                                    y: .1,
                                    z: .1
                                },
                                i = t.Utils.Molecule.getCentroidAndRadius(r.model.props.model, r.indices, n);
                            this.scene.camera.focusOnPoint(n, i)
                        }
                    }, r
                }();
                r.SceneWrapper = i
            }(r = t.Visualization || (t.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    function r(t, r) {
                        var n = t.colors || e.Immutable.Map();
                        if (r.colors)
                            for (var i = 0, o = Object.keys(r.colors); i < o.length; i++) {
                                var a = o[i];
                                n.set(a, r.colors[a])
                            }
                        var s = e.Utils.shallowClone(t);
                        return s.colors = n, r.transparency && (s.transparency = r.transparency), void 0 !== r.interactive && (s.interactive = r.interactive), s
                    }

                    function n(e) {
                        var t = new Map;
                        return e.colors && e.colors.forEach(function(e, r) {
                            return t.set(r, e)
                        }), {
                            colors: t,
                            transparency: e.transparency,
                            interactive: e.interactive
                        }
                    }
                    t.mergeProps = r, t.getProps = n
                }(r = t.Theme || (t.Theme = {}))
            }(t = e.Visualization || (e.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    function n(e, t) {
                        return function(r) {
                            return t[e[r]]
                        }
                    }

                    function i(e, r) {
                        return function(i, o) {
                            var a = t.Utils.Molecule.findModel(i).props.model,
                                u = e(a),
                                l = s.Theme.createPalleteMapping(n(u.index, u.property), r);
                            return s.Theme.createMapping(l, o)
                        }
                    }

                    function o(e, t) {
                        return t.colors && t.colors.set("Bond", t.colors.get("Uniform")), s.Theme.createUniform(t)
                    }

                    function a(e, r, i) {
                        return function(o, a) {
                            var u = t.Utils.Molecule.findModel(o).props.model,
                                l = e(u),
                                c = s.Theme.createColorMapMapping(n(l.index, l.property), r, i);
                            return s.Theme.createMapping(c, a)
                        }
                    }
                    var s = e.Visualization;
                    r.UniformBaseColors = t.Immutable.Map({
                        Uniform: s.Theme.Default.UniformColor,
                        Highlight: s.Theme.Default.HighlightColor,
                        Selection: s.Theme.Default.SelectionColor
                    }), r.ModelVisualBaseColors = t.Immutable.Map({
                        Bond: s.Molecule.Colors.DefaultBondColor,
                        Highlight: s.Theme.Default.HighlightColor,
                        Selection: s.Theme.Default.SelectionColor
                    }), r.createPaletteThemeProvider = i, r.uniformThemeProvider = o, r.createColorMapThemeProvider = a;
                    var u;
                    ! function(e) {
                        e.Themes = [{
                            name: "Chain ID",
                            description: "Color the surface by Chain ID.",
                            colors: r.ModelVisualBaseColors,
                            provider: i(function(e) {
                                return {
                                    index: e.atoms.residueIndex,
                                    property: e.residues.asymId
                                }
                            }, s.Molecule.Colors.DefaultPallete)
                        }, {
                            name: "Entity ID",
                            description: "Color the surface by Entity ID.",
                            colors: r.ModelVisualBaseColors,
                            provider: i(function(e) {
                                return {
                                    index: e.atoms.residueIndex,
                                    property: e.residues.entityId
                                }
                            }, s.Molecule.Colors.DefaultPallete)
                        }, {
                            name: "Entity Type",
                            description: "Color the surface by Entity Type.",
                            colors: r.ModelVisualBaseColors,
                            provider: i(function(e) {
                                return {
                                    index: e.atoms.entityIndex,
                                    property: e.entities.entityType
                                }
                            }, s.Molecule.Colors.DefaultPallete)
                        }, {
                            name: "Residue Name",
                            description: "Color the surface by residue name.",
                            colors: r.ModelVisualBaseColors,
                            provider: i(function(e) {
                                return {
                                    index: e.atoms.residueIndex,
                                    property: e.residues.name
                                }
                            }, s.Molecule.Colors.DefaultPallete)
                        }, {
                            name: "Element Symbol",
                            description: "Color the surface by atom elemnt symbol.",
                            colors: r.ModelVisualBaseColors,
                            provider: a(function(e) {
                                return {
                                    index: e.atoms.indices,
                                    property: e.atoms.elementSymbol
                                }
                            }, s.Molecule.Colors.DefaultElementColorMap, s.Molecule.Colors.DefaultElementColor)
                        }, {
                            name: "Uniform Color",
                            description: "Same color everywhere.",
                            colors: r.UniformBaseColors,
                            provider: o
                        }], e.CartoonThemeTemplate = e.Themes[0], e.ElementSymbolThemeTemplate = e.Themes[4], e.SurfaceThemeTemplate = e.Themes[5], e.UniformThemeTemplate = e.Themes[5]
                    }(u = r.Default || (r.Default = {}))
                }(n = r.Molecule || (r.Molecule = {}))
            }(r = t.Visualization || (t.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    function i(e, t) {
                        if ("Automatic" === e) return 75e3 > t ? 3 : 25e4 > t ? 2 : 6e5 > t ? 1 : 0;
                        var r = n.DetailTypes.indexOf(e) - 1;
                        return Math.max(r, 0)
                    }

                    function o(e, t) {
                        return {
                            tessalation: e,
                            drawingType: t ? f.Cartoons.CartoonsModelType.AlphaTrace : f.Cartoons.CartoonsModelType.Default
                        }
                    }

                    function a(e, r) {
                        if (!r.useVDW) return function(e) {
                            return function() {
                                return e
                            }
                        }(r.atomRadius);
                        var n = t.Utils.vdwRadiusFromElementSymbol(e);
                        return function(e, t) {
                            return function(r) {
                                return e * t(r)
                            }
                        }(r.vdwScaling, n)
                    }

                    function s(e, t, r) {
                        return {
                            tessalation: e,
                            bondRadius: r.bondRadius,
                            hideBonds: !1,
                            atomRadius: a(t, r)
                        }
                    }

                    function u(e, r) {
                        return {
                            tessalation: e,
                            bondRadius: 0,
                            hideBonds: !0,
                            atomRadius: t.Utils.vdwRadiusFromElementSymbol(r)
                        }
                    }

                    function l(e, r, n) {
                        var a = t.Utils.Molecule.findModel(e).props.model,
                            l = t.Entity.isMoleculeModel(e) ? e.props.model.atoms.indices : e.props.indices;
                        if (!l.length) return void 0;
                        var c = i(r.params.detail, l.length);
                        switch (r.type) {
                            case "Cartoons":
                                return f.Cartoons.Model.create(e, {
                                    model: a,
                                    atomIndices: l,
                                    theme: n,
                                    queryContext: t.Utils.Molecule.findQueryContext(e),
                                    params: o(c, !1)
                                });
                            case "Calpha":
                                return f.Cartoons.Model.create(e, {
                                    model: a,
                                    atomIndices: l,
                                    theme: n,
                                    queryContext: t.Utils.Molecule.findQueryContext(e),
                                    params: o(c, !0)
                                });
                            case "BallsAndSticks":
                                return d.Molecule.BallsAndSticks.Model.create(e, {
                                    model: a,
                                    atomIndices: l,
                                    theme: n,
                                    params: s(c, a, r.params)
                                });
                            case "VDWBalls":
                                return d.Molecule.BallsAndSticks.Model.create(e, {
                                    model: a,
                                    atomIndices: l,
                                    theme: n,
                                    params: u(c, a)
                                });
                            default:
                                return void 0
                        }
                    }

                    function c(e, i, o) {
                        return t.Task.create("Visual (" + e.props.label + ")", o.computeOnBackground ? "Silent" : "Normal", function(a) {
                            var s = n.TypeDescriptions[o.type].label;
                            a.update("Creating " + s + "..."), a.schedule(function() {
                                var n = o.theme.template.provider(t.Utils.Molecule.findModel(e), r.Theme.getProps(o.theme)),
                                    u = l(e, o, n);
                                if (!u) return void a.reject("Invalid input parameters.");
                                var c = u.run();
                                c.progress.subscribe(function(e) {
                                    return a.update(s + ": " + t.Utils.formatProgress(e), e.requestAbort)
                                }), c.result.then(function(e) {
                                    var r = t.Entity.Molecule.Visual.create(i, {
                                        label: s,
                                        model: e,
                                        style: o,
                                        isSelectable: !o.isNotSelectable
                                    });
                                    a.resolve(r)
                                })["catch"](a.reject)
                            }, 0)
                        })
                    }

                    function h(i, o, a) {
                        return t.Task.create("Molecular Surface (" + i.props.label + ")", a.computeOnBackground ? "Silent" : "Normal", function(s) {
                            var u = t.Utils.Molecule.findModel(i).props.model,
                                l = t.Entity.isMoleculeModel(i) ? i.props.model.atoms.indices : i.props.indices,
                                c = a.params,
                                h = n.TypeDescriptions[a.type].label,
                                p = e.Core.Geometry.MolecularSurface.computeMolecularSurfaceAsync({
                                    positions: u.atoms,
                                    atomIndices: l,
                                    parameters: {
                                        atomRadius: t.Utils.vdwRadiusFromElementSymbol(u),
                                        density: c.density,
                                        probeRadius: c.probeRadius,
                                        smoothingIterations: 2 * c.smoothing,
                                        interactive: !0
                                    }
                                }).run();
                            p.progress.subscribe(function(e) {
                                return s.update(h + ": " + t.Utils.formatProgress(e), e.requestAbort)
                            }), p.result.then(function(n) {
                                var u = a.theme.template.provider(t.Utils.Molecule.findModel(i), r.Theme.getProps(a.theme));
                                s.update("Creating visual..."), s.schedule(function() {
                                    var r = e.Visualization.Surface.Model.create(i, {
                                        surface: n.surface,
                                        theme: u,
                                        parameters: {
                                            isWireframe: a.params.isWireframe
                                        }
                                    }).run();
                                    r.progress.subscribe(function(e) {
                                        return s.update(h + ": " + t.Utils.formatProgress(e), e.requestAbort)
                                    }), r.result.then(function(e) {
                                        var r = "Surface, " + t.Utils.round(c.probeRadius, 2) + " â„« probe",
                                            n = t.Entity.Molecule.Visual.create(o, {
                                                label: r,
                                                model: e,
                                                style: a,
                                                isSelectable: !a.isNotSelectable
                                            });
                                        s.resolve(n)
                                    })["catch"](s.reject)
                                }, 0)
                            })["catch"](s.reject)
                        })
                    }

                    function p(e, t, r) {
                        return "Surface" === r.type ? h(e, t, r) : c(e, t, r)
                    }
                    var d = e.Visualization,
                        f = e.Visualization.Molecule;
                    n.create = p
                }(n = r.Molecule || (r.Molecule = {}))
            }(r = t.Visualization || (t.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(e) {
                var t;
                ! function(e) {
                    e.TypeDescriptions = {
                        Cartoons: {
                            label: "Cartoon",
                            shortLabel: "Cartoon"
                        },
                        Calpha: {
                            label: "C-Î± Trace",
                            shortLabel: "C-Î±"
                        },
                        BallsAndSticks: {
                            label: "Balls and Sticks",
                            shortLabel: "B'n'S"
                        },
                        VDWBalls: {
                            label: "VDW Balls",
                            shortLabel: "VDW"
                        },
                        Surface: {
                            label: "Surface",
                            shortLabel: "Surface"
                        }
                    }, e.Types = ["Cartoons", "Calpha", "BallsAndSticks", "VDWBalls", "Surface"], e.DetailTypes = ["Automatic", "Very Low", "Low", "Medium", "High", "Very High"];
                    var t;
                    ! function(e) {
                        e.DetailParams = {
                            detail: "Automatic"
                        }, e.BallsAndSticksParams = {
                            useVDW: !0,
                            vdwScaling: .22,
                            atomRadius: .35,
                            bondRadius: .09,
                            detail: "Automatic"
                        }, e.SurfaceParams = {
                            probeRadius: 1.4,
                            density: 1.1,
                            smoothing: 6,
                            isWireframe: !1
                        }, e.Transparency = {
                            alpha: 1,
                            writeDepth: !1
                        }, e.ForType = function() {
                            for (var t = {
                                    Cartoons: {
                                        type: "Cartoons",
                                        params: {
                                            detail: "Automatic"
                                        },
                                        theme: {
                                            template: e.CartoonThemeTemplate,
                                            colors: e.CartoonThemeTemplate.colors,
                                            transparency: e.Transparency,
                                            interactive: !0
                                        }
                                    },
                                    Calpha: {
                                        type: "Calpha",
                                        params: {
                                            detail: "Automatic"
                                        },
                                        theme: {
                                            template: e.CartoonThemeTemplate,
                                            colors: e.CartoonThemeTemplate.colors,
                                            transparency: e.Transparency,
                                            interactive: !0
                                        }
                                    },
                                    BallsAndSticks: {
                                        type: "BallsAndSticks",
                                        params: e.BallsAndSticksParams,
                                        theme: {
                                            template: e.ElementSymbolThemeTemplate,
                                            colors: e.ElementSymbolThemeTemplate.colors,
                                            transparency: e.Transparency,
                                            interactive: !0
                                        }
                                    },
                                    VDWBalls: {
                                        type: "VDWBalls",
                                        params: {
                                            detail: "Automatic"
                                        },
                                        theme: {
                                            template: e.ElementSymbolThemeTemplate,
                                            colors: e.ElementSymbolThemeTemplate.colors,
                                            transparency: e.Transparency,
                                            interactive: !0
                                        }
                                    },
                                    Surface: {
                                        type: "Surface",
                                        params: e.SurfaceParams,
                                        theme: {
                                            template: e.SurfaceThemeTemplate,
                                            colors: e.SurfaceThemeTemplate.colors,
                                            transparency: {
                                                alpha: .33,
                                                writeDepth: !1
                                            },
                                            interactive: !0
                                        }
                                    }
                                }, r = new Map, n = 0, i = Object.keys(t); n < i.length; n++) {
                                var o = i[n];
                                r.set(o, t[o])
                            }
                            return r
                        }()
                    }(t = e.Default || (e.Default = {}))
                }(t = e.Molecule || (e.Molecule = {}))
            }(t = e.Visualization || (e.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    function i(t, r, n, i) {
                        for (var o = n[0] - r[0], a = n[1] - r[1], s = n[2] - r[2], u = [r, [r[0] + o, r[1], r[2]],
                                [r[0], r[1] + a, r[2]],
                                [r[0], r[1], r[2] + s],
                                [r[0] + o, r[1] + a, r[2]],
                                [r[0] + o, r[1], r[2] + s],
                                [r[0], r[1] + a, r[2] + s],
                                [r[0] + o, r[1] + a, r[2] + s]
                            ], l = t.dataDimensions.slice(0), c = [0, 0, 0], h = 0, p = u; h < p.length; h++)
                            for (var d = p[h], f = (new e.Visualization.THREE.Vector3).fromArray(d).applyMatrix4(i), m = [f.x, f.y, f.z], v = 0; 3 > v; v++) l[v] = Math.max(0, Math.min(l[v], 0 | Math.floor(m[v]))), c[v] = Math.min(t.dataDimensions[v], Math.max(c[v], 0 | Math.ceil(m[v])));
                        return {
                            bottomLeft: l,
                            topRight: c
                        }
                    }

                    function o(n, o, s) {
                        return t.Task.create("Density Surface (" + n.props.label + ")", s.computeOnBackground ? "Silent" : "Normal", function(u) {
                            var l = s.params,
                                c = t.Tree.Node.findClosestNodeOfType(n, [t.Entity.Density.Data]);
                            if (!c) return void u.reject("Cannot create density visual on " + n.props.label);
                            var h = c.props.data,
                                p = h.basis,
                                d = (new e.Visualization.THREE.Matrix4).set(p.x[0], p.y[0], p.z[0], 0, 0, p.y[1], p.z[1], 0, 0, 0, p.z[2], 0, 0, 0, 0, 1);
                            d.setPosition(new e.Visualization.THREE.Vector3(h.origin[0], h.origin[1], h.origin[2]));
                            var f, m, v = (new e.Visualization.THREE.Matrix4).getInverse(d);
                            if (l.bottomLeft && l.topRight) {
                                var g = i(h, l.bottomLeft, l.topRight, v);
                                f = g.bottomLeft, m = g.topRight
                            } else f = [0, 0, 0], m = h.dataDimensions;
                            if (!(f[0] - m[0] && f[1] - m[1] && f[2] - m[2])) return void u.reject({
                                warn: !0,
                                message: "Empty box."
                            });
                            var y = h.valuesInfo.mean + h.valuesInfo.sigma * s.params.isoSigma,
                                b = a.MarchingCubes.compute({
                                    isoLevel: y,
                                    scalarField: h.data,
                                    bottomLeft: f,
                                    topRight: m
                                }).bind(function(e) {
                                    return a.Surface.transform(e, d.elements).bind(function(e) {
                                        return a.Surface.laplacianSmooth(e, l.smoothing)
                                    })
                                }).run();
                            b.progress.subscribe(function(e) {
                                return u.update("Density Surface (" + c.props.label + "): " + t.Utils.formatProgress(e), e.requestAbort)
                            }), b.result.then(function(n) {
                                var i = s.theme.template.provider(c, r.Theme.getProps(s.theme));
                                u.update("Creating visual..."), u.schedule(function() {
                                    var r = e.Visualization.Surface.Model.create(c, {
                                        surface: n,
                                        theme: i,
                                        parameters: {
                                            isWireframe: s.params.isWireframe
                                        }
                                    }).run();
                                    r.progress.subscribe(function(e) {
                                        return u.update("Density Surface (" + c.props.label + "): " + t.Utils.formatProgress(e), e.requestAbort)
                                    }), r.result.then(function(e) {
                                        var r = "Surface, " + t.Utils.round(l.isoSigma, 2) + " Ïƒ",
                                            n = t.Entity.Density.Visual.create(o, {
                                                label: r,
                                                model: e,
                                                style: s,
                                                isSelectable: !s.isNotSelectable
                                            });
                                        u.resolve(n)
                                    })["catch"](u.reject)
                                }, 0)
                            })["catch"](u.reject)
                        })
                    }
                    var a = e.Core.Geometry;
                    n.create = o
                }(n = r.Density || (r.Density = {}))
            }(r = t.Visualization || (t.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n;
                    ! function(e) {
                        function t(e) {
                            var t = i.Theme.colors.set("Uniform", e.color);
                            return {
                                type: {},
                                params: {
                                    isoSigma: e.isoSigma,
                                    smoothing: 1,
                                    isWireframe: !!e.isWireframe
                                },
                                theme: {
                                    template: i.Theme,
                                    colors: t,
                                    transparency: e.transparency ? e.transparency : i.Transparency,
                                    interactive: !1
                                }
                            }
                        }
                        e.create = t
                    }(n = r.Style || (r.Style = {}));
                    var i;
                    ! function(r) {
                        function n(e, t) {
                            return i.Theme.createUniform(t)
                        }
                        r.Params = {
                            isoSigma: 0,
                            smoothing: 1,
                            isWireframe: !1
                        };
                        var i = e.Visualization,
                            o = t.Immutable.Map({
                                Uniform: i.Theme.Default.UniformColor,
                                Highlight: i.Theme.Default.HighlightColor,
                                Selection: i.Theme.Default.SelectionColor
                            });
                        r.Themes = [{
                            name: "Uniform Color",
                            description: "Same color everywhere.",
                            colors: o,
                            provider: n
                        }], r.Transparency = {
                            alpha: 1,
                            writeDepth: !1
                        }, r.Theme = r.Themes[0], r.Style = {
                            type: {},
                            params: r.Params,
                            theme: {
                                template: r.Theme,
                                colors: r.Theme.colors,
                                transparency: r.Transparency,
                                interactive: !1
                            }
                        }
                    }(i = r.Default || (r.Default = {}))
                }(n = r.Density || (r.Density = {}))
            }(r = t.Visualization || (t.Visualization = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(e, t) {
                    return e.type.info.typeClass === t
                }

                function n(e, t) {
                    return e.info.typeClass === t
                }

                function i(t, r) {
                    return new o(e.Utils.generateUUID(), t, r ? r : {})
                }
                t.isClass = r, t.isTypeClass = n, t.RootClass = "Root", t.GroupClass = "Group", t.DataClass = "Data", t.ObjectClass = "Object", t.VisualClass = "Visual", t.SelectionClass = "Selection", t.ActionClass = "Action", t.BehaviourClass = "Behaviour";
                var o = function() {
                    function t(e, t, r) {
                        this.id = e, this.info = t, this.traits = r
                    }
                    return t.prototype.create = function(t, r) {
                        var n = {
                            id: e.Tree.Node.createId(),
                            version: 0,
                            index: 0,
                            ref: "undefined",
                            tag: void 0,
                            tree: void 0,
                            props: r,
                            state: {
                                isCollapsed: !1,
                                visibility: 0
                            },
                            isHidden: !1,
                            transform: t,
                            parent: void 0,
                            children: [],
                            type: this
                        };
                        return e.Tree.Node.update(n)
                    }, t
                }();
                t.create = i
            }(t = e.Entity || (e.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(t) {
                    t.tree && (e.Event.Tree.NodeUpdated.dispatch(t.tree.context, t), t.tree.context.currentEntity === t && e.Event.Entity.CurrentChanged.dispatch(t.tree.context, t))
                }

                function n(t) {
                    var n = {
                        isCollapsed: !t.state.isCollapsed
                    };
                    e.Tree.Node.withState(t, n), r(t)
                }

                function i(t) {
                    var n = t.tree.context.currentEntity;
                    if (!(n === t || t && t.isHidden)) {
                        for (var i = t.parent; i.parent !== i;) {
                            if (i.isHidden) return;
                            i = i.parent
                        }
                        t.tree.context.currentEntity = t, n && (e.Tree.Node.update(n), r(n)), t && (e.Tree.Node.update(t), r(t)), e.Event.Entity.CurrentChanged.dispatch(t.tree.context, t), n && e.Tree.updatePath(n), e.Tree.updatePath(t.parent)
                    }
                }

                function o(t) {
                    if (t) {
                        for (var n = 0, i = 0, a = 0, s = t.children; a < s.length; a++) {
                            var u = s[a],
                                l = u.state.visibility;
                            0 === l ? n++ : 2 === l && i++
                        }
                        var c;
                        if (c = n === t.children.length ? 0 : i === t.children.length ? 2 : 1, c !== t.state.visibility) {
                            var l = {
                                visibility: c
                            };
                            e.Tree.Node.withState(t, l), r(t)
                        }
                        t.parent !== t && o(t.parent)
                    }
                }

                function a(t, n) {
                    var i = n ? 0 : 2;
                    e.Tree.Node.forEach(t, function(t) {
                        var n = t.state.visibility;
                        if (n !== i) {
                            var o = {
                                visibility: i
                            };
                            e.Tree.Node.withState(t, o), r(t)
                        }
                    }), o(t.parent)
                }
                t.nodeUpdated = r, t.toggleExpanded = n, t.setCurrent = i, t.updateVisibilityState = o, t.setVisibility = a
            }(t = e.Entity || (e.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(e) {
                    return e && e.type === s.Molecule
                }

                function n(e) {
                    return e && e.type === s.Model
                }

                function i(e) {
                    return e && e.type === s.Selection
                }

                function o(e) {
                    return e && e.type.info.typeClass === t.VisualClass
                }
                t.isMolecule = r, t.isMoleculeModel = n, t.isMoleculeSelection = i, t.isVisual = o, t.RootTransform = e.Tree.Transform.create({}, {}, void 0), t.Root = t.create({
                    name: "Root",
                    typeClass: "Root",
                    shortName: "R",
                    description: "Where everything begins."
                }), t.Group = t.create({
                    name: "Group",
                    typeClass: "Group",
                    shortName: "G",
                    description: "A group on entities."
                }), t.Action = t.create({
                    name: "Action",
                    typeClass: "Action",
                    shortName: "A",
                    description: "Represents an action performed on the entity tree."
                });
                var a;
                ! function(e) {
                    e.Types = ["String", "Binary"], e.String = t.create({
                        name: "String Data",
                        typeClass: "Data",
                        shortName: "S_D",
                        description: "A string."
                    }), e.Binary = t.create({
                        name: "Binary Data",
                        typeClass: "Data",
                        shortName: "B_D",
                        description: "A binary blob."
                    }), e.CifDictionary = t.create({
                        name: "Cif Dictionary",
                        typeClass: "Data",
                        shortName: "CD",
                        description: "Represents parsed CIF data."
                    }), e.Json = t.create({
                        name: "JSON Data",
                        typeClass: "Data",
                        shortName: "JS_D",
                        description: "Represents JSON data."
                    })
                }(a = t.Data || (t.Data = {}));
                var s;
                ! function(e) {
                    e.Molecule = t.create({
                        name: "Molecule",
                        typeClass: "Object",
                        shortName: "M",
                        description: "A molecule that might contain one or more models."
                    }), e.Model = t.create({
                        name: "Molecule Model",
                        typeClass: "Object",
                        shortName: "M_M",
                        description: "A model of a molecule."
                    }), e.Selection = t.create({
                        name: "Molecule Model Selection",
                        typeClass: "Selection",
                        shortName: "S_M",
                        description: "A selection of atoms."
                    }, {
                        isFocusable: !0
                    }), e.Visual = t.create({
                        name: "Molecule Visual",
                        typeClass: "Visual",
                        shortName: "V_M",
                        description: "A visual of a molecule."
                    }, {
                        isFocusable: !0
                    });
                    var r;
                    ! function(e) {
                        e.Behaviour = t.create({
                            name: "Coordinate Streaming",
                            typeClass: "Behaviour",
                            shortName: "CS",
                            description: "Behaviour that downloads surrounding residues when an atom or residue is selected."
                        })
                    }(r = e.CoordinateStreaming || (e.CoordinateStreaming = {}))
                }(s = t.Molecule || (t.Molecule = {}));
                var u;
                ! function(e) {
                    e.Data = t.create({
                        name: "Density Data",
                        typeClass: "Object",
                        shortName: "DD",
                        description: "Density data."
                    }), e.Visual = t.create({
                        name: "Density Visual",
                        typeClass: "Visual",
                        shortName: "V_DD",
                        description: "A visual of density data."
                    }, {
                        isFocusable: !0
                    }), e.InteractiveSurface = t.create({
                        name: "Interactive Surface",
                        typeClass: "Behaviour",
                        shortName: "B_IS",
                        description: "Behaviour that creates an interactive surface when an atom or residue is selected."
                    })
                }(u = t.Density || (t.Density = {}))
            }(t = e.Entity || (e.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function t(t) {
                        var r = this;
                        this.data = new Map, e.Event.Tree.NodeRemoved.getStream(t).subscribe(function(e) {
                            return r.data["delete"](e.data.id)
                        })
                    }
                    return t.prototype.get = function(e, t) {
                        var r = this.data.get(e.id);
                        return r ? r[t] : void 0
                    }, t.prototype.set = function(e, t, r) {
                        var n = this.data.get(e.id);
                        return n ? n[t] = r : this.data.set(e.id, (i = {}, i[t] = r, i)), r;
                        var i
                    }, t
                }();
                t.Cache = r;
                var r;
                ! function(e) {
                    var t;
                    ! function(e) {
                        e.QueryContext = "queryContext"
                    }(t = e.Keys || (e.Keys = {}))
                }(r = t.Cache || (t.Cache = {}))
            }(t = e.Entity || (e.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n;
                    ! function(r) {
                        function n(t, n) {
                            return i.create(t, function(i, o, a) {
                                return e.Task.create(t.name, "Background", function(s) {
                                    var u = r.CreateGroup.create({
                                        label: t.name
                                    }).apply(i, o);
                                    u.run(i).then(function(t) {
                                        var r = n.map(function(r) {
                                            return function() {
                                                return e.Task.guardedPromise(i, function(e, n) {
                                                    var s = r.params(a.params, o);
                                                    if (!s) return void e(void 0);
                                                    var u = r.transformer.create(s, {
                                                        isBinding: !0
                                                    });
                                                    u.apply(i, t).run(i).then(function(t) {
                                                        e(t)
                                                    })["catch"](n)
                                                })
                                            }
                                        });
                                        e.Task.sequencePromises(r, !0).then(function() {
                                            s.resolve(t)
                                        })["catch"](s.reject)
                                    })
                                })
                            })
                        }
                        var i = e.Tree.Transformer;
                        r.Root = i.create({
                            id: "root",
                            name: "Root",
                            description: "A transformer that always returns itself.",
                            from: [t.Root],
                            to: [t.Root],
                            validateParams: function() {
                                return void 0
                            },
                            defaultParams: function() {
                                return {}
                            }
                        }, function(t, r, n) {
                            return e.Task.resolve("Root", "Silent", r)
                        }), r.CreateGroup = i.create({
                            id: "create-group",
                            name: "Create Group",
                            description: "A transformer that always returns itself.",
                            from: [],
                            to: [t.Group],
                            validateParams: function() {
                                return void 0
                            },
                            defaultParams: function() {
                                return {}
                            }
                        }, function(r, n, i) {
                            var o = t.Group.create(i, {
                                label: i.params.label ? i.params.label : "Group",
                                description: i.params.description
                            });
                            if (i.params.isCollapsed) {
                                var a = {
                                    isCollapsed: !0
                                };
                                o = e.Tree.Node.withState(o, a)
                            }
                            return e.Task.resolve("Group", "Silent", o)
                        }), r.group = n
                    }(n = r.Basic || (r.Basic = {}))
                }(r = t.Transformer || (t.Transformer = {}))
            }(t = e.Entity || (e.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i;
                    ! function(i) {
                        function o(e) {
                            return t.Tree.Transformer.action({
                                id: "molecule-download-molecule-" + e.sourceId,
                                name: "Molecule from " + e.name,
                                description: e.description,
                                from: [r.Root],
                                to: [r.Action],
                                defaultParams: function(t) {
                                    return {
                                        id: e.defaultId
                                    }
                                },
                                validateParams: function(t) {
                                    return t.id && t.id.trim().length ? void 0 : ["Enter " + (e.isFullUrl ? "Url" : "Id")]
                                },
                                customController: function(r, n, i) {
                                    return new t.Components.Transform.Controller(r, n, i, !e.isCollaped)
                                }
                            }, function(r, o, a) {
                                return t.Tree.Transform.build().add(o, n.Data.Download, {
                                    url: e.urlTemplate(a.params.id.trim()),
                                    type: "String",
                                    id: a.params.id,
                                    description: e.name
                                }).then(n.Data.ParseCif, {
                                    id: a.params.id
                                }, {
                                    isBinding: !0
                                }).then(i.CreateFromCif, {
                                    blockIndex: 0
                                }, {
                                    isBinding: !0
                                }).then(i.CreateModel, {
                                    modelIndex: 0
                                }, {
                                    isBinding: !1
                                })
                            })
                        }
                        i.downloadMoleculeSource = o, i.OpenCifMoleculeFromFile = t.Tree.Transformer.action({
                            id: "molecule-open-cif-to-molecule",
                            name: "Molecule from CIF File",
                            description: "Open a molecule from a CIF file.",
                            from: [r.Root],
                            to: [r.Action],
                            defaultParams: function(e) {
                                return {}
                            },
                            validateParams: function(e) {
                                return e.file ? /(\.cif)(\.gz){0,1}$/i.test(e.file.name) ? void 0 : ["Select .cif or .cif.gz file"] : ["Select a file"]
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            }
                        }, function(e, r, o) {
                            return t.Tree.Transform.build().add(r, n.Data.OpenFile, {
                                file: o.params.file,
                                type: "String"
                            }).then(n.Data.ParseCif, {
                                id: o.params.file.name
                            }, {
                                isBinding: !0
                            }).then(i.CreateFromCif, {
                                blockIndex: 0
                            }, {
                                isBinding: !0
                            }).then(i.CreateModel, {
                                modelIndex: 0
                            }, {
                                isBinding: !1
                            })
                        });
                        var a = e.Core.Formats.Cif;
                        i.CreateFromCif = t.Tree.Transformer.create({
                            id: "molecule-create-from-cif",
                            name: "Molecule",
                            description: "Create a molecule from a CIF data block.",
                            from: [r.Data.CifDictionary],
                            to: [r.Molecule.Molecule],
                            defaultParams: function(e) {
                                return {
                                    blockIndex: 0
                                }
                            }
                        }, function(e, n, i) {
                            return t.Task.create("Create Molecule (" + n.props.label + ")", "Normal", function(e) {
                                e.update("Creating...");
                                var t = 0 | i.params.blockIndex,
                                    o = n.props.dictionary.dataBlocks[t];
                                return o ? void e.schedule(function() {
                                    var t = a.mmCif.ofDataBlock(o);
                                    e.resolve(r.Molecule.Molecule.create(i, {
                                        label: t.id,
                                        molecule: t
                                    }))
                                }) : void e.reject("The source contains only " + n.props.dictionary.dataBlocks.length + " data block(s), tried to access the " + (t + 1) + "-th.")
                            }).setReportTime(!0)
                        }), i.CreateModel = t.Tree.Transformer.create({
                            id: "molecule-create-model",
                            name: "Model",
                            description: "Create a model of a molecule.",
                            from: [r.Molecule.Molecule],
                            to: [r.Molecule.Model],
                            isUpdatable: !0,
                            defaultParams: function(e) {
                                return {
                                    modelIndex: 0
                                }
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            }
                        }, function(e, n, i) {
                            return t.Task.create("Create Model (" + n.props.label + ")", "Background", function(e) {
                                var t = i.params,
                                    o = 0 | t.modelIndex,
                                    a = n.props.molecule.models[o];
                                return a ? void e.resolve(r.Molecule.Model.create(i, {
                                    label: "Model " + a.modelId,
                                    description: a.atoms.count + " atom" + (1 !== a.atoms.count ? "s" : ""),
                                    model: a
                                })) : void e.reject("The molecule contains only " + n.props.molecule.models.length + " model(s), tried to access the " + (o + 1) + "-th.")
                            })
                        }), i.CreateSelection = t.Tree.Transformer.create({
                            id: "molecule-create-selection",
                            name: "Selection",
                            description: "Create an atom selection.",
                            from: [r.Molecule.Model, r.Molecule.Visual],
                            to: [r.Molecule.Selection],
                            isUpdatable: !0,
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            },
                            defaultParams: function(e) {
                                return {
                                    queryString: e.settings.get("molecule.model.defaultQuery") || ""
                                }
                            },
                            validateParams: function(t) {
                                if (!(t.queryString || "").trim().length) return ["Enter query"];
                                try {
                                    e.Core.Structure.Query.Builder.toQuery(t.queryString);
                                    return void 0
                                } catch (r) {
                                    return ["" + r]
                                }
                            }
                        }, function(n, i, o) {
                            return t.Task.create("Create Selection (" + i.props.label + ")", "Background", function(n) {
                                var a = o.params,
                                    s = e.Core.Structure.Query.Builder.toQuery(a.queryString),
                                    u = o.params.inFullContext ? t.Utils.Molecule.findModel(i).props.model.queryContext : t.Utils.Molecule.findQueryContext(i),
                                    l = s(u).unionAtomIndices();
                                return l.length ? void n.resolve(r.Molecule.Selection.create(o, {
                                    label: a.name ? a.name : "Selection",
                                    description: l.length + " atom" + (1 !== l.length ? "s" : ""),
                                    indices: l
                                })) : void n.reject({
                                    warn: !0,
                                    message: "Empty selection" + (o.params.name ? " (" + o.params.name + ")" : "") + "."
                                })
                            }).setReportTime(!o.params.silent)
                        }), i.CreateSelectionFromQuery = t.Tree.Transformer.create({
                            id: "molecule-create-selection",
                            name: "Selection",
                            description: "Create an atom selection.",
                            from: [r.Molecule.Model, r.Molecule.Visual],
                            to: [r.Molecule.Selection],
                            defaultParams: function(e) {
                                return {}
                            }
                        }, function(n, i, o) {
                            return t.Task.create("Create Selection (" + i.props.label + ")", "Background", function(n) {
                                var a = o.params,
                                    s = e.Core.Structure.Query.Builder.toQuery(a.query),
                                    u = o.params.inFullContext ? t.Utils.Molecule.findModel(i).props.model.queryContext : t.Utils.Molecule.findQueryContext(i),
                                    l = s(u).unionAtomIndices();
                                return l.length ? void n.resolve(r.Molecule.Selection.create(o, {
                                    label: a.name ? a.name : "Selection",
                                    description: l.length + " atom" + (1 !== l.length ? "s" : ""),
                                    indices: l
                                })) : void n.reject({
                                    warn: !0,
                                    message: "Empty selection" + (o.params.name ? " (" + o.params.name + ")" : "") + "."
                                })
                            }).setReportTime(!o.params.silent)
                        }), i.CreateAssembly = t.Tree.Transformer.create({
                            id: "molecule-create-assemly",
                            name: "Assembly",
                            description: "Create an assembly of a molecule.",
                            from: [r.Molecule.Model],
                            to: [r.Molecule.Model],
                            defaultParams: function(e, r) {
                                var n = t.Utils.Molecule.findModel(r),
                                    i = {
                                        name: e.settings.get("molecule.model.defaultAssemblyName") || "1"
                                    },
                                    o = n.props.model.assemblyInfo;
                                return o && o.assemblies.length ? o.assemblies.filter(function(e) {
                                    return e.name === i.name
                                }) ? i : (i.name = o.assemblies[0].name, i) : i
                            },
                            isUpdatable: !0,
                            isApplicable: function(e) {
                                return !!(e && e.props.model.assemblyInfo && e.props.model.assemblyInfo.assemblies.length)
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            }
                        }, function(n, i, o) {
                            return t.Task.create("Create Model (" + i.props.label + ")", "Background", function(t) {
                                var n = i.props.model.assemblyInfo;
                                if (!n || !n.assemblies.length) return void t.reject("Assembly info not available.");
                                var a = n.assemblies.filter(function(e) {
                                    return e.name === o.params.name;
                                })[0];
                                return a ? (t.update("Creating..."), void t.schedule(function() {
                                    var n = e.Core.Structure.buildAssembly(i.props.model, a);
                                    t.resolve(r.Molecule.Model.create(o, {
                                        label: "Assembly " + a.name,
                                        description: n.atoms.count + " atom" + (1 !== n.atoms.count ? "s" : ""),
                                        model: n
                                    }))
                                })) : void t.reject("No assembly called '" + o.params.name + "' found.")
                            })
                        }), i.CreateSymmetryMates = t.Tree.Transformer.create({
                            id: "molecule-create-symmetry-mates",
                            name: "Crystal Symmetry",
                            description: "Find crystal symmetry mates or interaction partners.",
                            from: [r.Molecule.Model],
                            to: [r.Molecule.Model],
                            defaultParams: function(e) {
                                return {
                                    type: "Interaction",
                                    radius: 5
                                }
                            },
                            isUpdatable: !0,
                            isApplicable: function(e) {
                                return !(!e || !e.props.model.symmetryInfo)
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            }
                        }, function(n, i, o) {
                            return t.Task.create("Create Model (" + i.props.label + ")", "Background", function(n) {
                                var a = i.props.model.symmetryInfo;
                                if (!a) return void n.reject("Spacegroup info info not available.");
                                var s = Math.max(o.params.radius, 0);
                                n.update("Creating..."), n.schedule(function() {
                                    var a = "Mates" === o.params.type ? e.Core.Structure.buildSymmetryMates(i.props.model, s) : e.Core.Structure.buildPivotGroupSymmetry(i.props.model, s);
                                    n.resolve(r.Molecule.Model.create(o, {
                                        label: "Symmetry",
                                        model: a,
                                        description: a.atoms.count + " atom" + (1 !== a.atoms.count ? "s" : "") + ", " + o.params.type + " " + t.Utils.round(s, 1) + " â„«"
                                    }))
                                })
                            })
                        }), i.CreateVisual = t.Tree.Transformer.create({
                            id: "molecule-create-visual",
                            name: "Visual",
                            description: "Create a visual of a molecule or a selection.",
                            from: [r.Molecule.Model, r.Molecule.Selection],
                            to: [r.Molecule.Visual],
                            isUpdatable: !0,
                            defaultParams: function(e) {
                                return {
                                    style: t.Visualization.Molecule.Default.ForType.get("Cartoons")
                                }
                            },
                            validateParams: function(e) {
                                return e.style ? void 0 : ["Specify Style"]
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.MoleculeVisual(e, r, n)
                            }
                        }, function(e, r, n) {
                            var i = n.params;
                            return t.Visualization.Molecule.create(r, n, i.style).setReportTime(!n.params.style.computeOnBackground)
                        }, function(e, n, i) {
                            var o = n.transform.params;
                            if (o.style.type !== i.params.style.type || !t.Utils.deepEqual(o.style.params, i.params.style.params)) return void 0;
                            var a = n.props.model;
                            if (!a) return void 0;
                            var s = t.Utils.Molecule.findModel(n.parent);
                            if (!s) return void 0;
                            var u = i.params.style.theme,
                                l = u.template.provider(s, t.Visualization.Theme.getProps(u));
                            return a.applyTheme(l), n.props.style.theme = u, r.nodeUpdated(n), t.Task.resolve(i.transformer.info.name, "Background", t.Tree.Node.Null)
                        }), i.CreateMacromoleculeVisual = t.Tree.Transformer.create({
                            id: "molecule-create-macromolecule-visual",
                            name: "Macromolecule Visual",
                            description: "Create a visual of a molecule that is split into polymer, HET, and water parts.",
                            from: [r.Molecule.Model],
                            to: [r.Action],
                            validateParams: function(e) {
                                return e.polymer || e.het || e.water ? void 0 : ["Select at least one component"]
                            },
                            defaultParams: function(e) {
                                return {
                                    polymer: !0,
                                    het: !0,
                                    water: !0
                                }
                            }
                        }, function(r, o, a) {
                            return t.Task.create("Macromolecule", "Normal", function(s) {
                                var u = t.Tree.Transform.build().add(o, n.Basic.CreateGroup, {
                                    label: "Group",
                                    description: "Macromolecule"
                                }, {
                                    ref: a.params.groupRef
                                });
                                if (a.params.polymer) {
                                    var l = u.then(i.CreateSelectionFromQuery, {
                                        query: e.Core.Structure.Query.nonHetPolymer(),
                                        name: "Polymer",
                                        silent: !0
                                    }, {
                                        isBinding: !0
                                    });
                                    l.then(i.CreateVisual, {
                                        style: t.Visualization.Molecule.Default.ForType.get("Cartoons")
                                    }, {
                                        ref: a.params.polymerRef
                                    })
                                }
                                if (a.params.het) {
                                    var c = u.then(i.CreateSelectionFromQuery, {
                                        query: e.Core.Structure.Query.hetGroups(),
                                        name: "HET",
                                        silent: !0
                                    }, {
                                        isBinding: !0
                                    });
                                    c.then(i.CreateVisual, {
                                        style: t.Visualization.Molecule.Default.ForType.get("BallsAndSticks")
                                    }, {
                                        ref: a.params.hetRef
                                    })
                                }
                                if (a.params.water) {
                                    var h = {
                                            type: "BallsAndSticks",
                                            params: {
                                                useVDW: !1,
                                                atomRadius: .23,
                                                bondRadius: .09,
                                                detail: "Automatic"
                                            },
                                            theme: {
                                                template: t.Visualization.Molecule.Default.ElementSymbolThemeTemplate,
                                                colors: t.Visualization.Molecule.Default.ElementSymbolThemeTemplate.colors,
                                                transparency: {
                                                    alpha: .25
                                                }
                                            }
                                        },
                                        p = u.then(i.CreateSelectionFromQuery, {
                                            query: e.Core.Structure.Query.entities({
                                                type: "water"
                                            }),
                                            name: "Water",
                                            silent: !0
                                        }, {
                                            isBinding: !0
                                        });
                                    p.then(i.CreateVisual, {
                                        style: h
                                    }, {
                                        ref: a.params.waterRef
                                    })
                                }
                                t.Tree.Transform.apply(r, u).run(r).then(function(e) {
                                    return s.resolve(t.Tree.Node.Null)
                                })["catch"](s.reject)
                            })
                        })
                    }(i = n.Molecule || (n.Molecule = {}))
                }(n = r.Transformer || (r.Transformer = {}))
            }(r = t.Entity || (t.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i;
                    ! function(n) {
                        n.Download = t.Tree.Transformer.create({
                            id: "data-download",
                            name: "Download Data",
                            description: "Downloads a string or binary data from the given URL (if the host server supports cross domain requests).",
                            from: [r.Root],
                            to: [r.Data.String, r.Data.Binary],
                            validateParams: function(e) {
                                return e.url && e.url.trim().length ? e.type ? void 0 : ["Specify type"] : ["Enter Url"]
                            },
                            defaultParams: function() {
                                return {
                                    id: "",
                                    description: "",
                                    type: "String",
                                    url: ""
                                }
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            }
                        }, function(e, n, i) {
                            var o = i.params;
                            return t.Utils.ajaxGet(o.url, o.type).setReportTime(!0).map("ToEntity", "Child", function(e) {
                                return "String" === o.type ? r.Data.String.create(i, {
                                    label: o.id ? o.id : o.url,
                                    description: o.description,
                                    data: e
                                }) : r.Data.Binary.create(i, {
                                    label: o.id ? o.id : o.url,
                                    description: o.description,
                                    data: e
                                })
                            })
                        }), n.OpenFile = t.Tree.Transformer.create({
                            id: "data-open-file",
                            name: "Open Data File",
                            description: "Read a string or binary data from the selected file.",
                            from: [r.Root],
                            to: [r.Data.String, r.Data.Binary],
                            validateParams: function(e) {
                                return e.file ? void 0 : ["Select a file"]
                            },
                            defaultParams: function() {
                                return {
                                    type: "String",
                                    file: void 0
                                }
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.Controller(e, r, n, !1)
                            }
                        }, function(e, n, i) {
                            var o = i.params;
                            return t.Utils.readFromFile(o.file, o.type).setReportTime(!0).map("ToEntity", "Child", function(e) {
                                return "String" === o.type ? r.Data.String.create(i, {
                                    label: o.id ? o.id : o.file.name,
                                    description: o.description,
                                    data: e
                                }) : r.Data.Binary.create(i, {
                                    label: o.id ? o.id : o.file.name,
                                    description: o.description,
                                    data: e
                                })
                            })
                        });
                        var i = e.Core.Formats.Cif;
                        n.ParseCif = t.Tree.Transformer.create({
                            id: "data-parse-cif",
                            name: "CIF Dictionary",
                            description: "Parse CIF dictionary from a string.",
                            from: [r.Data.String],
                            to: [r.Data.CifDictionary],
                            defaultParams: function() {
                                return {}
                            }
                        }, function(e, n, o) {
                            return t.Task.create("CIF Parse (" + n.props.label + ")", "Normal", function(e) {
                                e.update("Parsing..."), e.schedule(function() {
                                    var t = i.parse(n.props.data);
                                    return t.error ? void e.reject(t.error.toString()) : void e.resolve(r.Data.CifDictionary.create(o, {
                                        label: o.params.id ? o.params.id : "CIF Dictionary",
                                        description: o.params.description,
                                        dictionary: t.result
                                    }))
                                })
                            }).setReportTime(!0)
                        }), n.ParseJson = t.Tree.Transformer.create({
                            id: "data-parse-json",
                            name: "JSON",
                            description: "Parse a string to JSON object.",
                            from: [r.Data.String],
                            to: [r.Data.Json],
                            defaultParams: function() {
                                return {}
                            }
                        }, function(e, n, i) {
                            return t.Task.create("JSON Parse (" + n.props.label + ")", "Normal", function(e) {
                                e.update("Parsing..."), e.schedule(function() {
                                    var t = JSON.parse(n.props.data);
                                    e.resolve(r.Data.Json.create(i, {
                                        label: i.params.id ? i.params.id : "JSON Data",
                                        description: i.params.description,
                                        data: t
                                    }))
                                })
                            }).setReportTime(!0)
                        })
                    }(i = n.Data || (n.Data = {}))
                }(n = r.Transformer || (r.Transformer = {}))
            }(r = t.Entity || (t.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i;
                    ! function(n) {
                        n.ParseCcp4 = t.Tree.Transformer.create({
                            id: "density-parse-ccp4",
                            name: "CCP4/Map",
                            description: "Parse CCP4/map from binary data.",
                            from: [r.Data.Binary],
                            to: [r.Density.Data],
                            isUpdatable: !0,
                            defaultParams: function() {
                                return {
                                    normalize: !1
                                }
                            }
                        }, function(n, i, o) {
                            return t.Task.create("Parse CCP4 (" + i.props.label + ")", "Normal", function(t) {
                                t.update("Parsing..."), t.schedule(function() {
                                    var n = e.Core.Formats.CCP4.parse(i.props.data);
                                    return n.error ? void t.reject(n.error.toString()) : (o.params.normalize && n.result.normalize(), void t.resolve(r.Density.Data.create(o, {
                                        label: o.params.id ? o.params.id : "Density Data",
                                        data: n.result,
                                        description: o.params.normalize ? "Normalized" : ""
                                    })))
                                })
                            }).setReportTime(!0)
                        }, function(e, n, i) {
                            return n.props.data.isNormalized === i.params.normalize ? t.Task.resolve("CCP4/Map", "Background", t.Tree.Node.Null) : t.Task.create("CCP4/Map", "Normal", function(e) {
                                e.update("Updating..."), e.schedule(function() {
                                    var t = n.props.data;
                                    t.isNormalized ? t.denormalize() : t.normalize(), e.resolve(r.Density.Data.create(i, {
                                        label: i.params.id ? i.params.id : "Density Data",
                                        data: t,
                                        description: i.params.normalize ? "Normalized" : ""
                                    }))
                                })
                            })
                        }), n.CreateVisual = t.Tree.Transformer.create({
                            id: "density-create-visual",
                            name: "Surface",
                            description: "Create a surface from the density data.",
                            from: [r.Density.Data],
                            to: [r.Density.Visual],
                            isUpdatable: !0,
                            defaultParams: function() {
                                return {
                                    style: t.Visualization.Density.Default.Style
                                }
                            },
                            validateParams: function(e) {
                                return e.style ? void 0 : ["Specify Style"]
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.DensityVisual(e, r, n)
                            }
                        }, function(e, r, n) {
                            var i = n.params;
                            return t.Visualization.Density.create(r, n, i.style).setReportTime(!n.params.style.computeOnBackground)
                        }, function(e, n, i) {
                            var o = n.transform.params;
                            if (o.style.type !== i.params.style.type || !t.Utils.deepEqual(o.style.params, i.params.style.params)) return void 0;
                            var a = t.Tree.Node.findClosestNodeOfType(n, [r.Density.Data]);
                            if (!a) return void 0;
                            var s = n.props.model;
                            if (!s) return void 0;
                            var u = i.params.style.theme,
                                l = u.template.provider(a, t.Visualization.Theme.getProps(u));
                            return s.applyTheme(l), n.props.style.theme = u, r.nodeUpdated(n), t.Task.resolve(i.transformer.info.name, "Background", t.Tree.Node.Null)
                        }), n.CreateVisualBehaviour = t.Tree.Transformer.create({
                            id: "density-create-visual-behaviour",
                            name: "Interactive Surface",
                            description: "Create a surface from the density data when a residue or atom is selected.",
                            from: [r.Density.Data],
                            to: [r.Density.InteractiveSurface],
                            isUpdatable: !0,
                            defaultParams: function(e) {
                                return {
                                    style: t.Visualization.Density.Default.Style,
                                    radius: e.settings.get("density.defaultVisualBehaviourRadius") || 0,
                                    isoSigmaMin: -5,
                                    isoSigmaMax: 5
                                }
                            },
                            customController: function(e, r, n) {
                                return new t.Components.Transform.DensityVisual(e, r, n)
                            }
                        }, function(e, n, i) {
                            var o = i.params,
                                a = new t.Behaviour.Density.ShowElectronDensityAroundSelection(e, {
                                    style: o.style,
                                    radius: o.radius,
                                    ref: i.params.id
                                });
                            return t.Task.resolve("Behaviour", "Background", r.Density.InteractiveSurface.create(i, {
                                label: (i.params.id ? i.params.id : "Interactive") + ", " + t.Utils.round(i.params.style.params.isoSigma, 2) + " Ïƒ",
                                behaviour: a
                            }))
                        })
                    }(i = n.Density || (n.Density = {}))
                }(n = r.Transformer || (r.Transformer = {}))
            }(r = t.Entity || (t.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i;
                    ! function(i) {
                        var o;
                        ! function(o) {
                            o.CreateBehaviour = t.Tree.Transformer.create({
                                id: "streaming-create-behaviour",
                                name: "Coordinate Streaming",
                                description: "Enable coordinate data streaming for this molecule.",
                                from: [r.Molecule.Model],
                                to: [r.Molecule.CoordinateStreaming.Behaviour],
                                defaultParams: function(e) {
                                    return {
                                        server: e.settings.get("molecule.coordinateStreaming.defaultServer") || "",
                                        radius: e.settings.get("molecule.coordinateStreaming.defaultRadius") || 0
                                    }
                                },
                                customController: function(e, r, n) {
                                    return new t.Components.Transform.Controller(e, r, n, !1)
                                }
                            }, function(e, n, i) {
                                return t.Task.resolve("Behaviour", "Background", r.Molecule.CoordinateStreaming.Behaviour.create(i, {
                                    label: "Coordinate Streaming",
                                    behaviour: new t.Behaviour.Molecule.CoordinateStreaming(e, i.params.server, i.params.radius)
                                }))
                            }), o.CreateModel = t.Tree.Transformer.create({
                                id: "streaming-create-model",
                                name: "Streaming Model",
                                description: "",
                                from: [r.Molecule.CoordinateStreaming.Behaviour],
                                to: [r.Molecule.Model],
                                defaultParams: function() {
                                    return {}
                                }
                            }, function(n, i, o) {
                                return t.Task.create("Load", "Silent", function(t) {
                                    var n = e.Core.Formats.Cif.parse(o.params.data).result,
                                        i = e.Core.Formats.Cif.mmCif.ofDataBlock(n.dataBlocks[0]).models[0];
                                    o.params.transform && e.Core.Structure.Operator.applyToModelUnsafe(o.params.transform, i), t.resolve(r.Molecule.Model.create(o, {
                                        label: "part",
                                        model: i
                                    }))
                                })
                            }), o.InitStreaming = t.Tree.Transformer.create({
                                id: "streaming-init",
                                name: "Coordinate Streaming",
                                description: "Download a smaller version of the molecule required to display cartoon representation and stream the rest of the coordinates as required.",
                                from: [r.Root],
                                to: [r.Action],
                                validateParams: function(e) {
                                    return (e.id || "").trim().length ? (e.server || "").trim().length ? void 0 : ["Specify server"] : ["Enter id"]
                                },
                                defaultParams: function(e) {
                                    return {
                                        id: e.settings.get("molecule.coordinateStreaming.defaultId") || "",
                                        server: e.settings.get("molecule.coordinateStreaming.defaultServer") || "",
                                        radius: e.settings.get("molecule.coordinateStreaming.defaultRadius") || 0
                                    }
                                },
                                customController: function(e, r, n) {
                                    return new t.Components.Transform.Controller(e, r, n, !1)
                                }
                            }, function(e, r, a) {
                                return t.Task.create("Macromolecule", "Normal", function(s) {
                                    var u = t.Tree.Transform.build().add(r, n.Data.Download, {
                                        url: t.Behaviour.Molecule.CoordinateStreaming.getBaseUrl(a.params.id, a.params.server),
                                        type: "String",
                                        id: a.params.id
                                    }).then(n.Data.ParseCif, {
                                        id: a.params.id
                                    }, {
                                        isBinding: !0
                                    }).then(i.CreateFromCif, {
                                        blockIndex: 0
                                    }, {
                                        isBinding: !0
                                    }).then(i.CreateModel, {
                                        modelIndex: 0
                                    }, {
                                        isBinding: !1
                                    }).then(o.CreateBehaviour, {
                                        server: a.params.server,
                                        radius: a.params.radius
                                    });
                                    t.Tree.Transform.apply(e, u).run(e).then(function(e) {
                                        return s.resolve(t.Tree.Node.Null)
                                    })["catch"](s.reject)
                                })
                            })
                        }(o = i.CoordinateStreaming || (i.CoordinateStreaming = {}))
                    }(i = n.Molecule || (n.Molecule = {}))
                }(n = r.Transformer || (r.Transformer = {}))
            }(r = t.Entity || (t.Entity = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function t(t) {
                        this.context = t, this.subjects = {
                            select: new e.Rx.BehaviorSubject({}),
                            click: new e.Rx.BehaviorSubject({}),
                            currentEntity: new e.Rx.BehaviorSubject(void 0)
                        }, this.select = this.subjects.select.distinctUntilChanged(function(e) {
                            return e
                        }, e.Interactivity.interactivityInfoEqual), this.click = this.subjects.click.distinctUntilChanged(function(e) {
                            return e
                        }, e.Interactivity.interactivityInfoEqual), this.currentEntity = this.subjects.currentEntity, this.init()
                    }
                    return t.prototype.init = function() {
                        var t = this,
                            r = {},
                            n = r;
                        e.Event.Tree.NodeRemoved.getStream(this.context).subscribe(function(i) {
                            n === r || n.entity !== i.data && n.visual !== i.data || (n = r, e.Event.Visual.VisualSelectElement.dispatch(t.context, {}))
                        }), e.Event.Visual.VisualSelectElement.getStream(this.context).subscribe(function(e) {
                            n = e.data.entity ? e.data : r, t.subjects.click.onNext(e.data), (!e.data.visual || e.data.visual.props.isSelectable) && t.subjects.select.onNext(e.data)
                        }), e.Event.Entity.CurrentChanged.getStream(this.context).subscribe(function(e) {
                            return t.subjects.currentEntity.onNext(e.data)
                        })
                    }, t
                }();
                t.Streams = r
            }(t = e.Behaviour || (e.Behaviour = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(t) {
                    e.Event.Tree.NodeAdded.getStream(t).subscribe(function(r) {
                        var n = r.data;
                        n && (n.transform.isUpdate || n.type.traits.isSilent) || e.Command.Entity.SetCurrent.dispatch(t, n)
                    })
                }

                function n(t) {
                    e.Event.Tree.NodeAdded.getStream(t).subscribe(function(r) {
                        e.Tree.Node.is(r.data, e.Entity.Molecule.Model) && !r.data.isHidden && e.Command.Tree.ApplyTransform.dispatch(t, {
                            node: r.data,
                            transform: e.Entity.Transformer.Molecule.CreateMacromoleculeVisual.create(e.Entity.Transformer.Molecule.CreateMacromoleculeVisual.info.defaultParams(t))
                        })
                    })
                }

                function i(t) {
                    e.Event.Tree.NodeAdded.getStream(t).subscribe(function(t) {
                        var r = t.data;
                        if (e.Entity.isMoleculeSelection(r) && e.Entity.isVisual(r.parent)) {
                            var n = r,
                                i = r.parent;
                            i.props.model.applySelection(n.props.indices, 1)
                        }
                    }), e.Event.Tree.NodeRemoved.getStream(t).subscribe(function(t) {
                        var r = t.data;
                        if (e.Entity.isMoleculeSelection(r) && e.Entity.isVisual(r.parent)) {
                            var n = r,
                                i = r.parent;
                            i.props.model.applySelection(n.props.indices, 2)
                        }
                    })
                }

                function o(e) {
                    var t = void 0,
                        r = void 0;
                    e.behaviours.click.subscribe(function(e) {
                        r && (r.applySelection(t, 2), r = void 0, t = void 0), e.entity && e.visual && (r = e.visual.props.model, t = e.elements, r.applySelection(t, 1))
                    })
                }

                function a(t, r) {
                    if (r.entity && (e.Tree.Node.is(r.entity, e.Entity.Molecule.Model) || e.Tree.Node.is(r.entity, e.Entity.Molecule.Selection))) {
                        var n = e.Tree.Node.findClosestNodeOfType(r.entity, [e.Entity.Molecule.Model]).props.model;
                        if (n) {
                            var i = r.elements;
                            1 === r.elements.length && (i = e.Utils.Molecule.getResidueIndices(n, r.elements[0]));
                            var o = e.Utils.Molecule.getCentroidAndRadius(n, i, u);
                            if (1 === r.elements.length) {
                                var a = r.elements[0];
                                u.x = n.atoms.x[a], u.y = n.atoms.y[a], u.z = n.atoms.z[a]
                            }
                            t.scene.camera.focusOnPoint(u, Math.max(o, 7))
                        }
                    }
                }

                function s(e) {
                    e.behaviours.click.subscribe(function(t) {
                        return a(e, t)
                    })
                }
                t.SetEntityToCurrentWhenAdded = r, t.CreateVisualWhenModelIsAdded = n, t.ApplySelectionToVisual = i, t.ApplyInteractivitySelection = o;
                var u = {
                    x: 0,
                    y: 0,
                    z: 0
                };
                t.FocusCameraOnSelect = s
            }(t = e.Behaviour || (e.Behaviour = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    function n(e) {
                        return function(r) {
                            var n = void 0,
                                i = {
                                    type: "BallsAndSticks",
                                    computeOnBackground: !0,
                                    params: {
                                        useVDW: !0,
                                        vdwScaling: .25,
                                        bondRadius: .13,
                                        detail: "Automatic"
                                    },
                                    theme: {
                                        template: t.Visualization.Molecule.Default.ElementSymbolThemeTemplate,
                                        colors: t.Visualization.Molecule.Default.ElementSymbolThemeTemplate.colors.set("Bond", {
                                            r: 1,
                                            g: 0,
                                            b: 0
                                        }),
                                        transparency: {
                                            alpha: .4
                                        }
                                    },
                                    isNotSelectable: !0
                                },
                                o = {
                                    type: "BallsAndSticks",
                                    computeOnBackground: !0,
                                    params: {
                                        useVDW: !1,
                                        atomRadius: .15,
                                        bondRadius: .07,
                                        detail: "Automatic"
                                    },
                                    theme: {
                                        template: t.Visualization.Molecule.Default.UniformThemeTemplate,
                                        colors: t.Visualization.Molecule.Default.UniformThemeTemplate.colors.set("Uniform", {
                                            r: .4,
                                            g: .4,
                                            b: .4
                                        }),
                                        transparency: {
                                            alpha: .75
                                        }
                                    },
                                    isNotSelectable: !0
                                };
                            r.behaviours.select.subscribe(function(u) {
                                if (n && (t.Command.Tree.RemoveNode.dispatch(r, n), n = void 0), u.entity && u.visual) {
                                    var l = a.atomsFromIndices(u.elements).wholeResidues(),
                                        c = a.atomsFromIndices(u.elements).wholeResidues().ambientResidues(e),
                                        h = t.Utils.generateUUID(),
                                        p = t.Tree.Transform.build().add(u.visual, s.Basic.CreateGroup, {
                                            label: "Interaction"
                                        }, {
                                            ref: h,
                                            isHidden: !0
                                        });
                                    n = h, p.then(s.Molecule.CreateSelectionFromQuery, {
                                        query: c,
                                        name: "Ambience",
                                        silent: !0,
                                        inFullContext: !0
                                    }, {
                                        isBinding: !0
                                    }).then(s.Molecule.CreateVisual, {
                                        style: o
                                    }), p.then(s.Molecule.CreateSelectionFromQuery, {
                                        query: l,
                                        name: "Ligand",
                                        silent: !0,
                                        inFullContext: !0
                                    }, {
                                        isBinding: !0
                                    }).then(s.Molecule.CreateVisual, {
                                        style: i
                                    }), t.Tree.Transform.apply(r, p).run(r)
                                }
                            })
                        }
                    }

                    function i(e) {
                        e.highlight.addProvider(function(e) {
                            if (!e.entity || !t.Tree.Node.is(e.entity, t.Entity.Molecule.Model) && !t.Tree.Node.is(e.entity, t.Entity.Molecule.Selection)) return void 0;
                            var r = t.Interactivity.Molecule.transformInteraction(e);
                            return t.Interactivity.Molecule.formatInfo(r)
                        })
                    }

                    function o(e) {
                        var r = void 0,
                            n = void 0,
                            i = void 0;
                        e.behaviours.click.subscribe(function(e) {
                            if (e.entity && (t.Tree.Node.is(e.entity, t.Entity.Molecule.Model) || t.Tree.Node.is(e.entity, t.Entity.Molecule.Selection)) && e.elements && e.elements.length) {
                                r = e;
                                var o = t.Utils.Molecule.findModel(e.entity);
                                o ? (i = o.props.model, n = t.Interactivity.Molecule.formatInfoShort(t.Interactivity.Molecule.transformInteraction(e))) : (r = void 0, i = void 0, n = void 0)
                            } else r = void 0, i = void 0, n = void 0
                        }), e.highlight.addProvider(function(e) {
                            if (!e.entity || !t.Tree.Node.is(e.entity, t.Entity.Molecule.Model) && !t.Tree.Node.is(e.entity, t.Entity.Molecule.Selection) || !e.elements || !e.elements.length) return void 0;
                            if (!r) return void 0;
                            var o = t.Utils.Molecule.findModel(e.entity);
                            if (!o) return void 0;
                            var a = t.Utils.Molecule.getDistanceSet(i, r.elements, o.props.model, e.elements);
                            return 1e-4 > a ? void 0 : "<span><b>" + t.Utils.round(a, 2) + " â„«</b> from <b>" + n + "</b></span>"
                        })
                    }
                    var a = e.Core.Structure.Query,
                        s = t.Entity.Transformer;
                    r.ShowInteractionOnSelect = n, r.HighlightElementInfo = i, r.DistanceToLastClickedElement = o
                }(n = r.Molecule || (r.Molecule = {}))
            }(r = t.Behaviour || (t.Behaviour = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    var r = function() {
                        function t(e, t) {
                            this.context = e, this.params = t, this.obs = [], this.ref = t.ref, this.isBusy = !1, this.latestInfo = void 0
                        }
                        return t.prototype.remove = function() {
                            var t = this.getVisual();
                            t && e.Tree.remove(t)
                        }, t.prototype.getVisual = function() {
                            return this.context.select(this.ref)[0]
                        }, t.prototype.update = function(t) {
                            if (!e.Interactivity.Molecule.isMoleculeModelInteractivity(t)) return void this.remove();
                            var r = e.Utils.Molecule.findModel(t.entity),
                                n = t.elements,
                                i = r.props.model;
                            1 === t.elements.length && (n = e.Utils.Molecule.getResidueIndices(i, t.elements[0]));
                            var o = e.Utils.Molecule.getBox(i, n, this.params.radius),
                                a = e.Utils.shallowClone(this.params.style);
                            a.params = e.Utils.shallowClone(a.params), a.params.bottomLeft = o.bottomLeft, a.params.topRight = o.topRight, a.computeOnBackground = !0;
                            var s, u = this.getVisual();
                            if (u) s = e.Entity.Transformer.Density.CreateVisual.create({
                                style: a
                            }, {
                                ref: this.ref,
                                isHidden: !0
                            }).update(this.context, u);
                            else {
                                var l = e.Entity.Transformer.Density.CreateVisual.create({
                                    style: a
                                }, {
                                    ref: this.ref,
                                    isHidden: !0
                                });
                                l.isUpdate = !0, s = l.apply(this.context, this.behaviour)
                            }
                            s.run(this.context)
                        }, t.prototype.dispose = function() {
                            this.remove();
                            for (var e = 0, t = this.obs; e < t.length; e++) {
                                var r = t[e];
                                r.dispose()
                            }
                            this.obs = []
                        }, t.prototype.register = function(e) {
                            var t = this;
                            this.behaviour = e, this.obs.push(this.context.behaviours.select.subscribe(function(e) {
                                t.update(e)
                            }))
                        }, t
                    }();
                    t.ShowElectronDensityAroundSelection = r
                }(r = t.Density || (t.Density = {}))
            }(t = e.Behaviour || (e.Behaviour = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n = t.Entity.Transformer,
                        i = function() {
                            function r(e, n, i) {
                                void 0 === i && (i = 5), this.context = e, this.radius = i, this.obs = [], this.target = void 0, this.behaviour = void 0, this.currentRequest = void 0, this.ref = t.Utils.generateUUID(), this.download = void 0, this.cache = new r.Cache(100), this.style = {
                                    type: "BallsAndSticks",
                                    computeOnBackground: !0,
                                    params: {
                                        useVDW: !0,
                                        vdwScaling: .17,
                                        bondRadius: .07,
                                        detail: "Automatic"
                                    },
                                    theme: {
                                        template: t.Visualization.Molecule.Default.ElementSymbolThemeTemplate,
                                        colors: t.Visualization.Molecule.Default.ElementSymbolThemeTemplate.colors,
                                        transparency: {
                                            alpha: 1
                                        }
                                    },
                                    isNotSelectable: !0
                                }, this.server = r.normalizeServerName(n)
                            }
                            return r.prototype.remove = function() {
                                this.download && (this.download.discard(), this.download = void 0), t.Command.Tree.RemoveNode.dispatch(this.context, this.ref)
                            }, r.prototype.isApplicable = function(e) {
                                if (t.Interactivity.Molecule.isMoleculeModelInteractivity(e)) {
                                    for (var r = e.entity; r.parent !== r;) {
                                        if (r === this.target) return !0;
                                        r = r.parent
                                    }
                                    return !1
                                }
                            }, r.prototype.update = function(r) {
                                var n = this;
                                if (this.remove(), this.isApplicable(r)) {
                                    var i = t.Utils.Molecule.findModel(r.entity).props.model,
                                        o = i.atoms.residueIndex[r.elements[0]],
                                        a = i.residues,
                                        s = a.authAsymId[o],
                                        u = void 0;
                                    if (i.source === e.Core.Structure.MoleculeModelSource.Computed) {
                                        var l = i.parent,
                                            c = a.chainIndex[o],
                                            h = i.chains.sourceChainIndex[c];
                                        s = l.chains.authAsymId[h], u = i.operators[i.chains.operatorIndex[c]].matrix
                                    }
                                    var p = this.server + "/" + (i.id.toLocaleLowerCase() + "/ambientResidues?") + ("modelId=" + encodeURIComponent(i.modelId) + "&") + ("entityId=" + encodeURIComponent(a.entityId[o]) + "&") + ("authAsymId=" + encodeURIComponent(s) + "&") + ("authSeqNumber=" + encodeURIComponent("" + a.authSeqNumber[o]) + "&") + ("insCode=" + encodeURIComponent(null !== a.insCode[o] ? a.insCode[o] : "") + "&") + ("radius=" + encodeURIComponent("" + this.radius) + "&") + "atomSitesOnly=1";
                                    this.download = t.Utils.ajaxGetString(p).run(this.context);
                                    var d = this.cache.get(p);
                                    d ? this.create(d, u) : (this.context.performance.start(this.ref), this.download.then(function(e) {
                                        n.cache.add(p, e), n.context.performance.end(n.ref), n.context.logger.info("Streaming done in " + n.context.performance.formatTime(n.ref)), n.create(e, u)
                                    })["catch"](function() {
                                        n.context.performance.end(n.ref)
                                    }))
                                }
                            }, r.prototype.create = function(e, r) {
                                var i = t.Tree.Transform.build().add(this.behaviour, t.Entity.Transformer.Molecule.CoordinateStreaming.CreateModel, {
                                    data: e,
                                    transform: r
                                }, {
                                    ref: this.ref,
                                    isHidden: !0
                                }).then(n.Molecule.CreateVisual, {
                                    style: this.style
                                });
                                t.Tree.Transform.apply(this.context, i).run(this.context)
                            }, r.prototype.dispose = function() {
                                this.remove();
                                for (var e = 0, t = this.obs; e < t.length; e++) {
                                    var r = t[e];
                                    r.dispose()
                                }
                                this.obs = []
                            }, r.prototype.register = function(e) {
                                var t = this;
                                this.behaviour = e, this.target = e.parent, this.obs.push(this.context.behaviours.select.subscribe(function(e) {
                                    return t.update(e)
                                }))
                            }, r
                        }();
                    r.CoordinateStreaming = i;
                    var i;
                    ! function(e) {
                        function r(e) {
                            return "/" !== e[e.length - 1] ? e : e.length > 0 ? e.substr(0, e.length - 1) : e
                        }

                        function n(e, t) {
                            return r(t) + "/" + e.trim().toLocaleLowerCase() + "/cartoon"
                        }
                        e.normalizeServerName = r, e.getBaseUrl = n;
                        var i = function() {
                            function e(e, t) {
                                this.key = e, this.data = t, this.previous = void 0, this.next = void 0
                            }
                            return e
                        }();
                        e.CacheEntry = i;
                        var o = function() {
                            function e(e) {
                                this.size = e, this.count = 0, this.entries = new t.Utils.LinkedList, 1 > e && (e = 1)
                            }
                            return e.prototype.get = function(e) {
                                for (var t = this.entries.first; t; t = t.next)
                                    if (t.key === e) return t.data;
                                return void 0
                            }, e.prototype.add = function(e, t) {
                                this.count > this.size && this.entries.remove(this.entries.first);
                                var r = new i(e, t);
                                return this.entries.addLast(r), t
                            }, e
                        }();
                        e.Cache = o
                    }(i = r.CoordinateStreaming || (r.CoordinateStreaming = {}))
                }(n = r.Molecule || (r.Molecule = {}))
            }(r = t.Behaviour || (t.Behaviour = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(e, t, r, n, i, o, a) {
                    if (i.transformer === r) try {
                        var s = window[a],
                            u = o(i.params, n);
                        s && "undefined" != typeof u && s("send", "event", t, u, e.id)
                    } catch (l) {}
                }

                function n(e) {
                    return e.url
                }

                function i(e) {
                    return e.queryString
                }

                function o(t, r) {
                    if (e.Tree.Node.isHidden(r)) return void 0;
                    var n = e.Utils.Molecule.findModel(r);
                    return n ? n.props.model.id + " $(name)$ " + t.name : void 0
                }

                function a(t, r) {
                    if (e.Tree.Node.isHidden(r)) return void 0;
                    var n = e.Utils.Molecule.findModel(r);
                    return n ? n.props.model.id + " $(type)$ " + t.type + " $(radius)$ " + t.radius : void 0
                }

                function s(t, r) {
                    var n = e.Utils.Molecule.findModel(r);
                    return n ? n.props.model.id + " $(server)$ " + t.server : void 0
                }

                function u(t, r) {
                    return e.Tree.Node.isHidden(r) ? void 0 : t.style.type
                }

                function l(e) {
                    return ""
                }

                function c(t, c) {
                    return void 0 === c && (c = "default"),
                        function(h) {
                            var p = "ga-" + h.id + "-" + c;
                            try {
                                ! function(e, t, r, n, i, o, a) {
                                    e.GoogleAnalyticsObject = i, e[i] = e[i] || function() {
                                        (e[i].q = e[i].q || []).push(arguments)
                                    }, e[i].l = 1 * +new Date, o = t.createElement(r), a = t.getElementsByTagName(r)[0], o.async = 1, o.src = n, a.parentNode.insertBefore(o, a)
                                }(window, document, "script", "https://www.google-analytics.com/analytics.js", p), window[p]("create", t, "auto"), setTimeout(function() {
                                    try {
                                        var e = window[p];
                                        e && e("send", "event", "Loaded", "contextId", h.id)
                                    } catch (t) {}
                                }, 1e3)
                            } catch (d) {}
                            e.Event.Tree.TransformerApply.getStream(h).subscribe(function(t) {
                                r(h, "Download", e.Entity.Transformer.Data.Download, t.data.a, t.data.t, n, p), r(h, "Create Model Selecion", e.Entity.Transformer.Molecule.CreateSelection, t.data.a, t.data.t, i, p), r(h, "Create Assembly", e.Entity.Transformer.Molecule.CreateAssembly, t.data.a, t.data.t, o, p), r(h, "Create Symmetry", e.Entity.Transformer.Molecule.CreateSymmetryMates, t.data.a, t.data.t, a, p), r(h, "Create Visual", e.Entity.Transformer.Molecule.CreateVisual, t.data.a, t.data.t, u, p), r(h, "Coordinate Streaming", e.Entity.Transformer.Molecule.CoordinateStreaming.CreateBehaviour, t.data.a, t.data.t, s, p), r(h, "Parse Density", e.Entity.Transformer.Density.ParseCcp4, t.data.a, t.data.t, l, p)
                            })
                        }
                }
                t.GoogleAnalytics = c
            }(t = e.Behaviour || (e.Behaviour = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function() {
                    function t(t, r) {
                        this.context = t, this._state = new e.Rx.Subject, this._latestState = void 0, this._latestState = r
                    }
                    return Object.defineProperty(t.prototype, "dispatcher", {
                        get: function() {
                            return this.context.dispatcher
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t.prototype.setState = function() {
                        for (var t = [], r = 0; r < arguments.length; r++) t[r - 0] = arguments[r];
                        var n = e.Utils.merge.apply(e.Utils, [this._latestState].concat(t));
                        n !== this._latestState && (this._latestState = n, this._state.onNext(n))
                    }, Object.defineProperty(t.prototype, "state", {
                        get: function() {
                            return this._state
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "latestState", {
                        get: function() {
                            return this._latestState
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t
                }();
                t.Component = r
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r() {
                    for (var e = [], t = 0; t <= n.Root; t++) e.push(new i(n[t].toLowerCase()));
                    return e
                }! function(e) {
                    e[e.Main = 0] = "Main", e[e.Top = 1] = "Top", e[e.Right = 2] = "Right", e[e.Bottom = 3] = "Bottom", e[e.Left = 4] = "Left", e[e.Root = 5] = "Root"
                }(t.LayoutRegion || (t.LayoutRegion = {}));
                var n = t.LayoutRegion,
                    i = function() {
                        function e(e) {
                            this.cssClass = e, this.components = []
                        }
                        return e
                    }();
                t.LayoutTarget = i, t.makeEmptyTargets = r;
                var o = function(t) {
                    function r(r, n, i) {
                        var o = this;
                        t.call(this, r, {
                            isExpanded: !1,
                            hiddenComponentKeys: e.Immutable.Set()
                        }), this.targets = n, this.root = i, this.rootState = void 0, e.Command.Layout.SetState.getStream(this.context).subscribe(function(e) {
                            return o.update(e.data)
                        }), this.expandedViewport = document.createElement("meta"), this.expandedViewport.name = "viewport", this.expandedViewport.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
                    }
                    return u(r, t), r.prototype.update = function(t) {
                        var r = this,
                            n = this.latestState.isExpanded;
                        this.setState(t), t.isExpanded !== n && this.handleExpand(), this.dispatcher.schedule(function() {
                            return e.Event.Common.LayoutChanged.dispatch(r.context, {})
                        })
                    }, r.prototype.handleExpand = function() {
                        try {
                            var e = document.getElementsByTagName("body")[0],
                                t = document.getElementsByTagName("head")[0];
                            if (!e || !t) return;
                            if (this.latestState.isExpanded) {
                                for (var r = t.children, n = !1, i = [], o = 0; o < r.length; o++) r[o] === this.expandedViewport ? n = !0 : "viewport" === (r[o].name || "").toLowerCase() && i.push(r[o]);
                                for (var a = 0, s = i; a < s.length; a++) {
                                    var u = s[a];
                                    t.removeChild(u)
                                }
                                n || t.appendChild(this.expandedViewport);
                                var l = e.style;
                                this.rootState = {
                                    top: l.top,
                                    bottom: l.bottom,
                                    right: l.right,
                                    left: l.left,
                                    position: l.position,
                                    overflow: l.overflow,
                                    viewports: i,
                                    zindex: this.root.style.zIndex
                                }, l.overflow = "hidden", l.position = "fixed", l.top = "0", l.bottom = "0", l.right = "0", l.left = "0", this.root.style.zIndex = "1000000"
                            } else {
                                for (var r = t.children, o = 0; o < r.length; o++)
                                    if (r[o] === this.expandedViewport) {
                                        t.removeChild(this.expandedViewport);
                                        break
                                    }
                                if (this.rootState) {
                                    for (var l = e.style, c = this.rootState, h = 0, p = c.viewports; h < p.length; h++) {
                                        var u = p[h];
                                        t.appendChild(u)
                                    }
                                    l.top = c.top, l.bottom = c.bottom, l.left = c.left, l.right = c.right, l.position = c.position, l.overflow = c.overflow, this.rootState = void 0, this.root.style.zIndex = c.zindex
                                }
                            }
                        } catch (d) {
                            this.context.logger.error("Layout change error, you might have to reload the page."), console.log("Layout change error, you might have to reload the page.")
                        }
                    }, r
                }(t.Component);
                t.Layout = o
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r, n, i, o) {
                            var a = this;
                            void 0 === o && (o = !0), t.call(this, r, {
                                params: n.info.defaultParams(r, i),
                                isDirty: !1,
                                isExpanded: o
                            }), this.transformer = n, this.entity = i, this.updateTimeout = new e.Rx.Subject, this.timeout = e.Rx.Observable.timer(50), this.never = e.Rx.Observable.never(), this.anchorParams = this.latestState.params, this.updateParams(this.anchorParams), this.updateTimeout.flatMapLatest(function(e) {
                                return e
                            }).forEach(function() {
                                return a.apply()
                            })
                        }
                        return u(r, t), r.prototype._update = function() {
                            this.isUpdate && !this.latestState.isBusy && this.updateTimeout && (this.updateTimeout.onNext(this.timeout), this.setState({
                                parametersAutoUpdating: !0
                            }))
                        }, r.prototype._reset = function() {
                            this.setState({
                                parametersAutoUpdating: !1
                            }), this.updateTimeout && this.updateTimeout.onNext(this.never)
                        }, r.prototype._updateParams = function(t) {
                            var r = e.Utils.merge(this.latestState.params, t);
                            if (this.transformer.info.validateParams) {
                                var n = this.transformer.info.validateParams(r);
                                if (n && n.length > 0) return void this.setState({
                                    params: r,
                                    issues: n,
                                    canApply: !1
                                })
                            }
                            var i = !e.Utils.deepEqual(this.anchorParams, r);
                            this.setState({
                                params: r,
                                isDirty: i,
                                issues: void 0,
                                canApply: !0
                            })
                        }, r.prototype.updateParams = function(e) {
                            this._reset(), this._updateParams(e)
                        }, r.prototype.autoUpdateParams = function(e) {
                            this._update(), this._updateParams(e)
                        }, Object.defineProperty(r.prototype, "isUpdate", {
                            get: function() {
                                return this.transformer === this.entity.transform.transformer;
                            },
                            enumerable: !0,
                            configurable: !0
                        }), r.prototype.apply = function() {
                            var e = this;
                            if (this._reset(), !this.latestState.isBusy) {
                                var t = this.transformer.create(this.latestState.params);
                                this.anchorParams = this.latestState.params, this.setState({
                                    isDirty: !1,
                                    isBusy: !0
                                });
                                try {
                                    var r = this.isUpdate ? t.update(this.context, this.entity) : t.apply(this.context, this.entity);
                                    r.run(this.context).then(function() {
                                        return e.setState({
                                            isBusy: !1
                                        })
                                    })["catch"](function() {
                                        return e.setState({
                                            isBusy: !1
                                        })
                                    })
                                } catch (n) {
                                    this.setState({
                                        isBusy: !1
                                    })
                                }
                            }
                        }, r.prototype.setParams = function(e) {
                            this._reset(), this.anchorParams = e, this.updateParams(e)
                        }, r
                    }(t.Component);
                    r.Controller = n
                }(r = t.Transform || (t.Transform = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r) {
                            var n = this;
                            t.call(this, r, {
                                update: void 0,
                                transforms: []
                            }), this.update(), e.Event.Entity.CurrentChanged.getStream(r).subscribe(function() {
                                return n.update()
                            })
                        }
                        return u(r, t), r.prototype.update = function() {
                            if (!this.context.currentEntity) return void this.setState({
                                transforms: []
                            });
                            var e = this.context.currentEntity,
                                t = this.context.transforms,
                                r = void 0;
                            e.transform.transformer && e.transform.transformer.info.isUpdatable && (r = t.getController(e.transform.transformer, e));
                            for (var n = [], i = 0, o = this.context.transforms.getBySourceType(e.type); i < o.length; i++) {
                                var a = o[i];
                                if (!a.info.isApplicable || a.info.isApplicable(e)) {
                                    var s = t.getController(a, e);
                                    n.push(s)
                                }
                            }
                            this.setState({
                                update: r,
                                transforms: n
                            })
                        }, r
                    }(t.Component);
                    r.View = n
                }(r = t.Transform || (t.Transform = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(t) {
                    var r = function(t) {
                        function r() {
                            t.apply(this, arguments)
                        }
                        return u(r, t), r.prototype.updateTemplate = function(e, t) {
                            var r = t.get(e),
                                n = this.latestState && this.latestState.params.style.theme,
                                i = r.params,
                                o = n || this.getThemeInstance(r.theme.template),
                                a = {
                                    type: r.type,
                                    params: i,
                                    theme: o
                                };
                            this.autoUpdateParams({
                                style: a
                            })
                        }, r.prototype.updateStyleParams = function(t) {
                            var r = e.Utils.shallowClone(this.latestState.params.style);
                            r.params = e.Utils.merge(r.params, t), this.autoUpdateParams({
                                style: r
                            })
                        }, r.prototype.updateStyleTheme = function(t) {
                            var r = e.Utils.shallowClone(this.latestState.params.style);
                            r.theme = e.Utils.merge(r.theme, t), this.autoUpdateParams({
                                style: r
                            })
                        }, r.prototype.updateThemeColor = function(t, r) {
                            var n = this.latestState.params.style.theme;
                            if (n) {
                                var i = n.colors;
                                i || (i = e.Immutable.Map()), i = i.set(t, r), this.updateStyleTheme({
                                    colors: i
                                })
                            }
                        }, r.prototype.updateThemeTransparency = function(e) {
                            var t = this.latestState.params.style.theme;
                            t && this.updateStyleTheme({
                                transparency: e
                            })
                        }, r.prototype.getThemeInstance = function(t) {
                            var r = this.latestState.params.style.theme,
                                n = e.Visualization.Molecule.Default.ForType.get(this.latestState.params.style.type).theme.transparency;
                            if (!r) return {
                                template: t,
                                colors: t.colors,
                                transparency: n
                            };
                            var i = t.colors;
                            r.colors && i && (i = i.withMutations(function(e) {
                                r.colors.forEach(function(t, r) {
                                    e.has(r) && e.set(r, t)
                                })
                            }));
                            var o = r.transparency ? r.transparency : n;
                            return {
                                template: t,
                                colors: i,
                                transparency: o
                            }
                        }, r.prototype.updateThemeDefinition = function(e) {
                            this.updateStyleTheme(this.getThemeInstance(e))
                        }, r
                    }(t.Controller);
                    t.MoleculeVisual = r;
                    var n = function(t) {
                        function r() {
                            t.apply(this, arguments)
                        }
                        return u(r, t), r.prototype.updateStyleParams = function(t) {
                            var r = e.Utils.shallowClone(this.latestState.params.style);
                            r.params = e.Utils.merge(r.params, t), this.autoUpdateParams({
                                style: r
                            })
                        }, r.prototype.updateStyleTheme = function(t) {
                            var r = e.Utils.shallowClone(this.latestState.params.style);
                            r.theme = e.Utils.merge(r.theme, t), this.autoUpdateParams({
                                style: r
                            })
                        }, r.prototype.updateThemeColor = function(t, r) {
                            var n = this.latestState.params.style.theme;
                            if (n) {
                                var i = n.colors;
                                i || (i = e.Immutable.Map()), i = i.set(t, r), this.updateStyleTheme({
                                    colors: i
                                })
                            }
                        }, r.prototype.updateThemeTransparency = function(e) {
                            var t = this.latestState.params.style.theme;
                            t && this.updateStyleTheme({
                                transparency: e
                            })
                        }, r.prototype.getThemeInstance = function(t) {
                            var r = this.latestState.params.style.theme,
                                n = e.Visualization.Density.Default.Transparency;
                            if (!r) return {
                                template: t,
                                colors: t.colors,
                                transparency: n
                            };
                            var i = t.colors;
                            r.colors && i && (i = i.withMutations(function(e) {
                                r.colors.forEach(function(t, r) {
                                    e.has(r) && e.set(r, t)
                                })
                            }));
                            var o = r.transparency ? r.transparency : n;
                            return {
                                template: t,
                                colors: i,
                                transparency: o
                            }
                        }, r.prototype.updateRadius = function(e) {
                            this.autoUpdateParams({
                                radius: e
                            })
                        }, r.prototype.updateThemeDefinition = function(e) {
                            this.updateStyleTheme(this.getThemeInstance(e))
                        }, r
                    }(t.Controller);
                    t.DensityVisual = n
                }(r = t.Transform || (t.Transform = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r, n, i) {
                            var o = this;
                            t.call(this, r, {}), this.selector = n, this.header = i, e.Event.Tree.NodeAdded.getStream(r).subscribe(function() {
                                return o.added()
                            }), e.Event.Tree.NodeRemoved.getStream(r).subscribe(function(e) {
                                return o.removed(e.data)
                            })
                        }
                        return u(r, t), r.prototype.removed = function(e) {
                            if (this.latestState.controller) {
                                var t = this.latestState.controller.entity;
                                t === e && this.setState({})
                            }
                        }, r.prototype.added = function() {
                            var e = this.context.select(this.selector),
                                t = e[0];
                            if (t && t.transform) {
                                var r = this.context.transforms.getController(t.transform.transformer, t);
                                r && this.setState({
                                    controller: r
                                })
                            }
                        }, r
                    }(t.Component);
                    r.Updater = n
                }(r = t.Transform || (t.Transform = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r, n, i, o) {
                            var a = this;
                            t.call(this, r, {}), this.selector = n, this.transformer = i, this.header = o, e.Event.Tree.NodeAdded.getStream(r).subscribe(function() {
                                return a.added()
                            }), e.Event.Tree.NodeRemoved.getStream(r).subscribe(function(e) {
                                return a.removed(e.data)
                            })
                        }
                        return u(r, t), r.prototype.removed = function(e) {
                            if (this.latestState.controller) {
                                var t = this.latestState.controller.entity;
                                t === e && this.setState({})
                            }
                        }, r.prototype.added = function() {
                            var e = this.context.select(this.selector),
                                t = e[0];
                            if (t) {
                                var r = this.context.transforms.getController(this.transformer, t);
                                r && this.setState({
                                    controller: r
                                })
                            }
                        }, r
                    }(t.Component);
                    r.Action = n
                }(r = t.Transform || (t.Transform = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r) {
                            var n = this;
                            t.call(this, r, {
                                entries: e.Immutable.List()
                            }), e.Event.Log.getStream(this.context).subscribe(function(e) {
                                return n.setState({
                                    entries: n.latestState.entries.push(e.data)
                                })
                            })
                        }
                        return u(r, t), r
                    }(t.Component);
                    r.Log = n
                }(r = t.Context || (t.Context = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r, n) {
                            var i = this;
                            t.call(this, r, {
                                tasks: e.Immutable.Map()
                            }), this.type = n, e.Event.Task.StateUpdated.getStream(this.context).subscribe(function(e) {
                                return i.updated(e.data)
                            }), e.Event.Task.Started.getStream(this.context).filter(function(e) {
                                return e.data.type === n
                            }).subscribe(function(e) {
                                return i.started(e.data)
                            }), e.Event.Task.Completed.getStream(this.context).subscribe(function(e) {
                                return i.completed(e.data)
                            })
                        }
                        return u(r, t), r.prototype.updated = function(e) {
                            var t = e.type === this.type,
                                r = this.latestState.tasks;
                            return t ? (r = r.set(e.taskId, {
                                name: e.name,
                                message: e.message,
                                abort: e.abort
                            }), void this.setState({
                                tasks: r
                            })) : void(r.has(e.taskId) && (r = r["delete"](e.taskId), this.setState({
                                tasks: r
                            })))
                        }, r.prototype.started = function(e) {
                            this.setState({
                                tasks: this.latestState.tasks.set(e.id, {
                                    name: e.name,
                                    message: "Running..."
                                })
                            })
                        }, r.prototype.completed = function(e) {
                            this.latestState.tasks.has(e) && this.setState({
                                tasks: this.latestState.tasks["delete"](e)
                            })
                        }, r
                    }(t.Component);
                    r.TaskWatcher = n
                }(r = t.Context || (t.Context = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                        function r(r) {
                            var n = this;
                            t.call(this, r, {
                                info: []
                            }), e.Event.Interactivity.Highlight.getStream(this.context).subscribe(function(e) {
                                return n.setState({
                                    info: e.data
                                })
                            })
                        }
                        return u(r, t), r
                    }(t.Component);
                    r.HighlightInfo = n
                }(r = t.Visualization || (t.Visualization = {}))
            }(t = e.Components || (e.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i = e.Visualization,
                        o = function(r) {
                            function n(e) {
                                var n = this;
                                r.call(this, e, t.Utils.shallowClone(i.DefaultSceneOptions)), t.Event.Common.LayoutChanged.getStream(this.context).subscribe(function(e) {
                                    n._scene && n._scene.scene.resized()
                                }), t.Command.Layout.SetViewportOptions.getStream(this.context).subscribe(function(e) {
                                    return n.setState(e.data)
                                }), this.state.throttle(1e3 / 30).subscribe(function(e) {
                                    n.scene.scene.updateOptions(e)
                                })
                            }
                            return u(n, r), Object.defineProperty(n.prototype, "scene", {
                                get: function() {
                                    return this._scene
                                },
                                enumerable: !0,
                                configurable: !0
                            }), n.prototype.init = function(r) {
                                if (!e.Visualization.checkWebGL()) return !1;
                                try {
                                    return this._scene = new t.Visualization.SceneWrapper(r, this.context, this.latestState), this.context.scene = this._scene, !0
                                } catch (n) {
                                    return !1
                                }
                            }, n.prototype.destroy = function() {
                                this._scene && (this._scene.destroy(), this._scene = null)
                            }, n
                        }(r.Component);
                    n.Viewport = o
                }(n = r.Visualization || (r.Visualization = {}))
            }(r = t.Components || (t.Components = {}))
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r = function() {
                function e() {
                    this.settings = new Map
                }
                return e.prototype.set = function(e, t) {
                    this.settings.set(e, t)
                }, e.prototype.get = function(e) {
                    return this.settings.get(e)
                }, e
            }();
            t.Settings = r;
            var n = function() {
                function n(n) {
                    this.plugin = n, this.id = t.Utils.generateUUID(), this.dispatcher = new t.Service.Dispatcher, this.logger = new t.Service.Logger(this), this.performance = new e.Core.Utils.PerformanceMonitor, this.scene = void 0, this.tree = t.Tree.create(this, t.Entity.Root.create(t.Entity.RootTransform, {
                        label: "Root Entity"
                    })), this.currentEntity = void 0, this.transforms = new t.TransformManager(this), this.entityCache = new t.Entity.Cache(this), this.viewport = new t.Components.Visualization.Viewport(this), this.highlight = new t.Interactivity.HighlightManager(this), this.behaviours = new t.Behaviour.Streams(this), this.settings = new r, t.initEventsAndCommands(this)
                }
                return n.prototype.createLayout = function(e, r) {
                    this.layout = new t.Components.Layout(this, e, r)
                }, n.prototype.select = function(e) {
                    return t.Tree.Selection.select(e, this.tree)
                }, n
            }();
            t.Context = n
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            function t(t, r) {
                if (!e.Entity.isVisual(r.visual)) return void console.warn("Select: Trying to create a selection event on a non-molecule model visual entity, ignoring...");
                var n = e.Utils.Molecule.getModelAndIndicesFromQuery(r.visual, r.query);
                if (n.model && n.indices.length) {
                    var i = e.Tree.Node.findClosestNodeOfType(r.visual, [e.Entity.Molecule.Model, e.Entity.Molecule.Selection]);
                    e.Event.Visual.VisualSelectElement.dispatch(t, {
                        entity: i,
                        visual: r.visual,
                        elements: n.indices
                    })
                }
            }

            function r(r) {
                e.Command.Entity.SetCurrent.getStream(r).subscribe(function(t) {
                    return e.Entity.setCurrent(t.data)
                }), e.Command.Entity.SetVisibility.getStream(r).subscribe(function(t) {
                    return e.Entity.setVisibility(t.data.entity, t.data.visible)
                }), e.Command.Entity.ToggleExpanded.getStream(r).subscribe(function(t) {
                    return e.Entity.toggleExpanded(t.data)
                }), e.Command.Tree.RemoveNode.getStream(r).subscribe(function(t) {
                    return r.select(t.data).forEach(function(t) {
                        return e.Tree.remove(t)
                    })
                }), e.Command.Tree.ApplyTransform.getStream(r).subscribe(function(e) {
                    (e.data.isUpdate ? e.data.transform.update(r, e.data.node) : e.data.transform.apply(r, e.data.node)).run(r)
                }), e.Command.Molecule.CreateSelectInteraction.getStream(r).subscribe(), e.Event.Tree.NodeAdded.getStream(r).subscribe(function(t) {
                    var r = t.data.parent.state.visibility,
                        n = 2 !== r;
                    if (e.Entity.setVisibility(t.data, n), e.Entity.isClass(t.data, e.Entity.BehaviourClass)) {
                        var i = t.data;
                        i.props.behaviour.register(i)
                    }
                }), e.Event.Tree.NodeRemoved.getStream(r).subscribe(function(t) {
                    if (e.Entity.updateVisibilityState(t.data.parent), e.Entity.isClass(t.data, e.Entity.BehaviourClass)) {
                        var r = t.data;
                        r.props.behaviour.dispose()
                    }
                }), e.Event.Visual.VisualHoverElement.getStream(r).distinctUntilChanged(function(e) {
                    return e.data
                }, e.Interactivity.interactivityInfoEqual).map(function(t) {
                    return e.Interactivity.Molecule.transformInteraction(t.data)
                }).distinctUntilChanged(function(e) {
                    return e
                }, function(e, t) {
                    return e === t
                }).subscribe(function(t) {
                    return e.Event.Molecule.ModelHighlight.dispatch(r, t)
                }), e.Event.Visual.VisualSelectElement.getStream(r).distinctUntilChanged(function(e) {
                    return e.data
                }, e.Interactivity.interactivityInfoEqual).map(function(t) {
                    return e.Interactivity.Molecule.transformInteraction(t.data)
                }).distinctUntilChanged(function(e) {
                    return e
                }, function(e, t) {
                    return e === t
                }).subscribe(function(t) {
                    return e.Event.Molecule.ModelSelect.dispatch(r, t)
                }), e.Command.Molecule.CreateSelectInteraction.getStream(r).subscribe(function(e) {
                    return t(r, e.data)
                })
            }
            e.initEventsAndCommands = r
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t = function() {
                function t(t) {
                    var r = this;
                    this.context = t, this.controllerCache = new Map, this.byId = new Map, this.bySourceType = new Map, this.byTargetType = new Map, e.Event.Tree.NodeRemoved.getStream(t).subscribe(function(e) {
                        r.controllerCache["delete"](e.data.id)
                    })
                }
                return t.prototype.addType = function(e, t, r) {
                    var n = r.get(e.id);
                    n ? n.push(t) : r.set(e.id, [t])
                }, t.prototype.getController = function(t, r) {
                    if (!this.byId.get(t.info.id)) return void console.warn("Trying to get contoller for unregistered transform (" + t.info.id + ")");
                    var n = this.controllerCache.get(r.id);
                    n || (n = new Map, this.controllerCache.set(r.id, n));
                    var i = n.get(t.info.id);
                    if (i) return i;
                    var o = t.info.customController;
                    return i = o ? o(this.context, t, r) : new e.Components.Transform.Controller(this.context, t, r), r.transform.transformer === t && i.setParams(r.transform.params), n.set(t.info.id, i), i
                }, t.prototype.getBySourceType = function(e) {
                    return this.bySourceType.get(e.id) || []
                }, t.prototype.getByTargetType = function(e) {
                    return this.byTargetType.get(e.id) || []
                }, t.prototype.add = function(e) {
                    if (this.byId.has(e.info.id)) throw "Transformer with id '" + e.info.id + "' is has already been added. Pick another id.";
                    this.byId.set(e.info.id, e);
                    for (var t = 0, r = e.info.from; t < r.length; t++) {
                        var n = r[t];
                        this.addType(n, e, this.bySourceType)
                    }
                    for (var i = 0, o = e.info.to; i < o.length; i++) {
                        var n = o[i];
                        this.addType(n, e, this.byTargetType)
                    }
                }, t
            }();
            e.TransformManager = t
        }(t = e.Bootstrap || (e.Bootstrap = {}))
    }(o || (o = {}));
    var p = {};
    ! function(e) {
        function t(e) {
            var t = document.getElementsByTagName("head")[0],
                r = document.createElement("script");
            r.type = "text/javascript", r.charset = "utf-8", r.src = p.p + "" + e + "." + _ + ".hot-update.js", t.appendChild(r)
        }

        function r(e) {
            if ("undefined" == typeof XMLHttpRequest) return e(new Error("No browser support"));
            try {
                var t = new XMLHttpRequest,
                    r = p.p + "" + _ + ".hot-update.json";
                t.open("GET", r, !0), t.timeout = 1e4, t.send(null)
            } catch (n) {
                return e(n)
            }
            t.onreadystatechange = function() {
                if (4 === t.readyState)
                    if (0 === t.status) e(new Error("Manifest request to " + r + " timed out."));
                    else if (404 === t.status) e();
                else if (200 !== t.status && 304 !== t.status) e(new Error("Manifest request to " + r + " failed."));
                else {
                    try {
                        var n = JSON.parse(t.responseText)
                    } catch (i) {
                        return void e(i)
                    }
                    e(null, n)
                }
            }
        }

        function n(e) {
            function t(e, t) {
                "ready" === S && o("prepare"), M++, p.e(e, function() {
                    function r() {
                        M--, "prepare" === S && (A[e] || l(e), 0 === M && 0 === T && c())
                    }
                    try {
                        t.call(null, n)
                    } finally {
                        r()
                    }
                })
            }
            var r = k[e];
            if (!r) return p;
            var n = function(t) {
                return r.hot.active ? k[t] ? (k[t].parents.indexOf(e) < 0 && k[t].parents.push(e), r.children.indexOf(t) < 0 && r.children.push(t)) : C = [e] : (console.warn("[HMR] unexpected require(" + t + ") from disposed module " + e), C = []), p(t)
            };
            for (var i in p) Object.prototype.hasOwnProperty.call(p, i) && (m ? Object.defineProperty(n, i, function(e) {
                return {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        return p[e]
                    },
                    set: function(t) {
                        p[e] = t
                    }
                }
            }(i)) : n[i] = p[i]);
            return m ? Object.defineProperty(n, "e", {
                enumerable: !0,
                value: t
            }) : n.e = t, n
        }

        function i(e) {
            var t = {
                _acceptedDependencies: {},
                _declinedDependencies: {},
                _selfAccepted: !1,
                _selfDeclined: !1,
                _disposeHandlers: [],
                active: !0,
                accept: function(e, r) {
                    if ("undefined" == typeof e) t._selfAccepted = !0;
                    else if ("function" == typeof e) t._selfAccepted = e;
                    else if ("object" == typeof e)
                        for (var n = 0; n < e.length; n++) t._acceptedDependencies[e[n]] = r;
                    else t._acceptedDependencies[e] = r
                },
                decline: function(e) {
                    if ("undefined" == typeof e) t._selfDeclined = !0;
                    else if ("number" == typeof e) t._declinedDependencies[e] = !0;
                    else
                        for (var r = 0; r < e.length; r++) t._declinedDependencies[e[r]] = !0
                },
                dispose: function(e) {
                    t._disposeHandlers.push(e)
                },
                addDisposeHandler: function(e) {
                    t._disposeHandlers.push(e)
                },
                removeDisposeHandler: function(e) {
                    var r = t._disposeHandlers.indexOf(e);
                    r >= 0 && t._disposeHandlers.splice(r, 1)
                },
                check: s,
                apply: h,
                status: function(e) {
                    return e ? void E.push(e) : S
                },
                addStatusHandler: function(e) {
                    E.push(e)
                },
                removeStatusHandler: function(e) {
                    var t = E.indexOf(e);
                    t >= 0 && E.splice(t, 1)
                },
                data: w[e]
            };
            return t
        }

        function o(e) {
            S = e;
            for (var t = 0; t < E.length; t++) E[t].call(null, e)
        }

        function a(e) {
            var t = +e + "" === e;
            return t ? +e : e
        }

        function s(e, t) {
            if ("idle" !== S) throw new Error("check() is only allowed in idle status");
            "function" == typeof e ? (x = !1, t = e) : (x = e, t = t || function(e) {
                if (e) throw e
            }), o("check"), r(function(e, r) {
                if (e) return t(e);
                if (!r) return o("idle"), void t(null, null);
                P = {}, R = {}, A = {};
                for (var n = 0; n < r.c.length; n++) R[r.c[n]] = !0;
                b = r.h, o("prepare"), g = t, y = {};
                var i = 0;
                l(i), "prepare" === S && 0 === M && 0 === T && c()
            })
        }

        function u(e, t) {
            if (R[e] && P[e]) {
                P[e] = !1;
                for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && (y[r] = t[r]);
                0 === --T && 0 === M && c()
            }
        }

        function l(e) {
            R[e] ? (P[e] = !0, T++, t(e)) : A[e] = !0
        }

        function c() {
            o("ready");
            var e = g;
            if (g = null, e)
                if (x) h(x, e);
                else {
                    var t = [];
                    for (var r in y) Object.prototype.hasOwnProperty.call(y, r) && t.push(a(r));
                    e(null, t)
                }
        }

        function h(t, r) {
            function n(e) {
                for (var t = [e], r = {}, n = t.slice(); n.length > 0;) {
                    var o = n.pop(),
                        e = k[o];
                    if (e && !e.hot._selfAccepted) {
                        if (e.hot._selfDeclined) return new Error("Aborted because of self decline: " + o);
                        if (0 === o) return;
                        for (var a = 0; a < e.parents.length; a++) {
                            var s = e.parents[a],
                                u = k[s];
                            if (u.hot._declinedDependencies[o]) return new Error("Aborted because of declined dependency: " + o + " in " + s);
                            t.indexOf(s) >= 0 || (u.hot._acceptedDependencies[o] ? (r[s] || (r[s] = []), i(r[s], [o])) : (delete r[s], t.push(s), n.push(s)))
                        }
                    }
                }
                return [t, r]
            }

            function i(e, t) {
                for (var r = 0; r < t.length; r++) {
                    var n = t[r];
                    e.indexOf(n) < 0 && e.push(n)
                }
            }
            if ("ready" !== S) throw new Error("apply() is only allowed in ready status");
            "function" == typeof t ? (r = t, t = {}) : t && "object" == typeof t ? r = r || function(e) {
                if (e) throw e
            } : (t = {}, r = r || function(e) {
                if (e) throw e
            });
            var s = {},
                u = [],
                l = {};
            for (var c in y)
                if (Object.prototype.hasOwnProperty.call(y, c)) {
                    var h = a(c),
                        d = n(h);
                    if (!d) {
                        if (t.ignoreUnaccepted) continue;
                        return o("abort"), r(new Error("Aborted because " + h + " is not accepted"))
                    }
                    if (d instanceof Error) return o("abort"), r(d);
                    l[h] = y[h], i(u, d[0]);
                    for (var h in d[1]) Object.prototype.hasOwnProperty.call(d[1], h) && (s[h] || (s[h] = []), i(s[h], d[1][h]))
                }
            for (var f = [], m = 0; m < u.length; m++) {
                var h = u[m];
                k[h] && k[h].hot._selfAccepted && f.push({
                    module: h,
                    errorHandler: k[h].hot._selfAccepted
                })
            }
            o("dispose");
            for (var v = u.slice(); v.length > 0;) {
                var h = v.pop(),
                    g = k[h];
                if (g) {
                    for (var x = {}, E = g.hot._disposeHandlers, T = 0; T < E.length; T++) {
                        var M = E[T];
                        M(x)
                    }
                    w[h] = x, g.hot.active = !1, delete k[h];
                    for (var T = 0; T < g.children.length; T++) {
                        var A = k[g.children[T]];
                        if (A) {
                            var P = A.parents.indexOf(h);
                            P >= 0 && A.parents.splice(P, 1)
                        }
                    }
                }
            }
            for (var h in s)
                if (Object.prototype.hasOwnProperty.call(s, h))
                    for (var g = k[h], R = s[h], T = 0; T < R.length; T++) {
                        var I = R[T],
                            P = g.children.indexOf(I);
                        P >= 0 && g.children.splice(P, 1)
                    }
                o("apply"), _ = b;
            for (var h in l) Object.prototype.hasOwnProperty.call(l, h) && (e[h] = l[h]);
            var D = null;
            for (var h in s)
                if (Object.prototype.hasOwnProperty.call(s, h)) {
                    for (var g = k[h], R = s[h], B = [], m = 0; m < R.length; m++) {
                        var I = R[m],
                            M = g.hot._acceptedDependencies[I];
                        B.indexOf(M) >= 0 || B.push(M)
                    }
                    for (var m = 0; m < B.length; m++) {
                        var M = B[m];
                        try {
                            M(s)
                        } catch (L) {
                            D || (D = L)
                        }
                    }
                }
            for (var m = 0; m < f.length; m++) {
                var V = f[m],
                    h = V.module;
                C = [h];
                try {
                    p(h)
                } catch (L) {
                    if ("function" == typeof V.errorHandler) try {
                        V.errorHandler(L)
                    } catch (L) {
                        D || (D = L)
                    } else D || (D = L)
                }
            }
            return D ? (o("fail"), r(D)) : (o("idle"), void r(null, u))
        }

        function p(t) {
            if (k[t]) return k[t].exports;
            var r = k[t] = {
                exports: {},
                id: t,
                loaded: !1,
                hot: i(t),
                parents: C,
                children: []
            };
            return e[t].call(r.exports, r, r.exports, n(t)), r.loaded = !0, r.exports
        }
        var d = {},
            f = d.webpackHotUpdate;
        d.webpackHotUpdate = function(e, t) {
            u(e, t), f && f(e, t)
        };
        var m = !1;
        try {
            Object.defineProperty({}, "x", {
                get: function() {}
            }), m = !0
        } catch (v) {}
        var g, y, b, x = !0,
            _ = "ce26a9ebe5df56583cff",
            w = {},
            C = [],
            E = [],
            S = "idle",
            T = 0,
            M = 0,
            A = {},
            P = {},
            R = {},
            k = {};
        return p.m = e, p.c = k, p.p = "build/", p.h = function() {
            return _
        }, n(0)(0)
    }([function(e, t, r) {
        e.exports = r(1)
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        var i = r(2),
            o = n(i);
        p.ChromePicker = o["default"]
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Chrome = void 0;
        var s = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n])
                }
                return e
            },
            u = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            l = r(3),
            c = n(l),
            h = r(4),
            p = n(h),
            d = r(15),
            f = r(30),
            m = n(f),
            v = r(31),
            g = n(v),
            y = r(17),
            b = n(y),
            x = t.Chrome = function(e) {
                function t() {
                    for (var e, r, n, a, s = arguments.length, u = Array(s), l = 0; s > l; l++) u[l] = arguments[l];
                    return i(this, t), r = n = o(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(u))), n.shouldComponentUpdate = b["default"].bind(n, n, arguments[0], arguments[1]), n.handleChange = function(e) {
                        n.props.onChange(e)
                    }, a = r, o(n, a)
                }
                return a(t, e), u(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "default": {
                                picker: {
                                    width: "100%"
                                },
                                saturation: {
                                    width: "100%",
                                    height: "48px",
                                    position: "relative",
                                    borderRadius: "0px",
                                    overflow: "hidden"
                                },
                                Saturation: {
                                    radius: "0px"
                                },
                                body: {
                                    padding: "0"
                                },
                                controls: {
                                    marginTop: "1px",
                                    display: "block"
                                },
                                swatch: {
                                    marginTop: "0px",
                                    width: "16px",
                                    height: "16px",
                                    borderRadius: "8px",
                                    position: "relative",
                                    overflow: "hidden"
                                },
                                active: {
                                    Absolute: "0 0 0 0",
                                    zIndex: 2,
                                    borderRadius: "8px",
                                    boxShadow: "inset 0 0 0 1px rgba(0,0,0,.1)",
                                    background: "rgba(" + this.props.rgb.r + ", " + this.props.rgb.g + ", " + this.props.rgb.b + ", " + this.props.rgb.a + ")"
                                },
                                hue: {
                                    height: "16px",
                                    position: "relative",
                                    width: "100%"
                                },
                                Hue: {
                                    radius: "0"
                                }
                            }
                        }
                    }
                }, {
                    key: "render",
                    value: function() {
                        return c["default"].createElement("div", {
                            style: this.styles().picker
                        }, c["default"].createElement("div", {
                            style: this.styles().saturation
                        }, c["default"].createElement(d.Saturation, s({}, this.styles().Saturation, this.props, {
                            pointer: g["default"],
                            onChange: this.handleChange
                        }))), c["default"].createElement("div", {
                            style: this.styles().body
                        }, c["default"].createElement("div", {
                            style: this.styles().hue
                        }, c["default"].createElement(d.Hue, s({}, this.styles().Hue, this.props, {
                            pointer: m["default"],
                            onChange: this.handleChange
                        })))))
                    }
                }]), t
            }(p["default"].Component);
        t["default"] = (0, d.ColorWrap)(x)
    }, function(t, r) {
        t.exports = e
    }, function(e, t, r) {
        e.exports = {
            Component: r(5),
            inline: r(6),
            mixin: {
                css: r(6)
            }
        }
    }, function(e, t, r) {
        function n(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function i(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        var o = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            a = function(e, t, r) {
                for (var n = !0; n;) {
                    var i = e,
                        o = t,
                        a = r;
                    n = !1, null === i && (i = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(i, o);
                    if (void 0 !== s) {
                        if ("value" in s) return s.value;
                        var u = s.get;
                        if (void 0 === u) return;
                        return u.call(a)
                    }
                    var l = Object.getPrototypeOf(i);
                    if (null === l) return;
                    e = l, t = o, r = a, n = !0, s = l = void 0
                }
            },
            s = r(3),
            u = r(6),
            l = function(e) {
                function t() {
                    n(this, t), a(Object.getPrototypeOf(t.prototype), "constructor", this).apply(this, arguments)
                }
                return i(t, e), o(t, [{
                    key: "css",
                    value: function(e) {
                        return u.call(this, e)
                    }
                }, {
                    key: "styles",
                    value: function() {
                        return this.css()
                    }
                }]), t
            }(s.Component);
        l.contextTypes = {
            mixins: s.PropTypes.object
        }, e.exports = l
    }, function(e, t, r) {
        var n = r(7),
            i = r(8),
            o = r(9);
        e.exports = function(e) {
            var t = this;
            o = r(9);
            var a = [];
            if (!this.classes) throw console.warn("Define this.classes on `" + this.constructor.name + "`");
            i(this.classes());
            var s = function(e, r) {
                t.classes()[e] ? a.push(t.classes()[e]) : e && r && r.warn === !0 && console.warn("The `" + e + "` css class does not exist on `" + t.constructor.name + "`")
            };
            s("default");
            for (var u in this.props) {
                var l = this.props[u];
                n(l) || (l === !0 ? (s(u), s(u + "-true")) : s(l ? u + "-" + l : u + "-false"))
            }
            if (this.props && this.props.activeBounds)
                for (var c = 0; c < this.props.activeBounds.length; c++) {
                    var h = this.props.activeBounds[c];
                    s(h)
                }
            for (var p in e) {
                var d = e[p];
                d === !0 && s(p, {
                    warn: !0
                })
            }
            var f = {};
            return this.context && this.context.mixins && (f = this.context.mixins), o(a, f)
        }
    }, function(e, t) {
        function r(e) {
            var t = typeof e;
            return !!e && ("object" == t || "function" == t)
        }
        e.exports = r
    }, function(e, t, r) {
        var n = r(7);
        e.exports = function(e) {
            for (var t in e) {
                var r = e[t];
                if (n(r))
                    for (var i in r) {
                        var o = r[i];
                        n(o) || console.warn("Make sure the value of the element `" + t + "` is an object of css. You passed it `" + r + "`")
                    } else console.warn("Make sure the value of `" + t + "` is an object of html elements. You passed it `" + r + "`")
            }
        }
    }, function(e, t, r) {
        var n = r(10),
            i = r(14);
        e.exports = function(e, t) {
            var r = n(e);
            return i(r, t)
        }
    }, function(e, t, r) {
        var n = r(11),
            i = r(7),
            o = r(13);
        e.exports = function(e) {
            return i(e) && !o(e) ? e : 1 === e.length ? e[0] : n.recursive.apply(void 0, e)
        }
    }, function(e, t, r) {
        (function(e) {
            ! function(t) {
                function r(e, t) {
                    if ("object" !== i(e)) return t;
                    for (var n in t) "object" === i(e[n]) && "object" === i(t[n]) ? e[n] = r(e[n], t[n]) : e[n] = t[n];
                    return e
                }

                function n(e, t, n) {
                    var a = n[0],
                        s = n.length;
                    (e || "object" !== i(a)) && (a = {});
                    for (var u = 0; s > u; ++u) {
                        var l = n[u],
                            c = i(l);
                        if ("object" === c)
                            for (var h in l) {
                                var p = e ? o.clone(l[h]) : l[h];
                                t ? a[h] = r(a[h], p) : a[h] = p
                            }
                    }
                    return a
                }

                function i(e) {
                    return {}.toString.call(e).slice(8, -1).toLowerCase()
                }
                var o = function(e) {
                        return n(e === !0, !1, arguments)
                    },
                    a = "merge";
                o.recursive = function(e) {
                    return n(e === !0, !0, arguments)
                }, o.clone = function(e) {
                    var t, r, n = e,
                        a = i(e);
                    if ("array" === a)
                        for (n = [], r = e.length, t = 0; r > t; ++t) n[t] = o.clone(e[t]);
                    else if ("object" === a) {
                        n = {};
                        for (t in e) n[t] = o.clone(e[t])
                    }
                    return n
                }, t ? e.exports = o : window[a] = o
            }("object" == typeof e && e && "object" == typeof e.exports && e.exports)
        }).call(t, r(12)(e))
    }, function(e, t) {
        e.exports = function(e) {
            return e.webpackPolyfill || (e.deprecate = function() {}, e.paths = [], e.children = [], e.webpackPolyfill = 1), e
        }
    }, function(e, t) {
        var r = Array.isArray;
        e.exports = r
    }, function(e, t, r) {
        var n = r(7),
            i = r(13),
            o = r(11),
            a = {
                borderRadius: function(e) {
                    return null !== e ? {
                        msBorderRadius: e,
                        MozBorderRadius: e,
                        OBorderRadius: e,
                        WebkitBorderRadius: e,
                        borderRadius: e
                    } : void 0
                },
                boxShadow: function(e) {
                    return null !== e ? {
                        msBoxShadow: e,
                        MozBoxShadow: e,
                        OBoxShadow: e,
                        WebkitBoxShadow: e,
                        boxShadow: e
                    } : void 0
                },
                userSelect: function(e) {
                    return null !== e ? {
                        WebkitTouchCallout: e,
                        KhtmlUserSelect: e,
                        MozUserSelect: e,
                        msUserSelect: e,
                        WebkitUserSelect: e,
                        userSelect: e
                    } : void 0
                },
                flex: function(e) {
                    return null !== e ? {
                        WebkitBoxFlex: e,
                        MozBoxFlex: e,
                        WebkitFlex: e,
                        msFlex: e,
                        flex: e
                    } : void 0
                },
                flexBasis: function(e) {
                    return null !== e ? {
                        WebkitFlexBasis: e,
                        flexBasis: e
                    } : void 0
                },
                justifyContent: function(e) {
                    return null !== e ? {
                        WebkitJustifyContent: e,
                        justifyContent: e
                    } : void 0
                },
                transition: function(e) {
                    return null !== e ? {
                        msTransition: e,
                        MozTransition: e,
                        OTransition: e,
                        WebkitTransition: e,
                        transition: e
                    } : void 0
                },
                transform: function(e) {
                    return null !== e ? {
                        msTransform: e,
                        MozTransform: e,
                        OTransform: e,
                        WebkitTransform: e,
                        transform: e
                    } : void 0
                },
                Absolute: function(e) {
                    if (null !== e) {
                        var t = e.split(" ");
                        return {
                            position: "absolute",
                            top: t[0],
                            right: t[1],
                            bottom: t[2],
                            left: t[3]
                        }
                    }
                },
                Extend: function(e, t) {
                    var r = t[e];
                    return r ? r : void 0
                }
            },
            s = function u(e, t, r) {
                var s = o(t, a),
                    l = {};
                for (var c in e) {
                    var h = e[c];
                    if (n(h) && !i(h)) l[c] = u(h, t, e);
                    else if (s[c]) {
                        var p = s[c](h, r);
                        for (var d in p) {
                            var f = p[d];
                            l[d] = f
                        }
                    } else l[c] = h
                }
                return l
            };
        e.exports = function(e, t, r) {
            return s(e, t, r)
        }
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = r(16);
        Object.defineProperty(t, "Alpha", {
            enumerable: !0,
            get: function() {
                return n(i)["default"]
            }
        });
        var o = r(20);
        Object.defineProperty(t, "Checkboard", {
            enumerable: !0,
            get: function() {
                return n(o)["default"]
            }
        });
        var a = r(21);
        Object.defineProperty(t, "EditableInput", {
            enumerable: !0,
            get: function() {
                return n(a)["default"]
            }
        });
        var s = r(22);
        Object.defineProperty(t, "Hue", {
            enumerable: !0,
            get: function() {
                return n(s)["default"]
            }
        });
        var u = r(23);
        Object.defineProperty(t, "Saturation", {
            enumerable: !0,
            get: function() {
                return n(u)["default"]
            }
        });
        var l = r(26);
        Object.defineProperty(t, "ColorWrap", {
            enumerable: !0,
            get: function() {
                return n(l)["default"]
            }
        })
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Alpha = void 0;
        var s = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            u = r(3),
            l = n(u),
            c = r(4),
            h = n(c),
            p = r(17),
            d = n(p),
            f = r(20),
            m = n(f),
            v = t.Alpha = function(e) {
                function t() {
                    for (var e, r, n, a, s = arguments.length, u = Array(s), l = 0; s > l; l++) u[l] = arguments[l];
                    return i(this, t), r = n = o(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(u))), n.shouldComponentUpdate = d["default"].bind(n, n, arguments[0], arguments[1]), n.handleChange = function(e, t) {
                        !t && e.preventDefault();
                        var r, i = n.refs.container,
                            o = i.clientWidth,
                            a = (e.pageX || e.touches[0].pageX) - (i.getBoundingClientRect().left + window.pageXOffset);
                        r = 0 > a ? 0 : a > o ? 1 : Math.round(100 * a / o) / 100, n.props.a !== r && n.props.onChange({
                            h: n.props.hsl.h,
                            s: n.props.hsl.s,
                            l: n.props.hsl.l,
                            a: r,
                            source: "rgb"
                        })
                    }, n.handleMouseDown = function(e) {
                        n.handleChange(e, !0), window.addEventListener("mousemove", n.handleChange), window.addEventListener("mouseup", n.handleMouseUp)
                    }, n.handleMouseUp = function() {
                        n.unbindEventListeners()
                    }, n.unbindEventListeners = function() {
                        window.removeEventListener("mousemove", n.handleChange), window.removeEventListener("mouseup", n.handleMouseUp)
                    }, a = r, o(n, a)
                }
                return a(t, e), s(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "default": {
                                alpha: {
                                    Absolute: "0 0 0 0",
                                    borderRadius: this.props.radius
                                },
                                checkboard: {
                                    Absolute: "0 0 0 0",
                                    overflow: "hidden"
                                },
                                gradient: {
                                    Absolute: "0 0 0 0",
                                    background: "linear-gradient(to right, rgba(" + this.props.rgb.r + ", " + this.props.rgb.g + ", " + this.props.rgb.b + ", 0) 0%, rgba(" + this.props.rgb.r + ", " + this.props.rgb.g + ", " + this.props.rgb.b + ", 1) 100%)",
                                    boxShadow: this.props.shadow,
                                    borderRadius: this.props.radius
                                },
                                container: {
                                    position: "relative",
                                    zIndex: "2",
                                    height: "100%",
                                    margin: "0 3px"
                                },
                                pointer: {
                                    zIndex: "2",
                                    position: "absolute",
                                    left: 100 * this.props.rgb.a + "%"
                                },
                                slider: {
                                    width: "4px",
                                    borderRadius: "1px",
                                    height: "8px",
                                    boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
                                    background: "#fff",
                                    marginTop: "1px",
                                    transform: "translateX(-2px)"
                                }
                            }
                        }
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.unbindEventListeners()
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = l["default"].createElement("div", {
                            style: this.styles().slider
                        });
                        return this.props.pointer && (e = l["default"].createElement(this.props.pointer, this.props)), l["default"].createElement("div", {
                            style: this.styles().alpha
                        }, l["default"].createElement("div", {
                            style: this.styles().checkboard
                        }, l["default"].createElement(m["default"], null)), l["default"].createElement("div", {
                            style: this.styles().gradient
                        }), l["default"].createElement("div", {
                            style: this.styles().container,
                            ref: "container",
                            onMouseDown: this.handleMouseDown,
                            onTouchMove: this.handleChange,
                            onTouchStart: this.handleChange
                        }, l["default"].createElement("div", {
                            style: this.styles().pointer,
                            ref: "pointer"
                        }, e)))
                    }
                }]), t
            }(h["default"].Component);
        t["default"] = v
    }, function(e, t, r) {
        e.exports = r(18)
    }, function(e, t, r) {
        function n(e, t, r) {
            return !i(e.props, t) || !i(e.state, r)
        }
        var i = r(19);
        e.exports = n
    }, function(e, t) {
        function r(e, t) {
            if (e === t) return !0;
            if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
            var r = Object.keys(e),
                i = Object.keys(t);
            if (r.length !== i.length) return !1;
            for (var o = n.bind(t), a = 0; a < r.length; a++)
                if (!o(r[a]) || e[r[a]] !== t[r[a]]) return !1;
            return !0
        }
        var n = Object.prototype.hasOwnProperty;
        e.exports = r
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }

        function s(e, t, r) {
            if ("undefined" == typeof document) return null;
            var n = document.createElement("canvas");
            n.width = n.height = 2 * r;
            var i = n.getContext("2d");
            return i ? (i.fillStyle = e, i.fillRect(0, 0, n.width, n.height), i.fillStyle = t, i.fillRect(0, 0, r, r), i.translate(r, r), i.fillRect(0, 0, r, r), n.toDataURL()) : null
        }

        function u(e, t, r) {
            var n = e + "," + t + "," + r;
            if (v[n]) return v[n];
            var i = s(e, t, r);
            return v[n] = i, i
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Checkboard = void 0;
        var l = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            c = r(3),
            h = n(c),
            p = r(4),
            d = n(p),
            f = r(17),
            m = n(f),
            v = {},
            g = t.Checkboard = function(e) {
                function t() {
                    for (var e, r, n, a, s = arguments.length, u = Array(s), l = 0; s > l; l++) u[l] = arguments[l];
                    return i(this, t), r = n = o(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(u))), n.shouldComponentUpdate = m["default"].bind(n, n, arguments[0], arguments[1]), a = r, o(n, a)
                }
                return a(t, e), l(t, [{
                    key: "classes",
                    value: function() {
                        var e = u(this.props.white, this.props.grey, this.props.size);
                        return {
                            "default": {
                                grid: {
                                    Absolute: "0 0 0 0",
                                    background: "url(" + e + ") center left"
                                }
                            }
                        }
                    }
                }, {
                    key: "render",
                    value: function() {
                        return h["default"].createElement("div", {
                            style: this.styles().grid,
                            ref: "grid"
                        })
                    }
                }]), t
            }(d["default"].Component);
        g.defaultProps = {
            size: 8,
            white: "#fff",
            grey: "#e6e6e6"
        }, t["default"] = g
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.EditableInput = void 0;
        var s = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            u = r(3),
            l = n(u),
            c = r(4),
            h = n(c),
            p = r(17),
            d = n(p),
            f = t.EditableInput = function(e) {
                function t(e) {
                    i(this, t);
                    var r = o(this, Object.getPrototypeOf(t).call(this));
                    return r.shouldComponentUpdate = d["default"].bind(r, r, arguments[0], arguments[1]), r.handleBlur = function() {
                        r.state.blurValue && r.setState({
                            value: r.state.blurValue,
                            blurValue: null
                        })
                    }, r.handleChange = function(e) {
                        if (null !== r.props.label) {
                            var t = {};
                            t[r.props.label] = e.target.value, r.props.onChange(t)
                        } else r.props.onChange(e.target.value);
                        r.setState({
                            value: e.target.value
                        })
                    }, r.handleKeyDown = function(e) {
                        var t = Number(e.target.value);
                        if (t) {
                            var n = r.props.arrowOffset || 1;
                            if (38 === e.keyCode) {
                                if (null !== r.props.label) {
                                    var i = {};
                                    i[r.props.label] = t + n, r.props.onChange(i)
                                } else r.props.onChange(t + n);
                                r.setState({
                                    value: t + n
                                })
                            }
                            if (40 === e.keyCode) {
                                if (null !== r.props.label) {
                                    var i = {};
                                    i[r.props.label] = t - n, r.props.onChange(i)
                                } else r.props.onChange(t - n);
                                r.setState({
                                    value: t - n
                                })
                            }
                        }
                    }, r.handleDrag = function(e) {
                        if (r.props.dragLabel) {
                            var t = Math.round(r.props.value + e.movementX);
                            if (t >= 0 && t <= r.props.dragMax) {
                                var n = {};
                                n[r.props.label] = t, r.props.onChange(n)
                            }
                        }
                    }, r.handleMouseDown = function(e) {
                        r.props.dragLabel && (e.preventDefault(), r.handleDrag(e), window.addEventListener("mousemove", r.handleDrag), window.addEventListener("mouseup", r.handleMouseUp))
                    }, r.handleMouseUp = function() {
                        r.unbindEventListeners()
                    }, r.unbindEventListeners = function() {
                        window.removeEventListener("mousemove", r.handleChange), window.removeEventListener("mouseup", r.handleMouseUp)
                    }, r.state = {
                        value: String(e.value).toUpperCase(),
                        blurValue: String(e.value).toUpperCase()
                    }, r
                }
                return a(t, e), s(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "user-override": {
                                wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
                                input: this.props.style && this.props.style.input ? this.props.style.input : {},
                                label: this.props.style && this.props.style.label ? this.props.style.label : {}
                            },
                            "dragLabel-true": {
                                label: {
                                    cursor: "ew-resize"
                                }
                            }
                        }
                    }
                }, {
                    key: "styles",
                    value: function() {
                        return this.css({
                            "user-override": !0
                        })
                    }
                }, {
                    key: "componentWillReceiveProps",
                    value: function(e) {
                        var t = this.refs.input;
                        e.value !== this.state.value && (t === document.activeElement ? this.setState({
                            blurValue: String(e.value).toUpperCase()
                        }) : this.setState({
                            value: String(e.value).toUpperCase()
                        }))
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.unbindEventListeners()
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e;
                        return this.props.label && (e = l["default"].createElement("span", {
                            style: this.styles().label,
                            ref: "label",
                            onMouseDown: this.handleMouseDown
                        }, this.props.label)), l["default"].createElement("div", {
                            style: this.styles().wrap,
                            ref: "container"
                        }, l["default"].createElement("input", {
                            style: this.styles().input,
                            ref: "input",
                            value: this.state.value,
                            onKeyDown: this.handleKeyDown,
                            onChange: this.handleChange,
                            onBlur: this.handleBlur
                        }), e)
                    }
                }]), t
            }(h["default"].Component);
        t["default"] = f
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Hue = void 0;
        var s = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            u = r(3),
            l = n(u),
            c = r(4),
            h = n(c),
            p = r(17),
            d = n(p),
            f = t.Hue = function(e) {
                function t() {
                    for (var e, r, n, a, s = arguments.length, u = Array(s), l = 0; s > l; l++) u[l] = arguments[l];
                    return i(this, t), r = n = o(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(u))), n.shouldComponentUpdate = d["default"].bind(n, n, arguments[0], arguments[1]), n.handleChange = function(e, t) {
                        !t && e.preventDefault();
                        var r = n.refs.container,
                            i = r.clientWidth,
                            o = r.clientHeight,
                            a = (e.pageX || e.touches && e.touches[0].pageX || 0) - (r.getBoundingClientRect().left + window.pageXOffset),
                            s = (e.pageY || e.touches && e.touches[0].pageY || 0) - (r.getBoundingClientRect().top + window.pageYOffset);
                        if ("vertical" === n.props.direction) {
                            var u;
                            if (0 > s) u = 359;
                            else if (s > o) u = 0;
                            else {
                                var l = -(100 * s / o) + 100;
                                u = 360 * l / 100
                            }
                            n.props.hsl.h !== u && n.props.onChange({
                                h: u,
                                s: n.props.hsl.s,
                                l: n.props.hsl.l,
                                a: n.props.hsl.a,
                                source: "rgb"
                            })
                        } else {
                            var u;
                            if (0 > a) u = 0;
                            else if (a > i) u = 359;
                            else {
                                var l = 100 * a / i;
                                u = 360 * l / 100
                            }
                            n.props.hsl.h !== u && n.props.onChange({
                                h: u,
                                s: n.props.hsl.s,
                                l: n.props.hsl.l,
                                a: n.props.hsl.a,
                                source: "rgb"
                            })
                        }
                    }, n.handleMouseDown = function(e) {
                        n.handleChange(e, !0), window.addEventListener("mousemove", n.handleChange), window.addEventListener("mouseup", n.handleMouseUp)
                    }, n.handleMouseUp = function() {
                        n.unbindEventListeners()
                    }, a = r, o(n, a)
                }
                return a(t, e), s(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "default": {
                                hue: {
                                    Absolute: "0 0 0 0",
                                    background: "linear-gradient(to right, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%)",
                                    borderRadius: this.props.radius,
                                    boxShadow: this.props.shadow
                                },
                                container: {
                                    margin: "0 2px",
                                    position: "relative",
                                    height: "100%"
                                },
                                pointer: {
                                    zIndex: "2",
                                    position: "absolute",
                                    left: 100 * this.props.hsl.h / 360 + "%"
                                },
                                slider: {
                                    marginTop: "1px",
                                    width: "4px",
                                    borderRadius: "1px",
                                    height: "8px",
                                    boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
                                    background: "#fff",
                                    transform: "translateX(-2px)"
                                }
                            },
                            "direction-vertical": {
                                hue: {
                                    background: "linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%)"
                                },
                                pointer: {
                                    left: "0",
                                    top: -(100 * this.props.hsl.h / 360) + 100 + "%"
                                }
                            }
                        }
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.unbindEventListeners()
                    }
                }, {
                    key: "unbindEventListeners",
                    value: function() {
                        window.removeEventListener("mousemove", this.handleChange), window.removeEventListener("mouseup", this.handleMouseUp)
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = l["default"].createElement("div", {
                            style: this.styles().slider
                        });
                        return this.props.pointer && (e = l["default"].createElement(this.props.pointer, this.props)), l["default"].createElement("div", {
                            style: this.styles().hue
                        }, l["default"].createElement("div", {
                            style: this.styles().container,
                            ref: "container",
                            onMouseDown: this.handleMouseDown,
                            onTouchMove: this.handleChange,
                            onTouchStart: this.handleChange
                        }, l["default"].createElement("div", {
                            style: this.styles().pointer,
                            ref: "pointer"
                        }, e)))
                    }
                }]), t
            }(h["default"].Component);
        t["default"] = f
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Saturation = void 0;
        var s = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            u = r(3),
            l = n(u),
            c = r(4),
            h = n(c),
            p = r(24),
            d = n(p),
            f = r(17),
            m = n(f),
            v = t.Saturation = function(e) {
                function t(e) {
                    i(this, t);
                    var r = o(this, Object.getPrototypeOf(t).call(this));
                    return r.shouldComponentUpdate = m["default"].bind(r, r, arguments[0], arguments[1]), r.handleChange = function(e, t) {
                        !t && e.preventDefault();
                        var n = r.refs.container,
                            i = n.clientWidth,
                            o = n.clientHeight,
                            a = (e.pageX || e.touches[0].pageX) - (n.getBoundingClientRect().left + window.pageXOffset),
                            s = (e.pageY || e.touches[0].pageY) - (n.getBoundingClientRect().top + window.pageYOffset);
                        0 > a ? a = 0 : a > i ? a = i : 0 > s ? s = 0 : s > o && (s = o);
                        var u = 100 * a / i,
                            l = -(100 * s / o) + 100;
                        r.throttle(r.props.onChange, {
                            h: r.props.hsl.h,
                            s: u,
                            v: l,
                            a: r.props.hsl.a,
                            source: "rgb"
                        })
                    }, r.handleMouseDown = function(e) {
                        r.handleChange(e, !0), window.addEventListener("mousemove", r.handleChange), window.addEventListener("mouseup", r.handleMouseUp)
                    }, r.handleMouseUp = function() {
                        r.unbindEventListeners()
                    }, r.throttle = (0, d["default"])(function(e, t) {
                        e(t)
                    }, 50), r
                }
                return a(t, e), s(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "default": {
                                color: {
                                    Absolute: "0 0 0 0",
                                    background: "hsl(" + this.props.hsl.h + ",100%, 50%)",
                                    borderRadius: this.props.radius
                                },
                                white: {
                                    Absolute: "0 0 0 0",
                                    background: "linear-gradient(to right, #fff, rgba(255,255,255,0))"
                                },
                                black: {
                                    Absolute: "0 0 0 0",
                                    background: "linear-gradient(to top, #000, rgba(0,0,0,0))",
                                    boxShadow: this.props.shadow
                                },
                                pointer: {
                                    position: "absolute",
                                    top: -(100 * this.props.hsv.v) + 100 + "%",
                                    left: 100 * this.props.hsv.s + "%",
                                    cursor: "default"
                                },
                                circle: {
                                    width: "4px",
                                    height: "4px",
                                    boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3), 0 0 1px 2px rgba(0,0,0,.4)",
                                    borderRadius: "50%",
                                    cursor: "hand",
                                    transform: "translate(-2px, -2px)"
                                }
                            }
                        }
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.unbindEventListeners()
                    }
                }, {
                    key: "unbindEventListeners",
                    value: function() {
                        window.removeEventListener("mousemove", this.handleChange), window.removeEventListener("mouseup", this.handleMouseUp)
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = l["default"].createElement("div", {
                            style: this.styles().circle
                        });
                        return this.props.pointer && (e = l["default"].createElement(this.props.pointer, this.props)), l["default"].createElement("div", {
                            style: this.styles().color,
                            ref: "container",
                            onMouseDown: this.handleMouseDown,
                            onTouchMove: this.handleChange,
                            onTouchStart: this.handleChange
                        }, l["default"].createElement("div", {
                            style: this.styles().white
                        }, l["default"].createElement("div", {
                            style: this.styles().black
                        }), l["default"].createElement("div", {
                            style: this.styles().pointer,
                            ref: "pointer"
                        }, e)))
                    }
                }]), t
            }(h["default"].Component);
        t["default"] = v
    }, function(e, t, r) {
        function n(e, t, r) {
            var n = !0,
                s = !0;
            if ("function" != typeof e) throw new TypeError(a);
            return i(r) && (n = "leading" in r ? !!r.leading : n, s = "trailing" in r ? !!r.trailing : s), o(e, t, {
                leading: n,
                maxWait: t,
                trailing: s
            })
        }

        function i(e) {
            var t = typeof e;
            return !!e && ("object" == t || "function" == t)
        }
        var o = r(25),
            a = "Expected a function";
        e.exports = n
    }, function(e, t) {
        function r(e, t, r) {
            function n(t) {
                var r = m,
                    n = v;
                return m = v = void 0, E = t, y = e.apply(n, r)
            }

            function o(e) {
                return E = e, b = setTimeout(c, t), S ? n(e) : y
            }

            function a(e) {
                var r = e - C,
                    n = e - E,
                    i = t - r;
                return T ? _(i, g - n) : i
            }

            function l(e) {
                var r = e - C,
                    n = e - E;
                return !C || r >= t || 0 > r || T && n >= g
            }

            function c() {
                var e = w();
                return l(e) ? h(e) : void(b = setTimeout(c, a(e)))
            }

            function h(e) {
                return clearTimeout(b), b = void 0, M && m ? n(e) : (m = v = void 0, y)
            }

            function p() {
                void 0 !== b && clearTimeout(b), C = E = 0, m = v = b = void 0
            }

            function d() {
                return void 0 === b ? y : h(w())
            }

            function f() {
                var e = w(),
                    r = l(e);
                if (m = arguments, v = this, C = e, r) {
                    if (void 0 === b) return o(C);
                    if (T) return clearTimeout(b), b = setTimeout(c, t), n(C)
                }
                return void 0 === b && (b = setTimeout(c, t)), y
            }
            var m, v, g, y, b, C = 0,
                E = 0,
                S = !1,
                T = !1,
                M = !0;
            if ("function" != typeof e) throw new TypeError(u);
            return t = s(t) || 0, i(r) && (S = !!r.leading, T = "maxWait" in r, g = T ? x(s(r.maxWait) || 0, t) : g, M = "trailing" in r ? !!r.trailing : M), f.cancel = p, f.flush = d, f
        }

        function n(e) {
            var t = i(e) ? b.call(e) : "";
            return t == c || t == h
        }

        function i(e) {
            var t = typeof e;
            return !!e && ("object" == t || "function" == t)
        }

        function o(e) {
            return !!e && "object" == typeof e
        }

        function a(e) {
            return "symbol" == typeof e || o(e) && b.call(e) == p
        }

        function s(e) {
            if ("number" == typeof e) return e;
            if (a(e)) return l;
            if (i(e)) {
                var t = n(e.valueOf) ? e.valueOf() : e;
                e = i(t) ? t + "" : t
            }
            if ("string" != typeof e) return 0 === e ? e : +e;
            e = e.replace(d, "");
            var r = m.test(e);
            return r || v.test(e) ? g(e.slice(2), r ? 2 : 8) : f.test(e) ? l : +e
        }
        var u = "Expected a function",
            l = NaN,
            c = "[object Function]",
            h = "[object GeneratorFunction]",
            p = "[object Symbol]",
            d = /^\s+|\s+$/g,
            f = /^[-+]0x[0-9a-f]+$/i,
            m = /^0b[01]+$/i,
            v = /^0o[0-7]+$/i,
            g = parseInt,
            y = Object.prototype,
            b = y.toString,
            x = Math.max,
            _ = Math.min,
            w = Date.now;
        e.exports = r
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.ColorWrap = void 0;
        var s = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n])
                }
                return e
            },
            u = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            l = r(3),
            c = n(l),
            h = r(11),
            p = n(h),
            d = r(27),
            f = (n(d), r(25)),
            m = n(f),
            v = r(28),
            g = n(v),
            y = r(17),
            b = n(y),
            x = t.ColorWrap = function(e) {
                var t = function(t) {
                    function r(e) {
                        i(this, r);
                        var t = o(this, Object.getPrototypeOf(r).call(this));
                        return t.shouldComponentUpdate = b["default"].bind(t, t, arguments[0], arguments[1]), t.handleChange = function(e) {
                            if (e = g["default"].simpleCheckForValidColor(e)) {
                                var r = g["default"].toState(e, e.h || t.state.oldHue);
                                t.setState(r), t.props.onChangeComplete && t.debounce(t.props.onChangeComplete, r), t.props.onChange && t.props.onChange(r)
                            }
                        }, t.state = (0, p["default"])(g["default"].toState(e.color, 0), {
                            visible: e.display
                        }), t.debounce = (0, m["default"])(function(e, t) {
                            e(t)
                        }, 100), t
                    }
                    return a(r, t), u(r, [{
                        key: "componentWillReceiveProps",
                        value: function(e) {
                            this.setState((0, p["default"])(g["default"].toState(e.color, this.state.oldHue), {
                                visible: e.display
                            }))
                        }
                    }, {
                        key: "render",
                        value: function() {
                            return c["default"].createElement(e, s({}, this.props, this.state, {
                                onChange: this.handleChange
                            }))
                        }
                    }]), r
                }(c["default"].Component);
                return t.defaultProps = {
                    color: {
                        h: 250,
                        s: .5,
                        l: .2,
                        a: 1
                    }
                }, t
            };
        t["default"] = x
    }, function(e, t) {
        function r(e) {
            var t = !1;
            if (null != e && "function" != typeof e.toString) try {
                t = !!(e + "")
            } catch (r) {}
            return t
        }

        function n(e) {
            return p(Object(e))
        }

        function i(e) {
            return !!e && "object" == typeof e
        }

        function o(e) {
            if (!i(e) || h.call(e) != a || r(e)) return !1;
            var t = n(e);
            if (null === t) return !0;
            var o = l.call(t, "constructor") && t.constructor;
            return "function" == typeof o && o instanceof o && u.call(o) == c
        }
        var a = "[object Object]",
            s = Object.prototype,
            u = Function.prototype.toString,
            l = s.hasOwnProperty,
            c = u.call(Object),
            h = s.toString,
            p = Object.getPrototypeOf;
        e.exports = o
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = r(29),
            o = n(i);
        t["default"] = {
            simpleCheckForValidColor: function(e) {
                for (var t = ["r", "g", "b", "a", "h", "s", "a", "v"], r = 0, n = 0, i = 0; i < t.length; i++) {
                    var o = t[i];
                    e[o] && (r++, isNaN(e[o]) || n++)
                }
                return r === n ? e : void 0
            },
            toState: function(e, t) {
                var r = e.hex ? (0, o["default"])(e.hex) : (0, o["default"])(e),
                    n = r.toHsl(),
                    i = r.toHsv();
                return 0 === n.s && (n.h = t || 0, i.h = t || 0), {
                    hsl: n,
                    hex: "#" + r.toHex(),
                    rgb: r.toRgb(),
                    hsv: i,
                    oldHue: e.h || t || n.h,
                    source: e.source
                }
            },
            isValidHex: function(e) {
                return (0, o["default"])(e).isValid()
            }
        }
    }, function(e, t, r) {
        var n;
        ! function() {
            function i(e, t) {
                if (e = e ? e : "", t = t || {}, e instanceof i) return e;
                if (!(this instanceof i)) return new i(e, t);
                var r = o(e);
                this._originalInput = e, this._r = r.r, this._g = r.g, this._b = r.b, this._a = r.a, this._roundA = j(100 * this._a) / 100, this._format = t.format || r.format, this._gradientType = t.gradientType, this._r < 1 && (this._r = j(this._r)), this._g < 1 && (this._g = j(this._g)), this._b < 1 && (this._b = j(this._b)), this._ok = r.ok, this._tc_id = z++
            }

            function o(e) {
                var t = {
                        r: 0,
                        g: 0,
                        b: 0
                    },
                    r = 1,
                    n = !1,
                    i = !1;
                return "string" == typeof e && (e = N(e)), "object" == typeof e && (e.hasOwnProperty("r") && e.hasOwnProperty("g") && e.hasOwnProperty("b") ? (t = a(e.r, e.g, e.b), n = !0, i = "%" === String(e.r).substr(-1) ? "prgb" : "rgb") : e.hasOwnProperty("h") && e.hasOwnProperty("s") && e.hasOwnProperty("v") ? (e.s = B(e.s, 1), e.v = B(e.v, 1), t = c(e.h, e.s, e.v), n = !0, i = "hsv") : e.hasOwnProperty("h") && e.hasOwnProperty("s") && e.hasOwnProperty("l") && (e.s = B(e.s), e.l = B(e.l), t = u(e.h, e.s, e.l), n = !0, i = "hsl"), e.hasOwnProperty("a") && (r = e.a)), r = M(r), {
                    ok: n,
                    format: e.format || i,
                    r: G(255, q(t.r, 0)),
                    g: G(255, q(t.g, 0)),
                    b: G(255, q(t.b, 0)),
                    a: r
                }
            }

            function a(e, t, r) {
                return {
                    r: 255 * A(e, 255),
                    g: 255 * A(t, 255),
                    b: 255 * A(r, 255)
                }
            }

            function s(e, t, r) {
                e = A(e, 255), t = A(t, 255), r = A(r, 255);
                var n, i, o = q(e, t, r),
                    a = G(e, t, r),
                    s = (o + a) / 2;
                if (o == a) n = i = 0;
                else {
                    var u = o - a;
                    switch (i = s > .5 ? u / (2 - o - a) : u / (o + a), o) {
                        case e:
                            n = (t - r) / u + (r > t ? 6 : 0);
                            break;
                        case t:
                            n = (r - e) / u + 2;
                            break;
                        case r:
                            n = (e - t) / u + 4
                    }
                    n /= 6
                }
                return {
                    h: n,
                    s: i,
                    l: s
                }
            }

            function u(e, t, r) {
                function n(e, t, r) {
                    return 0 > r && (r += 1), r > 1 && (r -= 1), 1 / 6 > r ? e + 6 * (t - e) * r : .5 > r ? t : 2 / 3 > r ? e + (t - e) * (2 / 3 - r) * 6 : e
                }
                var i, o, a;
                if (e = A(e, 360), t = A(t, 100), r = A(r, 100), 0 === t) i = o = a = r;
                else {
                    var s = .5 > r ? r * (1 + t) : r + t - r * t,
                        u = 2 * r - s;
                    i = n(u, s, e + 1 / 3), o = n(u, s, e), a = n(u, s, e - 1 / 3)
                }
                return {
                    r: 255 * i,
                    g: 255 * o,
                    b: 255 * a
                }
            }

            function l(e, t, r) {
                e = A(e, 255), t = A(t, 255), r = A(r, 255);
                var n, i, o = q(e, t, r),
                    a = G(e, t, r),
                    s = o,
                    u = o - a;
                if (i = 0 === o ? 0 : u / o, o == a) n = 0;
                else {
                    switch (o) {
                        case e:
                            n = (t - r) / u + (r > t ? 6 : 0);
                            break;
                        case t:
                            n = (r - e) / u + 2;
                            break;
                        case r:
                            n = (e - t) / u + 4
                    }
                    n /= 6
                }
                return {
                    h: n,
                    s: i,
                    v: s
                }
            }

            function c(e, t, r) {
                e = 6 * A(e, 360), t = A(t, 100), r = A(r, 100);
                var n = H.floor(e),
                    i = e - n,
                    o = r * (1 - t),
                    a = r * (1 - i * t),
                    s = r * (1 - (1 - i) * t),
                    u = n % 6,
                    l = [r, a, o, o, s, r][u],
                    c = [s, r, r, a, o, o][u],
                    h = [o, o, s, r, r, a][u];
                return {
                    r: 255 * l,
                    g: 255 * c,
                    b: 255 * h
                }
            }

            function h(e, t, r, n) {
                var i = [D(j(e).toString(16)), D(j(t).toString(16)), D(j(r).toString(16))];
                return n && i[0].charAt(0) == i[0].charAt(1) && i[1].charAt(0) == i[1].charAt(1) && i[2].charAt(0) == i[2].charAt(1) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) : i.join("")
            }

            function p(e, t, r, n) {
                var i = [D(L(n)), D(j(e).toString(16)), D(j(t).toString(16)), D(j(r).toString(16))];
                return i.join("")
            }

            function d(e, t) {
                t = 0 === t ? 0 : t || 10;
                var r = i(e).toHsl();
                return r.s -= t / 100, r.s = P(r.s), i(r)
            }

            function f(e, t) {
                t = 0 === t ? 0 : t || 10;
                var r = i(e).toHsl();
                return r.s += t / 100, r.s = P(r.s), i(r)
            }

            function m(e) {
                return i(e).desaturate(100)
            }

            function v(e, t) {
                t = 0 === t ? 0 : t || 10;
                var r = i(e).toHsl();
                return r.l += t / 100, r.l = P(r.l), i(r)
            }

            function g(e, t) {
                t = 0 === t ? 0 : t || 10;
                var r = i(e).toRgb();
                return r.r = q(0, G(255, r.r - j(255 * -(t / 100)))), r.g = q(0, G(255, r.g - j(255 * -(t / 100)))), r.b = q(0, G(255, r.b - j(255 * -(t / 100)))), i(r)
            }

            function y(e, t) {
                t = 0 === t ? 0 : t || 10;
                var r = i(e).toHsl();
                return r.l -= t / 100, r.l = P(r.l), i(r)
            }

            function b(e, t) {
                var r = i(e).toHsl(),
                    n = (j(r.h) + t) % 360;
                return r.h = 0 > n ? 360 + n : n, i(r)
            }

            function x(e) {
                var t = i(e).toHsl();
                return t.h = (t.h + 180) % 360, i(t)
            }

            function _(e) {
                var t = i(e).toHsl(),
                    r = t.h;
                return [i(e), i({
                    h: (r + 120) % 360,
                    s: t.s,
                    l: t.l
                }), i({
                    h: (r + 240) % 360,
                    s: t.s,
                    l: t.l
                })]
            }

            function w(e) {
                var t = i(e).toHsl(),
                    r = t.h;
                return [i(e), i({
                    h: (r + 90) % 360,
                    s: t.s,
                    l: t.l
                }), i({
                    h: (r + 180) % 360,
                    s: t.s,
                    l: t.l
                }), i({
                    h: (r + 270) % 360,
                    s: t.s,
                    l: t.l
                })]
            }

            function C(e) {
                var t = i(e).toHsl(),
                    r = t.h;
                return [i(e), i({
                    h: (r + 72) % 360,
                    s: t.s,
                    l: t.l
                }), i({
                    h: (r + 216) % 360,
                    s: t.s,
                    l: t.l
                })]
            }

            function E(e, t, r) {
                t = t || 6, r = r || 30;
                var n = i(e).toHsl(),
                    o = 360 / r,
                    a = [i(e)];
                for (n.h = (n.h - (o * t >> 1) + 720) % 360; --t;) n.h = (n.h + o) % 360, a.push(i(n));
                return a
            }

            function S(e, t) {
                t = t || 6;
                for (var r = i(e).toHsv(), n = r.h, o = r.s, a = r.v, s = [], u = 1 / t; t--;) s.push(i({
                    h: n,
                    s: o,
                    v: a
                })), a = (a + u) % 1;
                return s
            }

            function T(e) {
                var t = {};
                for (var r in e) e.hasOwnProperty(r) && (t[e[r]] = r);
                return t
            }

            function M(e) {
                return e = parseFloat(e), (isNaN(e) || 0 > e || e > 1) && (e = 1), e
            }

            function A(e, t) {
                k(e) && (e = "100%");
                var r = I(e);
                return e = G(t, q(0, parseFloat(e))), r && (e = parseInt(e * t, 10) / 100), H.abs(e - t) < 1e-6 ? 1 : e % t / parseFloat(t)
            }

            function P(e) {
                return G(1, q(0, e))
            }

            function R(e) {
                return parseInt(e, 16)
            }

            function k(e) {
                return "string" == typeof e && -1 != e.indexOf(".") && 1 === parseFloat(e)
            }

            function I(e) {
                return "string" == typeof e && -1 != e.indexOf("%")
            }

            function D(e) {
                return 1 == e.length ? "0" + e : "" + e
            }

            function B(e, t) {
                return t = t || 100, 1 >= e && (e = e * t + "%"), e
            }

            function L(e) {
                return Math.round(255 * parseFloat(e)).toString(16)
            }

            function V(e) {
                return R(e) / 255
            }

            function N(e) {
                e = e.replace(F, "").replace(U, "").toLowerCase();
                var t = !1;
                if (X[e]) e = X[e], t = !0;
                else if ("transparent" == e) return {
                    r: 0,
                    g: 0,
                    b: 0,
                    a: 0,
                    format: "name"
                };
                var r;
                return (r = K.rgb.exec(e)) ? {
                    r: r[1],
                    g: r[2],
                    b: r[3]
                } : (r = K.rgba.exec(e)) ? {
                    r: r[1],
                    g: r[2],
                    b: r[3],
                    a: r[4]
                } : (r = K.hsl.exec(e)) ? {
                    h: r[1],
                    s: r[2],
                    l: r[3]
                } : (r = K.hsla.exec(e)) ? {
                    h: r[1],
                    s: r[2],
                    l: r[3],
                    a: r[4]
                } : (r = K.hsv.exec(e)) ? {
                    h: r[1],
                    s: r[2],
                    v: r[3]
                } : (r = K.hsva.exec(e)) ? {
                    h: r[1],
                    s: r[2],
                    v: r[3],
                    a: r[4]
                } : (r = K.hex8.exec(e)) ? {
                    a: V(r[1]),
                    r: R(r[2]),
                    g: R(r[3]),
                    b: R(r[4]),
                    format: t ? "name" : "hex8"
                } : (r = K.hex6.exec(e)) ? {
                    r: R(r[1]),
                    g: R(r[2]),
                    b: R(r[3]),
                    format: t ? "name" : "hex"
                } : (r = K.hex3.exec(e)) ? {
                    r: R(r[1] + "" + r[1]),
                    g: R(r[2] + "" + r[2]),
                    b: R(r[3] + "" + r[3]),
                    format: t ? "name" : "hex"
                } : !1
            }

            function O(e) {
                var t, r;
                return e = e || {
                    level: "AA",
                    size: "small"
                }, t = (e.level || "AA").toUpperCase(), r = (e.size || "small").toLowerCase(), "AA" !== t && "AAA" !== t && (t = "AA"), "small" !== r && "large" !== r && (r = "small"), {
                    level: t,
                    size: r
                }
            }
            var F = /^[\s,#]+/,
                U = /\s+$/,
                z = 0,
                H = Math,
                j = H.round,
                G = H.min,
                q = H.max,
                W = H.random;
            i.prototype = {
                isDark: function() {
                    return this.getBrightness() < 128
                },
                isLight: function() {
                    return !this.isDark()
                },
                isValid: function() {
                    return this._ok
                },
                getOriginalInput: function() {
                    return this._originalInput
                },
                getFormat: function() {
                    return this._format
                },
                getAlpha: function() {
                    return this._a
                },
                getBrightness: function() {
                    var e = this.toRgb();
                    return (299 * e.r + 587 * e.g + 114 * e.b) / 1e3
                },
                getLuminance: function() {
                    var e, t, r, n, i, o, a = this.toRgb();
                    return e = a.r / 255, t = a.g / 255, r = a.b / 255, n = .03928 >= e ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4), i = .03928 >= t ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4), o = .03928 >= r ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4), .2126 * n + .7152 * i + .0722 * o
                },
                setAlpha: function(e) {
                    return this._a = M(e), this._roundA = j(100 * this._a) / 100, this
                },
                toHsv: function() {
                    var e = l(this._r, this._g, this._b);
                    return {
                        h: 360 * e.h,
                        s: e.s,
                        v: e.v,
                        a: this._a
                    }
                },
                toHsvString: function() {
                    var e = l(this._r, this._g, this._b),
                        t = j(360 * e.h),
                        r = j(100 * e.s),
                        n = j(100 * e.v);
                    return 1 == this._a ? "hsv(" + t + ", " + r + "%, " + n + "%)" : "hsva(" + t + ", " + r + "%, " + n + "%, " + this._roundA + ")"
                },
                toHsl: function() {
                    var e = s(this._r, this._g, this._b);
                    return {
                        h: 360 * e.h,
                        s: e.s,
                        l: e.l,
                        a: this._a
                    }
                },
                toHslString: function() {
                    var e = s(this._r, this._g, this._b),
                        t = j(360 * e.h),
                        r = j(100 * e.s),
                        n = j(100 * e.l);
                    return 1 == this._a ? "hsl(" + t + ", " + r + "%, " + n + "%)" : "hsla(" + t + ", " + r + "%, " + n + "%, " + this._roundA + ")"
                },
                toHex: function(e) {
                    return h(this._r, this._g, this._b, e)
                },
                toHexString: function(e) {
                    return "#" + this.toHex(e)
                },
                toHex8: function() {
                    return p(this._r, this._g, this._b, this._a)
                },
                toHex8String: function() {
                    return "#" + this.toHex8()
                },
                toRgb: function() {
                    return {
                        r: j(this._r),
                        g: j(this._g),
                        b: j(this._b),
                        a: this._a
                    }
                },
                toRgbString: function() {
                    return 1 == this._a ? "rgb(" + j(this._r) + ", " + j(this._g) + ", " + j(this._b) + ")" : "rgba(" + j(this._r) + ", " + j(this._g) + ", " + j(this._b) + ", " + this._roundA + ")"
                },
                toPercentageRgb: function() {
                    return {
                        r: j(100 * A(this._r, 255)) + "%",
                        g: j(100 * A(this._g, 255)) + "%",
                        b: j(100 * A(this._b, 255)) + "%",
                        a: this._a
                    }
                },
                toPercentageRgbString: function() {
                    return 1 == this._a ? "rgb(" + j(100 * A(this._r, 255)) + "%, " + j(100 * A(this._g, 255)) + "%, " + j(100 * A(this._b, 255)) + "%)" : "rgba(" + j(100 * A(this._r, 255)) + "%, " + j(100 * A(this._g, 255)) + "%, " + j(100 * A(this._b, 255)) + "%, " + this._roundA + ")"
                },
                toName: function() {
                    return 0 === this._a ? "transparent" : this._a < 1 ? !1 : Y[h(this._r, this._g, this._b, !0)] || !1
                },
                toFilter: function(e) {
                    var t = "#" + p(this._r, this._g, this._b, this._a),
                        r = t,
                        n = this._gradientType ? "GradientType = 1, " : "";
                    if (e) {
                        var o = i(e);
                        r = o.toHex8String()
                    }
                    return "progid:DXImageTransform.Microsoft.gradient(" + n + "startColorstr=" + t + ",endColorstr=" + r + ")"
                },
                toString: function(e) {
                    var t = !!e;
                    e = e || this._format;
                    var r = !1,
                        n = this._a < 1 && this._a >= 0,
                        i = !t && n && ("hex" === e || "hex6" === e || "hex3" === e || "name" === e);
                    return i ? "name" === e && 0 === this._a ? this.toName() : this.toRgbString() : ("rgb" === e && (r = this.toRgbString()), "prgb" === e && (r = this.toPercentageRgbString()), ("hex" === e || "hex6" === e) && (r = this.toHexString()), "hex3" === e && (r = this.toHexString(!0)), "hex8" === e && (r = this.toHex8String()), "name" === e && (r = this.toName()), "hsl" === e && (r = this.toHslString()), "hsv" === e && (r = this.toHsvString()), r || this.toHexString())
                },
                _applyModification: function(e, t) {
                    var r = e.apply(null, [this].concat([].slice.call(t)));
                    return this._r = r._r, this._g = r._g, this._b = r._b, this.setAlpha(r._a), this
                },
                lighten: function() {
                    return this._applyModification(v, arguments)
                },
                brighten: function() {
                    return this._applyModification(g, arguments)
                },
                darken: function() {
                    return this._applyModification(y, arguments)
                },
                desaturate: function() {
                    return this._applyModification(d, arguments)
                },
                saturate: function() {
                    return this._applyModification(f, arguments)
                },
                greyscale: function() {
                    return this._applyModification(m, arguments)
                },
                spin: function() {
                    return this._applyModification(b, arguments)
                },
                _applyCombination: function(e, t) {
                    return e.apply(null, [this].concat([].slice.call(t)))
                },
                analogous: function() {
                    return this._applyCombination(E, arguments)
                },
                complement: function() {
                    return this._applyCombination(x, arguments)
                },
                monochromatic: function() {
                    return this._applyCombination(S, arguments)
                },
                splitcomplement: function() {
                    return this._applyCombination(C, arguments)
                },
                triad: function() {
                    return this._applyCombination(_, arguments)
                },
                tetrad: function() {
                    return this._applyCombination(w, arguments)
                }
            }, i.fromRatio = function(e, t) {
                if ("object" == typeof e) {
                    var r = {};
                    for (var n in e) e.hasOwnProperty(n) && ("a" === n ? r[n] = e[n] : r[n] = B(e[n]));
                    e = r
                }
                return i(e, t)
            }, i.equals = function(e, t) {
                return e && t ? i(e).toRgbString() == i(t).toRgbString() : !1
            }, i.random = function() {
                return i.fromRatio({
                    r: W(),
                    g: W(),
                    b: W()
                })
            }, i.mix = function(e, t, r) {
                r = 0 === r ? 0 : r || 50;
                var n, o = i(e).toRgb(),
                    a = i(t).toRgb(),
                    s = r / 100,
                    u = 2 * s - 1,
                    l = a.a - o.a;
                n = u * l == -1 ? u : (u + l) / (1 + u * l), n = (n + 1) / 2;
                var c = 1 - n,
                    h = {
                        r: a.r * n + o.r * c,
                        g: a.g * n + o.g * c,
                        b: a.b * n + o.b * c,
                        a: a.a * s + o.a * (1 - s)
                    };
                return i(h)
            }, i.readability = function(e, t) {
                var r = i(e),
                    n = i(t);
                return (Math.max(r.getLuminance(), n.getLuminance()) + .05) / (Math.min(r.getLuminance(), n.getLuminance()) + .05)
            }, i.isReadable = function(e, t, r) {
                var n, o, a = i.readability(e, t);
                switch (o = !1, n = O(r), n.level + n.size) {
                    case "AAsmall":
                    case "AAAlarge":
                        o = a >= 4.5;
                        break;
                    case "AAlarge":
                        o = a >= 3;
                        break;
                    case "AAAsmall":
                        o = a >= 7
                }
                return o
            }, i.mostReadable = function(e, t, r) {
                var n, o, a, s, u = null,
                    l = 0;
                r = r || {}, o = r.includeFallbackColors, a = r.level, s = r.size;
                for (var c = 0; c < t.length; c++) n = i.readability(e, t[c]), n > l && (l = n, u = i(t[c]));
                return i.isReadable(e, u, {
                    level: a,
                    size: s
                }) || !o ? u : (r.includeFallbackColors = !1, i.mostReadable(e, ["#fff", "#000"], r))
            };
            var X = i.names = {
                    aliceblue: "f0f8ff",
                    antiquewhite: "faebd7",
                    aqua: "0ff",
                    aquamarine: "7fffd4",
                    azure: "f0ffff",
                    beige: "f5f5dc",
                    bisque: "ffe4c4",
                    black: "000",
                    blanchedalmond: "ffebcd",
                    blue: "00f",
                    blueviolet: "8a2be2",
                    brown: "a52a2a",
                    burlywood: "deb887",
                    burntsienna: "ea7e5d",
                    cadetblue: "5f9ea0",
                    chartreuse: "7fff00",
                    chocolate: "d2691e",
                    coral: "ff7f50",
                    cornflowerblue: "6495ed",
                    cornsilk: "fff8dc",
                    crimson: "dc143c",
                    cyan: "0ff",
                    darkblue: "00008b",
                    darkcyan: "008b8b",
                    darkgoldenrod: "b8860b",
                    darkgray: "a9a9a9",
                    darkgreen: "006400",
                    darkgrey: "a9a9a9",
                    darkkhaki: "bdb76b",
                    darkmagenta: "8b008b",
                    darkolivegreen: "556b2f",
                    darkorange: "ff8c00",
                    darkorchid: "9932cc",
                    darkred: "8b0000",
                    darksalmon: "e9967a",
                    darkseagreen: "8fbc8f",
                    darkslateblue: "483d8b",
                    darkslategray: "2f4f4f",
                    darkslategrey: "2f4f4f",
                    darkturquoise: "00ced1",
                    darkviolet: "9400d3",
                    deeppink: "ff1493",
                    deepskyblue: "00bfff",
                    dimgray: "696969",
                    dimgrey: "696969",
                    dodgerblue: "1e90ff",
                    firebrick: "b22222",
                    floralwhite: "fffaf0",
                    forestgreen: "228b22",
                    fuchsia: "f0f",
                    gainsboro: "dcdcdc",
                    ghostwhite: "f8f8ff",
                    gold: "ffd700",
                    goldenrod: "daa520",
                    gray: "808080",
                    green: "008000",
                    greenyellow: "adff2f",
                    grey: "808080",
                    honeydew: "f0fff0",
                    hotpink: "ff69b4",
                    indianred: "cd5c5c",
                    indigo: "4b0082",
                    ivory: "fffff0",
                    khaki: "f0e68c",
                    lavender: "e6e6fa",
                    lavenderblush: "fff0f5",
                    lawngreen: "7cfc00",
                    lemonchiffon: "fffacd",
                    lightblue: "add8e6",
                    lightcoral: "f08080",
                    lightcyan: "e0ffff",
                    lightgoldenrodyellow: "fafad2",
                    lightgray: "d3d3d3",
                    lightgreen: "90ee90",
                    lightgrey: "d3d3d3",
                    lightpink: "ffb6c1",
                    lightsalmon: "ffa07a",
                    lightseagreen: "20b2aa",
                    lightskyblue: "87cefa",
                    lightslategray: "789",
                    lightslategrey: "789",
                    lightsteelblue: "b0c4de",
                    lightyellow: "ffffe0",
                    lime: "0f0",
                    limegreen: "32cd32",
                    linen: "faf0e6",
                    magenta: "f0f",
                    maroon: "800000",
                    mediumaquamarine: "66cdaa",
                    mediumblue: "0000cd",
                    mediumorchid: "ba55d3",
                    mediumpurple: "9370db",
                    mediumseagreen: "3cb371",
                    mediumslateblue: "7b68ee",
                    mediumspringgreen: "00fa9a",
                    mediumturquoise: "48d1cc",
                    mediumvioletred: "c71585",
                    midnightblue: "191970",
                    mintcream: "f5fffa",
                    mistyrose: "ffe4e1",
                    moccasin: "ffe4b5",
                    navajowhite: "ffdead",
                    navy: "000080",
                    oldlace: "fdf5e6",
                    olive: "808000",
                    olivedrab: "6b8e23",
                    orange: "ffa500",
                    orangered: "ff4500",
                    orchid: "da70d6",
                    palegoldenrod: "eee8aa",
                    palegreen: "98fb98",
                    paleturquoise: "afeeee",
                    palevioletred: "db7093",
                    papayawhip: "ffefd5",
                    peachpuff: "ffdab9",
                    peru: "cd853f",
                    pink: "ffc0cb",
                    plum: "dda0dd",
                    powderblue: "b0e0e6",
                    purple: "800080",
                    rebeccapurple: "663399",
                    red: "f00",
                    rosybrown: "bc8f8f",
                    royalblue: "4169e1",
                    saddlebrown: "8b4513",
                    salmon: "fa8072",
                    sandybrown: "f4a460",
                    seagreen: "2e8b57",
                    seashell: "fff5ee",
                    sienna: "a0522d",
                    silver: "c0c0c0",
                    skyblue: "87ceeb",
                    slateblue: "6a5acd",
                    slategray: "708090",
                    slategrey: "708090",
                    snow: "fffafa",
                    springgreen: "00ff7f",
                    steelblue: "4682b4",
                    tan: "d2b48c",
                    teal: "008080",
                    thistle: "d8bfd8",
                    tomato: "ff6347",
                    turquoise: "40e0d0",
                    violet: "ee82ee",
                    wheat: "f5deb3",
                    white: "fff",
                    whitesmoke: "f5f5f5",
                    yellow: "ff0",
                    yellowgreen: "9acd32"
                },
                Y = i.hexNames = T(X),
                K = function() {
                    var e = "[-\\+]?\\d+%?",
                        t = "[-\\+]?\\d*\\.\\d+%?",
                        r = "(?:" + t + ")|(?:" + e + ")",
                        n = "[\\s|\\(]+(" + r + ")[,|\\s]+(" + r + ")[,|\\s]+(" + r + ")\\s*\\)?",
                        i = "[\\s|\\(]+(" + r + ")[,|\\s]+(" + r + ")[,|\\s]+(" + r + ")[,|\\s]+(" + r + ")\\s*\\)?";
                    return {
                        rgb: new RegExp("rgb" + n),
                        rgba: new RegExp("rgba" + i),
                        hsl: new RegExp("hsl" + n),
                        hsla: new RegExp("hsla" + i),
                        hsv: new RegExp("hsv" + n),
                        hsva: new RegExp("hsva" + i),
                        hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                        hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
                        hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
                    }
                }();
            "undefined" != typeof e && e.exports ? e.exports = i : (n = function() {
                return i
            }.call(t, r, t, e), !(void 0 !== n && (e.exports = n)))
        }()
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.ChromePointer = void 0;
        var s = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            u = r(3),
            l = n(u),
            c = r(4),
            h = n(c),
            p = r(17),
            d = n(p),
            f = t.ChromePointer = function(e) {
                function t() {
                    for (var e, r, n, a, s = arguments.length, u = Array(s), l = 0; s > l; l++) u[l] = arguments[l];
                    return i(this, t), r = n = o(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(u))), n.shouldComponentUpdate = d["default"].bind(n, n, arguments[0], arguments[1]), a = r, o(n, a)
                }
                return a(t, e), s(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "default": {
                                picker: {
                                    width: "10px",
                                    height: "16px",
                                    borderRadius: "5px",
                                    transform: "translate(-5px, 0px)",
                                    backgroundColor: "rgb(248, 248, 248)",
                                    boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
                                }
                            }
                        }
                    }
                }, {
                    key: "render",
                    value: function() {
                        return l["default"].createElement("div", {
                            style: this.styles().picker
                        })
                    }
                }]), t
            }(h["default"].Component);
        t["default"] = f
    }, function(e, t, r) {
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }

        function i(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function o(e, t) {
            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }

        function a(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.ChromePointerCircle = void 0;
        var s = function() {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                    }
                }
                return function(t, r, n) {
                    return r && e(t.prototype, r), n && e(t, n), t
                }
            }(),
            u = r(3),
            l = n(u),
            c = r(4),
            h = n(c),
            p = r(17),
            d = n(p),
            f = t.ChromePointerCircle = function(e) {
                function t() {
                    for (var e, r, n, a, s = arguments.length, u = Array(s), l = 0; s > l; l++) u[l] = arguments[l];
                    return i(this, t), r = n = o(this, (e = Object.getPrototypeOf(t)).call.apply(e, [this].concat(u))), n.shouldComponentUpdate = d["default"].bind(n, n, arguments[0], arguments[1]), a = r, o(n, a)
                }
                return a(t, e), s(t, [{
                    key: "classes",
                    value: function() {
                        return {
                            "default": {
                                picker: {
                                    width: "12px",
                                    height: "12px",
                                    borderRadius: "6px",
                                    boxShadow: "inset 0 0 0 1px #fff",
                                    transform: "translate(-6px, -6px)"
                                }
                            }
                        }
                    }
                }, {
                    key: "render",
                    value: function() {
                        return l["default"].createElement("div", {
                            style: this.styles().picker
                        })
                    }
                }]), t
            }(h["default"].Component);
        t["default"] = f
    }]);
    var d;
    ! function() {
        var t = {},
            r = {};
        ! function(n) {
            if ("object" == typeof t && "undefined" != typeof r) r.exports = n(e);
            else if ("function" == typeof define && define.amd) define(["react"], n);
            else {
                var i;
                i = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, i.ReactDOM = n(i.React)
            }
        }(function(e) {
            return e.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
        }), d = r.exports
    }();
    var o, u = this && this.__extends || function(e, t) {
            function r() {
                this.constructor = e
            }
            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
            e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
        },
        f = this && this.__assign || Object.assign || function(e) {
            for (var t, r = 1, n = arguments.length; n > r; r++) {
                t = arguments[r];
                for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
            }
            return e
        };
    ! function(e) {
        var t;
        ! function(e) {
            e.VERSION = {
                number: "1.0.4",
                date: "June 23 2016"
            }
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(t) {
        var r;
        ! function(t) {
            t.React = e, t.ReactDOM = d;
            var r;
            ! function(e) {
                e.ChromePickerHelper = p.ChromePicker
            }(r = t.Controls || (t.Controls = {}))
        }(r = t.Plugin || (t.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                function n(e) {
                    return 13 === e.keyCode || 13 === e.charCode ? !0 : !1
                }

                function i(e) {
                    return t.React.createElement("div", {
                        className: "lm-control-row lm-options-group",
                        title: e.title
                    }, t.React.createElement("span", null, e.label), t.React.createElement("div", null, t.React.createElement(r.TextBox, {
                        placeholder: e.placeholder,
                        onChange: e.onChange,
                        value: e.value,
                        onKeyPress: function(t) {
                            n(t) && e.onEnter && e.onEnter.call(null, t)
                        }
                    })))
                }
                var o = e.Bootstrap.Utils.shallowEqual,
                    a = function(e) {
                        function t() {
                            e.apply(this, arguments)
                        }
                        return u(t, e), t.prototype.shouldComponentUpdate = function(e, t) {
                            return !o(this.props, e) || !o(this.state, t)
                        }, t
                    }(t.React.Component);
                r.Pure = a;
                var s = function(e) {
                    function r() {
                        e.apply(this, arguments)
                    }
                    return u(r, e), r.prototype.render = function() {
                        var e = this.props,
                            r = "btn";
                        e.size && "nomal" !== e.size && (r += " btn-" + e.size), e.asBlock && (r += " btn-block"), r += e.disabled ? " btn-" + (e.disabledStyle || e.style || "default") : e.active ? " btn-" + (e.activeStyle || e.style || "default") : " btn-" + (e.style || "default"), e.customClass && (r += " " + e.customClass);
                        var n = void 0;
                        return e.icon && (n = e.active && e.activeIcon ? t.React.createElement("span", {
                            className: "icon icon-" + e.activeIcon
                        }) : t.React.createElement("span", {
                            className: "icon icon-" + e.icon
                        })), t.React.createElement("button", {
                            title: e.title,
                            className: r,
                            style: e.customStyle,
                            disabled: e.disabled,
                            onClick: function(t) {
                                e.onClick.call(null, t), t.target.blur()
                            }
                        }, n, e.children)
                    }, r
                }(a);
                r.Button = s, r.TextBox = function(e) {
                    return t.React.createElement("input", {
                        type: "text",
                        className: "form-control",
                        placeholder: e.placeholder,
                        value: e.value,
                        defaultValue: e.defaultValue,
                        onBlur: function(t) {
                            e.onBlur && e.onBlur.call(null, t)
                        },
                        onChange: function(t) {
                            return e.onChange.call(null, t.target.value)
                        },
                        onKeyPress: e.onKeyPress
                    })
                }, r.isEnter = n, r.TextBoxGroup = i, r.CommitButton = function(e) {
                    return t.React.createElement("div", {
                        style: {
                            marginTop: "1px"
                        }
                    }, t.React.createElement("button", {
                        onClick: function(t) {
                            e.action(), t.target.blur()
                        },
                        className: "btn btn-block btn-commit btn-commit-" + (e.isOn ? "on" : "off"),
                        disabled: !e.isOn,
                        title: e.title
                    }, t.React.createElement("span", {
                        className: "icon icon-" + (e.isOn ? "ok" : "cross")
                    }), e.isOn ? t.React.createElement("b", null, e.on) : e.off ? e.off : e.on))
                }, r.Toggle = function(e) {
                    return t.React.createElement("div", {
                        className: "lm-control-row lm-toggle-button",
                        title: e.title
                    }, t.React.createElement("span", null, e.label), t.React.createElement("div", null, t.React.createElement("button", {
                        onClick: function(t) {
                            e.onChange.call(null, !e.value), t.target.blur()
                        }
                    }, t.React.createElement("span", {
                        className: "icon icon-" + (e.value ? "ok" : "off")
                    }), " ", e.value ? "On" : "Off")))
                }, r.ControlGroupExpander = function(e) {
                    return t.React.createElement(r.Button, {
                        style: "link",
                        title: (e.isExpanded ? "Less" : "More") + " options",
                        onClick: function() {
                            return e.onChange.call(null, !e.isExpanded)
                        },
                        icon: e.isExpanded ? "minus" : "plus",
                        customClass: "lm-conrol-group-expander"
                    })
                }, r.RowText = function(e) {
                    return t.React.createElement("div", {
                        className: "lm-control-row lm-row-text",
                        title: e.title
                    }, t.React.createElement("span", null, e.label), t.React.createElement("div", null, e.value))
                }
            }(r = t.Controls || (t.Controls = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(r) {
                    var n = r.caption ? r.caption : function(e) {
                        return e
                    };
                    return e.React.createElement("div", {
                        className: "lm-control-row lm-options-group",
                        title: r.title
                    }, e.React.createElement("span", null, r.label), e.React.createElement("div", null, e.React.createElement(t.OptionsBox, {
                        options: r.options,
                        caption: n,
                        current: r.current,
                        onChange: r.onChange
                    })))
                }
                var n = function(t) {
                    function r() {
                        t.apply(this, arguments), this.current = void 0
                    }
                    return u(r, t), r.prototype.get = function(e) {
                        var t = this.props.options;
                        return "undefined" != typeof t.get ? t.get(e) : t[e]
                    }, r.prototype.render = function() {
                        var t = this,
                            r = this.props.caption,
                            n = this.props.options.indexOf(this.props.current);
                        return 0 > n && (n = 0), e.React.createElement("select", {
                            title: this.props.title,
                            value: n.toString(),
                            className: "form-control",
                            onChange: function(e) {
                                t.current = t.get(+e.target.value), t.props.onChange(t.current)
                            }
                        }, this.props.options.map(function(t, i) {
                            return e.React.createElement("option", {
                                key: i,
                                value: i,
                                selected: i === n
                            }, r(t))
                        }))
                    }, r
                }(e.React.Component);
                t.OptionsBox = n, t.OptionsGroup = r
            }(t = e.Controls || (e.Controls = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function(r) {
                    function n() {
                        r.apply(this, arguments)
                    }
                    return u(n, r), n.prototype.header = function() {
                        var r = this,
                            n = this.props.isExpanded,
                            i = this.props.title ? this.props.title : this.props.header,
                            o = n ? "collapse" : "expand",
                            a = e.React.createElement("div", {
                                className: "lm-panel-description",
                                onClick: function() {
                                    return r.props.onExpand.call(null, !r.props.isExpanded)
                                }
                            }, e.React.createElement("span", {
                                className: "icon icon-info"
                            }), e.React.createElement("div", {
                                className: "lm-panel-description-content"
                            }, e.React.createElement("span", {
                                className: "icon icon-info"
                            }), this.props.description));
                        return e.React.createElement("div", {
                            className: "lm-panel-header"
                        }, a, e.React.createElement("div", {
                            className: "lm-panel-expander-wrapper"
                        }, e.React.createElement(t.Button, {
                            title: i,
                            onClick: function() {
                                return r.props.onExpand.call(null, !r.props.isExpanded)
                            },
                            icon: o,
                            customClass: "lm-panel-expander",
                            style: "link"
                        }, this.props.badge, this.props.header)))
                    }, n.prototype.render = function() {
                        var t = "lm-panel" + (this.props.className ? " " + this.props.className : "") + (this.props.isExpanded ? " lm-panel-expanded" : " lm-panel-collapsed");
                        return e.React.createElement("div", {
                            className: t
                        }, this.header(), e.React.createElement("div", {
                            className: "lm-panel-body",
                            style: {
                                display: this.props.isExpanded ? "block" : "none"
                            }
                        }, this.props.children))
                    }, n
                }(e.React.Component);
                t.Panel = r, t.ExpandableGroup = function(t) {
                    return e.React.createElement("div", {
                        className: "lm-control-group"
                    }, t.select, t.options.length > 0 ? t.expander : void 0, t.options.length > 0 ? e.React.createElement("div", {
                        style: {
                            display: t.isExpanded ? "block" : "none"
                        },
                        className: "lm-control-subgroup"
                    }, t.options) : void 0)
                }
            }(t = e.Controls || (e.Controls = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r = function(r) {
                    function n() {
                        r.apply(this, arguments), this.state = {
                            value: "0"
                        }
                    }
                    return u(n, r), n.prototype.componentWillMount = function() {
                        this.setState({
                            value: "" + this.props.value
                        })
                    }, n.prototype.componentWillReceiveProps = function(e) {
                        this.setState({
                            value: "" + e.value
                        })
                    }, n.prototype.componentDidMount = function() {
                        var e = this.refs.slider;
                        e.value !== this.state.value && (e.value = this.state.value)
                    }, n.prototype.updateValue = function(e) {
                        var t = +e;
                        t < this.props.min ? (t = this.props.min, e = "" + t) : t > this.props.max && (t = this.props.max, e = "" + t), this.setState({
                            value: e
                        })
                    }, n.prototype.fire = function() {
                        var e = +this.state.value;
                        isNaN(e) && (e = this.props.value), e !== this.props.value && this.props.onChange.call(null, e)
                    }, n.prototype.render = function() {
                        var r = this,
                            n = this.props.step;
                        return void 0 === n && (n = 1), e.React.createElement("div", {
                            className: "lm-control-row lm-slider",
                            title: this.props.title
                        }, e.React.createElement("span", null, this.props.label), e.React.createElement("div", null, e.React.createElement("div", null, e.React.createElement("div", null, e.React.createElement("form", {
                            noValidate: !0
                        }, e.React.createElement("input", {
                            type: "range",
                            min: this.props.min,
                            max: this.props.max,
                            value: this.state.value,
                            ref: "slider",
                            step: n,
                            onInput: function(e) {
                                var t = e.target.value;
                                r.setState({
                                    value: t
                                })
                            },
                            onSelect: function(e) {
                                r.fire(), e.target.blur()
                            },
                            onBlur: function() {
                                return r.fire()
                            },
                            onTouchEnd: function() {
                                return r.fire()
                            }
                        })))), e.React.createElement("div", null, e.React.createElement(t.TextBox, {
                            value: this.state.value,
                            onChange: function(e) {
                                return r.updateValue(e)
                            },
                            onBlur: function() {
                                return r.fire()
                            },
                            onKeyPress: function(e) {
                                t.isEnter(e) && r.fire()
                            }
                        }))))
                    }, n
                }(e.React.Component);
                t.Slider = r
            }(t = e.Controls || (e.Controls = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n = e.Bootstrap.Utils.shallowEqual,
                    i = function(e) {
                        function i() {
                            e.apply(this, arguments)
                        }
                        return u(i, e), i.prototype.shouldComponentUpdate = function(e, t, r) {
                            return !n(this.props, e)
                        }, i.prototype.render = function() {
                            var e = this,
                                n = this.props.color,
                                i = n.r,
                                o = void 0 === i ? 1 : i,
                                a = n.g,
                                s = void 0 === a ? 1 : a,
                                u = n.b,
                                l = void 0 === u ? 1 : u,
                                c = {
                                    a: 1,
                                    r: 255 * o,
                                    g: 255 * s,
                                    b: 255 * l
                                },
                                h = function(t) {
                                    return e.props.onChange({
                                        r: t.rgb.r / 255,
                                        g: t.rgb.g / 255,
                                        b: t.rgb.b / 255
                                    })
                                },
                                p = t.React.createElement(r.ChromePickerHelper, {
                                    color: c,
                                    onChangeComplete: h
                                });
                            return t.React.createElement("div", {
                                className: "lm-color-picker"
                            }, p)
                        }, i
                    }(t.React.Component);
                r.ColorPicker = i;
                var o = function(e) {
                    function n() {
                        e.apply(this, arguments), this.state = {
                            isExpanded: !1
                        }
                    }
                    return u(n, e), n.prototype.render = function() {
                        var e = this,
                            n = this.state.isExpanded ? t.React.createElement(i, f({}, this.props)) : void 0,
                            o = this.props.color,
                            a = this.props.position ? this.props.position : "above";
                        return t.React.createElement("div", {
                            className: "lm-control-row lm-toggle-color-picker lm-toggle-color-picker-" + a,
                            onMouseLeave: function() {
                                return e.setState({
                                    isExpanded: !1
                                })
                            }
                        }, t.React.createElement("span", null, this.props.label), t.React.createElement("div", null, t.React.createElement(r.Button, {
                            onClick: function() {
                                e.setState({
                                    isExpanded: !e.state.isExpanded
                                })
                            },
                            asBlock: !0,
                            customStyle: {
                                backgroundColor: "rgb(" + (255 * o.r | 0) + ", " + (255 * o.g | 0) + ", " + (255 * o.b | 0) + ")",
                                color: "rgb(" + (255 * (1 - o.r) | 0) + "," + (255 * (1 - o.g) | 0) + "," + (255 * (1 - o.b) | 0) + ")"
                            }
                        })), n)
                    }, n
                }(t.React.Component);
                r.ToggleColorPicker = o
            }(r = t.Controls || (t.Controls = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                function r(r) {
                    return e.React.createElement("div", {
                        className: "lm-control-row"
                    }, e.React.createElement(t.TextBox, {
                        placeholder: "Enter query...",
                        onChange: r.onChange,
                        value: r.value,
                        onKeyPress: function(e) {
                            t.isEnter(e) && r.onEnter && r.onEnter.call(null, e)
                        }
                    }))
                }
                t.QueryEditor = r
            }(t = e.Controls || (e.Controls = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n = e.Bootstrap.Utils.shallowEqual,
                    i = function(t) {
                        function r() {
                            t.apply(this, arguments)
                        }
                        return u(r, t), r.prototype.update = function(t) {
                            var r = e.Bootstrap.Utils.merge(this.props.state, t);
                            r !== this.props.state && this.props.onChange(r)
                        }, r.prototype.shouldComponentUpdate = function(e, t) {
                            return !n(this.props, e) || !n(this.state, t)
                        }, r
                    }(t.React.Component);
                r.PureView = i;
                var o = function(e) {
                    function t() {
                        e.apply(this, arguments), this.subs = []
                    }
                    return u(t, e), t.prototype.subscribe = function(e, t) {
                        var r = e.subscribe(t);
                        return this.subs.push(r), r
                    }, t.prototype.unsubscribe = function(e) {
                        for (var t = this.subs.indexOf(e), r = t; r < this.subs.length - 1; r++) this.subs[r] = this.subs[r + 1];
                        e.dispose(), this.subs.pop()
                    }, t.prototype.componentWillUnmount = function() {
                        for (var e = 0, t = this.subs; e < t.length; e++) {
                            var r = t[e];
                            r.dispose()
                        }
                        this.subs = []
                    }, t
                }(t.React.Component);
                r.Component = o;
                var a = function(e) {
                    function t() {
                        e.apply(this, arguments), this.subs = []
                    }
                    return u(t, e), t.prototype.subscribe = function(e, t) {
                        var r = e.subscribe(t);
                        return this.subs.push(r), r
                    }, t.prototype.unsubscribe = function(e) {
                        for (var t = this.subs.indexOf(e), r = t; r < this.subs.length - 1; r++) this.subs[r] = this.subs[r + 1];
                        e.dispose(), this.subs.pop()
                    }, t.prototype.componentWillUnmount = function() {
                        for (var e = 0, t = this.subs; e < t.length; e++) {
                            var r = t[e];
                            r.dispose()
                        }
                        this.subs = []
                    }, t
                }(t.React.Component);
                r.ObserverView = a;
                var s = function(e) {
                    function t() {
                        e.apply(this, arguments)
                    }
                    return u(t, e), Object.defineProperty(t.prototype, "controller", {
                        get: function() {
                            return this.props.controller
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t.prototype.componentWillMount = function() {
                        var e = this;
                        this.subscribe(this.controller.state, function(t) {
                            e.forceUpdate()
                        })
                    }, t
                }(a);
                r.View = s
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n = e.Bootstrap.Components.LayoutRegion,
                    i = function(e) {
                        function r() {
                            e.apply(this, arguments)
                        }
                        return u(r, e), r.prototype.renderTarget = function(e) {
                            for (var r = [], n = [], i = 0, o = e.components; i < o.length; i++) {
                                var a = o[i];
                                a.isStatic ? r.push(t.React.createElement(a.view, {
                                    controller: a.controller
                                })) : n.push(t.React.createElement(a.view, {
                                    controller: a.controller
                                }))
                            }
                            return t.React.createElement("div", {
                                className: "lm-layout-region lm-layout-" + e.cssClass
                            }, r.length ? t.React.createElement("div", {
                                className: "lm-layout-static"
                            }, r) : void 0, n.length ? t.React.createElement("div", {
                                className: "lm-layout-scrollable"
                            }, n) : void 0)
                        }, r.prototype.render = function() {
                            var e = "",
                                r = this.controller.latestState,
                                i = r.isExpanded ? "lm-layout-expanded" : "lm-layout-standard",
                                o = this.controller.targets,
                                a = [this.renderTarget(o[n.Main])],
                                s = o[n.Top];
                            r.hideControls || !s.components.length ? e += " lm-layout-hide-top" : a.push(this.renderTarget(s)), s = o[n.Right], r.hideControls || !s.components.length ? e += " lm-layout-hide-right" : a.push(this.renderTarget(s)), s = o[n.Bottom], r.hideControls || !s.components.length ? e += " lm-layout-hide-bottom" : a.push(this.renderTarget(s)), s = o[n.Left], r.hideControls || !s.components.length ? e += " lm-layout-hide-left" : a.push(this.renderTarget(s));
                            var u = o[n.Root].components.map(function(e) {
                                return t.React.createElement(e.view, {
                                    controller: e.controller
                                })
                            });
                            return t.React.createElement("div", {
                                className: "lm-plugin"
                            }, t.React.createElement("div", {
                                className: "lm-plugin-content " + i
                            }, t.React.createElement("div", {
                                className: e
                            }, a, u)))
                        }, r
                    }(r.View);
                r.Layout = i
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i = function(e) {
                        function n() {
                            e.apply(this, arguments)
                        }
                        return u(n, e), Object.defineProperty(n.prototype, "params", {
                            get: function() {
                                return this.controller.latestState.params
                            },
                            enumerable: !0,
                            configurable: !0
                        }), n.prototype.updateParams = function(e) {
                            this.controller.updateParams(e)
                        }, n.prototype.autoUpdateParams = function(e) {
                            this.controller.autoUpdateParams(e)
                        }, Object.defineProperty(n.prototype, "entity", {
                            get: function() {
                                return this.controller.entity
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(n.prototype, "isUpdate", {
                            get: function() {
                                return this.controller.isUpdate
                            },
                            enumerable: !0,
                            configurable: !0
                        }), Object.defineProperty(n.prototype, "canApply", {
                            get: function() {
                                var e = this.controller.latestState,
                                    t = e.canApply && (!this.isUpdate || e.isDirty) && !e.isBusy;
                                return t && this.isUpdate && e.parametersAutoUpdating ? !1 : t
                            },
                            enumerable: !0,
                            configurable: !0
                        }), n.prototype.applyEnter = function(e) {
                            this.canApply && (e.target.blur(), this.controller.apply())
                        }, n.prototype.render = function() {
                            var e = this,
                                n = (this.controller.context, this.isUpdate),
                                i = this.controller.latestState,
                                o = i.issues,
                                a = o && o.length,
                                s = i.isBusy,
                                u = s ? "Working..." : n && !a ? "Nothing to update" : o ? o[0] : void 0,
                                l = this.controller.transformer.info,
                                c = t.React.createElement(t.Controls.CommitButton, {
                                    action: function() {
                                        return e.controller.apply()
                                    },
                                    isOn: this.canApply,
                                    title: o && o.length ? o[0] : this.canApply && n ? "An update will remove all child nodes." : void 0,
                                    on: n ? "Update" : this.props.isAction ? "Apply" : "Add",
                                    off: u
                                }),
                                h = this.canApply || a,
                                p = this.props.customHeader ? this.props.customHeader : (n ? "Update " : "") + l.name;
                            return t.React.createElement("div", {
                                className: "lm-transformer-wrapper"
                            }, t.React.createElement(t.Controls.Panel, {
                                header: p,
                                badge: this.props.hideBadge ? void 0 : t.React.createElement(r.Entity.Badge, {
                                    type: l.to[0].info
                                }),
                                className: "lm-control lm-transformer lm-panel-" + l.to[0].info.typeClass,
                                key: l.id,
                                title: l.description,
                                isExpanded: i.isExpanded,
                                onExpand: function(t) {
                                    e.controller.setState({
                                        isExpanded: t
                                    })
                                },
                                description: this.controller.transformer.info.description
                            }, this.renderControls(), h ? c : void 0, this.props.showVisibilityIcon ? t.React.createElement(r.Entity.VisibilityControl, {
                                entity: this.entity
                            }) : void 0))
                        }, n
                    }(r.View);
                    n.ControllerBase = i;
                    var o = function(e) {
                        function r() {
                            e.apply(this, arguments)
                        }
                        return u(r, e), r.prototype.renderControls = function() {
                            return t.React.createElement("div", null)
                        }, r
                    }(n.ControllerBase);
                    n.Empty = o;
                    var a = function(e) {
                        function r() {
                            e.apply(this, arguments)
                        }
                        return u(r, e), r.prototype.render = function() {
                            var e = this.controller.context,
                                r = e.plugin,
                                n = this.controller.latestState,
                                i = n.transforms,
                                o = i.map(function(e) {
                                    var n = r.getTransformerView(e.transformer);
                                    return t.React.createElement(n, {
                                        controller: e,
                                        key: e.transformer.info.id + "-" + e.entity.id
                                    })
                                });
                            if (n.update) {
                                var a = r.getTransformerView(n.update.transformer);
                                o.push(t.React.createElement(a, {
                                    controller: n.update,
                                    key: n.update.transformer.info.id + "-" + n.update.entity.id
                                }))
                            }
                            return t.React.createElement("div", {
                                className: "lm-transform-view"
                            }, o)
                        }, r
                    }(r.View);
                    n.View = a, n.TransparencyControl = function(e) {
                        var r = e.definition.alpha;
                        return t.React.createElement(t.Controls.Slider, {
                            label: "Opacity",
                            onChange: function(t) {
                                return e.onChange({
                                    alpha: t,
                                    writeDepth: e.definition.writeDepth
                                })
                            },
                            min: 0,
                            max: 1,
                            step: .01,
                            value: r
                        })
                    };
                    var s = function(r) {
                        function n() {
                            r.apply(this, arguments)
                        }
                        return u(n, r), n.prototype.componentWillMount = function() {
                            var t = this;
                            r.prototype.componentWillMount.call(this), this.subscribe(e.Bootstrap.Event.Tree.NodeUpdated.getStream(this.controller.context), function(e) {
                                var r = t.controller.latestState.controller,
                                    n = r && r.entity;
                                e.data === n && t.forceUpdate()
                            })
                        }, n.prototype.render = function() {
                            var e = this.controller.latestState.controller;
                            if (!e) return t.React.createElement("div", {
                                className: "lm-empty-control"
                            });
                            var r = this.controller.context,
                                n = r.plugin.getTransformerView(e.transformer);
                            return n ? t.React.createElement(n, {
                                controller: e,
                                key: e.transformer.info.id + "-" + e.entity.id,
                                customHeader: this.controller.header,
                                hideBadge: !0,
                                showVisibilityIcon: !0
                            }) : (console.warn("Count not find view for updater (" + e.transformer.info.id + "), please register it."), t.React.createElement("div", {
                                className: "lm-empty-control"
                            }))
                        }, n
                    }(r.View);
                    n.Updater = s;
                    var l = function(e) {
                        function r() {
                            e.apply(this, arguments)
                        }
                        return u(r, e), r.prototype.render = function() {
                            var e = this.controller.latestState.controller;
                            if (!e) return t.React.createElement("div", {
                                className: "lm-empty-control"
                            });
                            var r = this.controller.context,
                                n = r.plugin.getTransformerView(e.transformer);
                            return n ? t.React.createElement(n, {
                                controller: e,
                                key: e.transformer.info.id + "-" + e.entity.id,
                                customHeader: this.controller.header,
                                hideBadge: !0,
                                isAction: !0
                            }) : (console.warn("Count not find view for updater (" + e.transformer.info.id + "), please register it."), t.React.createElement("div", {
                                className: "lm-empty-control"
                            }))
                        }, r
                    }(r.View);
                    n.Action = l
                }(n = r.Transform || (r.Transform = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n;
                    ! function(n) {
                        var i = function(r) {
                            function n() {
                                r.apply(this, arguments)
                            }
                            return u(n, r), n.prototype.renderControls = function() {
                                var r = this,
                                    n = this.params;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.OptionsGroup, {
                                    options: e.Bootstrap.Entity.Data.Types,
                                    caption: function(e) {
                                        return e
                                    },
                                    current: n.type,
                                    onChange: function(e) {
                                        return r.updateParams({
                                            type: e
                                        })
                                    },
                                    label: "Type"
                                }), t.React.createElement(t.Controls.TextBoxGroup, {
                                    value: n.url,
                                    onChange: function(e) {
                                        return r.updateParams({
                                            url: e
                                        })
                                    },
                                    label: "Url",
                                    onEnter: function(e) {
                                        return r.applyEnter(e)
                                    },
                                    placeholder: "Enter url..."
                                }))
                            }, n
                        }(r.ControllerBase);
                        n.Download = i;
                        var o = function(r) {
                            function n() {
                                r.apply(this, arguments)
                            }
                            return u(n, r), n.prototype.renderControls = function() {
                                var r = this,
                                    n = this.params,
                                    i = this.controller.latestState;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.OptionsGroup, {
                                    options: e.Bootstrap.Entity.Data.Types,
                                    caption: function(e) {
                                        return e
                                    },
                                    current: n.type,
                                    onChange: function(e) {
                                        return r.updateParams({
                                            type: e
                                        })
                                    },
                                    label: "Type"
                                }), t.React.createElement("div", {
                                    className: "btn btn-block btn-action lm-loader-btn-file",
                                    style: {
                                        marginTop: "1px"
                                    }
                                }, n.file ? n.file.name : "Select a file...", " ", t.React.createElement("input", {
                                    disabled: i.isBusy,
                                    type: "file",
                                    onChange: function(e) {
                                        return r.updateParams({
                                            file: e.target.files[0]
                                        })
                                    },
                                    multiple: !1
                                })))
                            }, n
                        }(r.ControllerBase);
                        n.OpenFile = o;
                        var a = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params,
                                    n = this.controller.latestState;
                                return t.React.createElement("div", null, t.React.createElement("div", {
                                    className: "btn btn-block btn-action lm-loader-btn-file",
                                    style: {
                                        marginTop: "1px"
                                    }
                                }, r.file ? r.file.name : "Select CIF file...", " ", t.React.createElement("input", {
                                    disabled: n.isBusy,
                                    type: "file",
                                    accept: ".cif,.cif.gz",
                                    onChange: function(t) {
                                        return e.updateParams({
                                            file: t.target.files[0]
                                        })
                                    },
                                    multiple: !1
                                })))
                            }, r
                        }(r.ControllerBase);
                        n.OpenCifMolecule = a;
                        var s = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.TextBoxGroup, {
                                    value: r.id,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            id: t
                                        })
                                    },
                                    label: "Id",
                                    onEnter: function(t) {
                                        return e.applyEnter(t)
                                    },
                                    placeholder: "Enter pdb id..."
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.WithIdField = s;
                        var l = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.TextBoxGroup, {
                                    value: r.id,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            id: t
                                        })
                                    },
                                    label: "Url",
                                    onEnter: function(t) {
                                        return e.applyEnter(t)
                                    },
                                    placeholder: "Enter url..."
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.WithUrlIdField = l
                    }(n = r.Data || (r.Data = {}))
                }(n = r.Transform || (r.Transform = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n;
                    ! function(n) {
                        var i = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.TextBoxGroup, {
                                    value: r.id,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            id: t
                                        })
                                    },
                                    label: "Id",
                                    onEnter: function(t) {
                                        return e.applyEnter(t)
                                    },
                                    placeholder: "Enter pdb id..."
                                }), t.React.createElement(t.Controls.TextBoxGroup, {
                                    value: r.server,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            server: t
                                        })
                                    },
                                    label: "Server",
                                    onEnter: function(t) {
                                        return e.applyEnter(t)
                                    },
                                    placeholder: "Server url..."
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.InitCoordinateStreaming = i;
                        var o = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = (this.params, this.entity),
                                    n = r.props.dictionary.dataBlocks.map(function(e, t) {
                                        return {
                                            b: e.header,
                                            i: t
                                        }
                                    });
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.OptionsGroup, {
                                    options: n,
                                    caption: function(e) {
                                        return e.b
                                    },
                                    current: n[this.params.blockIndex],
                                    onChange: function(t) {
                                        return e.updateParams({
                                            blockIndex: t.i
                                        })
                                    },
                                    label: "Source"
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.CreateFromCif = o;
                        var a = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params,
                                    n = this.isUpdate ? this.entity.parent : this.entity,
                                    i = n ? n.props.molecule.models.length : 1;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.Slider, {
                                    label: "Index",
                                    onChange: function(t) {
                                        return e.updateParams({
                                            modelIndex: t - 1
                                        })
                                    },
                                    min: 1,
                                    max: i,
                                    step: 1,
                                    value: (0 | r.modelIndex) + 1,
                                    title: "Index of the model."
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.CreateModel = a;
                        var s = function(r) {
                            function n() {
                                r.apply(this, arguments)
                            }
                            return u(n, r), n.prototype.renderControls = function() {
                                var r = this,
                                    n = this.params,
                                    i = this.isUpdate ? e.Bootstrap.Utils.Molecule.findModel(this.entity.parent) : this.entity,
                                    o = i.props.model.assemblyInfo;
                                if (!o) return void 0;
                                var a = o.assemblies.map(function(e) {
                                    return e.name
                                });
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.OptionsGroup, {
                                    options: a,
                                    current: n.name,
                                    onChange: function(e) {
                                        return r.updateParams({
                                            name: e
                                        })
                                    },
                                    label: "Name"
                                }))
                            }, n
                        }(r.ControllerBase);
                        n.CreateAssembly = s;
                        var l = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params,
                                    n = ["Mates", "Interaction"];
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.OptionsGroup, {
                                    options: n,
                                    current: r.type,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            type: t
                                        })
                                    },
                                    label: "Type",
                                    title: "Mates: copies whole asymetric unit. Interaction: Includes only residues that are no more than `radius` from the asymetric unit."
                                }), t.React.createElement(t.Controls.Slider, {
                                    label: "Radius",
                                    onChange: function(t) {
                                        return e.updateParams({
                                            radius: t
                                        })
                                    },
                                    min: 0,
                                    max: 25,
                                    step: .1,
                                    value: r.radius,
                                    title: "Interaction radius."
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.CreateSymmetryMates = l;
                        var c = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.TextBoxGroup, {
                                    value: r.name,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            name: t
                                        })
                                    },
                                    label: "Name",
                                    onEnter: function(t) {
                                        return e.applyEnter(t)
                                    },
                                    placeholder: "Optional name..."
                                }), t.React.createElement(t.Controls.QueryEditor, {
                                    value: r.queryString,
                                    onChange: function(t) {
                                        return e.updateParams({
                                            queryString: t
                                        })
                                    },
                                    onEnter: function(t) {
                                        return e.applyEnter(t)
                                    }
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.CreateSelection = c;
                        var h = function(e) {
                            function r() {
                                e.apply(this, arguments)
                            }
                            return u(r, e), r.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.Toggle, {
                                    onChange: function(t) {
                                        return e.updateParams({
                                            polymer: t
                                        })
                                    },
                                    value: r.polymer,
                                    label: "Polymer"
                                }), t.React.createElement(t.Controls.Toggle, {
                                    onChange: function(t) {
                                        return e.updateParams({
                                            het: t
                                        })
                                    },
                                    value: r.het,
                                    label: "HET"
                                }), t.React.createElement(t.Controls.Toggle, {
                                    onChange: function(t) {
                                        return e.updateParams({
                                            water: t
                                        })
                                    },
                                    value: r.water,
                                    label: "Water"
                                }))
                            }, r
                        }(r.ControllerBase);
                        n.CreateMacromoleculeVisual = h;
                        var p = function(n) {
                            function i() {
                                n.apply(this, arguments)
                            }
                            return u(i, n), i.prototype.detail = function() {
                                var r = this,
                                    n = this.params.style.params;
                                return [t.React.createElement(t.Controls.OptionsGroup, {
                                    options: e.Bootstrap.Visualization.Molecule.DetailTypes,
                                    caption: function(e) {
                                        return e
                                    },
                                    current: n.detail,
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            detail: e
                                        })
                                    },
                                    label: "Detail"
                                })]
                            }, i.prototype.ballsAndSticks = function() {
                                var r = this,
                                    n = this.params.style.params,
                                    i = [];
                                return i.push(t.React.createElement(t.Controls.Toggle, {
                                    title: "Scale atoms using their VDW radius.",
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            useVDW: e
                                        })
                                    },
                                    value: n.useVDW,
                                    label: "VDW"
                                })), n.useVDW ? i.push(t.React.createElement(t.Controls.Slider, {
                                    label: "Scale",
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            vdwScaling: e
                                        })
                                    },
                                    min: .1,
                                    max: 1,
                                    step: .01,
                                    value: n.vdwScaling,
                                    title: "VDW scale factor."
                                })) : i.push(t.React.createElement(t.Controls.Slider, {
                                    label: "Atom Rds",
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            atomRadius: e
                                        })
                                    },
                                    min: .05,
                                    max: 2,
                                    step: .01,
                                    value: n.atomRadius,
                                    title: "Atom Radius"
                                })), i.push(t.React.createElement(t.Controls.Slider, {
                                    label: "Bond Rds",
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            bondRadius: e
                                        })
                                    },
                                    min: .05,
                                    max: 1,
                                    step: .01,
                                    value: n.bondRadius,
                                    title: "Bond Radius"
                                })), i.push(t.React.createElement(t.Controls.OptionsGroup, {
                                    options: e.Bootstrap.Visualization.Molecule.DetailTypes,
                                    caption: function(e) {
                                        return e
                                    },
                                    current: n.detail,
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            detail: e
                                        })
                                    },
                                    label: "Detail"
                                })), i
                            }, i.prototype.surface = function() {
                                var e = this,
                                    r = this.params.style.params;
                                return [t.React.createElement(t.Controls.Slider, {
                                    label: "Probe Radius",
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            probeRadius: t
                                        })
                                    },
                                    min: 0,
                                    max: 6,
                                    step: .1,
                                    value: r.probeRadius
                                }), t.React.createElement(t.Controls.Slider, {
                                    label: "Smoothing",
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            smoothing: t
                                        })
                                    },
                                    min: 0,
                                    max: 10,
                                    step: 1,
                                    value: r.smoothing,
                                    title: "Number of laplacian smoothing itrations."
                                }), t.React.createElement(t.Controls.Slider, {
                                    label: "Detail",
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            density: t
                                        })
                                    },
                                    min: .3,
                                    max: 3,
                                    step: .1,
                                    value: r.density,
                                    title: "Determines the size of a grid cell."
                                }), t.React.createElement(t.Controls.Toggle, {
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            isWireframe: t
                                        })
                                    },
                                    value: r.isWireframe,
                                    label: "Wireframe"
                                })]
                            }, i.prototype.createColors = function() {
                                var e = this,
                                    n = this.params.style.theme,
                                    i = "BallsAndSticks" === this.params.style.type,
                                    o = n.colors.filter(function(e, t) {
                                        return i ? !0 : "Bond" !== t
                                    }).map(function(r, n) {
                                        return t.React.createElement(t.Controls.ToggleColorPicker, {
                                            key: n,
                                            label: n,
                                            color: r,
                                            onChange: function(t) {
                                                return e.controller.updateThemeColor(n, t)
                                            }
                                        })
                                    }).toArray();
                                return o.push(t.React.createElement(r.TransparencyControl, {
                                    definition: n.transparency,
                                    onChange: function(t) {
                                        return e.controller.updateThemeTransparency(t)
                                    }
                                })), o
                            }, i.prototype.renderControls = function() {
                                var r, n = this,
                                    i = this.params;
                                switch (i.style.type) {
                                    case "Surface":
                                        r = this.surface();
                                        break;
                                    case "BallsAndSticks":
                                        r = this.ballsAndSticks();
                                        break;
                                    default:
                                        r = this.detail()
                                }
                                var o = function(t) {
                                        return e.Bootstrap.Visualization.Molecule.TypeDescriptions[t]
                                    },
                                    a = this.controller.latestState.showTypeOptions,
                                    s = this.controller.latestState.showThemeOptions;
                                return t.React.createElement("div", null, t.React.createElement(t.Controls.ExpandableGroup, {
                                    select: t.React.createElement(t.Controls.OptionsGroup, {
                                        options: e.Bootstrap.Visualization.Molecule.Types,
                                        caption: function(e) {
                                            return o(e).label
                                        },
                                        current: i.style.type,
                                        onChange: function(t) {
                                            return n.controller.updateTemplate(t, e.Bootstrap.Visualization.Molecule.Default.ForType)
                                        },
                                        label: "Type"
                                    }),
                                    expander: t.React.createElement(t.Controls.ControlGroupExpander, {
                                        isExpanded: a,
                                        onChange: function(e) {
                                            return n.controller.setState({
                                                showTypeOptions: e
                                            })
                                        }
                                    }),
                                    options: r,
                                    isExpanded: a
                                }), t.React.createElement(t.Controls.ExpandableGroup, {
                                    select: t.React.createElement(t.Controls.OptionsGroup, {
                                        options: e.Bootstrap.Visualization.Molecule.Default.Themes,
                                        caption: function(e) {
                                            return e.name
                                        },
                                        current: i.style.theme.template,
                                        onChange: function(e) {
                                            return n.controller.updateThemeDefinition(e)
                                        },
                                        label: "Coloring"
                                    }),
                                    expander: t.React.createElement(t.Controls.ControlGroupExpander, {
                                        isExpanded: s,
                                        onChange: function(e) {
                                            return n.controller.setState({
                                                showThemeOptions: e
                                            })
                                        }
                                    }),
                                    options: this.createColors(),
                                    isExpanded: s
                                }))
                            }, i
                        }(r.ControllerBase);
                        n.CreateVisual = p
                    }(n = r.Molecule || (r.Molecule = {}))
                }(n = r.Transform || (r.Transform = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(r) {
                    var n;
                    ! function(n) {
                        var i = function(e) {
                                return t.React.createElement(t.Controls.Slider, f({
                                    label: "Iso Value (Ïƒ)"
                                }, e, {
                                    step: .001
                                }))
                            },
                            o = function(r) {
                                function n() {
                                    r.apply(this, arguments)
                                }
                                return u(n, r), n.prototype.renderControls = function() {
                                    var r, n = this,
                                        i = this.params,
                                        o = i.normalize,
                                        a = e.Bootstrap.Utils.round;
                                    if (this.isUpdate) {
                                        var s = this.entity.props.data;
                                        r = [t.React.createElement(t.Controls.RowText, {
                                            label: "Sigma",
                                            value: a(s.valuesInfo.sigma, 3)
                                        }), t.React.createElement(t.Controls.RowText, {
                                            label: "Mean",
                                            value: a(s.valuesInfo.mean, 3)
                                        }), t.React.createElement(t.Controls.RowText, {
                                            label: "Value Range",
                                            value: "[" + a(s.valuesInfo.min, 3) + ", " + a(s.valuesInfo.max, 3) + "]"
                                        })]
                                    }
                                    return t.React.createElement("div", null, r, t.React.createElement(t.Controls.Toggle, {
                                        onChange: function(e) {
                                            return n.controller.updateParams({
                                                normalize: e
                                            })
                                        },
                                        value: o,
                                        label: "Normalized"
                                    }))
                                }, n
                            }(r.ControllerBase);
                        n.ParseCcp4 = o;
                        var a = function(n) {
                            function o() {
                                n.apply(this, arguments)
                            }
                            return u(o, n), o.prototype.surface = function() {
                                var r = this,
                                    n = (e.Bootstrap.Tree.Node.findClosestNodeOfType(this.entity, [e.Bootstrap.Entity.Density.Data]), this.params.style.params);
                                return t.React.createElement(i, {
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            isoSigma: e
                                        })
                                    },
                                    min: -5,
                                    max: 5,
                                    value: n.isoSigma
                                })
                            }, o.prototype.colors = function() {
                                var e = this,
                                    n = this.params.style.params,
                                    i = this.params.style.theme,
                                    o = i.colors.get("Uniform"),
                                    a = t.React.createElement(t.Controls.ToggleColorPicker, {
                                        key: "Uniform",
                                        label: "Color",
                                        color: o,
                                        onChange: function(t) {
                                            return e.controller.updateThemeColor("Uniform", t)
                                        }
                                    }),
                                    s = i.colors.filter(function(e, t) {
                                        return "Uniform" !== t
                                    }).map(function(r, n) {
                                        return t.React.createElement(t.Controls.ToggleColorPicker, {
                                            key: n,
                                            label: n,
                                            color: r,
                                            onChange: function(t) {
                                                return e.controller.updateThemeColor(n, t)
                                            }
                                        })
                                    }).toArray();
                                s.push(t.React.createElement(r.TransparencyControl, {
                                    definition: i.transparency,
                                    onChange: function(t) {
                                        return e.controller.updateThemeTransparency(t)
                                    }
                                }));
                                var u = this.params.style.params;
                                s.push(t.React.createElement(t.Controls.Slider, {
                                    label: "Smoothing",
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            smoothing: t
                                        })
                                    },
                                    min: 0,
                                    max: 10,
                                    step: 1,
                                    value: u.smoothing,
                                    title: "Number of laplacian smoothing itrations."
                                })), s.push(t.React.createElement(t.Controls.Toggle, {
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            isWireframe: t
                                        })
                                    },
                                    value: n.isWireframe,
                                    label: "Wireframe"
                                }));
                                var l = this.controller.latestState.showThemeOptions;
                                return t.React.createElement(t.Controls.ExpandableGroup, {
                                    select: a,
                                    expander: t.React.createElement(t.Controls.ControlGroupExpander, {
                                        isExpanded: l,
                                        onChange: function(t) {
                                            return e.controller.setState({
                                                showThemeOptions: t
                                            })
                                        }
                                    }),
                                    options: s,
                                    isExpanded: l
                                })
                            }, o.prototype.renderControls = function() {
                                this.params;
                                return t.React.createElement("div", null, this.surface(), this.colors())
                            }, o
                        }(r.ControllerBase);
                        n.CreateVisual = a;
                        var s = function(n) {
                            function o() {
                                n.apply(this, arguments)
                            }
                            return u(o, n), o.prototype.surface = function() {
                                var r = this,
                                    n = (e.Bootstrap.Tree.Node.findClosestNodeOfType(this.entity, [e.Bootstrap.Entity.Density.Data]), this.params.style.params);
                                return t.React.createElement(i, {
                                    onChange: function(e) {
                                        return r.controller.updateStyleParams({
                                            isoSigma: e
                                        })
                                    },
                                    min: this.params.isoSigmaMin,
                                    max: this.params.isoSigmaMax,
                                    value: n.isoSigma
                                })
                            }, o.prototype.colors = function() {
                                var e = this,
                                    n = this.params.style.params,
                                    i = this.params.style.theme,
                                    o = i.colors.get("Uniform"),
                                    a = t.React.createElement(t.Controls.ToggleColorPicker, {
                                        key: "Uniform",
                                        label: "Color",
                                        color: o,
                                        onChange: function(t) {
                                            return e.controller.updateThemeColor("Uniform", t)
                                        }
                                    }),
                                    s = i.colors.filter(function(e, t) {
                                        return "Uniform" !== t
                                    }).map(function(r, n) {
                                        return t.React.createElement(t.Controls.ToggleColorPicker, {
                                            key: n,
                                            label: n,
                                            color: r,
                                            onChange: function(t) {
                                                return e.controller.updateThemeColor(n, t)
                                            }
                                        })
                                    }).toArray();
                                s.push(t.React.createElement(r.TransparencyControl, {
                                    definition: i.transparency,
                                    onChange: function(t) {
                                        return e.controller.updateThemeTransparency(t)
                                    }
                                }));
                                var u = this.params.style.params;
                                s.push(t.React.createElement(t.Controls.Slider, {
                                    label: "Smoothing",
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            smoothing: t
                                        })
                                    },
                                    min: 0,
                                    max: 10,
                                    step: 1,
                                    value: u.smoothing,
                                    title: "Number of laplacian smoothing itrations."
                                })), s.push(t.React.createElement(t.Controls.Toggle, {
                                    onChange: function(t) {
                                        return e.controller.updateStyleParams({
                                            isWireframe: t
                                        })
                                    },
                                    value: n.isWireframe,
                                    label: "Wireframe"
                                }));
                                var l = this.controller.latestState.showThemeOptions;
                                return t.React.createElement(t.Controls.ExpandableGroup, {
                                    select: a,
                                    expander: t.React.createElement(t.Controls.ControlGroupExpander, {
                                        isExpanded: l,
                                        onChange: function(t) {
                                            return e.controller.setState({
                                                showThemeOptions: t
                                            })
                                        }
                                    }),
                                    options: s,
                                    isExpanded: l
                                })
                            }, o.prototype.renderControls = function() {
                                var e = this,
                                    r = this.params;
                                return t.React.createElement("div", null, this.surface(), this.colors(), t.React.createElement(t.Controls.Slider, {
                                    label: "Radius",
                                    onChange: function(t) {
                                        return e.controller.updateRadius(t)
                                    },
                                    min: 0,
                                    max: 10,
                                    step: .005,
                                    value: r.radius
                                }))
                            }, o
                        }(r.ControllerBase);
                        n.CreateVisualBehaviour = s
                    }(n = r.Density || (r.Density = {}))
                }(n = r.Transform || (r.Transform = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i = e.Bootstrap.Service.Logger.EntryType,
                        o = function(r) {
                            function n() {
                                r.apply(this, arguments)
                            }
                            return u(n, r), n.prototype.componentWillMount = function() {
                                var t = this;
                                r.prototype.componentWillMount.call(this), this.subscribe(e.Bootstrap.Event.Common.LayoutChanged.getStream(this.controller.context), function() {
                                    return t.scrollToBottom()
                                })
                            }, n.prototype.componentDidUpdate = function() {
                                this.scrollToBottom()
                            }, n.prototype.scrollToBottom = function() {
                                var e = this.refs.log;
                                e && (e.scrollTop = e.scrollHeight - e.clientHeight - 1)
                            }, n.prototype.render = function() {
                                var r = this.controller.latestState.entries;
                                r.count();
                                return t.React.createElement("div", {
                                    className: "lm-log-wrap"
                                }, t.React.createElement("div", {
                                    className: "lm-log",
                                    ref: "log"
                                }, t.React.createElement("ul", {
                                    className: "list-unstyled"
                                }, r.map(function(r, n, o) {
                                    var a;
                                    switch (r.type) {
                                        case i.Message:
                                            a = t.React.createElement("div", {
                                                className: "lm-log-entry"
                                            }, r.message);
                                            break;
                                        case i.Error:
                                            a = t.React.createElement("div", {
                                                className: "lm-log-entry"
                                            }, t.React.createElement("span", {
                                                className: "label label-danger"
                                            }, "Error"), " ", r.message);
                                            break;
                                        case i.Warning:
                                            a = t.React.createElement("div", {
                                                className: "lm-log-entry"
                                            }, t.React.createElement("span", {
                                                className: "label label-warning"
                                            }, "Warning"), " ", r.message);
                                            break;
                                        case i.Info:
                                            a = t.React.createElement("div", {
                                                className: "lm-log-entry"
                                            }, t.React.createElement("span", {
                                                className: "label label-info"
                                            }, "Info"), " ", r.message)
                                    }
                                    var s = e.Bootstrap.Utils.formatTime(r.timestamp);
                                    return t.React.createElement("li", {
                                        key: n
                                    }, t.React.createElement("div", {
                                        className: "lm-log-entry-badge lm-log-entry-" + i[r.type].toLowerCase()
                                    }), t.React.createElement("div", {
                                        className: "lm-log-timestamp"
                                    }, s), t.React.createElement("div", {
                                        className: "lm-log-entry"
                                    }, r.message))
                                }))))
                            }, n
                        }(r.View);
                    n.Log = o
                }(n = r.Context || (r.Context = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(e) {
            var t;
            ! function(t) {
                var r;
                ! function(r) {
                    var n = function(t) {
                            function r() {
                                t.apply(this, arguments)
                            }
                            return u(r, t), r.prototype.render = function() {
                                var t = this.props.info;
                                return e.React.createElement("div", {
                                    className: "lm-task-state"
                                }, e.React.createElement("div", null, t.abort ? e.React.createElement(e.Controls.Button, {
                                    onClick: function() {
                                        return t.abort.call(null)
                                    },
                                    style: "remove",
                                    icon: "abort",
                                    title: "Abort",
                                    customClass: "btn-icon"
                                }) : void 0, e.React.createElement("div", null, t.name, ": ", t.message)))
                            }, r
                        }(e.React.Component),
                        i = function(t) {
                            function r() {
                                t.apply(this, arguments)
                            }
                            return u(r, t), r.prototype.render = function() {
                                var t = this.controller.latestState;
                                if (!t.tasks.count()) return e.React.createElement("div", {
                                    className: "lm-empty-control"
                                });
                                var r = [];
                                return t.tasks.forEach(function(t, i) {
                                    return r.push(e.React.createElement(n, {
                                        key: i,
                                        info: t
                                    }))
                                }), e.React.createElement("div", {
                                    className: "lm-overlay"
                                }, e.React.createElement("div", {
                                    className: "lm-overlay-background"
                                }), e.React.createElement("div", {
                                    className: "lm-overlay-content-wrap"
                                }, e.React.createElement("div", {
                                    className: "lm-overlay-content"
                                }, e.React.createElement("div", null, r))))
                            }, r
                        }(t.View);
                    r.Overlay = i;
                    var o = function(t) {
                        function r() {
                            t.apply(this, arguments)
                        }
                        return u(r, t), r.prototype.render = function() {
                            var t = this.controller.latestState;
                            if (!t.tasks.count()) return e.React.createElement("div", {
                                className: "lm-empty-control"
                            });
                            var r = [];
                            return t.tasks.forEach(function(t, i) {
                                return r.push(e.React.createElement(n, {
                                    key: i,
                                    info: t,
                                    isSmall: !0
                                }))
                            }), e.React.createElement("div", {
                                className: "lm-background-tasks"
                            }, r)
                        }, r
                    }(t.View);
                    r.BackgroundTasks = o
                }(r = t.Context || (t.Context = {}))
            }(t = e.Views || (e.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    e.Bootstrap.Entity;
                    n.VisibilityControl = function(r) {
                        var n, i, o = r.entity,
                            a = function() {
                                e.Bootstrap.Command.Entity.SetVisibility.dispatch(o.tree.context, {
                                    entity: o,
                                    visible: 0 === o.state.visibility ? !1 : !0
                                })
                            },
                            s = o.state.visibility;
                        return 0 === s ? (n = "full", i = "Hide") : 2 === s ? (n = "none", i = "Show") : (n = "partial", i = "Show"), t.React.createElement(t.Controls.Button, {
                            title: i,
                            onClick: a,
                            icon: "visual-visibility",
                            style: "link",
                            customClass: "lm-entity-tree-entry-toggle-visible lm-entity-tree-entry-toggle-visible-" + n
                        })
                    };
                    var i = function(r) {
                            function i() {
                                r.apply(this, arguments), this.renderedVersion = -1
                            }
                            return u(i, r), i.prototype.ensureVisible = function() {
                                if (this.ctx.currentEntity === this.props.node) {
                                    var e = this.refs.root;
                                    this.props.tree.scrollIntoView(e)
                                }
                            }, i.prototype.componentDidMount = function() {
                                this.ensureVisible()
                            }, i.prototype.componentDidUpdate = function() {
                                this.ensureVisible()
                            }, Object.defineProperty(i.prototype, "node", {
                                get: function() {
                                    return this.props.node
                                },
                                enumerable: !0,
                                configurable: !0
                            }), i.prototype.shouldComponentUpdate = function(e, t, r) {
                                return this.node.version !== this.renderedVersion
                            }, i.prototype.componentWillMount = function() {
                                var t = this;
                                this.ctx = this.props.node.tree.context;
                                var r = this.node;
                                this.subscribe(e.Bootstrap.Event.Tree.NodeUpdated.getStream(this.ctx), function(n) {
                                    n.data === r && (r.version !== t.renderedVersion && t.forceUpdate(), t.ctx.currentEntity === r && t.isFullyBound() && e.Bootstrap.Command.Entity.SetCurrent.dispatch(t.ctx, r.children[0]))
                                })
                            }, i.prototype.highlight = function(t) {
                                var r = this.node;
                                e.Bootstrap.Command.Entity.Highlight.dispatch(this.ctx, {
                                    entities: this.ctx.select(e.Bootstrap.Tree.Selection.byValue(r).subtree()),
                                    isOn: t
                                })
                            }, i.prototype.row = function(r) {
                                var i = this,
                                    o = this.props.node,
                                    a = (o.state, o.props),
                                    s = o.parent === o,
                                    u = a.label;
                                return a.description && (u += " (" + a.description + ")"), t.React.createElement("div", {
                                    className: "lm-entity-tree-entry-body" + (this.ctx.currentEntity === o ? " lm-entity-tree-entry-current" : "") + (this.isOnCurrentPath() ? " lm-entity-tree-entry-current-path" : ""),
                                    ref: "root"
                                }, t.React.createElement(n.Badge, {
                                    type: o.type.info
                                }), t.React.createElement("div", {
                                    className: "lm-entity-tree-entry-label-wrap"
                                }, t.React.createElement(t.Controls.Button, {
                                    onClick: function() {
                                        return e.Bootstrap.Command.Entity.SetCurrent.dispatch(i.ctx, o)
                                    },
                                    customClass: "lm-entity-tree-entry-label",
                                    style: "link",
                                    title: u
                                }, t.React.createElement("span", null, a.label, t.React.createElement("span", {
                                    className: "lm-entity-tree-entry-label-tag"
                                }, a.description ? " " + a.description : void 0)))), !s || r ? t.React.createElement(t.Controls.Button, {
                                    title: "Remove",
                                    onClick: function() {
                                        return e.Bootstrap.Command.Tree.RemoveNode.dispatch(o.tree.context, o)
                                    },
                                    icon: "remove",
                                    style: "link",
                                    customClass: "lm-entity-tree-entry-remove"
                                }) : void 0, s && !r ? void 0 : t.React.createElement(n.VisibilityControl, {
                                    entity: o
                                }))
                            }, i.prototype.renderFlat = function() {
                                for (var e = this.node, r = [], n = 0, o = e.children; n < o.length; n++) {
                                    var a = o[n];
                                    r.push(t.React.createElement(i, {
                                        key: a.id,
                                        node: a,
                                        tree: this.props.tree
                                    }))
                                }
                                return t.React.createElement("div", {
                                    key: e.id
                                }, r)
                            }, i.prototype.isFullyBound = function() {
                                for (var e = !0, t = 0, r = this.node.children; t < r.length; t++) {
                                    var n = r[t];
                                    if (!n.transform.props.isBinding) {
                                        e = !1;
                                        break
                                    }
                                }
                                return e && 1 === this.node.children.length
                            }, i.prototype.isOnCurrentPath = function() {
                                if (!this.ctx.currentEntity) return !1;
                                for (var e = this.ctx.currentEntity.parent, t = this.node; e.parent !== e;) {
                                    if (e === t) return !0;
                                    e = e.parent
                                }
                                return !1
                            }, i.prototype.render = function() {
                                var r = this,
                                    n = this.node;
                                this.renderedVersion = n.version;
                                var o = n.parent === n;
                                if (this.isFullyBound()) return this.renderFlat();
                                for (var a = n.state, s = (n.props, 0), u = [], l = 0, c = n.children; l < c.length; l++) {
                                    var h = c[l];
                                    h.isHidden || (o || u.push(t.React.createElement(i, {
                                        key: h.id,
                                        node: h,
                                        tree: this.props.tree
                                    })), s++)
                                }
                                var p;
                                u.length ? p = a.isCollapsed ? t.React.createElement(t.Controls.Button, {
                                    style: "link",
                                    title: "Expand",
                                    onClick: function() {
                                        return e.Bootstrap.Command.Entity.ToggleExpanded.dispatch(r.ctx, n)
                                    },
                                    icon: "expand",
                                    customClass: "lm-entity-tree-entry-toggle-group"
                                }) : t.React.createElement(t.Controls.Button, {
                                    style: "link",
                                    title: "Collapse",
                                    onClick: function() {
                                        return e.Bootstrap.Command.Entity.ToggleExpanded.dispatch(r.ctx, n)
                                    },
                                    icon: "collapse",
                                    customClass: "lm-entity-tree-entry-toggle-group"
                                }) : 0 === n.state.visibility && n.type.traits.isFocusable && (p = t.React.createElement(t.Controls.Button, {
                                    style: "link",
                                    icon: "focus-on-visual",
                                    title: "Focus",
                                    onClick: function() {
                                        return e.Bootstrap.Command.Entity.Focus.dispatch(r.ctx, r.ctx.select(n))
                                    },
                                    customClass: "lm-entity-tree-entry-toggle-group"
                                }));
                                var d = t.React.createElement("div", {
                                    className: "lm-entity-tree-entry",
                                    onMouseEnter: function() {
                                        return r.highlight(!0)
                                    },
                                    onMouseLeave: function() {
                                        return r.highlight(!1)
                                    },
                                    onTouchStart: function() {
                                        return setTimeout(function() {
                                            return r.highlight(!0)
                                        }, 1e3 / 30)
                                    },
                                    onTouchCancel: function() {
                                        return setTimeout(function() {
                                            return r.highlight(!1)
                                        }, 1e3 / 30)
                                    },
                                    onTouchEnd: function() {
                                        return setTimeout(function() {
                                            return r.highlight(!1)
                                        }, 1e3 / 30)
                                    }
                                }, p, this.row(s));
                                return t.React.createElement("div", {
                                    key: n.id,
                                    className: o ? "lm-entity-tree-root" : ""
                                }, d, t.React.createElement("div", {
                                    className: "lm-entity-tree-children-wrap",
                                    style: {
                                        display: a.isCollapsed ? "none" : "block"
                                    }
                                }, u))
                            }, i
                        }(r.ObserverView),
                        o = function(r) {
                            function o() {
                                r.apply(this, arguments), this.renderedVersion = -1, this.splash = n.SplashInfo.Info()
                            }
                            return u(o, r), o.prototype.scrollIntoView = function(e) {
                                var t = this.refs.chilren;
                                if (t && e) try {
                                    var r = t.getBoundingClientRect(),
                                        n = e.getBoundingClientRect(),
                                        i = t.scrollTop;
                                    if (n.top < r.top) {
                                        var o = r.top - n.top;
                                        t.scrollTop = i - o
                                    } else if (n.bottom > r.bottom) {
                                        var o = n.bottom - r.bottom;
                                        t.scrollTop = i + o
                                    }
                                } catch (a) {}
                            }, o.prototype.componentWillMount = function() {
                                var t = this,
                                    r = this.controller.context.tree.root,
                                    n = r.tree.context;
                                this.subscribe(e.Bootstrap.Event.Tree.NodeUpdated.getStream(n), function(e) {
                                    e.data === r && r.version !== t.renderedVersion && t.forceUpdate()
                                })
                            }, o.prototype.render = function() {
                                var e = this.controller.context.tree.root;
                                this.renderedVersion = e.version;
                                for (var r = [], n = 0, o = e.children; n < o.length; n++) {
                                    var a = o[n];
                                    a.isHidden || r.push(t.React.createElement(i, {
                                        key: a.id,
                                        node: a,
                                        tree: this
                                    }))
                                }
                                return t.React.createElement("div", {
                                    className: "lm-entity-tree",
                                    ref: "root"
                                }, t.React.createElement(i, {
                                    key: e.id,
                                    node: e,
                                    tree: this
                                }), t.React.createElement("div", {
                                    className: "lm-entity-tree-children"
                                }, r.length ? r : this.splash))
                            }, o
                        }(r.View);
                    n.Tree = o
                }(n = r.Entity || (r.Entity = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    n.Remove = function(r) {
                        return t.React.createElement(t.Controls.Button, {
                            onClick: function() {
                                e.Bootstrap.Command.Tree.RemoveNode.dispatch(r.entity.tree.context, r.entity), r.onRemove.call(null)
                            },
                            style: "link",
                            icon: "remove",
                            customClass: "lm-remove-entity btn-icon"
                        })
                    };
                    var i = function(r) {
                        function n() {
                            r.apply(this, arguments)
                        }
                        return u(n, r), n.prototype.shouldComponentUpdate = function(e, t, r) {
                            return this.props.type !== e.type
                        }, n.prototype.part = function(e, r, n, i) {
                            switch (n) {
                                case 0:
                                    return i.push(t.React.createElement("span", null, e.substr(0, r))), i;
                                case 1:
                                    return i.push(t.React.createElement("sub", null, e.substr(0, r))), i;
                                default:
                                    return i.push(t.React.createElement("sup", null, e.substr(0, r))), i
                            }
                        }, n.prototype.split = function(e, t, r) {
                            if (e.length) {
                                for (var n = 0; n < e.length; n++) {
                                    if ("_" === e[n]) return void this.split(e.substr(n + 1), 1, this.part(e, n, t, r));
                                    if ("^" === e[n]) return void this.split(e.substr(n + 1), 2, this.part(e, n, t, r))
                                }
                                this.part(e, e.length, t, r)
                            }
                        }, n.prototype.createBadge = function(e) {
                            var t = [];
                            return this.split(e, 0, t), t
                        }, n.prototype.render = function() {
                            var r = this.props.type;
                            return t.React.createElement("div", {
                                className: "lm-entity-badge lm-entity-badge-" + this.props.type.typeClass,
                                title: r.name
                            }, t.React.createElement("div", null, r === e.Bootstrap.Entity.Root.info ? void 0 : this.createBadge(r.shortName)))
                        }, n
                    }(t.React.Component);
                    n.Badge = i;
                    var o = function(r) {
                        function o() {
                            r.apply(this, arguments), this.state = {
                                current: void 0
                            }, this.currentStateSub = void 0
                        }
                        return u(o, r), o.prototype.componentWillMount = function() {
                            var t = this;
                            r.prototype.componentWillMount.call(this), this.state.current = this.controller.context.currentEntity, this.subscribe(e.Bootstrap.Event.Entity.CurrentChanged.getStream(this.controller.context), function(e) {
                                t.setState({
                                    current: e.data
                                })
                            })
                        }, o.prototype.render = function() {
                            var e = this;
                            if (!this.state.current) return t.React.createElement("div", {
                                className: "lm-entity-info"
                            }, t.React.createElement("div", null, t.React.createElement("span", null, this.controller.appName)));
                            var r = this.state.current;
                            return t.React.createElement("div", {
                                className: "lm-entity-info",
                                title: r.props.label + " " + (r.props.description ? r.props.description : "")
                            }, t.React.createElement("div", null, t.React.createElement(i, {
                                type: r.type.info
                            }), t.React.createElement("span", null, r.props.label, t.React.createElement("span", null, r.props.description)), r.parent !== r || r.children.length ? t.React.createElement(n.Remove, {
                                entity: r,
                                onRemove: function() {
                                    return e.forceUpdate()
                                }
                            }) : void 0))
                        }, o
                    }(r.View);
                    n.CurrentEntityControl = o;
                    var a;
                    ! function(e) {
                        e.General = function() {
                            return t.React.createElement("div", {
                                className: "lm-entity-splash-general"
                            }, t.React.createElement("div", null), t.React.createElement("span", {
                                className: "icon icon-info"
                            }), "The application operates on an entity tree structure that can be manipulated using the controls on the panel to the right.")
                        };
                        var r = function(e) {
                            function r() {
                                e.apply(this, arguments), this.state = {
                                    isExpanded: !1
                                }
                            }
                            return u(r, e), r.prototype.render = function() {
                                var e = this;
                                return t.React.createElement("div", {
                                    className: "lm-entity-splash-class lm-entity-splash-class-" + (this.state.isExpanded ? "expanded" : "collapsed")
                                }, t.React.createElement("div", {
                                    onClick: function() {
                                        return e.setState({
                                            isExpanded: !e.state.isExpanded
                                        })
                                    }
                                }, t.React.createElement("div", null), t.React.createElement("div", {
                                    className: "lm-entity-badge-" + this.props.cls
                                }), " ", t.React.createElement("span", null, this.props.cls)), t.React.createElement("div", null, this.props.desc))
                            }, r
                        }(t.React.Component);
                        e.Info = function() {
                            return t.React.createElement("div", {
                                className: "lm-entity-splash"
                            }, t.React.createElement(e.General, null), t.React.createElement(r, {
                                cls: "Root",
                                desc: "The root entity represents the starting point of all actions."
                            }), t.React.createElement(r, {
                                cls: "Action",
                                desc: "Represents a composition of one of more changes to the entity tree."
                            }), t.React.createElement(r, {
                                cls: "Data",
                                desc: "Low level data, for example a string or a CIF dictionary."
                            }), t.React.createElement(r, {
                                cls: "Object",
                                desc: "A more complex structure obtained from low level data. For example a molecule."
                            }), t.React.createElement(r, {
                                cls: "Visual",
                                desc: "A visual representation of an object."
                            }), t.React.createElement(r, {
                                cls: "Selection",
                                desc: "A description of a substructure of an object or a visual."
                            }), t.React.createElement(r, {
                                cls: "Behaviour",
                                desc: "Represents a dynamic behavior of the program. For example creating electron density surface when the selection changes."
                            }), t.React.createElement(r, {
                                cls: "Group",
                                desc: "A collection of related entities."
                            }))
                        }
                    }(a = n.SplashInfo || (n.SplashInfo = {}))
                }(n = r.Entity || (r.Entity = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                var n;
                ! function(n) {
                    var i = function(r) {
                        function n() {
                            r.apply(this, arguments), this.state = {
                                showSceneOptions: !1
                            }
                        }
                        return u(n, r), n.prototype.render = function() {
                            var r, n = this,
                                i = this.controller.latestState,
                                o = this.controller.context.layout,
                                a = o.latestState;
                            this.state.showSceneOptions && (r = t.React.createElement("div", {
                                className: "lm-viewport-controls-scene-options lm-control"
                            }, t.React.createElement(t.Controls.Toggle, {
                                onChange: function(e) {
                                    return n.controller.setState({
                                        enableFog: e
                                    })
                                },
                                value: i.enableFog,
                                label: "Fog"
                            }), t.React.createElement(t.Controls.Slider, {
                                label: "FOV",
                                min: 30,
                                max: 90,
                                onChange: function(e) {
                                    return n.controller.setState({
                                        cameraFOV: e
                                    })
                                },
                                value: i.cameraFOV
                            }), t.React.createElement(t.Controls.ToggleColorPicker, {
                                color: i.clearColor,
                                label: "Background",
                                position: "below",
                                onChange: function(e) {
                                    return n.controller.setState({
                                        clearColor: e
                                    })
                                }
                            })));
                            var s = !a.hideControls;
                            return t.React.createElement("div", {
                                className: "lm-viewport-controls",
                                onMouseLeave: function() {
                                    return n.setState({
                                        showSceneOptions: !1
                                    })
                                }
                            }, t.React.createElement("div", {
                                className: "lm-viewport-controls-buttons"
                            }, t.React.createElement(t.Controls.Button, {
                                style: "link",
                                active: this.state.showSceneOptions,
                                customClass: "btn-link-toggle-" + (this.state.showSceneOptions ? "on" : "off"),
                                icon: "settings",
                                onClick: function(e) {
                                    return n.setState({
                                        showSceneOptions: !n.state.showSceneOptions
                                    })
                                },
                                title: "Scene Options"
                            }), t.React.createElement(t.Controls.Button, {
                                style: "link",
                                icon: "screenshot",
                                onClick: function(e) {
                                    window.open(n.controller.scene.scene.screenshotAsDataURL(), "_blank")
                                },
                                title: "Screenshot"
                            }), t.React.createElement(t.Controls.Button, {
                                onClick: function() {
                                    o.update({
                                        hideControls: s
                                    }), n.forceUpdate()
                                },
                                icon: "tools",
                                title: s ? "Hide Controls" : "Show Controls",
                                active: s,
                                customClass: "btn-link-toggle-" + (s ? "on" : "off"),
                                style: "link"
                            }), t.React.createElement(t.Controls.Button, {
                                onClick: function() {
                                    return o.update({
                                        isExpanded: !a.isExpanded
                                    })
                                },
                                icon: "expand-layout",
                                title: a.isExpanded ? "Collapse" : "Expand",
                                active: a.isExpanded,
                                customClass: "btn-link-toggle-" + (a.isExpanded ? "on" : "off"),
                                style: "link"
                            }), t.React.createElement(t.Controls.Button, {
                                style: "link",
                                icon: "reset-scene",
                                onClick: function(t) {
                                    return e.Bootstrap.Command.Visual.ResetScene.dispatch(n.controller.context, void 0)
                                },
                                title: "Reset scene"
                            })), r)
                        }, n
                    }(r.View);
                    n.ViewportControls = i;
                    var o = function(e) {
                        function r() {
                            e.apply(this, arguments)
                        }
                        return u(r, e), r.prototype.render = function() {
                            var e = this.controller.latestState,
                                r = e.info;
                            if (!r.length) return t.React.createElement("div", {
                                className: "lm-empty-control"
                            });
                            var n = {
                                __html: r.join(", ")
                            };
                            return t.React.createElement("div", {
                                className: "lm-highlight-info"
                            }, t.React.createElement("div", {
                                dangerouslySetInnerHTML: n
                            }))
                        }, r
                    }(r.View);
                    n.HighlightInfo = o, n.Logo = function() {
                        return t.React.createElement("div", {
                            className: "lm-logo"
                        }, t.React.createElement("div", null, t.React.createElement("div", null, t.React.createElement("div", null), t.React.createElement("div", {
                            className: "lm-logo-image"
                        }))))
                    };
                    var a = function(r) {
                        function o() {
                            r.apply(this, arguments), this.state = {
                                noWebGl: !1,
                                showLogo: !0
                            }
                        }
                        return u(o, r), o.prototype.componentDidMount = function() {
                            this.controller.init(this.refs["host-3d"]) || this.setState({
                                noWebGl: !0
                            }), this.handleLogo()
                        }, o.prototype.componentWillUnmount = function() {
                            r.prototype.componentWillUnmount.call(this), this.controller.destroy()
                        }, o.prototype.renderMissing = function() {
                            return t.React.createElement("div", {
                                className: "lm-no-webgl"
                            }, t.React.createElement("div", null, t.React.createElement("p", null, t.React.createElement("b", null, "WebGL does not seem to be available.")), t.React.createElement("p", null, "This can be caused by an outdated browser, graphics card driver issue, or bad weather. Sometimes, just restarting the browser helps."), t.React.createElement("p", null, "For a list of supported browsers, refer to ", t.React.createElement("a", {
                                href: "http://caniuse.com/#feat=webgl",
                                target: "_blank"
                            }, "http://caniuse.com/#feat=webgl"), ".")))
                        }, o.prototype.handleLogo = function() {
                            var t = this,
                                r = 0;
                            this.subscribe(e.Bootstrap.Event.Tree.NodeAdded.getStream(this.controller.context), function(n) {
                                e.Bootstrap.Entity.isClass(n.data, e.Bootstrap.Entity.VisualClass) && (r++, t.setState({
                                    showLogo: !r
                                }))
                            }), this.subscribe(e.Bootstrap.Event.Tree.NodeRemoved.getStream(this.controller.context), function(n) {
                                e.Bootstrap.Entity.isClass(n.data, e.Bootstrap.Entity.VisualClass) && (r--, t.setState({
                                    showLogo: !r
                                }))
                            })
                        }, o.prototype.render = function() {
                            return this.state.noWebGl ? this.renderMissing() : t.React.createElement("div", {
                                className: "lm-viewport"
                            }, t.React.createElement("div", {
                                ref: "host-3d",
                                className: "lm-viewport-host3d"
                            }), this.state.showLogo ? t.React.createElement(n.Logo, null) : void 0, t.React.createElement(i, {
                                controller: this.controller
                            }))
                        }, o
                    }(r.View);
                    n.Viewport = a
                }(n = r.Visualization || (r.Visualization = {}))
            }(r = t.Views || (t.Views = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            var r;
            ! function(r) {
                function n(e, t, r) {
                    return function(n, i) {
                        return function(o) {
                            return {
                                key: e,
                                controller: t(o),
                                region: n,
                                view: r,
                                isStatic: i
                            }
                        }
                    }
                }
                r.create = n;
                var i = function(e) {
                    function t(t, r, n) {
                        e.call(this, t, {}), this.appName = r, this.appVersion = n
                    }
                    return u(t, e), t
                }(e.Bootstrap.Components.Component);
                r.AppInfo = i;
                var o;
                ! function(r) {
                    r.Log = n("Context.Log", function(t) {
                        return new e.Bootstrap.Components.Context.Log(t)
                    }, t.Views.Context.Log), r.Overlay = n("Context.Overlay", function(t) {
                        return new e.Bootstrap.Components.Context.TaskWatcher(t, "Normal")
                    }, t.Views.Context.Overlay), r.BackgroundTasks = n("Context.BackgroundTasks", function(t) {
                        return new e.Bootstrap.Components.Context.TaskWatcher(t, "Background")
                    }, t.Views.Context.BackgroundTasks)
                }(o = r.Context || (r.Context = {}));
                var a;
                ! function(r) {
                    r.View = n("Transform.View", function(t) {
                        return new e.Bootstrap.Components.Transform.View(t)
                    }, t.Views.Transform.View)
                }(a = r.Transform || (r.Transform = {}));
                var s;
                ! function(e) {
                    e.Current = function(e, r) {
                        return n("EntityInfo", function(t) {
                            return new i(t, e, r)
                        }, t.Views.Entity.CurrentEntityControl)
                    }
                }(s = r.Entity || (r.Entity = {}));
                var l;
                ! function(r) {
                    r.Viewport = n("Viewport", function(t) {
                        return new e.Bootstrap.Components.Visualization.Viewport(t)
                    }, t.Views.Visualization.Viewport), r.HighlightInfo = n("HighlightInfo", function(t) {
                        return new e.Bootstrap.Components.Visualization.HighlightInfo(t)
                    }, t.Views.Visualization.HighlightInfo)
                }(l = r.Visualization || (r.Visualization = {}))
            }(r = t.Components || (t.Components = {}))
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    ! function(e) {
        var t;
        ! function(t) {
            t.Context = e.Bootstrap.Context;
            var r = e.Bootstrap.Components.LayoutRegion,
                n = function() {
                    function n(r, n) {
                        this.spec = r, this.target = n, this._componentMap = new Map, this.transformerViews = new Map, this.context = new e.Bootstrap.Context(this), this.init(), t.ReactDOM.render(t.React.createElement(this.spec.layoutView, {
                            controller: this.context.layout
                        }), n), e.Bootstrap.Command.Entity.SetCurrent.dispatch(this.context, this.context.tree.root)
                    }
                    return n.prototype.compose = function() {
                        for (var t = 0, r = Object.keys(this.spec.settings); t < r.length; t++) {
                            var n = r[t];
                            Object.prototype.hasOwnProperty.call(this.spec.settings, n) && this.context.settings.set(n, this.spec.settings[n])
                        }
                        for (var i = e.Bootstrap.Components.makeEmptyTargets(), o = 0, a = this.spec.behaviours || []; o < a.length; o++) {
                            var s = a[o];
                            s(this.context)
                        }
                        for (var u = 0, l = this.spec.transforms; u < l.length; u++) {
                            var c = l[u];
                            this.context.transforms.add(c.transformer), this.transformerViews.set(c.transformer.info.id, c.view)
                        }
                        for (var h = 0, p = this.spec.components; h < p.length; h++) {
                            var d = p[h],
                                f = d(this.context);
                            if (this._componentMap.has(f.key)) throw "Component with key '" + f.key + "' was already added. Fix your spec.";
                            i[f.region].components.push(f), this._componentMap.set(f.key, f)
                        }
                        return i
                    }, n.prototype.getTransformerView = function(e) {
                        return this.transformerViews.get(e.info.id)
                    }, n.prototype.destroy = function() {
                        this.context.dispatcher.finished(), t.ReactDOM.unmountComponentAtNode(this.target), this.context = void 0, this._componentMap = void 0, this.spec = void 0, this.target = void 0
                    }, n.prototype.init = function() {
                        var t = this.compose();
                        this.spec.tree && t[this.spec.tree.region].components.push({
                            key: "lm-internal-tree",
                            controller: new e.Bootstrap.Components.Component(this.context, {}),
                            region: this.spec.tree.region,
                            view: this.spec.tree.view,
                            isStatic: !0
                        }), t[r.Main].components.push({
                            key: "lm-internal-viewport",
                            controller: this.context.viewport,
                            region: r.Main,
                            view: this.spec.viewport.view,
                            isStatic: !0
                        }), this.context.createLayout(t, this.target)
                    }, n
                }();
            t.Instance = n
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {}));
    var o;
    return function(e) {
        var t;
        ! function(t) {
            function r(r) {
                var a = {
                        settings: {
                            "molecule.model.defaultQuery": "residues({ name: 'ALA' })",
                            "molecule.model.defaultAssemblyName": "1",
                            "molecule.coordinateStreaming.defaultId": "1jj2",
                            "molecule.coordinateStreaming.defaultServer": "http://webchemdev.ncbr.muni.cz/CoordinateServer",
                            "molecule.coordinateStreaming.defaultRadius": 10,
                            "density.defaultVisualBehaviourRadius": 5
                        },
                        transforms: [{
                            transformer: i.Molecule.CoordinateStreaming.InitStreaming,
                            view: t.Views.Transform.Molecule.InitCoordinateStreaming
                        }, {
                            transformer: n.DownloadMolecule,
                            view: t.Views.Transform.Data.WithUrlIdField
                        }, {
                            transformer: i.Molecule.OpenCifMoleculeFromFile,
                            view: t.Views.Transform.Data.OpenCifMolecule
                        }, {
                            transformer: i.Data.Download,
                            view: t.Views.Transform.Data.Download
                        }, {
                            transformer: i.Data.OpenFile,
                            view: t.Views.Transform.Data.OpenFile
                        }, {
                            transformer: i.Data.ParseCif,
                            view: t.Views.Transform.Empty
                        }, {
                            transformer: i.Density.ParseCcp4,
                            view: t.Views.Transform.Density.ParseCcp4
                        }, {
                            transformer: i.Molecule.CreateFromCif,
                            view: t.Views.Transform.Molecule.CreateFromCif
                        }, {
                            transformer: i.Molecule.CreateModel,
                            view: t.Views.Transform.Molecule.CreateModel
                        }, {
                            transformer: i.Molecule.CreateSelection,
                            view: t.Views.Transform.Molecule.CreateSelection
                        }, {
                            transformer: i.Molecule.CreateAssembly,
                            view: t.Views.Transform.Molecule.CreateAssembly
                        }, {
                            transformer: i.Molecule.CreateSymmetryMates,
                            view: t.Views.Transform.Molecule.CreateSymmetryMates
                        }, {
                            transformer: i.Molecule.CreateMacromoleculeVisual,
                            view: t.Views.Transform.Empty
                        }, {
                            transformer: i.Molecule.CreateVisual,
                            view: t.Views.Transform.Molecule.CreateVisual
                        }, {
                            transformer: i.Density.CreateVisual,
                            view: t.Views.Transform.Density.CreateVisual
                        }, {
                            transformer: i.Density.CreateVisualBehaviour,
                            view: t.Views.Transform.Density.CreateVisualBehaviour
                        }, {
                            transformer: i.Molecule.CoordinateStreaming.CreateBehaviour,
                            view: t.Views.Transform.Empty
                        }],
                        behaviours: [e.Bootstrap.Behaviour.SetEntityToCurrentWhenAdded, e.Bootstrap.Behaviour.FocusCameraOnSelect, e.Bootstrap.Behaviour.CreateVisualWhenModelIsAdded, e.Bootstrap.Behaviour.ApplySelectionToVisual, e.Bootstrap.Behaviour.ApplyInteractivitySelection, e.Bootstrap.Behaviour.Molecule.HighlightElementInfo, e.Bootstrap.Behaviour.Molecule.DistanceToLastClickedElement, e.Bootstrap.Behaviour.Molecule.ShowInteractionOnSelect(5), e.Bootstrap.Behaviour.GoogleAnalytics("UA-77062725-1")],
                        components: [t.Components.Visualization.HighlightInfo(o.Main, !0), t.Components.Entity.Current("LiteMol", t.VERSION.number)(o.Right, !0), t.Components.Transform.View(o.Right), t.Components.Context.Log(o.Bottom, !0), t.Components.Context.Overlay(o.Root), t.Components.Context.BackgroundTasks(o.Main, !0)],
                        viewport: {
                            view: t.Views.Visualization.Viewport,
                            controlsView: t.Views.Visualization.ViewportControls
                        },
                        layoutView: t.Views.Layout,
                        tree: {
                            region: o.Left,
                            view: t.Views.Entity.Tree
                        }
                    },
                    s = new t.Instance(a, r);
                return s.context.logger.message("LiteMol Viewer " + t.VERSION.number), s
            }
            var n, i = e.Bootstrap.Entity.Transformer;
            ! function(e) {
                e.DownloadMolecule = i.Molecule.downloadMoleculeSource({
                    sourceId: "url-molecule",
                    name: "Url",
                    description: "Download a molecule from the specified Url (if the host server supports cross domain requests).",
                    defaultId: "http://webchemdev.ncbr.muni.cz/CoordinateServer/1tqn/cartoon",
                    urlTemplate: function(e) {
                        return e
                    },
                    isFullUrl: !0,
                    isCollaped: !0
                })
            }(n = t.DataSources || (t.DataSources = {}));
            var o = e.Bootstrap.Components.LayoutRegion;
            t.createDefault = r
        }(t = e.Plugin || (e.Plugin = {}))
    }(o || (o = {})), o
};
if ("object" == typeof module && "object" == typeof module.exports) module.exports = __LiteMol_Plugin();
else if ("function" == typeof define && define.amd) define(["require"], function(e) {
    return __LiteMol_Plugin()
});
else {
    var __target = window ? window : this;
    __target.LiteMol = __LiteMol_Plugin()
}
var airForceBlue = d3.rgb(93, 138, 168).brighter(),
    fuchsia = d3.rgb(145, 92, 131).brighter(),
    armyGreen = d3.rgb(75, 83, 32).brighter(),
    auburn = d3.rgb(165, 42, 42).brighter(),
    burntOrange = d3.rgb(204, 85, 0),
    burntOrangeBright = d3.rgb(204, 85, 0).brighter(),
    burgundy = d3.rgb(128, 0, 32).brighter(),
    burgundy1 = d3.rgb(205, 127, 50).brighter(),
    lightGray = d3.rgb(105, 105, 105).brighter(),
    brass = d3.rgb(205, 149, 117),
    blueGray = d3.rgb(102, 153, 204),
    bottleGreen = d3.rgb(0, 106, 78).brighter(),
    bronze = d3.rgb(205, 127, 50).brighter(),
    coffee = d3.rgb(111, 78, 55).brighter(),
    coolGray = d3.rgb(140, 146, 172),
    black = d3.rgb(0, 0, 0),
    qualityGreen = d3.rgb(0, 128, 0).brighter(),
    qualityYellow = d3.rgb(255, 255, 53),
    qualityRed = d3.rgb(204, 0, 0),
    testClr = d3.rgb(189.68374033094645, 67.85790768979034, 73.38905580792535),
    colorArr = [airForceBlue, coolGray, fuchsia, coffee, armyGreen, blueGray, brass, bottleGreen];
angular.module("d3Core", []).factory("d3", function() {
        return d3
    }), angular.module("liteMolCore", []).factory("LiteMol", function() {
        return LiteMol
    }),
    function() {
        "use strict";
        angular.module("pdb.common.services", []).service("commonServices", ["$http", "$q", function(e, t) {
            this.apiUrls = {
                summary: "//www.ebi.ac.uk/pdbe/api/pdb/entry/summary/",
                entities: "//www.ebi.ac.uk/pdbe/api/pdb/entry/entities/",
                modifiedResidues: "//www.ebi.ac.uk/pdbe/api/pdb/entry/modified_AA_or_NA/",
                mutatedResidues: "//www.ebi.ac.uk/pdbe/api/pdb/entry/mutated_AA_or_NA/",
                polymerCoverage: "//www.ebi.ac.uk/pdbe/api/pdb/entry/polymer_coverage/",
                polymerCoveragePerChain: "//www.ebi.ac.uk/pdbe/api/pdb/entry/polymer_coverage/",
                bindingSites: "//www.ebi.ac.uk/pdbe/api/pdb/entry/binding_sites/",
                mappings: "//www.ebi.ac.uk/pdbe/api/mappings/",
                residueListing: "//www.ebi.ac.uk/pdbe/api/pdb/entry/residue_listing/",
                secStrutures: "//www.ebi.ac.uk/pdbe/api/pdb/entry/secondary_structure/",
                outliers: "//www.ebi.ac.uk/pdbe/api/validation/residuewise_outlier_summary/entry/",
                topology: "//www.ebi.ac.uk/pdbe/api/topology/entry/",
                molecules: "//www.ebi.ac.uk/pdbe/api/pdb/entry/molecules/",
                uniProtToPfam: "//www.ebi.ac.uk/pdbe/api/mappings/uniprot_to_pfam/",
                observedResidueRatio: "//www.ebi.ac.uk/pdbe/api/pdb/entry/observed_residues_ratio/",
                edm: "//www.ebi.ac.uk/pdbe/coordinates/files/",
                edm_diff: "//www.ebi.ac.uk/pdbe/coordinates/files/"
            }, this.createPromise = function(t, r, n) {
                var i = this.apiUrls,
                    o = r.map(function(r) {
                        return "mappings" === r ? e.get(i[r] + "" + t[0]) : "edm" === r ? e({
                            url: i[r] + "" + t[0] + ".ccp4",
                            method: "GET",
                            responseType: "blob",
                            cache: !0
                        }) : "edm_diff" === r ? e({
                            url: i[r] + "" + t[0] + "_diff.ccp4",
                            method: "GET",
                            responseType: "blob",
                            cache: !0
                        }) : "polymerCoveragePerChain" === r ? e.get(i[r] + "" + t[0] + "/chain/" + n) : e({
                            method: "POST",
                            url: i[r],
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            data: t.join(",")
                        })
                    });
                return o
            }, this.combinedDataGrabber = function(e, t, r) {
                var n = e.map(function(e) {
                    return e.then(function(e) {
                        return {
                            resolve: !0,
                            result: e
                        }
                    }, function(e) {
                        return {
                            resolve: !1,
                            result: e
                        }
                    })
                });
                return Promise.all(n).then(function(e) {
                    var t = [],
                        r = [],
                        n = !0;
                    if (e.forEach(function(e) {
                            e.resolve && (n = !1), t.push(e.resolve ? e.result : null), r.push(e.resolve ? null : e.result)
                        }), n) throw r;
                    return t
                })
            }, this.colorBox = [
                [
                    [51, 123, 177],
                    [23, 83, 137],
                    [5, 54, 106],
                    [99, 175, 213],
                    [176, 229, 251]
                ],
                [
                    [100, 63, 145],
                    [100, 46, 131],
                    [98, 99, 173],
                    [101, 28, 117],
                    [99, 81, 159]
                ],
                [
                    [154, 69, 21],
                    [118, 39, 21],
                    [83, 10, 21],
                    [189, 98, 21],
                    [224, 127, 21]
                ],
                [
                    [166, 72, 122],
                    [115, 39, 89],
                    [218, 116, 135],
                    [227, 146, 149],
                    [237, 175, 170]
                ],
                [
                    [50, 120, 114],
                    [39, 78, 82],
                    [59, 156, 132],
                    [68, 192, 147],
                    [74, 232, 156]
                ],
                [
                    [97, 97, 26],
                    [73, 73, 25],
                    [48, 48, 20],
                    [118, 118, 23],
                    [134, 134, 16]
                ]
            ], this.colorBox1 = [
                [
                    [0, 55, 55],
                    [0, 75, 75],
                    [0, 94, 94],
                    [0, 35, 35],
                    [0, 114, 114],
                    [0, 133, 133],
                    [0, 153, 153]
                ],
                [
                    [0, 63, 94],
                    [0, 76, 114],
                    [0, 89, 133],
                    [0, 102, 153],
                    [0, 115, 173],
                    [0, 128, 192],
                    [0, 141, 212]
                ],
                [
                    [51, 73, 51],
                    [62, 88, 62],
                    [72, 103, 72],
                    [82, 118, 82],
                    [93, 133, 93],
                    [41, 58, 41],
                    [103, 148, 103]
                ]
            ], this.colorBox2 = [
                [
                    [59, 94, 94],
                    [53, 100, 100],
                    [41, 112, 112],
                    [35, 118, 118],
                    [29, 124, 124],
                    [24, 129, 129],
                    [18, 135, 135],
                    [12, 141, 141],
                    [65, 88, 88]
                ],
                [
                    [59, 82, 94],
                    [53, 84, 100],
                    [47, 86, 106],
                    [24, 94, 129],
                    [12, 98, 141],
                    [65, 80, 88],
                    [0, 102, 153]
                ],
                [
                    [40, 57, 40],
                    [48, 68, 48],
                    [56, 80, 56],
                    [64, 91, 64],
                    [72, 103, 72],
                    [80, 115, 80],
                    [88, 126, 88],
                    [32, 45, 32],
                    [24, 34, 24],
                    [96, 138, 96]
                ]
            ], this.colorBox3 = [
                [
                    [99, 106, 137],
                    [110, 118, 151],
                    [125, 132, 161],
                    [140, 146, 172],
                    [155, 160, 183]
                ],
                [
                    [114, 72, 103],
                    [129, 82, 117],
                    [145, 92, 131],
                    [159, 104, 144],
                    [98, 62, 89],
                    [169, 119, 156]
                ],
                [
                    [111, 78, 55],
                    [128, 90, 63],
                    [145, 102, 72],
                    [94, 66, 47],
                    [77, 54, 38],
                    [60, 42, 30]
                ],
                [
                    [75, 83, 32],
                    [92, 101, 39],
                    [108, 120, 46],
                    [58, 65, 25],
                    [42, 46, 18]
                ],
                [
                    [57, 115, 172],
                    [64, 128, 191],
                    [83, 140, 198],
                    [121, 166, 210],
                    [140, 179, 217]
                ],
                [
                    [0, 81, 59],
                    [0, 106, 78],
                    [0, 132, 97],
                    [0, 55, 40],
                    [0, 157, 116]
                ],
                [
                    [180, 107, 65],
                    [191, 120, 80],
                    [198, 135, 98],
                    [205, 149, 117],
                    [212, 163, 136]
                ]
            ], this.colorGradients = {
                redStack: [
                    [128, 0, 0],
                    [195, 33, 72],
                    [135, 38, 87],
                    [112, 41, 99],
                    [255, 56, 0],
                    [204, 85, 0],
                    [255, 0, 0],
                    [231, 84, 128],
                    [207, 113, 175],
                    [148, 0, 211],
                    [255, 127, 80],
                    [255, 103, 0],
                    [244, 194, 194],
                    [209, 159, 232],
                    [255, 140, 0],
                    [255, 179, 71]
                ],
                greenStack: [
                    [0, 66, 37],
                    [85, 107, 47],
                    [75, 83, 32],
                    [19, 136, 8],
                    [141, 182, 0],
                    [23, 114, 69],
                    [120, 134, 107],
                    [3, 192, 60],
                    [62, 180, 137]
                ],
                darkStack: [
                    [128, 0, 0],
                    [0, 0, 128],
                    [0, 51, 0],
                    [102, 0, 102],
                    [0, 51, 102],
                    [51, 51, 0]
                ]
            }, this.specificColors = {
                lightGray: [105, 105, 105],
                burntOrange: [204, 85, 0],
                burgundy: [128, 0, 0],
                brass: [104, 92, 7],
                airForceBlue: [93, 138, 168],
                qualityGreen: [0, 128, 0],
                qualityYellow: [255, 255, 53],
                qualityRed: [204, 0, 0],
                burntOrangeBright: [204, 85, 0]
            }, this.availableEvents = [], this.createNewEvent = function(e) {
                var t = {};
                return angular.forEach(e, function(e, r) {
                    var n;
                    "function" == typeof MouseEvent ? n = new MouseEvent(e, {
                        view: window,
                        bubbles: !0,
                        cancelable: !0
                    }) : "function" == typeof document.createEvent ? (n = document.createEvent("MouseEvents"), n.initEvent(e, !0, !0)) : "function" == typeof document.createEventObject && (n = document.createEventObject()), t[e] = n
                }), t
            }
        }])
    }(),
    function() {
        angular.module("pdb.slideToggle", []).directive("slideable", function() {
            return {
                restrict: "C",
                compile: function(e, t) {
                    if ("height" === t.slideProperty) {
                        var r = e.html();
                        e.html('<div class="slideable_content" style="margin:0 !important; padding:0 !important" >' + r + "</div>")
                    }
                    return function(e, r, n) {
                        n.duration = n.duration ? n.duration : "1s", n.easing = n.easing ? n.easing : "ease-in-out", r.css({
                            "overflow-y": "auto",
                            "z-index": "999",
                            transitionProperty: t.slideProperty,
                            transitionDuration: n.duration,
                            transitionTimingFunction: n.easing
                        })
                    }
                }
            }
        }).directive("slideToggle", function() {
            return {
                restrict: "A",
                link: function(e, t, r) {
                    var n = t[0],
                        i = t.parent().parent()[0].querySelector(r.slideToggle),
                        o = !1;
                    "undefined" != typeof r.expanded && "true" === r.expanded && (o = !0);
                    var a = function(e) {
                        var t = i.querySelector(".slideable_content"),
                            r = i.style.top;
                        if (o) {
                            t.style.border = "1px solid rgba(0,0,0,0)";
                            var a = t.clientHeight;
                            t.style.border = 0, a > 135 && (a = 135), i.style.height = a + "px", n.style.top = parseInt(r.split("px")[0]) + a + 1 + "px", n.innerHTML = '<span class="icon-black icon-functional" data-icon="8">Collapse Controls</span>'
                        } else i.style.height = "0px", n.style.top = r, n.innerHTML = '<span class="icon-black icon-functional" data-icon="9">Expand Controls</span>';
                        o = !o
                    };
                    t.bind("click", function(e) {
                        a(n)
                    }), a(n)
                }
            }
        })
    }(),
    function() {
        angular.module("pdb.litemol", ["pdb.common.services"]).directive("pdbLiteMol", ["commonServices", "$document", function(e, t) {
            return {
                restrict: "EAC",
                scope: {
                    pdbId: "=",
                    loadEdMaps: "@",
                    hideControls: "@",
                    showLogs: "@",
                    customQuery: "@",
                    customRender: "@",
                    treeMenu: "@",
                    isExpanded: "@",
                    subscribeEvents: "@"
                },
                template: "",
                link: function(r, n, i) {
                    if ("undefined" == typeof r.pdbId || "" === r.pdbId || 4 !== r.pdbId.length) return void(window.console && console.log("Invalid PDB ID!"));
                    r.pdbevents = e.createNewEvent(["PDB.litemol.click", "PDB.litemol.mouseover", "PDB.litemol.mouseout"]), "undefined" != typeof r.hideControls && "true" == r.hideControls ? r.hideControls = !0 : r.hideControls = !1, "undefined" != typeof r.treeMenu && "false" == r.treeMenu ? r.treeMenu = !1 : r.treeMenu = !0, "undefined" != typeof r.isExpanded && "true" == r.isExpanded ? r.isExpanded = !0 : r.isExpanded = !1, "undefined" == typeof r.subscribeEvents && (r.subscribeEvents = "true");
                    var o, a = this && this.__extends || function(e, t) {
                        function r() {
                            this.constructor = e
                        }
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                        e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
                    };
                    ! function(e) {
                        var t;
                        ! function(e) {
                            e.DownloadMolecule = LiteMol.Bootstrap.Entity.Transformer.Molecule.downloadMoleculeSource({
                                sourceId: "url-molecule",
                                name: "Url",
                                description: "Download a molecule from the specified Url (if the host server supports cross domain requests).",
                                defaultId: "http://www.ebi.ac.uk/pdbe/coordinates/1tqn/cartoon",
                                urlTemplate: function(e) {
                                    return e
                                },
                                isFullUrl: !0,
                                isCollaped: !0
                            })
                        }(t = e.DataSources || (e.DataSources = {}))
                    }(o = o || (o = {}));
                    var o;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            var t;
                            ! function(e) {
                                var t = LiteMol.Bootstrap,
                                    r = t.Entity,
                                    n = t.Entity.Transformer,
                                    i = t.Visualization;
                                e.DownloadMolecule = n.Molecule.downloadMoleculeSource({
                                    sourceId: "pdbe-molecule",
                                    name: "PDBe",
                                    description: "Download a molecule from PDBe.",
                                    defaultId: "1cbs",
                                    urlTemplate: function(e) {
                                        return "http://www.ebi.ac.uk/pdbe/static/entry/" + e.toLowerCase() + "_updated.cif"
                                    }
                                }), e.DownloadDensity = t.Tree.Transformer.action({
                                    id: "pdbe-density-download-data",
                                    name: "Density Data from PDBe",
                                    description: "Download density data from PDBe.",
                                    from: [r.Root],
                                    to: [r.Action],
                                    defaultParams: function() {
                                        return {
                                            id: "1cbs"
                                        }
                                    },
                                    validateParams: function(e) {
                                        return e.id && e.id.trim().length ? void 0 : ["Enter Id"]
                                    }
                                }, function(e, r, o) {
                                    var a = t.Tree.Transform.build(),
                                        s = o.params.id.trim().toLocaleLowerCase(),
                                        u = o.params.isWireframe,
                                        l = a.add(r, n.Basic.CreateGroup, {
                                            label: s,
                                            description: "Density"
                                        }, {
                                            ref: o.props.ref
                                        }),
                                        c = l.then(n.Data.Download, {
                                            url: "http://www.ebi.ac.uk/pdbe/coordinates/files/" + s + "_diff.ccp4",
                                            type: "Binary",
                                            id: o.params.id,
                                            description: "Fo-Fc"
                                        }).then(n.Density.ParseCcp4, {
                                            id: "Fo-Fc",
                                            normalize: !1
                                        }, {
                                            isBinding: !0
                                        });
                                    c.then(n.Density.CreateVisualBehaviour, {
                                        id: "Fo-Fc(-ve)",
                                        isoSigmaMin: -5,
                                        isoSigmaMax: 0,
                                        radius: 5,
                                        style: i.Density.Style.create({
                                            isoSigma: -3,
                                            color: LiteMol.Visualization.Color.fromHex(12268339),
                                            isWireframe: u,
                                            transparency: {
                                                alpha: 1
                                            }
                                        })
                                    }), c.then(n.Density.CreateVisualBehaviour, {
                                        id: "Fo-Fc(+ve)",
                                        isoSigmaMin: 0,
                                        isoSigmaMax: 5,
                                        radius: 5,
                                        style: i.Density.Style.create({
                                            isoSigma: 3,
                                            color: LiteMol.Visualization.Color.fromHex(3390259),
                                            isWireframe: u,
                                            transparency: {
                                                alpha: 1
                                            }
                                        })
                                    });
                                    l.then(n.Data.Download, {
                                        url: "http://www.ebi.ac.uk/pdbe/coordinates/files/" + s + ".ccp4",
                                        type: "Binary",
                                        id: o.params.id,
                                        description: "2Fo-Fc"
                                    }).then(n.Density.ParseCcp4, {
                                        id: "2Fo-Fc",
                                        normalize: !1
                                    }, {
                                        isBinding: !0
                                    }).then(n.Density.CreateVisualBehaviour, {
                                        id: "2Fo-Fc",
                                        isoSigmaMin: 0,
                                        isoSigmaMax: 2,
                                        radius: 5,
                                        style: i.Density.Style.create({
                                            isoSigma: 1.5,
                                            color: LiteMol.Visualization.Color.fromHex(3367602),
                                            isWireframe: u,
                                            transparency: {
                                                alpha: .45
                                            }
                                        })
                                    });
                                    return a
                                }, "Electron density loaded, click on a residue or atom to display it.")
                            }(t = e.Data || (e.Data = {}))
                        }(t = e.PDBe || (e.PDBe = {}))
                    }(o = o || (o = {}));
                    var o;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            var t;
                            ! function(e) {
                                var t = LiteMol.Bootstrap.Entity,
                                    r = LiteMol.Bootstrap.Entity.Transformer;
                                e.Report = t.create({
                                    name: "PDBe Molecule Validation Report",
                                    typeClass: "Behaviour",
                                    shortName: "VR",
                                    description: "Represents PDBe validation report."
                                });
                                var n;
                                ! function(e) {
                                    function t(e, t) {
                                        var r = e.toString();
                                        return 0 !== (t || "").length && (r += " " + t), r
                                    }

                                    function r(e, t, r, n, i) {
                                        var o = e[r];
                                        return o && (o = o[n]) ? (o = o[t], o ? o[i] : void 0) : void 0
                                    }

                                    function n(e) {
                                        var r = {};
                                        if (!e.molecules) return r;
                                        for (var n = 0, i = e.molecules; n < i.length; n++) {
                                            for (var o = i[n], a = {}, s = 0, u = o.chains; s < u.length; s++) {
                                                for (var l = u[s], c = {}, h = 0, p = l.models; h < p.length; h++) {
                                                    for (var d = p[h], f = {}, m = 0, v = d.residues; m < v.length; m++) {
                                                        var g = v[m],
                                                            y = t(g.residue_number, g.author_insertion_code),
                                                            b = f[y];
                                                        b ? (b.residues.push(g), b.numIssues = Math.max(b.numIssues, g.outlier_types.length)) : f[y] = {
                                                            residues: [g],
                                                            numIssues: g.outlier_types.length
                                                        }
                                                    }
                                                    c[d.model_id.toString()] = f
                                                }
                                                a[l.struct_asym_id] = c
                                            }
                                            r[o.entity_id.toString()] = a
                                        }
                                        return r
                                    }
                                    e.getResidueId = t, e.getEntry = r, e.createReport = n
                                }(n || (n = {}));
                                var i;
                                ! function(e) {
                                    var t = function() {
                                        function e(e, t) {
                                            var r = this;
                                            this.context = e, this.report = t, this.provider = function(e) {
                                                try {
                                                    return r.processInfo(e)
                                                } catch (t) {
                                                    return void console.error("Error showing validation label", t)
                                                }
                                            }
                                        }
                                        return e.prototype.dispose = function() {
                                            this.context.highlight.removeProvider(this.provider)
                                        }, e.prototype.register = function(e) {
                                            this.context.highlight.addProvider(this.provider)
                                        }, e.prototype.processInfo = function(e) {
                                            var t = LiteMol.Bootstrap.Interactivity.Molecule.transformInteraction(e);
                                            if (!t || t.residues.length > 1) return void 0;
                                            var r = t.residues[0],
                                                i = n.getEntry(this.report, t.modelId, r.chain.entity.entityId, r.chain.asymId, n.getResidueId(r.seqNumber, r.insCode));
                                            if (!i) return void 0;
                                            var o;
                                            if (1 === i.residues.length) {
                                                var a = i.residues[0];
                                                return o = "Validation: ", o += a.outlier_types.length ? "<b>" + i.residues[0].outlier_types.join(", ") + "</b>" : "no issue"
                                            }
                                            o = "";
                                            for (var s = 0, u = 0, l = i.residues; u < l.length; u++) {
                                                var c = l[u];
                                                s > 0 && (o += ", "), o += "Validation (altLoc " + c.alt_code + "): <b>" + c.outlier_types.join(", ") + "</b>", s++
                                            }
                                            return o
                                        }, e
                                    }();
                                    e.Behaviour = t
                                }(i || (i = {}));
                                var o;
                                ! function(e) {
                                    function t(e, t) {
                                        for (var r = new Uint8Array(e.residues.count), i = e.modelId, o = e.residues, a = o.asymId, s = o.entityId, u = o.seqNumber, l = o.insCode, c = 0, h = e.residues.count; h > c; c++) {
                                            var p = n.getEntry(t, i, s[c], a[c], n.getResidueId(u[c], l[c]));
                                            p && (r[c] = Math.min(p.numIssues, 3))
                                        }
                                        return r
                                    }

                                    function r(e, t) {
                                        for (var r = new Uint8Array(e.residues.count), i = e.modelId, o = e.parent, a = e.residues, s = a.entityId, u = a.seqNumber, l = a.insCode, c = a.chainIndex, h = e.chains.sourceChainIndex, p = o.chains.asymId, d = 0, f = e.residues.count; f > d; d++) {
                                            var m = p[h[c[d]]],
                                                v = n.getEntry(t, i, s[d], m, n.getResidueId(u[d], l[d]));
                                            v && (r[d] = Math.min(v.numIssues, 3))
                                        }
                                        return r
                                    }

                                    function i(e, n) {
                                        var i = e.props.model,
                                            l = i.source === LiteMol.Core.Structure.MoleculeModelSource.File ? t(i, n) : r(i, n),
                                            c = new Map;
                                        c.set("Uniform", a), c.set("Selection", s), c.set("Highlight", u);
                                        var h = i.atoms.residueIndex,
                                            p = LiteMol.Visualization.Theme.createColorMapMapping(function(e) {
                                                return l[h[e]]
                                            }, o, a);
                                        return LiteMol.Visualization.Theme.createMapping(p, {
                                            colors: c,
                                            interactive: !0,
                                            transparency: {
                                                alpha: 1
                                            }
                                        })
                                    }
                                    var o = function() {
                                            var e = new Map;
                                            return e.set(0, {
                                                r: 0,
                                                g: 1,
                                                b: 0
                                            }), e.set(1, {
                                                r: 1,
                                                g: 1,
                                                b: 0
                                            }), e.set(2, {
                                                r: 1,
                                                g: .5,
                                                b: 0
                                            }), e.set(3, {
                                                r: 1,
                                                g: 0,
                                                b: 0
                                            }), e
                                        }(),
                                        a = {
                                            r: .6,
                                            g: .6,
                                            b: .6
                                        },
                                        s = {
                                            r: 0,
                                            g: 0,
                                            b: 1
                                        },
                                        u = {
                                            r: 1,
                                            g: 0,
                                            b: 1
                                        };
                                    e.create = i
                                }(o || (o = {}));
                                var a = LiteMol.Bootstrap.Tree.Transformer.create({
                                    id: "pdbe-validation-create",
                                    name: "PDBe Validation",
                                    description: "Create the validation report from a string.",
                                    from: [t.Data.String],
                                    to: [e.Report],
                                    defaultParams: function() {
                                        return {}
                                    }
                                }, function(t, r, o) {
                                    return LiteMol.Bootstrap.Task.create("Validation Report (" + o.params.id + ")", "Normal", function(a) {
                                        a.update("Parsing..."), a.schedule(function() {
                                            var s = JSON.parse(r.props.data),
                                                u = s[o.params.id],
                                                l = n.createReport(u || {});
                                            a.resolve(e.Report.create(o, {
                                                label: "Validation Report",
                                                behaviour: new i.Behaviour(t, l)
                                            }))
                                        })
                                    }).setReportTime(!0)
                                });
                                e.DownloadAndCreate = LiteMol.Bootstrap.Tree.Transformer.action({
                                    id: "pdbe-validation-download-and-create",
                                    name: "PDBe Validation Report",
                                    description: "Download Validation Report from PDBe",
                                    from: [t.Molecule.Molecule],
                                    to: [t.Action],
                                    defaultParams: function() {
                                        return {}
                                    },
                                    customController: function(e, t, r) {
                                        return new LiteMol.Bootstrap.Components.Transform.Controller(e, t, r, !1)
                                    }
                                }, function(e, t, n) {
                                    var i = t.props.molecule.id.trim().toLocaleLowerCase(),
                                        o = LiteMol.Bootstrap.Tree.Transform.build().add(t, r.Data.Download, {
                                            url: "http://www.ebi.ac.uk/pdbe/api/validation/residuewise_outlier_summary/entry/" + i,
                                            type: "String",
                                            id: i,
                                            description: "Validation Data"
                                        }).then(a, {
                                            id: i
                                        }, {
                                            isBinding: !0
                                        });
                                    return o
                                }, "Validation report loaded. Hovering over residue will now contain validation info. To apply validation coloring, select the entity in the tree and apply it the right panel."), e.ApplyTheme = LiteMol.Bootstrap.Tree.Transformer.create({
                                    id: "pdbe-validation-apply-theme",
                                    name: "Apply Coloring",
                                    description: "Colors all visuals using the validation report.",
                                    from: [e.Report],
                                    to: [t.Action],
                                    defaultParams: function() {
                                        return {}
                                    }
                                }, function(e, t, r) {
                                    return LiteMol.Bootstrap.Task.create("Validation Coloring", "Background", function(r) {
                                        var n = LiteMol.Bootstrap.Tree.Node.findAncestor(t, LiteMol.Bootstrap.Entity.Molecule.Molecule);
                                        if (!n) return void r.reject("No suitable parent found.");
                                        for (var i = new Map, a = e.select(LiteMol.Bootstrap.Tree.Selection.byValue(n).subtree().ofType(LiteMol.Bootstrap.Entity.Molecule.Visual)), s = 0, u = a; s < u.length; s++) {
                                            var l = u[s],
                                                c = LiteMol.Bootstrap.Utils.Molecule.findModel(l);
                                            if (c) {
                                                var h = i.get(c.id);
                                                h || (h = o.create(c, t.props.behaviour.report), i.set(c.id, h)), LiteMol.Bootstrap.Command.Visual.UpdateBasicTheme.dispatch(e, {
                                                    visual: l,
                                                    theme: h
                                                })
                                            }
                                        }
                                        e.logger.message("Validation coloring applied."), r.resolve(LiteMol.Bootstrap.Tree.Node.Null)
                                    })
                                })
                            }(t = e.Validation || (e.Validation = {}))
                        }(t = e.PDBe || (e.PDBe = {}))
                    }(o = o || (o = {}));
                    var o;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            var t;
                            ! function(e) {
                                function t(t, r, n) {
                                    var o = LiteMol.Bootstrap.Tree.Transform.build();
                                    if (!n) return o;
                                    for (var a = LiteMol.Visualization.Color.fromHex(16410880), s = function(r) {
                                            var s = n[r];
                                            if (!s) return "continue";
                                            var u = Object.keys(s).filter(function(e) {
                                                return Object.prototype.hasOwnProperty.call(s, e)
                                            });
                                            if (!u.length) return "continue";
                                            for (var l = o.add(t, i.Basic.CreateGroup, {
                                                    label: r,
                                                    isCollapsed: !0
                                                }, {
                                                    isBinding: !0
                                                }), c = 0, h = u; c < h.length; c++) {
                                                var p = h[c];
                                                l.then(e.CreateSingle, {
                                                    data: s[p],
                                                    id: p,
                                                    color: a
                                                })
                                            }
                                        }, u = 0, c = ["Pfam", "InterPro", "CATH", "SCOP", "UniProt"]; u < c.length; u++) {
                                        var h = c[u];
                                        s(h)
                                    }
                                    return o.add(t, l, {}, {
                                        isHidden: !0
                                    }), o
                                }

                                function r(e) {
                                    return 0 === e.length ? null : e
                                }
                                var n = LiteMol.Bootstrap.Entity,
                                    i = LiteMol.Bootstrap.Entity.Transformer,
                                    o = LiteMol.Core.Structure.Query;
                                e.Annotations = n.create({
                                    name: "PDBe Sequence Annotations",
                                    typeClass: "Data",
                                    shortName: "SA",
                                    description: "Represents PDBe sequence annotation data."
                                }), e.Annotation = n.create({
                                    name: "PDBe Sequence Annotation",
                                    typeClass: "Object",
                                    shortName: "SA",
                                    description: "Represents PDBe sequence annotation."
                                }, {
                                    isSilent: !0,
                                    isFocusable: !0
                                }), e.Behaviour = n.create({
                                    name: "PDBe Sequence Annotation Behaviour",
                                    typeClass: "Behaviour",
                                    shortName: "SA",
                                    description: "Represents PDBe sequence annoation behaviour."
                                });
                                var a;
                                ! function(t) {
                                    var r = function() {
                                        function t(e) {
                                            var t = this;
                                            this.context = e, this.node = void 0, this.current = void 0, this.subs = [], this.toHighlight = void 0, this.isHighlightOn = !1, this.__highlight = LiteMol.Core.Utils.debounce(function() {
                                                return t.highlight()
                                            }, 33)
                                        }
                                        return t.prototype.dispose = function() {
                                            this.resetTheme();
                                            for (var e = 0, t = this.subs; e < t.length; e++) {
                                                var r = t[e];
                                                r.dispose()
                                            }
                                            this.subs = [], this.node = void 0
                                        }, t.prototype.register = function(t) {
                                            var r = this;
                                            this.node = t, this.subs.push(this.context.behaviours.currentEntity.subscribe(function(e) {
                                                return r.update(e)
                                            })), this.subs.push(LiteMol.Bootstrap.Command.Entity.Highlight.getStream(this.context).subscribe(function(t) {
                                                if (1 === t.data.entities.length) {
                                                    var n = t.data.entities[0];
                                                    if (n.type !== e.Annotation) return;
                                                    r.toHighlight = n, r.isHighlightOn = t.data.isOn, r.__highlight()
                                                }
                                            })), this.subs.push(LiteMol.Bootstrap.Command.Entity.Focus.getStream(this.context).subscribe(function(t) {
                                                if (1 === t.data.length) {
                                                    var n = t.data[0];
                                                    if (n.type !== e.Annotation) return;
                                                    r.focus(n)
                                                }
                                            }))
                                        }, Object.defineProperty(t.prototype, "molecule", {
                                            get: function() {
                                                return LiteMol.Bootstrap.Utils.Molecule.findMolecule(this.node)
                                            },
                                            enumerable: !0,
                                            configurable: !0
                                        }), t.prototype.resetTheme = function() {
                                            var e = this.molecule;
                                            e && LiteMol.Bootstrap.Command.Visual.ResetTheme.dispatch(this.context, {
                                                selection: LiteMol.Bootstrap.Tree.Selection.byValue(e).subtree()
                                            })
                                        }, t.prototype.getCached = function(e, t) {
                                            return this.context.entityCache.get(e, "theme-" + t.id)
                                        }, t.prototype.setCached = function(e, t, r) {
                                            this.context.entityCache.set(e, "theme-" + t.id, r)
                                        }, t.prototype.highlight = function() {
                                            var t = this.toHighlight;
                                            if (this.toHighlight = void 0, t && t.type === e.Annotation) {
                                                var r = t;
                                                this.isHighlightOn ? this.apply(r) : this.current ? this.update(this.current) : this.resetTheme()
                                            }
                                        }, t.prototype.focus = function(e) {
                                            var t = this.molecule;
                                            if (t) {
                                                var r = this.context.select(LiteMol.Bootstrap.Tree.Selection.byValue(t).subtree().ofType(LiteMol.Bootstrap.Entity.Molecule.Model))[0];
                                                r && (LiteMol.Bootstrap.Command.Molecule.FocusQuery.dispatch(this.context, {
                                                    model: r,
                                                    query: e.props.query
                                                }), LiteMol.Bootstrap.Command.Entity.SetCurrent.dispatch(this.context, e))
                                            }
                                        }, t.prototype.apply = function(e) {
                                            var t = this.molecule;
                                            if (t)
                                                for (var r = this.context.select(LiteMol.Bootstrap.Tree.Selection.byValue(t).subtree().ofType(LiteMol.Bootstrap.Entity.Molecule.Visual)), n = 0, i = r; n < i.length; n++) {
                                                    var o = i[n],
                                                        a = LiteMol.Bootstrap.Utils.Molecule.findModel(o);
                                                    if (a) {
                                                        var u = this.getCached(e, a);
                                                        u || (u = s.create(a, e.props.query, e.props.color), this.setCached(e, a, u)), LiteMol.Bootstrap.Command.Visual.UpdateBasicTheme.dispatch(this.context, {
                                                            visual: o,
                                                            theme: u
                                                        })
                                                    }
                                                }
                                        }, t.prototype.update = function(t) {
                                            return t && t.type === e.Annotation ? (this.current = t, void this.apply(this.current)) : (this.current && this.resetTheme(), void(this.current = void 0))
                                        }, t
                                    }();
                                    t.Behaviour = r
                                }(a || (a = {}));
                                var s;
                                ! function(e) {
                                    function t(e, t) {
                                        for (var r = new Uint8Array(e.residues.count), n = (e.modelId, e.atoms.residueIndex), i = e.residues, o = (i.asymId, i.entityId, i.seqNumber, i.insCode, 0), a = t.fragments; o < a.length; o++)
                                            for (var s = a[o], u = 0, l = s.atomIndices; u < l.length; u++) {
                                                var c = l[u];
                                                r[n[c]] = 1
                                            }
                                        return r
                                    }

                                    function r(e, r, s) {
                                        var u = e.props.model,
                                            l = o.Builder.toQuery(r),
                                            c = l(u.queryContext),
                                            h = t(u, c),
                                            p = new Map;
                                        p.set("Uniform", n), p.set("Bond", n), p.set("Selection", i), p.set("Highlight", a);
                                        var d = new Map;
                                        d.set(1, s);
                                        var f = u.atoms.residueIndex,
                                            m = LiteMol.Visualization.Theme.createColorMapMapping(function(e) {
                                                return h[f[e]]
                                            }, d, n);
                                        return LiteMol.Visualization.Theme.createMapping(m, {
                                            colors: p,
                                            interactive: !0,
                                            transparency: {
                                                alpha: 1
                                            }
                                        })
                                    }
                                    var n = {
                                            r: 1,
                                            g: 1,
                                            b: 1
                                        },
                                        i = LiteMol.Visualization.Theme.Default.SelectionColor,
                                        a = LiteMol.Visualization.Theme.Default.HighlightColor;
                                    e.create = r
                                }(s || (s = {})), e.CreateSingle = LiteMol.Bootstrap.Tree.Transformer.create({
                                    id: "pdbe-sequence-annotations-create-single",
                                    name: "PDBe Sequence Annotation",
                                    description: "Create a sequence annotation object.",
                                    from: [],
                                    to: [e.Annotation],
                                    defaultParams: function() {
                                        return {}
                                    },
                                    isUpdatable: !0
                                }, function(t, n, i) {
                                    return LiteMol.Bootstrap.Task.create("Sequence Annotation", "Background", function(t) {
                                        var n = i.params.data,
                                            a = o.or.apply(null, n.mappings.map(function(e) {
                                                return o.sequence(e.entity_id.toString(), e.struct_asym_id, {
                                                    seqNumber: e.start.residue_number,
                                                    insCode: r(e.start.author_insertion_code)
                                                }, {
                                                    seqNumber: e.end.residue_number,
                                                    insCode: r(e.end.author_insertion_code)
                                                })
                                            })).union();
                                        t.resolve(e.Annotation.create(i, {
                                            label: n.identifier,
                                            description: i.params.id,
                                            query: a,
                                            color: i.params.color
                                        }))
                                    })
                                });
                                var u = LiteMol.Bootstrap.Tree.Transformer.create({
                                        id: "pdbe-sequence-annotations-parse",
                                        name: "PDBe Sequence Annotations",
                                        description: "Parse sequence annotaions JSON.",
                                        from: [n.Data.String],
                                        to: [e.Annotations],
                                        defaultParams: function() {
                                            return {}
                                        }
                                    }, function(t, r, n) {
                                        return LiteMol.Bootstrap.Task.create("Sequence Annotations", "Normal", function(t) {
                                            t.update("Parsing..."), t.schedule(function() {
                                                var i = JSON.parse(r.props.data);
                                                t.resolve(e.Annotations.create(n, {
                                                    label: "Sequence Annotations",
                                                    data: i
                                                }))
                                            })
                                        }).setReportTime(!0)
                                    }),
                                    l = LiteMol.Bootstrap.Tree.Transformer.create({
                                        id: "pdbe-sequence-annotations-create-behaviour",
                                        name: "PDBe Sequence Annotation Behaviour",
                                        description: "Create sequence annotation behaviour.",
                                        from: [e.Annotations],
                                        to: [e.Behaviour],
                                        defaultParams: function() {
                                            return {}
                                        }
                                    }, function(t, r, n) {
                                        return LiteMol.Bootstrap.Task.resolve("Sequence Annotations", "Background", e.Behaviour.create(n, {
                                            label: "Sequence Annotations",
                                            behaviour: new a.Behaviour(t)
                                        }))
                                    }),
                                    c = LiteMol.Bootstrap.Tree.Transformer.action({
                                        id: "pdbe-sequence-annotations-build",
                                        name: "PDBe Sequence Annotations",
                                        description: "Build sequence validations behaviour.",
                                        from: [e.Annotations],
                                        to: [n.Action],
                                        defaultParams: function() {
                                            return {}
                                        }
                                    }, function(e, r, n) {
                                        var i = r.props.data,
                                            o = Object.keys(i);
                                        return t(r, o[0], i[o[0]])
                                    }, "Sequence annotations downloaded. Selecting or hovering an annotation in the tree will color the visuals.");
                                e.DownloadAndCreate = LiteMol.Bootstrap.Tree.Transformer.action({
                                    id: "pdbe-sequence-annotations-download-and-create",
                                    name: "PDBe Sequence Annotations",
                                    description: "Download Sequence Annotations from PDBe",
                                    from: [n.Molecule.Molecule],
                                    to: [n.Action],
                                    defaultParams: function() {
                                        return {}
                                    },
                                    customController: function(e, t) {
                                        return new LiteMol.Bootstrap.Components.Transform.Controller(e, t, !1)
                                    }
                                }, function(e, t, r) {
                                    var n = t.props.molecule.id.trim().toLocaleLowerCase();
                                    return LiteMol.Bootstrap.Tree.Transform.build().add(t, i.Data.Download, {
                                        url: "http://www.ebi.ac.uk/pdbe/api/mappings/" + n,
                                        type: "String",
                                        id: n,
                                        description: "Annotation Data"
                                    }).then(u, {}, {
                                        isBinding: !0
                                    }).then(c, {}, {
                                        isBinding: !0
                                    })
                                })
                            }(t = e.SequenceAnnotation || (e.SequenceAnnotation = {}))
                        }(t = e.PDBe || (e.PDBe = {}))
                    }(o = o || (o = {}));
                    var o;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            var t;
                            ! function(e) {
                                var t = LiteMol.Plugin.React,
                                    r = LiteMol.Plugin.Controls,
                                    n = function(e) {
                                        function n() {
                                            e.apply(this, arguments)
                                        }
                                        return a(n, e), n.prototype.renderControls = function() {
                                            var e = this,
                                                n = this.params;
                                            return t.createElement("div", null, t.createElement(r.ToggleColorPicker, {
                                                label: "Color",
                                                color: n.color,
                                                onChange: function(t) {
                                                    return e.controller.autoUpdateParams({
                                                        color: t
                                                    })
                                                },
                                                position: "below"
                                            }))
                                        }, n
                                    }(LiteMol.Plugin.Views.Transform.ControllerBase);
                                e.CreateSequenceAnnotationView = n
                            }(t = e.Views || (e.Views = {}))
                        }(t = e.PDBe || (e.PDBe = {}))
                    }(o = o || (o = {}));
                    var o;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            var t = LiteMol.Plugin.React,
                                r = LiteMol.Plugin.Controls,
                                n = function(e) {
                                    function n() {
                                        e.apply(this, arguments)
                                    }
                                    return a(n, e), n.prototype.asm = function() {
                                        var e = this,
                                            n = this.params.params ? this.params.params.name : this.params.assemblyNames[0];
                                        return n || (n = this.params.assemblyNames[0]), [t.createElement(r.OptionsGroup, {
                                            options: this.params.assemblyNames,
                                            current: n,
                                            onChange: function(t) {
                                                return e.updateParams({
                                                    params: {
                                                        name: t
                                                    }
                                                })
                                            },
                                            label: "Asm. Name"
                                        })]
                                    }, n.prototype.symm = function() {
                                        var e = this,
                                            n = ["Mates", "Interaction"],
                                            i = this.params.params;
                                        return [t.createElement(r.OptionsGroup, {
                                            options: n,
                                            current: i.type,
                                            onChange: function(t) {
                                                return e.updateParams({
                                                    params: {
                                                        type: t,
                                                        radius: i.radius
                                                    }
                                                })
                                            },
                                            label: "Type",
                                            title: "Mates: copies whole asymetric unit. Interaction: Includes only residues that are no more than `radius` from the asymetric unit."
                                        }), t.createElement(r.Slider, {
                                            label: "Radius",
                                            onChange: function(t) {
                                                return e.updateParams({
                                                    params: {
                                                        type: i.type,
                                                        radius: t
                                                    }
                                                })
                                            },
                                            min: 0,
                                            max: 25,
                                            step: .1,
                                            value: i.radius,
                                            title: "Interaction radius."
                                        })]
                                    }, n.prototype.updateSource = function(e) {
                                        switch (e) {
                                            case "Assembly":
                                                this.updateParams({
                                                    source: e,
                                                    params: {
                                                        name: this.params.assemblyNames[0]
                                                    }
                                                });
                                                break;
                                            case "Symmetry":
                                                this.updateParams({
                                                    source: e,
                                                    params: {
                                                        type: "Mates",
                                                        radius: 5
                                                    }
                                                });
                                                break;
                                            default:
                                                this.updateParams({
                                                    source: "Asymmetric Unit"
                                                })
                                        }
                                    }, n.prototype.renderControls = function() {
                                        var e = this,
                                            n = this.params,
                                            i = this.controller.entity,
                                            o = ["Asymmetric Unit"];
                                        return n.assemblyNames && n.assemblyNames.length > 0 && o.push("Assembly"), i && i.props.model.symmetryInfo && o.push("Symmetry"), t.createElement("div", null, t.createElement(r.OptionsGroup, {
                                            options: o,
                                            caption: function(e) {
                                                return e
                                            },
                                            current: n.source,
                                            onChange: function(t) {
                                                return e.updateSource(t)
                                            },
                                            label: "Source"
                                        }), "Assembly" === n.source ? this.asm() : "Symmetry" === n.source ? this.symm() : void 0)
                                    }, n
                                }(LiteMol.Plugin.Views.Transform.ControllerBase);
                            e.RepresentationView = n
                        }(t = e.Custom || (e.Custom = {}))
                    }(o || (o = {}));
                    var o;
                    ! function(e) {
                        var t;
                        ! function(e) {
                            var t = LiteMol.Bootstrap.Entity,
                                r = LiteMol.Bootstrap.Entity.Transformer;
                            e.CreateRepresentation = LiteMol.Bootstrap.Tree.Transformer.action({
                                id: "lm-custom-create-representation",
                                name: "Representation",
                                description: "Create visual representation from the selected source.",
                                from: [t.Molecule.Model],
                                to: [t.Action],
                                defaultParams: function(e, t) {
                                    var r = LiteMol.Bootstrap.Utils.Molecule.findModel(t),
                                        n = r.props.model.assemblyInfo;
                                    return n && n.assemblies.length ? {
                                        source: "Asymmetric Unit",
                                        assemblyNames: n.assemblies.map(function(e) {
                                            return e.name
                                        })
                                    } : {
                                        source: "Asymmetric Unit",
                                        assemblyNames: []
                                    }
                                }
                            }, function(e, t, n) {
                                var i = LiteMol.Bootstrap.Tree.Selection.byRef("model").children();
                                LiteMol.Bootstrap.Command.Tree.RemoveNode.dispatch(e, i);
                                var o = LiteMol.Bootstrap.Tree.Transform.build(),
                                    a = {
                                        polymer: !0,
                                        polymerRef: "polymer-visual",
                                        het: !0,
                                        hetRef: "het-visual",
                                        water: !0,
                                        waterRef: "water-visual"
                                    };
                                switch (n.params.source || "Asymmetric Unit") {
                                    case "Assembly":
                                        o.add(t, r.Molecule.CreateAssembly, n.params.params).then(r.Molecule.CreateMacromoleculeVisual, a);
                                        break;
                                    case "Symmetry":
                                        o.add(t, r.Molecule.CreateSymmetryMates, n.params.params).then(r.Molecule.CreateMacromoleculeVisual, a);
                                        break;
                                    default:
                                        o.add(t, r.Molecule.CreateMacromoleculeVisual, a)
                                }
                                return o
                            })
                        }(t = e.Custom || (e.Custom = {}))
                    }(o || (o = {}));
                    var s = function() {
                            function e() {
                                this.Plugin = LiteMol.Plugin, this.Views = this.Plugin.Views, this.Bootstrap = LiteMol.Bootstrap, this.Entity = this.Bootstrap.Entity, this.Query = LiteMol.Core.Structure.Query, this.Transformer = this.Bootstrap.Entity.Transformer, this.Tree = this.Bootstrap.Tree, this.Transform = this.Tree.Transform, this.LayoutRegion = this.Bootstrap.Components.LayoutRegion, this.CoreVis = LiteMol.Visualization, this.Visualization = this.Bootstrap.Visualization, this.Command = this.Bootstrap.Command, this.Event = this.Bootstrap.Event, this.moleculeId = r.pdbId,
                                    this.currentHighLightedDetails, this.element = n[0], this.spec = {
                                        settings: {
                                            "molecule.model.defaultQuery": "residues({ name: 'ALA' })",
                                            "molecule.model.defaultAssemblyName": "1",
                                            "molecule.coordinateStreaming.defaultId": "1jj2",
                                            "molecule.coordinateStreaming.defaultServer": "//webchemdev.ncbr.muni.cz/CoordinateServer",
                                            "molecule.coordinateStreaming.defaultRadius": 10,
                                            "density.defaultVisualBehaviourRadius": 5
                                        },
                                        transforms: [{
                                            transformer: o.PDBe.Data.DownloadMolecule,
                                            view: this.Views.Transform.Data.WithIdField
                                        }, {
                                            transformer: o.PDBe.Data.DownloadDensity,
                                            view: this.Views.Transform.Data.WithIdField
                                        }, {
                                            transformer: this.Transformer.Molecule.CoordinateStreaming.InitStreaming,
                                            view: this.Views.Transform.Molecule.InitCoordinateStreaming
                                        }, {
                                            transformer: o.DataSources.DownloadMolecule,
                                            view: this.Views.Transform.Data.WithUrlIdField
                                        }, {
                                            transformer: this.Transformer.Molecule.OpenCifMoleculeFromFile,
                                            view: this.Views.Transform.Data.OpenCifMolecule
                                        }, {
                                            transformer: this.Transformer.Data.Download,
                                            view: this.Views.Transform.Data.Download
                                        }, {
                                            transformer: this.Transformer.Data.OpenFile,
                                            view: this.Views.Transform.Data.OpenFile
                                        }, {
                                            transformer: this.Transformer.Data.ParseCif,
                                            view: this.Views.Transform.Empty
                                        }, {
                                            transformer: this.Transformer.Density.ParseCcp4,
                                            view: this.Views.Transform.Density.ParseCcp4
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateFromCif,
                                            view: this.Views.Transform.Molecule.CreateFromCif
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateModel,
                                            view: this.Views.Transform.Molecule.CreateModel
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateSelection,
                                            view: this.Views.Transform.Molecule.CreateSelection
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateAssembly,
                                            view: this.Views.Transform.Molecule.CreateAssembly
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateSymmetryMates,
                                            view: this.Views.Transform.Molecule.CreateSymmetryMates
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateMacromoleculeVisual,
                                            view: this.Views.Transform.Empty
                                        }, {
                                            transformer: this.Transformer.Molecule.CreateVisual,
                                            view: this.Views.Transform.Molecule.CreateVisual
                                        }, {
                                            transformer: this.Transformer.Density.CreateVisual,
                                            view: this.Views.Transform.Density.CreateVisual
                                        }, {
                                            transformer: this.Transformer.Density.CreateVisualBehaviour,
                                            view: this.Views.Transform.Density.CreateVisualBehaviour
                                        }, {
                                            transformer: this.Transformer.Molecule.CoordinateStreaming.CreateBehaviour,
                                            view: this.Views.Transform.Empty
                                        }, {
                                            transformer: o.PDBe.Validation.DownloadAndCreate,
                                            view: this.Views.Transform.Empty
                                        }, {
                                            transformer: o.PDBe.Validation.ApplyTheme,
                                            view: this.Views.Transform.Empty
                                        }, {
                                            transformer: o.PDBe.SequenceAnnotation.DownloadAndCreate,
                                            view: this.Views.Transform.Empty
                                        }, {
                                            transformer: o.PDBe.SequenceAnnotation.CreateSingle,
                                            view: o.PDBe.Views.CreateSequenceAnnotationView
                                        }],
                                        behaviours: [this.Bootstrap.Behaviour.SetEntityToCurrentWhenAdded, this.Bootstrap.Behaviour.FocusCameraOnSelect, this.Bootstrap.Behaviour.Molecule.HighlightElementInfo, this.Bootstrap.Behaviour.Molecule.DistanceToLastClickedElement],
                                        components: [this.Plugin.Components.Visualization.HighlightInfo(this.LayoutRegion.Main, !0), this.Plugin.Components.Entity.Current("LiteMol", this.Plugin.VERSION.number)(this.LayoutRegion.Right, !0), this.Plugin.Components.Transform.View(this.LayoutRegion.Right), this.Plugin.Components.Context.Overlay(this.LayoutRegion.Root), this.Plugin.Components.Context.BackgroundTasks(this.LayoutRegion.Main, !0)],
                                        viewport: {
                                            view: this.Views.Visualization.Viewport,
                                            controlsView: this.Views.Visualization.ViewportControls
                                        },
                                        layoutView: this.Views.Layout,
                                        tree: {
                                            region: this.LayoutRegion.Left,
                                            view: this.Views.Entity.Tree
                                        }
                                    }, _this = this, this.CustomMenuSpec = {
                                        settings: {
                                            "molecule.model.defaultQuery": "residues({ name: 'ALA' })",
                                            "molecule.model.defaultAssemblyName": "1",
                                            "molecule.coordinateStreaming.defaultId": "1jj2",
                                            "molecule.coordinateStreaming.defaultServer": "http://webchemdev.ncbr.muni.cz/CoordinateServer/",
                                            "molecule.coordinateStreaming.defaultRadius": 10,
                                            "density.defaultVisualBehaviourRadius": 5
                                        },
                                        transforms: [{
                                            transformer: this.Transformer.Molecule.CreateVisual,
                                            view: this.Views.Transform.Molecule.CreateVisual
                                        }, {
                                            transformer: o.Custom.CreateRepresentation,
                                            view: o.Custom.RepresentationView
                                        }, {
                                            transformer: this.Transformer.Density.CreateVisual,
                                            view: this.Views.Transform.Density.CreateVisual
                                        }, {
                                            transformer: this.Transformer.Density.CreateVisualBehaviour,
                                            view: this.Views.Transform.Density.CreateVisualBehaviour
                                        }],
                                        behaviours: [this.Bootstrap.Behaviour.SetEntityToCurrentWhenAdded, this.Bootstrap.Behaviour.FocusCameraOnSelect, this.Bootstrap.Behaviour.ApplySelectionToVisual, this.Bootstrap.Behaviour.ApplyInteractivitySelection, this.Bootstrap.Behaviour.Molecule.HighlightElementInfo, this.Bootstrap.Behaviour.Molecule.DistanceToLastClickedElement, this.Bootstrap.Behaviour.Molecule.ShowInteractionOnSelect(5)],
                                        components: [this.Plugin.Components.Visualization.HighlightInfo(this.LayoutRegion.Main, !0), this.Plugin.Components.create("RepresentationControls", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Action(e, "model", o.Custom.CreateRepresentation, "Source")
                                        }, _this.Plugin.Views.Transform.Action)(this.LayoutRegion.Right), this.Plugin.Components.create("PolymerControls", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Updater(e, "polymer-visual", "Polymer Visual")
                                        }, _this.Plugin.Views.Transform.Updater)(this.LayoutRegion.Right), this.Plugin.Components.create("HetControls", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Updater(e, "het-visual", "HET Groups Visual")
                                        }, _this.Plugin.Views.Transform.Updater)(this.LayoutRegion.Right), this.Plugin.Components.create("WaterControls", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Updater(e, "water-visual", "Water Visual")
                                        }, _this.Plugin.Views.Transform.Updater)(this.LayoutRegion.Right), this.Plugin.Components.create("DensityControls1", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Updater(e, "2Fo-Fc", "Density : 2Fo-Fc")
                                        }, _this.Plugin.Views.Transform.Updater)(this.LayoutRegion.Right), this.Plugin.Components.create("DensityControls2", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Updater(e, "Fo-Fc(-ve)", "Density : Fo-Fc(-ve)")
                                        }, _this.Plugin.Views.Transform.Updater)(this.LayoutRegion.Right), this.Plugin.Components.create("DensityControls3", function(e) {
                                            return new _this.Bootstrap.Components.Transform.Updater(e, "Fo-Fc(+ve)", "Density : Fo-Fc(+ve)")
                                        }, _this.Plugin.Views.Transform.Updater)(this.LayoutRegion.Right), this.Plugin.Components.Context.Log(this.LayoutRegion.Bottom, !0), this.Plugin.Components.Context.Overlay(this.LayoutRegion.Root), this.Plugin.Components.Context.BackgroundTasks(this.LayoutRegion.Main, !0)],
                                        viewport: {
                                            view: this.Views.Visualization.Viewport,
                                            controlsView: this.Views.Visualization.ViewportControls
                                        },
                                        layoutView: this.Views.Layout,
                                        tree: void 0
                                    }
                            }
                            return e.prototype.applyTransforms = function(e) {
                                return this.Tree.Transform.apply(this.plugin.context, e).run(this.plugin.context)
                            }, e.prototype.selectNodes = function(e) {
                                return this.plugin.context.select(e)
                            }, e.prototype.cleanUp = function() {
                                this.Command.Tree.RemoveNode.dispatch(this.plugin.context, "sequence-selection")
                            }, e.prototype.createPlugin = function() {
                                _this = this, this.plugin = this.create(n[0]), this.Command.Layout.SetState.dispatch(this.plugin.context, {
                                    hideControls: r.hideControls,
                                    isExpanded: r.isExpanded
                                });
                                this.Event.Molecule.ModelSelect.getStream(this.plugin.context).subscribe(function(e) {
                                    var t = _this.getDispatchEventData(e);
                                    _this.dispatchCustomEvent("PDB.litemol.mouseover", t)
                                }), this.Event.Molecule.ModelHighlight.getStream(this.plugin.context).subscribe(function(e) {
                                    var t = _this.getDispatchEventData(e);
                                    _this.dispatchCustomEvent("PDB.litemol.mouseover", t)
                                });
                                this.Command.Visual.ResetScene.getStream(this.plugin.context).subscribe(function() {
                                    return _this.cleanUp()
                                }), this.Command.Visual.ResetTheme.getStream(this.plugin.context).subscribe(function() {
                                    return _this.cleanUp()
                                })
                            }, e.prototype.destroyPlugin = function() {
                                this.plugin.destroy(), this.plugin = void 0
                            }, e.prototype.showControls = function() {
                                return this.Command.Layout.SetState.dispatch(this.plugin.context, {
                                    hideControls: !1
                                })
                            }, e.prototype.hideControls = function() {
                                return this.Command.Layout.SetState.dispatch(this.plugin.context, {
                                    hideControls: !0
                                })
                            }, e.prototype.expand = function() {
                                return this.Command.Layout.SetState.dispatch(this.plugin.context, {
                                    isExpanded: !0
                                })
                            }, e.prototype.setBackground = function() {
                                return this.Command.Layout.SetViewportOptions.dispatch(this.plugin.context, {
                                    clearColor: this.CoreVis.Color.fromRgb(255, 255, 255)
                                })
                            }, e.prototype.loadMolecule = function() {
                                var e = this.moleculeId.toLowerCase(),
                                    t = "http://www.ebi.ac.uk/pdbe/static/entry/" + e + "_updated.cif";
                                "undefined" != typeof r.customQuery && (t = "//www.ebi.ac.uk/pdbe/coordinates/" + e + "/" + r.customQuery);
                                var n = this.Transform.build().add(this.plugin.context.tree.root, this.Transformer.Data.Download, {
                                    url: t,
                                    type: "String",
                                    id: e
                                }).then(this.Transformer.Data.ParseCif, {
                                    id: e
                                }, {
                                    isBinding: !0
                                }).then(this.Transformer.Molecule.CreateFromCif, {
                                    blockIndex: 0
                                }, {
                                    isBinding: !0
                                }).then(this.Transformer.Molecule.CreateModel, {
                                    modelIndex: 0
                                }, {
                                    isBinding: !1,
                                    ref: "model"
                                });
                                r.treeMenu ? n.then(this.Transformer.Molecule.CreateMacromoleculeVisual, {
                                    polymer: !0,
                                    polymerRef: "polymer-visual",
                                    het: !0,
                                    water: !0
                                }) : n.then(o.Custom.CreateRepresentation, {}), this.applyTransforms(n)
                            }, e.prototype.loadDensity = function(e) {
                                var t = this.moleculeId.toLowerCase();
                                1 != e && (e = !1);
                                var r = this.Transform.build().add(this.plugin.context.tree.root, o.PDBe.Data.DownloadDensity, {
                                    id: t,
                                    isWireframe: e
                                }, {
                                    ref: "density"
                                });
                                this.applyTransforms(r)
                            }, e.prototype.toggleDensity = function() {
                                var e = this.selectNodes("density")[0];
                                e && this.Command.Entity.SetVisibility.dispatch(this.plugin.context, {
                                    entity: e,
                                    visible: 2 === e.state.visibility
                                })
                            }, e.prototype.createSelectionTheme = function(e) {
                                var t = new Map;
                                return t.set("Uniform", this.CoreVis.Color.fromHex(16777215)), t.set("Selection", e), t.set("Highlight", this.CoreVis.Theme.Default.HighlightColor), this.Visualization.Molecule.uniformThemeProvider(void 0, {
                                    colors: t
                                })
                            }, e.prototype.SelectExtractFocus = function(e, t, r) {
                                _this = this;
                                var n = this.selectNodes("polymer-visual")[0];
                                if (n) {
                                    this.resetThemeSelHighlight();
                                    var i = this.Query.sequence(e.entity_id.toString(), e.struct_asym_id.toString(), {
                                            seqNumber: e.start_residue_number
                                        }, {
                                            seqNumber: e.end_residue_number
                                        }),
                                        o = this.createSelectionTheme(this.CoreVis.Color.fromRgb(t.r, t.g, t.b)),
                                        a = this.Transform.build().add(n, this.Transformer.Molecule.CreateSelectionFromQuery, {
                                            query: i,
                                            name: "My name"
                                        }, {
                                            ref: "sequence-selection"
                                        });
                                    "undefined" != typeof r && 1 == r && a.then(this.Transformer.Molecule.CreateVisual, {
                                        style: this.Visualization.Molecule.Default.ForType.get("BallsAndSticks")
                                    }), this.applyTransforms(a).then(function() {
                                        _this.Command.Visual.UpdateBasicTheme.dispatch(_this.plugin.context, {
                                            visual: n,
                                            theme: o
                                        }), _this.Command.Entity.Focus.dispatch(_this.plugin.context, _this.selectNodes("sequence-selection"))
                                    })
                                }
                            }, e.prototype.highlightOn = function(e) {
                                var t = this.selectNodes("model")[0];
                                if (t) {
                                    "undefined" != typeof this.currentHighLightedDetails && this.Command.Molecule.Highlight.dispatch(this.plugin.context, this.currentHighLightedDetails.prevQuery);
                                    var r = this.Query.sequence(e.entity_id.toString(), e.struct_asym_id.toString(), {
                                        seqNumber: e.start_residue_number
                                    }, {
                                        seqNumber: e.end_residue_number
                                    });
                                    this.Command.Molecule.Highlight.dispatch(this.plugin.context, {
                                        model: t,
                                        query: r,
                                        isOn: !0
                                    }), this.currentHighLightedDetails = {
                                        prevQueryData: e,
                                        prevQuery: {
                                            model: t,
                                            query: r,
                                            isOn: !1
                                        }
                                    }
                                }
                            }, e.prototype.highlightOff = function() {
                                "undefined" != typeof this.currentHighLightedDetails && this.Command.Molecule.Highlight.dispatch(this.plugin.context, this.currentHighLightedDetails.prevQuery)
                            }, e.prototype.resetThemeSelHighlight = function() {
                                this.Command.Visual.ResetTheme.dispatch(this.plugin.context, void 0), this.cleanUp()
                            }, e.prototype.create = function(e) {
                                "undefined" != typeof r.showLogs && "true" == r.showLogs && this.spec.components.push(this.Plugin.Components.Context.Log(this.LayoutRegion.Bottom, !0));
                                var t = this.CustomMenuSpec;
                                if (r.treeMenu) var t = this.spec;
                                var n = new this.Plugin.Instance(t, e);
                                return n.context.logger.message("LiteMol Viewer " + this.Plugin.VERSION.number), n
                            }, e.prototype.getDispatchEventData = function(e) {
                                var t = {},
                                    r = e.data;
                                return r && r.residues && (t.residuesName = r.residues[0].authName, t.chainId = r.chains[0].authAsymId, t.residueNumber = r.residues[0].seqNumber, t.entityId = r.chains[0].entity.entityId, t.entryId = r.moleculeId), t
                            }, e.prototype.dispatchCustomEvent = function(e, t, i) {
                                var o = n[0];
                                "undefined" != typeof i && (o = i), "undefined" != typeof t && (r.pdbevents[e].eventData = t), o.dispatchEvent(r.pdbevents[e])
                            }, e
                        }(),
                        u = function() {
                            r.LiteMolComponent.createPlugin(), r.LiteMolComponent.loadMolecule(), "undefined" != typeof r.loadEdMaps && "true" === r.loadEdMaps && setTimeout(function() {
                                r.LiteMolComponent.loadDensity(!1)
                            }, 100)
                        };
                    if (r.LiteMolComponent = new s, "undefined" != typeof r.customRender || "undefined" == typeof r.pdbId ? r.LiteMolComponent.createPlugin() : u(), r.$watch("pdbId", function(e, t) {
                            "undefined" != typeof r.pdbId && e !== t && (r.LiteMolComponent.destroyPlugin(), u())
                        }), "true" == r.subscribeEvents) {
                        t.on("PDB.topologyViewer.click", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != r.pdbId) return;
                                var t = {
                                    entity_id: e.eventData.entityId,
                                    struct_asym_id: e.eventData.structAsymId,
                                    start_residue_number: e.eventData.residueNumber,
                                    end_residue_number: e.eventData.residueNumber
                                };
                                r.LiteMolComponent.SelectExtractFocus(t, {
                                    r: 0,
                                    g: 81,
                                    b: 51
                                }, !1)
                            }
                        });
                        var l = ["uniprot", "pfam", "cath", "scop", "strand", "helice"],
                            c = ["chain", "quality", "quality_outlier", "binding site", "alternate conformer"];
                        t.on("PDB.seqViewer.click", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != r.pdbId || "unipdbViewer" == e.eventData.viewerType) return;
                                if ("undefined" != typeof e.eventData.elementData && c.indexOf(e.eventData.elementData[0].elementType) > -1) {
                                    var t = {
                                        entity_id: e.eventData.entityId,
                                        struct_asym_id: e.eventData.elementData[0].pathData.struct_asym_id,
                                        start_residue_number: e.eventData.residueNumber,
                                        end_residue_number: e.eventData.residueNumber
                                    };
                                    r.LiteMolComponent.SelectExtractFocus(t, {
                                        r: 0,
                                        g: 81,
                                        b: 51
                                    }, !1)
                                } else if ("undefined" != typeof e.eventData.elementData && l.indexOf(e.eventData.elementData[0].elementType) > -1) {
                                    var n = e.eventData.elementData[0].color,
                                        t = {
                                            entity_id: e.eventData.entityId,
                                            struct_asym_id: e.eventData.elementData[0].pathData.struct_asym_id,
                                            start_residue_number: e.eventData.elementData[0].pathData.start.residue_number,
                                            end_residue_number: e.eventData.elementData[0].pathData.end.residue_number
                                        };
                                    r.LiteMolComponent.SelectExtractFocus(t, {
                                        r: n[0],
                                        g: n[1],
                                        b: n[2]
                                    }, !1)
                                }
                            }
                        }), t.on("PDB.seqViewer.mouseover", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != r.pdbId || "unipdbViewer" == e.eventData.viewerType) return;
                                if ("undefined" != typeof e.eventData.elementData && c.indexOf(e.eventData.elementData[0].elementType) > -1) {
                                    var t = {
                                        entity_id: e.eventData.entityId,
                                        struct_asym_id: e.eventData.elementData[0].pathData.struct_asym_id,
                                        start_residue_number: e.eventData.residueNumber,
                                        end_residue_number: e.eventData.residueNumber
                                    };
                                    r.LiteMolComponent.highlightOn(t)
                                } else if ("undefined" != typeof e.eventData.elementData && l.indexOf(e.eventData.elementData[0].elementType) > -1) {
                                    var t = (e.eventData.elementData[0].pathData.start.residue_number, e.eventData.elementData[0].pathData.end.residue_number, {
                                        entity_id: e.eventData.entityId,
                                        struct_asym_id: e.eventData.elementData[0].pathData.struct_asym_id,
                                        start_residue_number: e.eventData.elementData[0].pathData.start.residue_number,
                                        end_residue_number: e.eventData.elementData[0].pathData.end.residue_number
                                    });
                                    r.LiteMolComponent.highlightOn(t)
                                }
                            }
                        }), t.on("PDB.seqViewer.mouseout", function(e) {
                            r.LiteMolComponent.highlightOff()
                        }), t.on("PDB.topologyViewer.mouseover", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != r.pdbId) return;
                                var t = {
                                    entity_id: e.eventData.entityId,
                                    struct_asym_id: e.eventData.structAsymId,
                                    start_residue_number: e.eventData.residueNumber,
                                    end_residue_number: e.eventData.residueNumber
                                };
                                r.LiteMolComponent.highlightOn(t)
                            }
                        }), t.on("PDB.topologyViewer.mouseout", function(e) {
                            r.LiteMolComponent.highlightOff()
                        })
                    }
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.3dComplex", ["pdb.3dComplex.services", "pdb.common.services"]).directive("pdb3dComplex", ["$sce", "pdb3dComplexService", "commonServices", function(e, t, r) {
            return {
                restrict: "EAC",
                scope: {
                    pdbId: "@",
                    assemblyId: "@"
                },
                templateUrl: "template/pdb3dComplex/pdb3dComplex.html",
                link: function(n, i, o) {
                    if (n.showWrapper = !0, n.showLoader = !0, n.pdbevents = r.createNewEvent(["PDB.pdb3dComplex.loaded", "PDB.pdb3dComplex.failed"]), n.dispatchEvent = function(e, t, r) {
                            var o = i[0];
                            "undefined" != typeof r && (o = r), "undefined" != typeof t && (n.pdbevents[e].eventData = t), o.dispatchEvent(n.pdbevents[e])
                        }, "undefined" == typeof n.pdbId || "" === n.pdbId || 4 !== n.pdbId.length) return n.errorMsg = "Invalid PDB ID!", n.showWrapper = !1, void n.dispatchEvent("PDB.pdb3dComplex.failed", {
                        pdbId: n.pdbId,
                        error: n.errorMsg
                    });
                    if ("undefined" == typeof n.assemblyId || "" === n.assemblyId) return n.errorMsg = "Invalid Assembly ID!", n.showWrapper = !1, void n.dispatchEvent("PDB.pdb3dComplex.failed", {
                        pdbId: n.pdbId,
                        error: n.errorMsg
                    });
                    n.addLinks = function(t) {
                        var r = t.pred_note2,
                            n = t.href_PISA,
                            i = t.href_EPPIC;
                        return r = r.replace(/PISA/g, ' <a href="' + n + '" target="_blank">PISA</a> '), r = r.replace(/EPPIC/g, ' <a href="' + i + '" target="_blank">EPPIC</a> '), e.trustAsHtml(r)
                    }, n.showTooltip = function(e) {
                        e.pageX, e.pageY;
                        n.tooltipStyle = {
                            display: "block",
                            top: "95px",
                            left: "8px",
                            position: "absolute"
                        }
                    }, n.hideTooltip = function() {
                        n.tooltipStyle = {
                            display: "none"
                        }
                    }, n.parseFloat = function(e) {
                        return parseFloat(e)
                    };
                    var a = function(e) {
                        var t = n.pdbId + "_" + n.assemblyId;
                        return "undefined" == typeof e[t] ? (n.errorMsg = "Record not found!", n.showWrapper = !1, void n.dispatchEvent("PDB.pdb3dComplex.failed", {
                            pdbId: n.pdbId,
                            error: n.errorMsg
                        })) : (n.dispatchEvent("PDB.pdb3dComplex.loaded", {
                            pdbId: n.pdbId
                        }), n.resultData = {}, n.resultData[t] = e[t], void(n.showLoader = !1))
                    };
                    t.getApiData(n.pdbId).then(function(e) {
                        a(e[n.pdbId])
                    }, function(e) {
                        n.showWrapper = !1, window.console && console.log("API request failed. Error: " + e), n.errorMsg = "API request failed. Error: " + e, n.showLoader = !1, n.showWrapper = !1, n.dispatchEvent("PDB.pdb3dComplex.failed", {
                            pdbId: n.pdbId,
                            error: n.errorMsg
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.3dComplex.services", []).service("pdb3dComplexService", ["$http", "$q", function(e, t) {
            this.getApiData = function(r) {
                var n = "http://shmoo.weizmann.ac.il/elevy/3dcomplexV5/dataV5/json_v3/" + r + ".json",
                    i = t.defer();
                return e.get(n).then(function(e) {
                    i.resolve(e.data)
                }, function(e) {
                    i.reject("fail response")
                }), i.promise
            }
        }])
    }(), angular.module("template/pdb3dComplex/pdb3dComplex.html", []).run(["$templateCache", function(e) {
        e.put("template/pdb3dComplex/pdb3dComplex.html", '<div class="pcl-3dcomplex-wrapper" ng-show="showWrapper"><div class="pcl-3dcomplex-loader" ng-show="showLoader"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/loading.gif" border="0"></div><div class="pcl-3dcomplex-result" ng-repeat="(pdbId, pdbIdDetails) in resultData"><div class="pcl-3dcomplex-row" style="text-align:center;width:100%;"><span class="pcl-3dcomplex-subheading">&nbsp;&nbsp;&nbsp;&nbsp;Assembly {{pdbId.split("_")[1]}}</span><div class="pcl-3dcomplex-row pcl-3dcomplex-logo" ng-init="confInt = parseFloat(pdbIdDetails[\'pred_conf\'])"><div ng-if="confInt < 75"><span class="pcl-3dcomplex-circle pcl-3dcomplex-red">&nbsp;</span></div><div ng-if="confInt >= 75 && confInt < 90"><span class="pcl-3dcomplex-circle pcl-3dcomplex-yellow">&nbsp;</span></div><div ng-if="confInt >= 90"><span class="pcl-3dcomplex-circle pcl-3dcomplex-green">&nbsp;</span></div></div></div><div class="pcl-3dComplex-left-section" style="float:left;width:65%"><div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-label">Confidence : </span> {{pdbIdDetails["pred_conf"]}}</div><div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-label">No. subunits : </span> {{pdbIdDetails["pdb_nsub"]}}</div><div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-label">Symmetry : </span> {{pdbIdDetails["pdb_sym"]}}</div></div><div class="pcl-3dComplex-right-section" style="width:35%;float:right;"><div class="pcl-3dcomplex-row" style="text-align:center;line-height:0px;"><img ng-src="{{pdbIdDetails[\'pdb_image\']}}" style="height: 45px;" /></div><div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-link"><a href="javascript:void(0)" ng-click="showTooltip($event);">More details</a></span></div></div><!-- Tooltip Section Start Here --><div class="pcl-3dcomplex-tooltip"  ng-style="tooltipStyle"><div class="pcl-3dcomplex-row" style="text-align:center;"><span class="pcl-3dcomplex-subheading">3DComplex & QSbio prediction</span><a href="javascript:void(0)" ng-click="hideTooltip()" class="pcl-3dcomplex-close" title="Close Popup">x</a></div><div class="pcl-3dComplex-left-section" style="float:left;width:65%;margin-bottom:2px;"><!--<div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-label">Confidence : </span> {{pdbIdDetails["pred_conf"]}}</div>--><div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-label">No. subunits : </span> {{pdbIdDetails["pred_nsub"]}}</div><div class="pcl-3dcomplex-row"><span class="pcl-3dcomplex-label">Symmetry : </span> {{pdbIdDetails["pred_sym"]}}</div></div><div class="pcl-3dComplex-right-section" style="width:35%;float:right;"><div class="pcl-3dcomplex-row" style="text-align:center;line-height:0px;"><img ng-src="{{pdbIdDetails[\'pred_image\']}}" style="height:45px;" /></div></div><div class="pcl-3dcomplex-row" style="clear:left;line-height:18px;margin-top:2px" ng-if="(pdbIdDetails[\'pred_note1\'] != \'\' && pdbIdDetails[\'pred_note1\'] != null)"><span class="pcl-3dcomplex-label">Evidence : </span> <a href="{{pdbIdDetails[\'href_QSbio\']}}" target="_blank">{{pdbIdDetails["pred_note1"]}}</a></div><div class="pcl-3dcomplex-row" style="clear:left;line-height:18px;" ng-if="((pdbIdDetails[\'pred_note1\'] == \'\' || pdbIdDetails[\'pred_note1\'] == null) && pdbIdDetails[\'pred_note2\'] != \'\' && pdbIdDetails[\'pred_note2\'] != null)"><span class="pcl-3dcomplex-label">Evidence : </span> <span ng-bind-html="addLinks(pdbIdDetails)"></span></div></div><!-- Tooltip Section End Here --></div></div><div ng-hide="showWrapper">{{errorMsg}}</div>')
    }]),
    function() {
        "use strict";
        angular.module("pdb.links", []).directive("pdbLinks", [function() {
            return {
                restrict: "EAC",
                scope: {
                    pdbId: "@"
                },
                link: function(e, t, r) {
                    var n = document.querySelector(".pcl-pdblinks-wrapper");
                    null == n && (angular.element(document.querySelector("body")).append('<div class="pcl-pdblinks-wrapper"></div>'), n = document.querySelector(".pcl-pdblinks-wrapper"));
                    var i = angular.element(n),
                        o = '<img onclick="angular.element(this).parent().css(\'display\',\'none\');" class="pcl-pdblinks-cross-icon-abs" src="http://journals.iucr.org/logos/buttonlogos/cross.png"><a class="pcl-pdblinks-logo-text-a" style="margin-top:5px" target="_blank" href="http://www.ebi.ac.uk/pdbe/entry/pdb/' + e.pdbId + '"><img class="pcl-pdblinks-logo-img" src="http://journals.iucr.org/logos/organizations/PDBe-logo.png">&nbsp;&nbsp;PDBe</a><br><a class="pcl-pdblinks-logo-text-a" target="_blank" href="http://pdbj.org/mine/summary/' + e.pdbId + '"><img class="pcl-pdblinks-logo-img" src="http://journals.iucr.org/logos/organizations/PDBj-logo.png">&nbsp;&nbsp;PDBj</a><br><a class="pcl-pdblinks-logo-text-a" target="_blank" href="http://www.rcsb.org/pdb/explore.do?structureId=' + e.pdbId + '"><img style="height:32px;vertical-align:middle;" src="http://journals.iucr.org/logos/organizations/RCSB-PDB-logo.png">&nbsp;&nbsp;RCSB</a>',
                        a = function(e) {
                            i.html(o);
                            var t = e.pageX,
                                r = e.pageY;
                            i.css("display", "block"), i.css("top", r + 5 + "px"), i.css("left", t + "px")
                        };
                    t.bind("click", a)
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.redo", ["pdb.redo.services", "pdb.common.services"]).directive("pdbRedo", ["pdbRedoService", "commonServices", function(e, t) {
            return {
                restrict: "EAC",
                scope: {
                    pdbId: "@",
                    headingText: "@",
                    errorText: "@",
                    subheadingText: "@"
                },
                templateUrl: "template/pdbRedo/pdbRedo.html",
                link: function(r, n, i) {
                    if (r.showWrapper = !0, r.showGeometry = !0, r.showModelFit = !0, r.showLoader = !0, r.pdbevents = t.createNewEvent(["PDB.pdbRedo.api.loaded", "PDB.pdbRedo.loaded", "PDB.pdbRedo.failed"]), "undefined" == typeof r.pdbId || "" === r.pdbId || 4 !== r.pdbId.length) return r.errorMsg = "Invalid PDB ID!", void r.dispatchEvent("PDB.pdbRedo.failed", {
                        pdbId: r.pdbId,
                        error: r.errorMsg
                    });
                    ("undefined" == typeof r.headingText || "" === r.headingText) && (r.headingText = "PDB_REDO model quality changes"), "undefined" != typeof r.errorText && (r.errorMsg = r.errorText), r.styles = {
                        geometryFrame: {},
                        modelFitFrame: {}
                    }, r.frameWidth = n[0].querySelector(".pcl-pdbRedo-position-frame").offsetWidth;
                    var o = function(e) {
                        var t = !1,
                            i = !1;
                        if (r.frameWidth = n[0].querySelector(".pcl-pdbRedo-position-frame").offsetWidth, "undefined" != typeof e && "undefined" != typeof e.geometry && null !== e.geometry)
                            for (var o = e.geometry["range-upper"] - e.geometry["range-lower"], a = o / 5, s = 1, u = 0; 5 > u; u++) {
                                if (e.geometry.dzscore > e.geometry["range-upper"] - a * s) {
                                    r.styles.geometryFrame = {
                                        right: r.frameWidth * u + "px"
                                    };
                                    break
                                }
                                s++
                            } else t = !0;
                        if ("undefined" != typeof e && "undefined" != typeof e.ddatafit && null !== e.ddatafit) {
                            var l = e.ddatafit["range-upper"] - e.ddatafit["range-lower"],
                                c = l / 5;
                            s = 1;
                            for (var u = 0; 5 > u; u++) {
                                if (e.ddatafit.zdfree > e.ddatafit["range-upper"] - c * s) {
                                    r.styles.modelFitFrame = {
                                        right: r.frameWidth * u + "px"
                                    };
                                    break
                                }
                                s++
                            }
                        } else i = !0;
                        t === !0 && i === !0 ? r.showWrapper = !1 : t === !0 ? (r.showWrapper = !0, r.showGeometry = !1) : i === !0 ? (r.showWrapper = !0, r.showModelFit = !1) : r.showWrapper = !0, r.showLoader = !1, r.$apply()
                    };
                    r.dispatchEvent = function(e, t, i) {
                        var o = n[0];
                        "undefined" != typeof i && (o = i), "undefined" != typeof t && (r.pdbevents[e].eventData = t), o.dispatchEvent(r.pdbevents[e])
                    };
                    e.getApiData(r.pdbId).then(function(e) {
                        r.dispatchEvent("PDB.pdbRedo.api.loaded", {
                            pdbId: r.pdbId
                        }), setTimeout(function() {
                            o(e), 1 == r.showWrapper ? r.dispatchEvent("PDB.pdbRedo.loaded", {
                                pdbId: r.pdbId
                            }) : ("undefined" != typeof r.errorText ? r.errorMsg = r.errorText : r.errorMsg = "Error: Data not Available!", r.dispatchEvent("PDB.pdbRedo.failed", {
                                pdbId: r.pdbId,
                                error: r.errorMsg
                            }))
                        }, 100)
                    }, function(e) {
                        r.showWrapper = !1, window.console && console.log("API request failed. Error: " + e), "undefined" != typeof r.errorText ? r.errorMsg = r.errorText : r.errorMsg = "Error: " + e, r.dispatchEvent("PDB.pdbRedo.failed", {
                            pdbId: r.pdbId,
                            error: r.errorMsg
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.redo.services", []).service("pdbRedoService", ["$http", "$q", function(e, t) {
            this.getApiData = function(r) {
                var n = "//www.cmbi.ru.nl/pdb_redo/cgi-bin/json.pl?id=" + r,
                    i = t.defer();
                return e.get(n).then(function(e) {
                    i.resolve(e.data)
                }, function(e) {
                    i.reject("fail response")
                }), i.promise
            }
        }])
    }(), angular.module("template/pdbRedo/pdbRedo.html", []).run(["$templateCache", function(e) {
        e.put("template/pdbRedo/pdbRedo.html", '<div class="pcl-pdbRedo-wrapper" ng-show="showWrapper"><div class="pcl-pdbRedo-loader" ng-show="showLoader"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/loading.gif" border="0"></div><div class="pcl-pdbRedo-heading">{{headingText}}</div><p>{{subheadingText}}</p><div class="pcl-pdbRedo-row"><div class="pcl-pdbRedo-label">Model Geometry</div><div class="pcl-pdbRedo-gradient" ng-show="showGeometry">&nbsp;</div><div class="pcl-pdbRedo-position-frame" ng-style="styles.geometryFrame" ng-show="showGeometry">&nbsp;</div><div class="pcl-pdbRedo-error" ng-hide="showGeometry">Data not available</div></div><div class="pcl-pdbRedo-row"><div class="pcl-pdbRedo-label">Fit model/data</div><div class="pcl-pdbRedo-gradient" ng-show="showModelFit">&nbsp;</div><div class="pcl-pdbRedo-position-frame" ng-style="styles.modelFitFrame" ng-show="showModelFit">&nbsp;</div><div class="pcl-pdbRedo-error" ng-hide="showModelFit">Data not available</div></div><div class="pcl-pdbRedo-link-row"><a target="_blank" href="http://www.cmbi.ru.nl/pdb_redo/cgi-bin/redir2.pl?pdbCode={{pdbId}}">PDB_REDO</a></div></div><div ng-hide="showWrapper">{{errorMsg}}</div>')
    }]),
    function() {
        "use strict";
        angular.module("pdb.prints", ["pdb.prints.filters", "pdb.prints.services"]).directive("pdbPrints", ["printsService", "$compile", "$filter", function(e, t, r) {
            return {
                restrict: "EAC",
                scope: {
                    pdbIds: "=",
                    settings: "@"
                },
                link: function(n, i, o) {
                    n.config = {
                        picstype: "jslogos",
                        orientation: "horizontal",
                        size: 36,
                        color: "embl_green",
                        targetWindow: "_self",
                        domainUrl: "//www.ebi.ac.uk/pdbe",
                        hideLogo: []
                    }, "undefined" != typeof n.settings && n.settings && angular.extend(n.config, JSON.parse(n.settings));
                    for (var a = [], s = 20, u = n.pdbIds.slice(); u.length > 0;) a.push(u.splice(0, s));
                    angular.forEach(a, function(o, a) {
                        var s = angular.element(document.getElementsByClassName("pdbprints_" + o[0]));
                        s.length && s.html("PDBprints loading....");
                        e.getPrintsData(o).then(function(e) {
                            angular.isUndefined(e.responseHeader.error) ? !angular.isUndefined(e.grouped.pdb_id.groups) && e.grouped.pdb_id.groups && angular.forEach(e.grouped.pdb_id.groups, function(e, o) {
                                var a = r("printsDataModelFilter")(e, n.config),
                                    s = "<pdb-logos logo-data='" + JSON.stringify(a) + '\' config-data="config" click-action="' + n.clickAction + '"></pdb-logos>',
                                    u = t(s)(n),
                                    l = angular.element(i[0].querySelector(".pdbprints_" + a.PDBeLogo[0]));
                                l.length ? l.html("").append(u) : i.append(u)
                            }) : window.console && console.log("Error data in API response. Error: " + e.responseHeader.error)
                        }, function(e) {
                            window.console && console.log("API request failed. Error: " + e)
                        })
                    })
                }
            }
        }]).directive("pdbLogos", ["printsService", "$filter", function(e, t) {
            return {
                restrict: "EA",
                scope: {
                    logoData1: "@logoData",
                    config: "=configData"
                },
                templateUrl: "template/prints/pdbLogos.html",
                link: function(e, t, r) {
                    e.logoData = JSON.parse(e.logoData1), e.categories = ["PrimaryCitation", "Taxonomy", "Expressed", "Experimental", "Protein", "NucleicAcid", "Ligands"], e.categoryUrl = ["/citations", "/analysis", "/analysis", "/experiment", "/analysis", "/analysis", "/ligands"]
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.prints.filters", []).filter("printsDataModelFilter", function() {
            return function(e, t) {
                var r = "",
                    n = {
                        PDBeLogo: [],
                        PrimaryCitation: [],
                        Protein: [],
                        Ligands: [],
                        NucleicAcid: [],
                        Expressed: [],
                        Experimental: [],
                        Taxonomy: []
                    },
                    i = !1,
                    o = "",
                    a = !1,
                    s = "",
                    u = !1;
                if (angular.forEach(e.doclist.docs, function(t, l) {
                        if (r = t.pdb_id, n.PDBeLogo[0] = r, !angular.isUndefined(t.citation_year) && t.citation_year ? n.PrimaryCitation[0] = "published" : n.PrimaryCitation[0] = "unpublished", !angular.isUndefined(t.number_of_protein_chains) && t.number_of_protein_chains ? n.Protein[0] = "present" : n.Protein[0] = "absent", !angular.isUndefined(t.number_of_bound_entities) && t.number_of_bound_entities ? n.Ligands[0] = "present" : n.Ligands[0] = "absent", !angular.isUndefined(t.number_of_RNA_chains) && t.number_of_RNA_chains || !angular.isUndefined(t.number_of_DNA_chains) && t.number_of_DNA_chains ? n.NucleicAcid[0] = "present" : n.NucleicAcid[0] = "absent", !angular.isUndefined(t.sample_preparation_method) && t.sample_preparation_method) switch ("" === o && (o = t.sample_preparation_method), t.sample_preparation_method !== o && (i = !0), t.sample_preparation_method) {
                            case "Engineered":
                                n.Expressed[0] = "expressed";
                                break;
                            case "Synthetic":
                                n.Expressed[0] = "synthetic";
                                break;
                            case "Natural":
                                n.Expressed[0] = "purified";
                                break;
                            default:
                                n.Expressed[0] = "other"
                        } else {
                            var c = "",
                                h = new RegExp("Synthetic construct", "i");
                            !angular.isUndefined(t.entry_organism_scientific_name) && h.test(t.entry_organism_scientific_name) ? n.Expressed[0] = c = "synthetic" : n.Expressed[0] = "CGIlogoUnknown", n.Expressed[0] !== o && (i = !0, c = "other"), "" === o && (o = c), e.doclist.docs.length > 1 && n.Expressed[1] !== o && (i = !0)
                        }!angular.isUndefined(t.experimental_method) && t.experimental_method ? 1 === t.experimental_method.length ? "x-ray diffraction" === t.experimental_method[0].toLowerCase() ? (n.Experimental[0] = "xray", "y" !== t.experiment_data_available && (n.Experimental[0] = "xrayNoData")) : "solution nmr" === t.experimental_method[0].toLowerCase() || "solid-state nmr" === t.experimental_method[0].toLowerCase() ? (n.Experimental[0] = "nmr", "y" !== t.experiment_data_available && (n.Experimental[0] = "nmrNoData")) : "electron microscopy" === t.experimental_method[0].toLowerCase() ? (n.Experimental[0] = "em", "y" === t.experiment_data_available || t.emdb_id || (n.Experimental[0] = "emNoData")) : n.Experimental[0] = "other" : (n.Experimental[0] = "hybrid", "y" !== t.experiment_data_available && (n.Experimental[0] = "hybridNoData")) : n.Experimental[0] = "CGIlogoUnknown";
                        var p = {
                                Dinophyceae: "algae",
                                Embryophyta: "plant",
                                Streptophyta: "plant",
                                "Saccharomyces cerevisiae": "yeast",
                                Saccharomyces: "yeast",
                                Drosophila: "fly",
                                "Gallus gallus": "chicken",
                                "Homo sapiens": "human",
                                "Sus scrofa": "pig",
                                "Bos taurus": "cow",
                                "Mus musculus": "mouse",
                                Rattus: "rat",
                                Rat: "rat",
                                Mammalia: "mammal",
                                Fungi: "fungi",
                                Ascomycota: "fungi",
                                Viruses: "virus",
                                Bacteria: "bacteria",
                                Archaea: "archaea",
                                Eukaryota: "eukaryote"
                            },
                            d = function(e) {
                                var t = [];
                                return angular.forEach(e, function(e, r) {
                                    var n = e.toLowerCase().split("|")[0]; - 1 == t.indexOf(n) && t.push(r)
                                }), t.length > 1 ? !1 : !0
                            };
                        if (!angular.isUndefined(t.entry_organism_scientific_name) && t.entry_organism_scientific_name) {
                            if (s = t.entry_organism_scientific_name, t.entry_organism_scientific_name.length > 1) {
                                var f = d(t.entry_organism_scientific_name);
                                if (0 == f) a = !0;
                                else {
                                    var m = t.entry_organism_scientific_name[0].split("|")[0];
                                    m in p && (n.Taxonomy[0] = p[m])
                                }
                            } else {
                                var m = t.entry_organism_scientific_name[0].split("|")[0];
                                m in p && (n.Taxonomy[0] = p[m])
                            }
                            var h = new RegExp("Synthetic construct", "i");
                            h.test(t.entry_organism_scientific_name) && (n.Taxonomy[0] = "artificial")
                        }
                        if (!n.Taxonomy[0] && !angular.isUndefined(typeof t.organism_synonyms) && t.organism_synonyms) {
                            u = !0;
                            for (var v = t.organism_synonyms.length, g = 0; v > g; g++)
                                if (t.organism_synonyms[g] in p) {
                                    n.Taxonomy[0] = p[t.organism_synonyms[g]];
                                    break
                                }
                            n.Taxonomy[0] || (n.Taxonomy[0] = "other")
                        }
                    }), i && (n.Expressed[0] = "multiple"), "synthetic" === n.Expressed[1]) {
                    var l = new RegExp("Synthetic construct", "i");
                    ("" === s || l.test(s)) && (n.Taxonomy[0] = "artificial", u && (n.Taxonomy[0] = "other"))
                }
                return a && (n.Taxonomy[0] = "multiple"), n
            }
        }).filter("tooltipFilter", function() {
            return function(e) {
                var t = "";
                switch (e[0]) {
                    case "pdbeLogo":
                        t = "For more information about key features of this entry, click on the individual icons.";
                        break;
                    case "PrimaryCitation":
                        switch (e[1]) {
                            case "published":
                                t = "A paper describing this entry has been published.";
                                break;
                            case "unpublished":
                                t = "The PDB does not have any information about a published paper describing this entry.";
                                break;
                            case "CGIlogoUnknown":
                                t = "This icon conveys information about whether or not a paper describing this entry has been published."
                        }
                        break;
                    case "Taxonomy":
                        switch (e[1]) {
                            case "artificial":
                                t = "The biomacromolecules in this entry were artificially designed.";
                                break;
                            case "other":
                                t = "Information about the source organism of the biomacromolecules in this entry can be obtained by clicking on the icon.";
                                break;
                            case "multiple":
                                t = "The biomacromolecules in this entry derive from multiple organisms.";
                                break;
                            case "fly":
                                t = "The source organism of the biomacromolecules in this entry is fruit-fly.";
                                break;
                            case "CGIlogoUnknown":
                                t = "This icon conveys information about the source organism of the biomacromolecules in this entry.";
                                break;
                            default:
                                t = "The source organism of the biomacromolecules in this entry is " + e[1] + "."
                        }
                        break;
                    case "Expressed":
                        switch (e[1]) {
                            case "expressed":
                                t = "The sample of the biomacromolecules in this entry was obtained by expression and purification.";
                                break;
                            case "synthetic":
                                t = "The sample of the biomacromolecules in this entry was obtained by chemical synthesis.";
                                break;
                            case "purified":
                                t = "The sample of the biomacromolecules in this entry was extracted and purified from a biological source.";
                                break;
                            case "multiple":
                                t = "The sample of the biomacromolecules in this entry was obtained using multiple techniques.";
                                break;
                            case "other":
                                t = "The sample of the biomacromolecules in this entry was obtained using techniques other than expression, chemical synthesis or extraction from a biological source.";
                                break;
                            case "CGIlogoUnknown":
                                t = "This icon conveys information about the production techniques used to obtain the biomacromolecular samples for this entry."
                        }
                        break;
                    case "Experimental":
                        switch (e[1]) {
                            case "xray":
                                t = "The structure was determined using X-ray crystallography and experimental data is available.";
                                break;
                            case "nmr":
                                t = "The structure was determined using NMR spectroscopy and experimental data is available.";
                                break;
                            case "em":
                                t = "The structure was determined using Electron Microscopy and experimental data is available.";
                                break;
                            case "multiple":
                                t = "The structure was determined using Electron Crystallography and experimental data is available.";
                                break;
                            case "extal":
                                t = "The sample of the biomacromolecules in this entry was obtained using techniques other than expression, chemical synthesis or extraction from a biological source.";
                                break;
                            case "hybrid":
                                t = "The structure was determined using a hybrid technique and experimental data is available.";
                                break;
                            case "other":
                                t = "The structure was determined using a technique other than X-ray, NMR, EM, or a hybrid thereof and experimental data is available.";
                                break;
                            case "xrayNoData":
                                t = "The structure was determined using X-ray crystallography (no experimental data available).";
                                break;
                            case "nmrNoData":
                                t = "The structure was determined using NMR spectroscopy (no experimental data available).";
                                break;
                            case "emNoData":
                                t = "The structure was determined using Electron Microscopy (no experimental data available).";
                                break;
                            case "extalNoData":
                                this.title = "The structure was determined using Electron Crystallography (no experimental data available).";
                                break;
                            case "hybridNoData":
                                t = "The structure was determined using a hybrid technique (no experimental data available).";
                                break;
                            case "otherNoData":
                                t = "The structure was determined using a technique other than X-ray, NMR, EM, or a hybrid thereof (no experimental data available).";
                                break;
                            case "extalNoData":
                                t = "This icon conveys information about the structure-determination technique for this entry."
                        }
                        break;
                    case "Protein":
                        switch (e[1]) {
                            case "present":
                                t = "This entry contains protein.";
                                break;
                            case "absent":
                                t = "This entry does not contain protein.", "EMD" === e[2].substring(0, 3) && (this.title = "Presence of protein is not annotated for this EMDB entry.");
                                break;
                            case "CGIlogoUnknown":
                                t = "This icon conveys information about the presence of protein in the entry."
                        }
                        break;
                    case "NucleicAcid":
                        switch (e[1]) {
                            case "present":
                                t = "This entry contains nucleic acid (DNA, RNA).";
                                break;
                            case "absent":
                                t = "This entry does not contain nucleic acid (DNA, RNA).", "EMD" === e[2].substring(0, 3) && (t = "Presence of DNA or RNA is not annotated for this EMDB entry.");
                                break;
                            case "CGIlogoUnknown":
                                t = "This icon conveys information about the presence of nucleic acid (DNA, RNA) in the entry."
                        }
                        break;
                    case "Ligands":
                        switch (e[1]) {
                            case "present":
                                t = "This entry contains one or more ligands.";
                                break;
                            case "absent":
                                t = "This entry does not contain any ligands.";
                                break;
                            case "CGIlogoUnknown":
                                t = "This icon conveys information about the presence of ligands in the entry."
                        }
                }
                return t
            }
        })
    }(),
    function() {
        "use strict";
        angular.module("pdb.prints.services", []).service("printsService", ["$http", "$q", function(e, t) {
            this.getPrintsData = function(r) {
                var n = "//www.ebi.ac.uk/pdbe/search/pdb/select?",
                    i = "fl=pdb_id,organism_synonyms,number_of_bound_entities%2C+number_of_protein_chains%2Cexperimental_method%2C+experiment_data_available%2Cexpression_host_sci_name%2C+citation_year%2C+entry_organism_scientific_name,number_of_RNA_chains,number_of_DNA_chains,sample_preparation_method,emdb_id",
                    o = "&group=true&group.field=pdb_id&group.limit=100&rows=1000",
                    a = "&wt=json",
                    s = "&q=pdb_id:(" + r.join(" OR ") + ")",
                    u = n + i + o + a + s,
                    l = t.defer();
                return e.get(u).then(function(e) {
                    l.resolve(e.data)
                }, function(e) {
                    l.reject("fail response")
                }), l.promise
            }
        }])
    }(), angular.module("template/prints/pdbLogos.html", []).run(["$templateCache", function(e) {
        e.put("template/prints/pdbLogos.html", '<div class="pdbLogosWrapper"><div class="widthAuto" ng-class="{\'floatLeft\': config.orientation != \'vertical\'}" style="height:{{config.size}}px;position:relative;" ng-hide="(config.hideLogo.indexOf(\'PDBeLogo\') > -1)"><div class="pdbeLogoCol pdbeLogoCol1" style="font-size:{{ (config.size * 4) / (12-1) }}px"><a target="_self" title="{{ [\'pdbeLogo\'] | tooltipFilter }}"href="{{config.domainUrl}}/entry/pdb/{{logoData.PDBeLogo[0]}}/" ng-click="logoClick(\'pdbeLogo\')"><font face="Courier New"><b>{{logoData.PDBeLogo[0]}}</b></font></a></div><div class="pdbeLogoCol1Bottom"><a target="{{config.targetWindow}}" title="pdbe.org" href="{{config.domainUrl}}"><img border="0" ng-src="//www.ebi.ac.uk/pdbe/widgets/html/PDBeWatermark_horizontal_{{config.size}}.png"></a></div></div><div ng-repeat="category in categories" class="pdbeLogoCol widthAuto" ng-class="{\'floatLeft\': config.orientation != \'vertical\'}" ng-hide="(config.hideLogo.indexOf(category) > -1)" style="height:{{config.size}}px"><a target="pdbprints" ng-attr-title="{{ [ category, logoData[category][0], logoData.PDBeLogo[0] ] | tooltipFilter }}" href="{{config.domainUrl}}/entry/pdb/{{logoData.PDBeLogo[0]}}{{categoryUrl[$index]}}"><img class="pdbLogoImg" ng-src="{{config.domainUrl}}/widgets/pdblogos/{{config.color}}/{{config.size}}/{{category}}_{{logoData[category][0]}}.png" border="0"></a></div></div>')
    }]),
    function() {
        "use strict";
        angular.module("pdb.residue.interactions", ["pdb.residue.interactions.services", "pdb.common.services"]).directive("pdbResidueInteractions", ["pdbResidueInteractionsService", "commonServices", function(e, t) {
            return {
                restrict: "EAC",
                scope: {
                    pdbId: "@",
                    chainId: "@"
                },
                templateUrl: "template/pdbResidueInteractions/pdbResidueInteractions.html",
                link: function(r, n, i) {
                    if (r.showLoader = !0, r.showWrapper = !1, r.errorMsg = "", r.pdbevents = t.createNewEvent(["PDB.pdbResidueInteractions.loaded", "PDB.pdbResidueInteractions.failed"]), r.dispatchEvent = function(e, t, i) {
                            var o = n[0];
                            "undefined" != typeof i && (o = i), "undefined" != typeof t && (r.pdbevents[e].eventData = t), o.dispatchEvent(r.pdbevents[e])
                        }, "undefined" == typeof r.pdbId || "" === r.pdbId || 4 !== r.pdbId.length) return r.errorMsg = "Invalid PDB ID!", void r.dispatchEvent("PDB.pdbResidueInteractions.failed", {
                        pdbId: r.pdbId,
                        error: r.errorMsg
                    });
                    var o = function(e, t, r) {
                            var n, i, o = new Array,
                                a = new Object;
                            a.links = new Array;
                            for (var s, u, l, c, h, p, d = 0; d < e.links.length; d++)
                                if (!r || e.links[d].present == r)
                                    if (1 == t) {
                                        n = -1, i = -1, s = e.nodes[e.links[d].target].residueNum, u = e.nodes[e.links[d].source].residueNum;
                                        for (var f = 0; f < e.groups.length; f++)
                                            if (s >= e.groups[f].start && s <= e.groups[f].end) {
                                                n = f;
                                                for (var m = 0; m < e.groups.length; m++) u >= e.groups[m].start && u <= e.groups[m].end && (i = m, o[n] || (o[n] = new Array), o[i] || (o[i] = new Array), o[n][i] || (o[n][i] = 0), o[i][n] || (o[i][n] = 0), o[n][i] += parseInt(e.links[d].value), o[i][n] += parseInt(e.links[d].value))
                                            }
                                    } else {
                                        n = -1, i = -1, s = e.nodes[e.links[d].target].residueNum, u = e.nodes[e.links[d].source].residueNum, l = e.nodes[e.links[d].target].chain, c = e.nodes[e.links[d].source].chain;
                                        for (var f = 0; f < e.groups.length; f++)
                                            if (h = e.groups[f].name[0], s >= e.groups[f].start && s <= e.groups[f].end && h == l) {
                                                n = f;
                                                for (var m = 0; m < e.groups.length; m++) p = e.groups[m].name[0], u >= e.groups[m].start && u <= e.groups[m].end && p == c && (i = m, o[n] || (o[n] = new Array), o[i] || (o[i] = new Array), o[n][i] || (o[n][i] = 0), o[i][n] || (o[i][n] = 0), o[n][i] += parseInt(e.links[d].value), o[i][n] += parseInt(e.links[d].value))
                                            }
                                    }
                            for (var d = 0; d < o.length; d++)
                                for (var f = 0; f < o.length; f++) o[d] || (o[d] = new Object), o[d][f] || (o[d][f] = 0);
                            return o
                        },
                        a = function(e) {
                            for (var t = d3.scale.ordinal().domain(d3.range(16)).range(["#3182bd", "#6baed6", "#9ecae1", "#c6dbef", "#e6550d", "#fd8d3c", "#fdae6b", "#e7ba52", "#31a354", "#74c476", "#a1d99b", "#756bb1", "#9467bd", "#9e9ac8", "#bcbddc", "#d62728", "#ff9896"]), r = e.groups[0].name[0], i = 450, a = i / 2, s = a - 120, u = d3.layout.chord().padding(.04).sortSubgroups(d3.descending).sortChords(d3.descending), l = d3.svg.arc().innerRadius(s).outerRadius(s + 20), c = d3.select(n[0]).select("svg").attr("viewBox", "0 0 350 350").attr("preserveAspectRatio", "xMidYMid meet").append("g").attr("transform", "translate(175,175)"), h = o(e), p = 0; p < h.length; p++) - 1 == e.groupsloops[p].name.indexOf("NucleicAcid") && (h[p][p] = 0);
                            u.matrix(h);
                            var d = c.selectAll("g.group").data(u.groups).enter().append("g").attr("class", "group");
                            d.append("svg:path").style("fill", function(e) {
                                return t(e.index)
                            }).style("stroke", function(e) {
                                return t(e.index)
                            }).style("cursor", "pointer").attr("d", l).attr("class", "arc").on("mouseover", function(e, t) {
                                c.selectAll("path.chord").style("opacity", 1), c.selectAll("path.chord").filter(function(e) {
                                    return e.source.index != t && e.target.index != t
                                }).transition().style("opacity", .1)
                            }).on("mouseout", function(e, t) {
                                c.selectAll("path.chord").transition().style("opacity", 1)
                            }).on("click", function(e, t) {
                                c.selectAll("path.chord").style("opacity", 1), c.selectAll("path.chord").filter(function(e) {
                                    return e.source.index != t && e.target.index != t
                                }).transition().style("opacity", .1)
                            }).append("title").text(function(t) {
                                var n = e.groups[t.index].name;
                                if (n.indexOf("HELIX") > -1) var i = n.replace("HELIX", "H");
                                else if (n.indexOf("SHEET") > -1) var i = n.replace("SHEET", "S");
                                else if (n.indexOf("LOOP") > -1) var i = n.replace("LOOP", "L");
                                else if (n.indexOf("NucleicAcid") > -1) var i = n.replace("NucleicAcid", "NA");
                                var o = r + ":";
                                return i = i.replace(o, ""), i + "(" + e.groups[t.index].start + "-" + e.groups[t.index].end + ")"
                            }), d.append("text").each(function(e) {
                                e.angle = (e.startAngle + e.endAngle) / 2
                            }).attr("dy", ".35em").attr("text-anchor", function(e) {
                                return e.angle > Math.PI ? "end" : null
                            }).attr("transform", function(e) {
                                return "rotate(" + (180 * e.angle / Math.PI - 90) + ")translate(" + (s + 26) + ")" + (e.angle > Math.PI ? "rotate(180)" : "")
                            }).text(function(t) {
                                var n = e.groups[t.index].name;
                                if (n.indexOf("HELIX") > -1) var i = n.replace("HELIX", "H");
                                else if (n.indexOf("SHEET") > -1) var i = n.replace("SHEET", "S");
                                else if (n.indexOf("LOOP") > -1) var i = n.replace("LOOP", "L");
                                else if (n.indexOf("NucleicAcid") > -1) var i = n.replace("NucleicAcid", "NA");
                                var o = r + ":";
                                return i = i.replace(o, "")
                            }), c.selectAll("path.chord").data(u.chords).enter().append("path").attr("class", "chord").style("stroke", function(e) {
                                return d3.rgb(t(e.source.index)).darker()
                            }).style("fill", function(e) {
                                return t(e.source.index)
                            }).style("opacity", function(e) {
                                return 1
                            }).style("cursor", "pointer").attr("d", d3.svg.chord().radius(s)).on("mouseover", function(e, t) {
                                c.selectAll("path.chord").filter(function(t) {
                                    return t.source.index != e.source.index || t.target.index != e.target.index
                                }).transition().style("opacity", .1), c.selectAll("path.chord").filter(function(t) {
                                    return t.source.index == e.source.index && t.target.index == e.target.index
                                }).transition().style("opacity", 1)
                            }).on("mouseout", function(e, t) {
                                c.selectAll("path.chord").transition().style("opacity", 1)
                            }).append("title").text(function(e) {
                                var t = e.source.index,
                                    r = e.target.index;
                                return h[t][r] + " atomic contacts."
                            })
                        };
                    e.getApiData(r.pdbId, r.chainId).then(function(e) {
                        a(e), r.showLoader = !1, r.showWrapper = !0, r.dispatchEvent("PDB.pdbResidueInteractions.loaded", {
                            pdbId: r.pdbId,
                            error: r.errorMsg
                        })
                    }, function(e) {
                        r.showLoader = !1, r.showWrapper = !1, window.console && console.log("API request failed. Error: " + e), r.errorMsg = "Error: loading API data", r.dispatchEvent("PDB.pdbResidueInteractions.failed", {
                            pdbId: r.pdbId,
                            error: r.errorMsg
                        })
                    })
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.residue.interactions.services", []).service("pdbResidueInteractionsService", ["$http", "$q", function(e, t) {
            this.getApiData = function(r, n) {
                var i = "http://www.mrc-lmb.cam.ac.uk/rajini/api/" + r;
                "undefined" != typeof n && (i = "http://www.mrc-lmb.cam.ac.uk/rajini/api/" + r + "/" + n);
                var o = t.defer();
                return e.get(i).then(function(e) {
                    o.resolve(e.data)
                }, function(e) {
                    o.reject("fail response")
                }), o.promise
            }
        }])
    }(), angular.module("template/pdbResidueInteractions/pdbResidueInteractions.html", []).run(["$templateCache", function(e) {
        e.put("template/pdbResidueInteractions/pdbResidueInteractions.html", '<div style="text-align:center"><div class="pcl-demo-overlay" ng-show="showLoader">Loading</div><svg ng-show="showWrapper"></svg><a ng-show="showWrapper" href="http://www.mrc-lmb.cam.ac.uk/rajini/redirect/{{pdbId}}" target="_blank">View residue interactions in Rajini</a></div><div ng-show="errorMsg != \'\'">{{errorMsg}}</div>')
    }]),
    function() {
        "use strict";
        angular.module("pdb.sequence.view", ["d3Core", "pdb.sequence.view.filters", "pdb.sequence.view.services", "pdb.common.services"]).directive("pdbSeqViewer", ["d3", "seqViewerService", "$compile", "$filter", "$interval", "commonServices", "$document", "$window", function(e, t, r, n, i, o, a, s) {
            return {
                restrict: "EAC",
                scope: {
                    entryId: "@",
                    entityId: "@",
                    viewerType: "@",
                    settings: "@",
                    updateOptions: "&",
                    getEventDataStr: "@getEventData",
                    getEventData: "&",
                    subscribeEvents: "@"
                },
                templateUrl: function(e, t) {
                    return "unipdbViewer" === t.viewerType ? "template/sequenceView/uniPdb.html" : "template/sequenceView/pdb.html"
                },
                link: function(s, u, l) {
                    var c = e.select(u[0]),
                        h = c.select(".seqViewerWrapper"),
                        p = h.select(".topRightSection"),
                        d = h.select(".bottomRightSection"),
                        f = d.select(".bottomSvg"),
                        m = f.select("g.shapesGrp"),
                        v = p.select("g.scaleGrp"),
                        g = c.node().parentNode.getBoundingClientRect();
                    s.activeViewBtn = "compact", s.showViewBtn = !0, s.allowZoom = !0, s.showLoadMoreLink = !1, s.chainsViewStatus = "fewer", s.showScrollArrow = !1, "undefined" == typeof s.subscribeEvents && (s.subscribeEvents = "true");
                    var y = e.select(".pdbSeqTooltip");
                    null == y[0][0] && (y = e.select("body").append("div").attr("class", "pdbSeqTooltip")), s.showLoader = !0, s.showError = !1;
                    var b = {
                        width: g.width > 230 ? g.width : 230,
                        height: g.height,
                        showLabels: !0,
                        labelWidth: 80,
                        maxZoomed: !1,
                        firstPrintsMarginTop: 3
                    };
                    s.pdbevents = o.createNewEvent(["PDB.seqViewer.click", "PDB.seqViewer.mouseover", "PDB.seqViewer.mouseout"]), "undefined" != typeof s.settings && s.settings && angular.extend(b, JSON.parse(s.settings));
                    var x = !1,
                        _ = {};
                    s.expandedView = !1, s.showLabels = b.showLabels, s.printsMarginTop = b.firstPrintsMarginTop;
                    var w = {
                            top: 15,
                            right: 10,
                            bottom: 15,
                            left: 10
                        },
                        C = 45,
                        E = 60,
                        S = 70,
                        T = b.width > 300 ? 210 : 80,
                        M = b.height;
                    "unipdbViewer" !== s.viewerType && (T = b.showLabels ? 80 : 15, E = 35, M = b.height - C);
                    var A = 25,
                        P = 5,
                        R = b.width,
                        k = R - P,
                        I = M - S - E - w.bottom,
                        D = k - T - A,
                        B = D - 20,
                        L = D / 28;
                    s.styles = {
                        wrapper: {
                            width: R + "px",
                            height: M + "px"
                        },
                        loaderImg: {
                            "margin-top": M / 2 - 30 + "px"
                        },
                        topSection: {
                            height: S + "px",
                            width: k + "px"
                        },
                        topSvg: {
                            height: S + "px",
                            width: D + "px"
                        },
                        bottomSection: {
                            height: I + "px",
                            width: k + "px",
                            "overflow-x": "hidden",
                            "overflow-y": "auto"
                        },
                        bottomSvg: {
                            width: D + "px"
                        },
                        leftSecStyle: {
                            width: T + "px"
                        },
                        loadSecBackground: {
                            width: T - 5 + "px",
                            background: "#DCECD7 none repeat scroll 0% 0%",
                            "padding-right": "5px",
                            height: M + "px",
                            position: "absolute",
                            "z-index": 0
                        },
                        scrollArrowLeft: {
                            position: "absolute",
                            margin: "8px 0 0 " + (T - 10) + "px",
                            "text-decoration": "none",
                            border: "none",
                            outline: "none"
                        },
                        scrollArrowRight: {
                            display: "none",
                            margin: "8px 0 0 20px",
                            "text-decoration": "none",
                            border: "none",
                            outline: "none"
                        },
                        loadMoreStyle: {
                            top: M - 35 + "px",
                            left: R / 2 - 50 + "px"
                        },
                        btnGrp: {
                            "float": "left",
                            "margin-bottom": "5px",
                            width: R + "px",
                            "text-align": "right",
                            overflow: "auto"
                        }
                    }, s.wrapperSize = {
                        width: R,
                        height: M
                    }, "unipdbViewer" !== s.viewerType && (s.styles.leftSecStyle = {
                        width: T - 5 + "px",
                        "text-align": "right",
                        background: "#DCECD7 none repeat scroll 0% 0%",
                        "padding-right": "5px",
                        position: "relative"
                    }, s.styles.scrollArrowLeft = {
                        display: "none",
                        position: "absolute",
                        margin: "8px 0 0 " + (T - 10) + "px",
                        "text-decoration": "none",
                        border: "none",
                        outline: "none"
                    }, s.styles.scrollArrowRight = {
                        display: "none",
                        margin: "8px 0 0 20px",
                        "text-decoration": "none",
                        border: "none",
                        outline: "none"
                    }, b.showLabels || (s.styles.topSvg["margin-left"] = T, s.styles.bottomSvg["margin-left"] = T));
                    var V = function(o) {
                        s.infoIconMsg = o.infoIconMsg, s.pathLeftLabels = o.pathLeftLabels, s.pathMoreLeftLabels = [], s.pdbIdArr = o.pdbIdArr;
                        var l = "['" + o.pdbIdArr.join("','") + "']";
                        s.modelOptions = o.options, s.showTooltip = function(t, r, n) {
                            var i = 0,
                                o = 0;
                            "ng" === r ? (o = n.pageX, i = n.pageY) : (o = e.event.pageX, i = e.event.pageY), y.html(t).style("display", "block").style("top", i + 15 + "px").style("left", o + 10 + "px")
                        }, s.hideTooltip = function() {
                            y.style("display", "none")
                        };
                        var g = function(e, t, r) {
                                var n = e[0];
                                return "circle" !== r && (n = Math.round(K.invert(e[0]))), "Residue " + (n + 1) + " (" + G[n] + ")"
                            },
                            C = function(e) {
                                var t = 1;
                                return e > 100 && (t = Math.floor(Math.floor(e) / 100)), t
                            },
                            E = function(e, t) {
                                var r = 0;
                                if (t % 100 === 0) r = .2112 * e / C(t);
                                else {
                                    var n = 100 * Math.floor(t / 100);
                                    1 > n && (n = 100);
                                    var i = .2112 * e / C(n),
                                        o = {
                                            100: {
                                                diff: 2,
                                                range: [1, 2, 4, 7, 9]
                                            },
                                            200: {
                                                diff: 1.5,
                                                range: [2, 5]
                                            },
                                            300: {
                                                diff: .9,
                                                range: [4, 9]
                                            },
                                            400: {
                                                diff: .7,
                                                range: [5, 9]
                                            },
                                            500: {
                                                diff: .6,
                                                range: [1, 9]
                                            },
                                            600: {
                                                diff: .45,
                                                range: [8, 9]
                                            },
                                            700: {
                                                diff: .4,
                                                range: [8, 9]
                                            }
                                        };
                                    if (800 > t) {
                                        for (var a = o[n].range.length, s = a - 1; s >= 0; s--)
                                            if (t >= n + 10 * o[n].range[s]) {
                                                r = 0 === s ? i : i - o[n].diff / 100 * e * s;
                                                break
                                            }
                                    } else r = .2112 * e / C(n)
                                }
                                return 0 === r && (r = i), r
                            },
                            S = function(e) {
                                var t = 1 * e;
                                return 1.7 > t ? t = 1.7 : t > 4.5 && (t = 4.5), t
                            };
                        s.dispatchEvent = function(e, t, r) {
                            var n = u[0];
                            "undefined" != typeof r && (n = r), "undefined" != typeof t && (s.pdbevents[e].eventData = t), n.dispatchEvent(s.pdbevents[e])
                        };
                        var T = function(t, r, n) {
                                t.on("click", function() {
                                    var t = e.select(this),
                                        i = t.data(),
                                        o = e.mouse(this),
                                        a = i[0].tooltipMsg,
                                        u = i[0].tooltipPosition;
                                    "circle" === r && (o[0] = i[0].residue_number - 1);
                                    var l = g(o, i, r);
                                    if (angular.isUndefined(a) ? a = l : angular.isUndefined(u) || "prefix" !== u ? angular.isUndefined(u) || "postfix" !== u || (a = l + " " + a) : a = a + " " + l, "path" === r || "circle" === r ? t.attr("stroke", n.brighter()) : "arrow" === r && t.attr("stroke", n.brighter()).attr("fill", n.brighter()), "undefined" != typeof s.getEventDataStr && "" !== s.getEventDataStr) {
                                        var c = {
                                            eventType: "click",
                                            elementData: i,
                                            residueNumber: parseInt(l.split(" ")[1]),
                                            pdbId: s.entryId,
                                            entityId: s.entityId
                                        };
                                        s.getEventData({
                                            eventData: c
                                        })
                                    }
                                    s.dispatchEvent("PDB.seqViewer.click", {
                                        viewerType: s.viewerType,
                                        elementData: i,
                                        residueNumber: parseInt(l.split(" ")[1]),
                                        entryId: s.entryId,
                                        entityId: s.entityId
                                    })
                                }).on("mouseover", function() {
                                    var t = e.select(this),
                                        i = t.data(),
                                        o = e.mouse(this),
                                        a = i[0].tooltipMsg,
                                        u = i[0].tooltipPosition;
                                    "circle" === r && (o[0] = i[0].residue_number - 1), angular.isUndefined(a) ? a = g(o, i, r) : angular.isUndefined(u) || "prefix" !== u ? angular.isUndefined(u) || "postfix" !== u || (a = g(o, i, r) + " " + a) : a = a + " " + g(o, i, r), "path" === r || "circle" === r ? t.attr("stroke", n.brighter()) : "arrow" === r && t.attr("stroke", n.brighter(.1)).attr("fill", n.brighter(.1)), s.showTooltip(a, "d3", o);
                                    g(o, i, r)
                                }).on("mousemove", function() {
                                    var t = e.select(this),
                                        i = t.data(),
                                        o = e.mouse(this),
                                        a = i[0].tooltipMsg,
                                        u = i[0].tooltipPosition;
                                    "circle" === r && (o[0] = i[0].residue_number - 1), angular.isUndefined(a) ? a = g(o, i, r) : "undefined" != typeof u && "prefix" === u ? a = a + " " + g(o, i, r) : "undefined" != typeof u && "postfix" === u && (a = g(o, i, r) + " " + a), "path" === r || "circle" === r ? t.attr("stroke", n.brighter()) : "arrow" === r && t.attr("stroke", n.brighter()).attr("fill", n.brighter()), s.showTooltip(a, "d3", o);
                                    var l = g(o, i, r);
                                    s.dispatchEvent("PDB.seqViewer.mouseover", {
                                        viewerType: s.viewerType,
                                        elementData: i,
                                        residueNumber: parseInt(l.split(" ")[1]),
                                        entryId: s.entryId,
                                        entityId: s.entityId
                                    })
                                }).on("mouseleave", function() {
                                    "path" === r ? e.select(this).attr("stroke", n.darker().brighter()) : "arrow" === r && e.select(this).attr("stroke", n.darker().brighter()).attr("fill", n.darker().brighter()), s.hideTooltip(), s.dispatchEvent("PDB.seqViewer.mouseout", {
                                        viewerType: s.viewerType,
                                        entryId: s.entryId,
                                        entityId: s.entityId
                                    })
                                })
                            },
                            M = function(t, r, n, i, o, a, s, u) {
                                c.select("." + r).attr("clip-path", "url(#" + te + ")").selectAll("path." + n).data(t).enter().append("path").attr("class", function(e, t) {
                                    return "pathEle " + n + "-" + t
                                }).attr("stroke", function(t) {
                                    var r;
                                    if ("undefined" != typeof t.color) {
                                        var n = e.rgb(t.color[0], t.color[1], t.color[2]).brighter();
                                        r = n
                                    } else r = i;
                                    return 1 == u && T(e.select(this), "path", r), r
                                }).attr("stroke-width", o).attr("stroke-opacity", function(e) {
                                    return "undefined" != typeof e.opacity ? e.opacity : 1
                                }).attr("stroke-linecap", s).attr("fill", "none").attr("transform", "translate(0," + a + ")").attr("d", function(e) {
                                    return Q(e.pathRange)
                                })
                            },
                            A = function(e) {
                                var t = e.split(","),
                                    r = parseFloat(t[0].substring(1)),
                                    n = parseFloat(t[1].substring(2)),
                                    i = n - r + 1,
                                    o = 5;
                                10 > i && (o = i - 2);
                                var a = "M" + r + ",-5L" + (n - o) + ",-5L" + (n - o) + ",-10L" + n + ",0L" + (n - o) + ",10L" + (n - o) + ",5L" + r + ",5";
                                return a
                            },
                            P = function(t, r, n, i, o, a, s, u) {
                                c.select("." + r).attr("clip-path", "url(#" + te + ")").selectAll("path." + n).data(t).enter().append("path").attr("class", function(e, t) {
                                    return "arrowEle " + n + "-" + t
                                }).attr("stroke", function(t) {
                                    var r = e.rgb(t.color[0], t.color[1], t.color[2]).brighter();
                                    return 1 == u && T(e.select(this), "arrow", r), r
                                }).attr("stroke-width", o).attr("stroke-linecap", s).attr("fill", function(t) {
                                    return e.rgb(t.color[0], t.color[1], t.color[2]).brighter()
                                }).attr("transform", "translate(0," + a + ")").attr("d", function(e) {
                                    return A(Q(e.pathRange))
                                })
                            },
                            R = function(e, t, r, n, i) {
                                var o = c.select("." + t).attr("clip-path", "url(#" + te + ")").selectAll("path." + r).data(e).enter().append("text").attr("class", function(e, t) {
                                    return e.textIndex = t, "textEle " + r + " " + r + "-" + t
                                }).attr("x", function(e) {
                                    return K(e.textRange[0][0])
                                }).attr("y", function(e) {
                                    return e.textRange[1][0]
                                }).attr("fill", "white").text(function(e) {
                                    return e.textString
                                }).style("text-anchor", function(e) {
                                    return "undefined" != typeof e.textAnchor ? e.textAnchor : "middle"
                                }).style("font-family", "Verdana,sans-serif");
                                n === !0 && T(o, "text", "white"), i === !0 && ("unipdbViewer" === s.viewerType ? o.style("display", "block") : k(o))
                            },
                            k = function(t) {
                                t.each(function(t) {
                                    var r = e.select(this),
                                        n = r.data()[0],
                                        i = c.select("." + n.pathClassPrefix + "-" + n.textIndex).node().getBBox().width,
                                        o = r.node().getBBox().width;
                                    if (o > i) {
                                        var a = parseInt(r.style("font-size"));
                                        a > 2 ? (r.style("font-size", a - 2 + "px"), k(r)) : r.style("font-size", "0px")
                                    }
                                })
                            },
                            I = function(e, t) {
                                var r = ["M", "0L", "0L", "3L", "6L", "9L", "12L", "15L", "18L"],
                                    n = 0,
                                    i = "",
                                    o = 5;
                                return "start" === t && (o = -5), angular.forEach(r, function(t, r) {
                                    var a = 0;
                                    0 === n ? (n = 1, a = e) : (n = 0, a = e + o), i += t + "" + a + ","
                                }), i += "18 Z"
                            },
                            V = function(t, r, n, i, o, a, s, u) {
                                c.select("." + r).attr("clip-path", "url(#" + te + ")").selectAll("path." + n).data(t).enter().append("path").attr("class", function(e, t) {
                                    return "linkerPathEle " + n + "-" + t
                                }).attr("stroke", function(t) {
                                    return e.rgb(t.color[0], t.color[1], t.color[2]).brighter()
                                }).attr("stroke-width", 2).attr("stroke-linecap", s).attr("fill", function(t) {
                                    return e.rgb(t.color[0], t.color[1], t.color[2]).brighter()
                                }).attr("transform", "translate(0,-9)").attr("d", function(t) {
                                    if (1 == u) {
                                        var r = e.rgb(t.color[0], t.color[1], t.color[2]).brighter();
                                        T(e.select(this), "path", r)
                                    }
                                    var n = I(K(t.pathStart), t.pathPosition);
                                    return n
                                })
                            },
                            N = function(t) {
                                return e.svg.symbol().type(t).size(function(e) {
                                    return x ? 40 : 10 * S(Z.scale())
                                })
                            },
                            O = function(t, r, n, i, o, a, s) {
                                _[i] = t;
                                c.select("." + n).attr("clip-path", "url(#" + te + ")").selectAll("otherPathShape path." + i).data(r).enter().append("path").attr("class", i).attr("d", N(t)).attr("fill", function(t) {
                                    var r;
                                    return r = "undefined" != typeof t.color ? e.rgb(t.color[0], t.color[1], t.color[2]).brighter() : o, 1 == a && T(e.select(this), "circle", r), r
                                }).attr("stroke", "none").attr("stroke-width", 0).attr("transform", function(e, t) {
                                    var r = "translate(" + K(e.residue_number - 1) + ",10)";
                                    return 0 !== s && (r = "translate(" + K(e.residue_number - 1) + "," + s + ")"), r
                                })
                            },
                            F = function(e, t, r) {
                                c.select("." + e).append("g").attr("class", "seqAxis " + t), c.select("." + t).call(J), r && "undefined" != typeof r && c.select("." + t).attr("transform", "translate(0," + r + ")")
                            },
                            U = function() {
                                if (x || Z.scale() === Y) {
                                    c.selectAll(".linkerPathEle").attr("d", function(e) {
                                        var t = 0;
                                        t = "start" === e.pathPosition ? e.pathStart - .1 : e.pathStart + .1;
                                        var r = I(K(t), e.pathPosition);
                                        return r
                                    }), c.selectAll(".seqPath").attr("d", function(e) {
                                        var t = Q(e.pathRange),
                                            r = t.split(",");
                                        return r[0] = "M" + (parseFloat(r[0].substring(1)) - 5), r[1] = "0L" + (parseFloat(r[1].substring(2)) + 5), r.join(",")
                                    }), c.selectAll(".nonSeqPath").attr("d", function(e) {
                                        var t = Q(e.pathRange),
                                            r = t.split(",");
                                        return parseFloat(r[0].substring(1)) > 0 && (r[0] = "M" + (parseFloat(r[0].substring(1)) + 5)), r[1] = "0L" + (parseFloat(r[1].substring(2)) - 5), r.join(",")
                                    });
                                    var t = c.selectAll(".linePathEle");
                                    t.each(function(t) {
                                        e.select(e.select(this).node()).attr("d", function(e) {
                                            var t = Q(e.pathRange),
                                                r = t.split(","),
                                                n = parseFloat(r[0].substring(1)) + 5,
                                                i = r.length;
                                            r[0] = "M" + n;
                                            var o = parseFloat(r[i - 2].substring(2)) - 5;
                                            return r[i - 2] = "5L" + o, r.join(",")
                                        })
                                    }), c.selectAll(".seqAxis").style("display", "block"), c.selectAll(".hideTextOnZoom").style("display", "none"), c.selectAll(".showTextOnZoom").style("display", "block")
                                } else c.selectAll(".seqAxis").style("display", "none"), c.selectAll(".hideTextOnZoom").style("display", "block"), c.selectAll(".showTextOnZoom").style("display", "none")
                            },
                            z = function() {
                                var e = 20;
                                "unipdbViewer" === s.viewerType && (e = 40), f.select(".seqSvgBg").attr("height", 20);
                                var t = m.node().getBBox();
                                f.attr("height", t.height + e), f.select(".seqSvgBg").attr("height", t.height + e)
                            },
                            H = function() {
                                Z.scale() > 1 ? c.selectAll(".SeqScrollArrow").style("display", "block") : c.selectAll(".SeqScrollArrow").style("display", "none"), s.allowZoom === !1 && Z.scale(Y);
                                var t = Z.translate(),
                                    r = Z.scale(),
                                    n = Math.min(0, Math.max(B * (1 - r), t[0])),
                                    i = Math.min(0, Math.max(1 * (1 - r), t[1]));
                                Z.translate([n, i]), v.select("g.x.axis").call($);
                                var o = c.selectAll(".pathEle");
                                o.each(function(t) {
                                    e.select(this).attr("d", Q(t.pathRange))
                                });
                                var a = c.selectAll(".arrowEle");
                                a.each(function(t) {
                                    e.select(this).attr("d", A(Q(t.pathRange)))
                                });
                                var u = c.selectAll(".linkerPathEle");
                                u.each(function(t) {
                                    var r = I(K(t.pathStart), t.pathPosition);
                                    e.select(e.select(this).node()).attr("d", r)
                                }), c.selectAll(".seqAxis").call(J);
                                for (var l in _) c.selectAll("." + l).attr("d", N(_[l])).attr("transform", function(e, t) {
                                    var r = "translate(" + K(e.residue_number - 1) + ",10)";
                                    return "undefined" != typeof e.marginTop && 0 !== e.marginTop && (r = "translate(" + K(e.residue_number - 1) + "," + e.marginTop + ")"), r
                                });
                                U();
                                var h = c.selectAll(".textEle");
                                h.each(function(t) {
                                    var r = e.select(this),
                                        n = r.data()[0];
                                    r.attr("x", function(e) {
                                        return K(e.textRange[0][0])
                                    }), "undefined" != typeof n && "undefined" != typeof n.fitInPath && n.fitInPath === !0 && (r.style("font-size", "12px"), k(r))
                                })
                            },
                            j = function(e) {
                                for (var t in e)
                                    if ("groups" === t)
                                        for (var r = e[t].length, n = 0; r > n; n++) {
                                            var i = e[t][n]["class"],
                                                o = e[t][n].parentGroup,
                                                a = e[t][n].marginTop,
                                                u = (e[t][n].label, m);
                                            "unipdbViewer" !== s.viewerType || "uniprotGrp" !== o && "uniprotGrp" !== i ? "pdbViewer" !== s.viewerType || "moleculeGrp" !== o && "moleculeGrp" !== i || (u = v) : u = v, "" !== o ? (u.select("." + o).append("g").attr("class", i), "undefined" != typeof a && a && u.select("." + i).attr("transform", "translate(0," + a + ")")) : u.append("g").attr("class", i).attr("transform", "translate(0," + (w.top + a) + ")").attr("clip-path", "url(#" + te + ")")
                                        } else if ("shapes" === t)
                                            for (var l = e[t].length, c = 0; l > c; c++) {
                                                var h = e[t][c].shape,
                                                    p = e[t][c].shapeGroupClass,
                                                    d = e[t][c].shapeClass,
                                                    f = e[t][c].shapeContent,
                                                    g = e[t][c].shapeColour,
                                                    y = e[t][c].shapeHeight,
                                                    b = e[t][c].marginTop,
                                                    x = e[t][c].shapeCap,
                                                    _ = e[t][c].showTooltip,
                                                    C = e[t][c].fitInPath;
                                                "undefined" == typeof y && (y = 0), "undefined" == typeof b && (b = 0), "undefined" == typeof x && (x = "butt"), "text" === h ? (R(f, p, d, _, C), U()) : "zigzag" === h ? V(f, p, d, g, y, b, x, _) : "arrow" === h ? P(f, p, d, g, y, b, x, _) : "path" === h ? M(f, p, d, g, y, b, x, _) : "circle" === h || "square" === h || "triangle-up" === h || "triangle-down" === h || "diamond" === h || "cross" === h ? O(h, f, p, d, g, _, b) : "sequence" === h && (F(p, d, b, _), U())
                                            }
                            },
                            G = o.options.seqStr.split("");
                        s.molSeqArr = G;
                        var q = G.length,
                            W = q - 1,
                            X = 1,
                            Y = E(q, B);
                        q <= Math.ceil(L) && (L = q, x = !0);
                        var K = e.scale.linear().domain([0, W]).range([0, B]),
                            Q = e.svg.line().x(function(e, t) {
                                return K(e[0])
                            }),
                            Z = e.behavior.zoom().on("zoom", H).x(K).scaleExtent([X, Y]),
                            $ = e.svg.axis().scale(K).orient("top").tickFormat(function(e) {
                                return e + 1
                            }).ticks(L),
                            J = e.svg.axis().scale(K).orient("top").tickFormat(function(e) {
                                return G[e]
                            }).ticks(L);
                        if ("unipdbViewer" === s.viewerType && (h.select(".headingTxt").html(o.options.unipdbHeading), b.width > 300)) {
                            var ee = h.select(".bottomLeftSection").classed("pdb-prints", !0).attr("pdb-ids", l).attr("settings", '{"orientation": "horizontal", "size": 24, "color": "embl_green", "hideLogo" : ["PDBeLogo","Taxonomy", "Expressed", "Protein"] }');
                            r(ee.node())(s)
                        }
                        p.select(".topSvg").call(Z), d.select(".shapesGrp").call(Z);
                        var te = "clipper_" + Math.floor(500 * Math.random() + 1);
                        f.append("defs").append("clipPath").attr("id", te).append("rect").attr("x", -10).attr("y", -30).attr("width", D + 20).attr("height", 100);
                        var re = v.select("g.x.axis").call($);
                        if (q === re.selectAll("g.tick")[0].length && (x = !0), j(o), "unipdbViewer" === s.viewerType) {
                            setTimeout(function() {
                                var t = c.selectAll(".textEle");
                                t.each(function(t) {
                                    var r = e.select(this),
                                        n = r.data()[0];
                                    r.attr("x", function(e) {
                                        return K(e.textRange[0][0])
                                    }).style("display", "block"), "undefined" != typeof n && "undefined" != typeof n.fitInPath && n.fitInPath === !0 && (r.style("font-size", "12px"), k(r))
                                })
                            }, 100);
                            var ne = ["mutatedResidues", "modifiedResidues", "molecules"],
                                ie = t.createPromise(o.pdbIdArr, ne);
                            t.combinedDataGrabber(ie, o.pdbIdArr, ne).then(function(e) {
                                var t = n("unipdbModelFilter")(e, w.top, c);
                                j(t)
                            }, function() {
                                window.console && console.log("combined Failed")
                            })
                        } else "true" == s.subscribeEvents && (a.on("PDB.topologyViewer.click", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != s.entryId || e.eventData.entityId != s.entityId) return;
                                if (e.eventData.chainId != s.bestChainId) return;
                                c.selectAll(".selectionPath").remove();
                                var t = n("highlightResideShapeFilter")(e.eventData, "click");
                                j(t)
                            }
                        }), a.on("PDB.topologyViewer.mouseover", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != s.entryId || e.eventData.entityId != s.entityId) return;
                                if (e.eventData.chainId != s.bestChainId) return;
                                c.selectAll(".highlightPath").remove();
                                var t = n("highlightResideShapeFilter")(e.eventData, "mouseover");
                                j(t)
                            }
                        }), a.on("PDB.topologyViewer.mouseout", function(e) {
                            c.selectAll(".highlightPath").remove()
                        }), a.on("PDB.litemol.mouseover", function(e) {
                            if ("undefined" == typeof e.eventData || angular.equals({}, e.eventData)) c.selectAll(".highlightPath").remove();
                            else {
                                if (e.eventData.entryId.toLowerCase() != s.entryId.toLowerCase() || e.eventData.entityId != s.entityId) return;
                                c.selectAll(".highlightPath").remove();
                                var t = n("highlightResideShapeFilter")(e.eventData, "mouseover");
                                j(t)
                            }
                        }), a.on("PDB.litemol.click", function(e) {
                            if ("undefined" != typeof e.eventData && !angular.equals({}, e.eventData)) {
                                if (e.eventData.entryId.toLowerCase() != s.entryId.toLowerCase() || e.eventData.entityId != s.entityId) return;
                                c.selectAll(".selectionPath").remove();
                                var t = n("highlightResideShapeFilter")(e.eventData, "click");
                                j(t)
                            }
                        }));
                        b.maxZoomed && (Z.scale(Y), H()), s.$watch("activeViewBtn", function() {
                            "expanded" === s.activeViewBtn ? (Z.scale(Y), H(), s.allowZoom = !1) : (Z.scale(1), s.allowZoom = !0, H())
                        }), x && (s.showViewBtn = !1), z(), s.loadMoreChains = function() {
                            s.showLoadMoreLink = !1;
                            var e = t.createPromise([s.entryId], ["polymerCoverage"]);
                            t.combinedDataGrabber(e, s.entryId, ["polymerCoverage"]).then(function(e) {
                                var t = n("pdbModelFilter")(e, s.outlierApiData, s.bindingSitesApiData, s.residueListingApiData, s.molSeqArr, w.top, s.entryId, s.entityId, c, s.bestChainId, s.bestStructAsymId);
                                j(t), H(), s.pathMoreLeftLabels = s.pathMoreLeftLabels.concat(t.pathLeftLabels), s.chainsViewStatus = "fewer", s.chiansHideShowBtn = !0, s.$apply(), z()
                            }, function() {
                                window.console && console.log("load more chains api failed")
                            })
                        }, s.hideShowChainsFn = function() {
                            "fewer" == s.chainsViewStatus ? (s.chainsViewStatus = "more", f.selectAll(".otherChainPaths").style("display", "none"), c.selectAll(".moreChainLabels").style("display", "none")) : (s.chainsViewStatus = "fewer", f.selectAll(".otherChainPaths").style("display", "block"), c.selectAll(".moreChainLabels").style("display", "block")), z()
                        }, s.showLoader = !1, "unipdbViewer" !== s.viewerType && (s.$apply(), "undefined" != typeof s.updateOptions && "undefined" != typeof s.modelOptions && s.updateOptions({
                            newList: s.modelOptions.uniprotIdArr
                        }));
                        var oe;
                        s.movePan = function(e) {
                            var t = Z.translate();
                            Z.translate([t[0] + e, t[1]]), H(), oe = i(function() {
                                var t = Z.translate();
                                Z.translate([t[0] + e, t[1]]), H()
                            }, 100)
                        }, s.stopMovingPan = function(e) {
                            i.cancel(oe)
                        }
                    };
                    if ("unipdbViewer" === s.viewerType) t.getUnipdbData(s.entryId).then(function(e) {
                        t.getUnipdbPfamData(s.entryId).then(function(t) {
                            var r = n("unpToPfamFilter")(t, s.entryId);
                            s.pfamTooltip = r.shapes[0].infoToolTipMsg, e.shapes.push(r.shapes[0]), e.shapes.push(r.shapes[1]), V(e)
                        }, function(t) {
                            V(e), window.console && console.log("Pfam API request failed. Error: " + t)
                        })
                    }, function(e) {
                        s.showLoader = !1, s.showError = !0, window.console && console.log("Unipdb API request failed. Error: " + e)
                    });
                    else {
                        var N = t.createPromise([s.entryId], ["observedResidueRatio"]);
                        t.combinedDataGrabber(N, s.entryId, ["observedResidueRatio"]).then(function(e) {
                            if ("undefined" != typeof e[s.entryId].observedResidueRatio[s.entityId]) {
                                s.bestChainId = e[s.entryId].observedResidueRatio[s.entityId][0].chain_id, s.bestStructAsymId = e[s.entryId].observedResidueRatio[s.entityId][0].struct_asym_id, e[s.entryId].observedResidueRatio[s.entityId].length > 1 && (s.showLoadMoreLink = !0);
                                var r = ["summary", "entities", "polymerCoveragePerChain", "bindingSites", "mappings", "secStrutures", "outliers", "modifiedResidues", "mutatedResidues", "residueListing"],
                                    i = t.createPromise([s.entryId], r, s.bestChainId, s.bestStructAsymId);
                                t.combinedDataGrabber(i, s.entryId, r).then(function(e) {
                                    s.outlierApiData = e[s.entryId].outliers, s.bindingSitesApiData = e[s.entryId].bindingSites, s.residueListingApiData = e[s.entryId].residueListing;
                                    var t = n("pdbModelFilter")(e, "", "", "", s.molSeqArr, w.top, s.entryId, s.entityId, c, s.bestChainId, s.bestStructAsymId);
                                    V(t)
                                }, function() {
                                    s.showLoader = !1, s.showError = !0, window.console && console.log("combined api call failed")
                                })
                            } else s.showLoader = !1, s.showError = !0, s.$apply(), window.console && console.log("Error: Entity not found!!")
                        }, function() {
                            s.showLoader = !1, s.showError = !0, window.console && console.log("observed residue ratio api failed")
                        })
                    }
                }
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.sequence.view.filters", ["d3Core", "pdb.sequence.view.services", "pdb.common.services"]).filter("uniProtMappingFilter", ["commonServices", function(e) {
            return function(t) {
                var r = [],
                    n = {};
                if ("undefined" != typeof t.bestStrMappings)
                    for (var i = t.bestStrMappings.length, o = 0; i > o; o++) {
                        var a = t.bestStrMappings[o].pdb_id; - 1 === r.indexOf(a) && (r.push(a), n[a] = t.pdbMappings[a])
                    } else n = t.pdbMappings;
                var s = {
                        options: {
                            seqId: t.uniprotId,
                            seqStr: t.uniprotSeq,
                            unipdbHeading: t.unipdbHeading,
                            totalEntries: 0,
                            totalChains: 0
                        },
                        groups: [{
                            label: t.uniprotId,
                            "class": "uniprotGrp",
                            parentGroup: "",
                            marginTop: 8
                        }, {
                            label: "",
                            "class": "uniprotPathGrp",
                            parentGroup: "uniprotGrp",
                            marginTop: 1
                        }, {
                            label: "",
                            "class": "pfamPathGrp",
                            parentGroup: "uniprotGrp"
                        }, {
                            label: "",
                            "class": "uniprotSeqGrp",
                            parentGroup: "uniprotGrp",
                            marginTop: 14
                        }, {
                            label: "",
                            "class": "pfamLabelGrp",
                            parentGroup: "uniprotGrp",
                            marginTop: 14
                        }],
                        shapes: [{
                            shape: "path",
                            shapeGroupClass: "uniprotPathGrp",
                            shapeClass: "seqPath uniprotPath",
                            shapeHeight: 20,
                            marginTop: 0,
                            showTooltip: !0,
                            shapeContent: [{
                                pathRange: [
                                    [0, 0],
                                    [t.uniprotSeq.length, 0]
                                ],
                                pathData: {
                                    uniprotId: t.uniprotId,
                                    uniprotSeq: t.uniprotSeq
                                },
                                color: e.specificColors.lightGray
                            }]
                        }, {
                            shape: "sequence",
                            shapeGroupClass: "uniprotSeqGrp",
                            shapeClass: "uniprotSeq"
                        }],
                        pdbIdArr: [],
                        infoIconMsg: {}
                    },
                    u = 0,
                    l = 0;
                return angular.forEach(n, function(r, n) {
                    var i = u + 20;
                    s.groups.push({
                        label: n,
                        "class": "pathGrp" + n,
                        parentGroup: "",
                        marginTop: i
                    }), u += 30, s.options.totalEntries++, s.options.totalChains++, s.groups.push({
                        label: "",
                        "class": "seqGrp" + n,
                        parentGroup: "",
                        marginTop: u + 3
                    }), s.shapes.push({
                        shape: "sequence",
                        shapeGroupClass: "seqGrp" + n,
                        shapeClass: "seq" + n
                    });
                    var o = {
                            shape: "path",
                            shapeGroupClass: "pathGrp" + n,
                            shapeClass: "seqPath path" + n + " path" + n,
                            shapeHeight: 20,
                            showTooltip: !0,
                            shapeContent: []
                        },
                        a = {
                            shape: "text",
                            shapeGroupClass: "seqGrp" + n,
                            shapeClass: "hideTextOnZoom chain_id_text",
                            shapeHeight: 15,
                            marginTop: 2,
                            showTooltip: !0,
                            shapeContent: []
                        },
                        c = [],
                        h = "This shows how sequences in PDB entry " + n + " cover the sequence of UniProt entry " + t.uniprotId + ".",
                        p = function(e) {
                            var t = 1;
                            return "-" === e[0] && (t = -1, e = e.substr(1)),
                                function(r, n) {
                                    var i = r[e] < n[e] ? -1 : r[e] > n[e] ? 1 : 0;
                                    return i * t
                                }
                        },
                        d = r.sort(p("unp_start")),
                        f = 0,
                        m = e.colorBox3[l].length;
                    angular.forEach(d, function(t, r) {
                        var n = t.unp_start + "-" + t.unp_end,
                            i = c.indexOf(n); - 1 === i ? (t.pathColor = e.colorBox3[l][f], o.shapeContent.push({
                            pathRange: [
                                [t.unp_start - 1, 0],
                                [t.unp_end - 1, 0]
                            ],
                            pathData: t,
                            color: e.colorBox3[l][f]
                        }), a.shapeContent.push({
                            textRange: [
                                [t.unp_start + 2, 0],
                                [-9, 0]
                            ],
                            textString: t.struct_asym_id,
                            pathData: t,
                            textAnchor: "left"
                        }), c.push(t.unp_start + "-" + t.unp_end), f++, f === m && (f = 0)) : (s.options.totalChains++, o.shapeContent[i].pathData.chainId += "," + t.struct_asym_id, a.shapeContent[i].textString += ", " + t.struct_asym_id), h += "<br>- UniProt range " + t.unp_start + "-" + t.unp_end + " (" + (t.unp_end - t.unp_start + 1) + " residues)corresponds to residues " + t.struct_asym_id + ":" + t.start.residue_number + ": - " + t.struct_asym_id + ":" + t.end.residue_number + ": in PDB entry."
                    }), s.shapes.push(o, a), s.groups.push({
                        label: n,
                        "class": "straightLineGrp" + n,
                        parentGroup: "",
                        marginTop: i
                    }), s.pdbIdArr.push(n), s.infoIconMsg[n] = h, l++, l === e.colorBox3.length && (l = 0)
                }), s
            }
        }]).filter("modifiedResFilter", ["commonServices", function(e) {
            return function(t, r, n, i, o, a, s, u) {
                var l = [],
                    c = function(e, t) {
                        var r = {
                                residueNum: t.residue_number,
                                chainId: t.chain_id,
                                entityId: t.entity_id,
                                structAsymId: t.struct_asym_id
                            },
                            n = -1;
                        return angular.forEach(e, function(e, t) {
                            var i = {
                                pdbStart: e.pathData.start.residue_number,
                                pdbEnd: e.pathData.end.residue_number,
                                unpStart: e.pathRange[0][0] + 1,
                                unpEnd: e.pathRange[1][0] + 1,
                                chainId: e.pathData.chain_id,
                                entityId: e.pathData.entity_id,
                                structAsymId: e.pathData.struct_asym_id
                            };
                            r.residueNum >= i.pdbStart && r.residueNum <= i.pdbEnd && r.structAsymId <= i.structAsymId && r.entityId <= i.entityId && (n = r.residueNum - (i.pdbStart - i.unpStart))
                        }), n
                    },
                    h = {
                        shape: "path",
                        shapeGroupClass: "mutationGrp_" + n,
                        shapeClass: "mutation_" + n,
                        shapeHeight: i,
                        marginTop: o,
                        showTooltip: !0,
                        shapeContent: []
                    },
                    p = {
                        shape: "text",
                        shapeGroupClass: "mutationGrp_" + n,
                        shapeClass: "showTextOnZoom singleTextEle mutation_text_" + n,
                        shapeHeight: i,
                        marginTop: o,
                        showTooltip: !0,
                        shapeContent: []
                    };
                return angular.forEach(t, function(t, n) {
                    var i = t.residue_number;
                    if ("unipdbe" === u) i = c(r, t);
                    else if (t.entity_id != r.entityId) return;
                    var o = "",
                        l = "";
                    "undefined" != typeof t.mutation_details && "mutatedResidues" === s ? (null !== t.mutation_details.from && (o += t.mutation_details.from + " --> "), o += t.mutation_details.to + " (" + t.mutation_details.type + ")", l = t.mutation_details.to) : (o = "Modified Residue: " + t.chem_comp_id, l = ""), i > -1 && (h.shapeContent.push({
                        pathRange: [
                            [i - 1 - .5, 0],
                            [i - 1 + .5, 0]
                        ],
                        tooltipMsg: o,
                        pathData: t,
                        color: e.specificColors.burntOrange
                    }), p.shapeContent.push({
                        textRange: [
                            [i - 1, 0],
                            [a, 0]
                        ],
                        tooltipMsg: o,
                        textString: l,
                        pathData: t,
                        color: e.specificColors.burntOrange
                    }))
                }), h.shapeContent.length > 0 && l.push(h), p.shapeContent.length > 0 && l.push(p), l
            }
        }]).filter("unipdbModelFilter", ["d3", "$filter", function(e, t) {
            return function(r, n, i) {
                var o = {
                    groups: [],
                    shapes: []
                };
                return angular.forEach(r, function(r, n) {
                    var a = i.select(".pathGrp" + n).attr("transform"),
                        s = /\((.+),(.+)\)/,
                        u = a.match(s),
                        l = [u[1], u[2]],
                        c = e.selectAll(".path" + n).data();
                    angular.forEach(r, function(e, r) {
                        if ("undefined" != typeof e && e)
                            if ("modifiedResidues" === r || "mutatedResidues" === r) {
                                var i = t("modifiedResFilter")(e, c, n, 20, 10, 14, r, "unipdbe");
                                i.length > 0 && (o.groups.push({
                                    label: "",
                                    "class": "mutationGrp mutationGrp_" + n,
                                    parentGroup: "",
                                    marginTop: l[1] - 25
                                }), o.shapes = o.shapes.concat(i))
                            } else if ("molecules" === r) {
                            for (var a = {}, s = {}, u = 0, h = 0, p = e.length, d = 0; p > d && (a = {
                                    shape: "zigzag",
                                    shapeGroupClass: "pathGrp" + n,
                                    shapeClass: "linkerPath" + n + " linkerPath" + n,
                                    shapeHeight: 20,
                                    showTooltip: !0,
                                    shapeContent: []
                                }, s = {
                                    shape: "path",
                                    shapeGroupClass: "straightLineGrp" + n,
                                    shapeClass: "linePathEle straightLinePath" + n + " straightLinePath" + n,
                                    shapeHeight: 3,
                                    showTooltip: !0,
                                    shapeContent: []
                                }, angular.forEach(c, function(t, r) {
                                    if (t.pathData.entity_id === e[d].entity_id) {
                                        var n = e[d].length,
                                            i = t.pathData.start.residue_number,
                                            o = t.pathData.end.residue_number;
                                        if (a.shapeColour = t.pathData.pathColor, (0 === h && i > 1 || h > 0 && i > h) && a.shapeContent.push({
                                                pathStart: t.pathData.unp_start - 1,
                                                pathPosition: "start",
                                                tooltipMsg: "Beginning 1 - " + (i - 1) + " residues are not mapped to UniProt",
                                                pathData: t.pathData,
                                                color: t.pathData.pathColor
                                            }), n > o && a.shapeContent.push({
                                                pathStart: t.pathData.unp_end - 1,
                                                pathPosition: "end",
                                                tooltipMsg: "Ending " + (parseInt(o) + 1) + " - " + n + " residues are not mapped to UniProt",
                                                pathData: t.pathData,
                                                color: t.pathData.pathColor
                                            }), u++, "undefined" != typeof c[r + 1] && o <= c[r + 1].pathData.start.residue_number && c[r + 1].pathData.unp_start > t.pathData.unp_end)
                                            if (c[r + 1].pathData.start.residue_number === o + 1) s.shapeContent.push({
                                                pathRange: [
                                                    [t.pathData.unp_end - 1, 0],
                                                    [c[r + 1].pathData.unp_start - 1, 0]
                                                ],
                                                tooltipMsg: "Uniprot Residues" + (parseInt(t.pathData.unp_end) + 1) + "-" + (c[r + 1].pathData.unp_start - 1) + " are deleted",
                                                pathData: t.pathData,
                                                color: [0, 0, 0]
                                            });
                                            else {
                                                var l = (c[r + 1].pathData.unp_start - t.pathData.unp_end) / 4;
                                                s.shapeContent.push({
                                                    pathRange: [
                                                        [t.pathData.unp_end - 1, 0],
                                                        [t.pathData.unp_end - 1 + l, -5],
                                                        [t.pathData.unp_end - 1 + 2 * l, 0],
                                                        [t.pathData.unp_end - 1 + 3 * l, 5],
                                                        [c[r + 1].pathData.unp_start - 1, 0]
                                                    ],
                                                    tooltipMsg: parseInt(o) + 1 + "-" + (c[r + 1].pathData.start.residue_number - 1) + " residues are not mapped to UniProt",
                                                    pathData: t.pathData,
                                                    color: [0, 0, 0]
                                                })
                                            }
                                    }
                                }), u != c.length); d++);
                            s.shapeContent.length > 0 && o.shapes.push(s), a.shapeContent.length > 0 && o.shapes.push(a)
                        }
                    })
                }), o
            }
        }]).filter("unpToPfamFilter", ["commonServices", function(e) {
            return function(t, r) {
                var n = {},
                    i = {};
                if (!angular.isUndefined(t) && t && !angular.isUndefined(t.data) && t.data) {
                    i = {
                        shape: "text",
                        shapeGroupClass: "pfamLabelGrp",
                        shapeClass: "hideTextOnZoom pfam_text",
                        shapeColour: void 0,
                        shapeHeight: 15,
                        marginTop: 2,
                        showTooltip: !0,
                        shapeContent: [],
                        fitInPath: !0
                    }, n = {
                        shape: "path",
                        shapeGroupClass: "pfamPathGrp",
                        shapeClass: "pfamPath",
                        shapeHeight: 30,
                        showTooltip: !0,
                        shapeContent: [],
                        infoToolTipMsg: "This UniProt entry contains the following uniprot domain:"
                    };
                    var o = 0;
                    angular.forEach(t.data[r].Pfam, function(t, r) {
                        var a = t.mappings.length,
                            s = " of " + t.name + " (" + r + ": " + t.description + ") mapping to residues ";
                        angular.forEach(t.mappings, function(u, l) {
                            l > 0 && (s += l === a - 1 ? " and" : ","), s += " " + u.unp_start + "-" + u.unp_end, n.shapeContent.push({
                                pathRange: [
                                    [u.unp_start - 1, 0],
                                    [u.unp_end - 1, 0]
                                ],
                                pathData: {
                                    pfamId: r,
                                    pfamData: t
                                },
                                color: e.colorGradients.redStack[o]
                            }), i.shapeContent.push({
                                textRange: [
                                    [u.unp_start + (u.unp_end - u.unp_start) / 2 - 1, 0],
                                    [-10, 0]
                                ],
                                textString: t.name,
                                pathData: t,
                                pathClassPrefix: "pfamPath",
                                fitInPath: !0
                            }), l === a - 1 && (s = 0 === l ? "<br> - one copy" + s : "<br> - " + a + " copies" + s), o++, o === e.colorGradients.redStack.length && (o = 0)
                        }), n.infoToolTipMsg += s, s = ""
                    })
                }
                return {
                    shapes: [n, i]
                }
            }
        }]).filter("pfamZigzagShapeFilter", [function() {
            return function(e, t, r) {
                var n = {},
                    i = r.selectAll(".pfamPath" + t).data();
                angular.forEach(i, function(e, t) {
                    n[e.domainId] = {
                        start: e.pathData.start.residue_number,
                        end: e.pathData.end.residue_number,
                        color: e.color
                    }
                });
                var o = {},
                    a = r.selectAll(".uniprotPath" + t).data();
                angular.forEach(a, function(e, t) {
                    o[e.domainId] = {
                        start: e.pathData.unp_start,
                        end: e.pathData.unp_end
                    }
                });
                var s = {
                    shape: "zigzag",
                    shapeGroupClass: "pfamPathGrp" + t,
                    shapeClass: "linkerPath" + t + " linkerPath" + t,
                    shapeHeight: 20,
                    showTooltip: !0,
                    shapeContent: []
                };
                return !angular.isUndefined(e) && e && angular.forEach(e, function(e, t) {
                    angular.forEach(e.uniProtToPfam.Pfam, function(e, r) {
                        angular.forEach(e.mappings, function(i, a) {
                            var u = n[r],
                                l = o[t];
                            i.unp_start > l.start && s.shapeContent.push({
                                pathStart: u.start - 1,
                                pathPosition: "start",
                                tooltipMsg: "Missing Uniprot Residues from " + l.start + " to " + (i.unp_start - 1),
                                pathData: e,
                                color: u.color
                            }), i.unp_end < l.end && s.shapeContent.push({
                                pathStart: u.end - 1,
                                pathPosition: "end",
                                tooltipMsg: "Missing Uniprot Residues from " + (i.unp_end + 1) + " to " + l.end,
                                pathData: e,
                                color: u.color
                            })
                        })
                    })
                }), {
                    shapes: [s]
                }
            }
        }]).filter("highlightResideShapeFilter", [function() {
            return function(e, t) {
                var r = "highlightPath highlightPath",
                    n = !1;
                "click" == t && (r = "selectionPath selectionPath", n = !0);
                var i = {
                    shape: "path",
                    shapeGroupClass: "chain" + e.chainId + "PathGrp" + e.entryId.toLowerCase(),
                    shapeClass: r,
                    shapeHeight: 25,
                    marginTop: 0,
                    showTooltip: n,
                    shapeContent: [{
                        pathRange: [
                            [e.residueNumber - 1 - .5, 0],
                            [e.residueNumber - 1 + .5, 0]
                        ],
                        elementType: "ResidueSelection",
                        pathData: e,
                        color: [0, 0, 0],
                        opacity: .5
                    }]
                };
                return {
                    shapes: [i]
                }
            }
        }]).filter("pdbModelFilter", ["$filter", "seqViewerService", "commonServices", function(e, t, r) {
            return function(n, i, o, a, s, u, l, c, h, p, d) {
                var f = function(e, t) {
                        for (var r = e.length, n = 0; r > n; n++)
                            if (e[n].entity_id == t) return e[n]
                    },
                    m = function(e, t, r, n, i) {
                        var o = {
                                idArr: [l],
                                unpShapeObj: {
                                    shape: "path",
                                    shapeGroupClass: r + "PathGrp" + l,
                                    shapeClass: "seqPath " + r + "Path" + l + " " + r + "Path" + l,
                                    shapeHeight: 15,
                                    showTooltip: !0,
                                    shapeContent: []
                                },
                                mappingTextObj: {
                                    shape: "text",
                                    shapeGroupClass: r + "PathGrp" + l,
                                    shapeClass: r + "_text",
                                    shapeHeight: 15,
                                    marginTop: 2,
                                    showTooltip: !0,
                                    shapeContent: [],
                                    fitInPath: !0
                                }
                            },
                            a = n.length,
                            s = {},
                            u = {},
                            c = 0;
                        return angular.forEach(e, function(h, p) {
                            angular.forEach(h.mappings, function(d, f) {
                                if (d.entity_id == t) {
                                    if (("cath" === r || "scop" === r) && d.struct_asym_id != i) return;
                                    var m = d.start.residue_number + "-" + d.end.residue_number;
                                    if (m in s) s[m].tooltipMsg = s[m].tooltipMsg.replace("(chain ", "(chains "), u[m].tooltipMsg = s[m].tooltipMsg.replace("(chain ", "(chains "), s[m].tooltipMsg = s[m].tooltipMsg.replace(")", " " + d.chain_id + ")"), u[m].tooltipMsg = s[m].tooltipMsg.replace(")", " " + d.chain_id + ")");
                                    else {
                                        var v = "";
                                        "uniprot" == r && (v = "<br>UniProt range: " + d.unp_start + " - " + d.unp_end), v += "<br>PDB range: " + d.start.residue_number + " - " + d.end.residue_number + " (chain " + d.chain_id + ")";
                                        var g;
                                        "scop" === r ? (g = e[p].sccs, v += "<br><strong>" + g + "</strong><br>" + h.identifier) : (g = p, v += "<br><strong>" + g + "</strong><br>" + h.identifier, -1 === o.idArr.indexOf(p) && o.idArr.push(p)), s[m] = {
                                            pathRange: [
                                                [d.start.residue_number - 1, 0],
                                                [d.end.residue_number - 1, 0]
                                            ],
                                            tooltipMsg: v,
                                            tooltipPosition: "postfix",
                                            pathData: d,
                                            domainId: g,
                                            elementType: r,
                                            elementColor: n[c],
                                            color: n[c]
                                        }, u[m] = {
                                            textRange: [
                                                [d.start.residue_number + (d.end.residue_number - d.start.residue_number) / 2 - 1, 0],
                                                [5, 0]
                                            ],
                                            textString: h.identifier,
                                            pathData: d,
                                            pathClassPrefix: r + "Path" + l,
                                            fitInPath: !0,
                                            tooltipMsg: v,
                                            tooltipPosition: "postfix",
                                            elementType: r,
                                            elementColor: n[c],
                                            color: n[c]
                                        }, c++, c === a && (c = 0)
                                    }
                                }
                            })
                        }), angular.forEach(s, function(e, t) {
                            o.unpShapeObj.shapeContent.push(e), o.mappingTextObj.shapeContent.push(u[t])
                        }), o
                    },
                    v = function(e, t, n) {
                        var i = [],
                            o = {
                                shape: "path",
                                shapeGroupClass: "secStrPathGrp" + l,
                                shapeClass: "secStrPath" + l + " secStrPath" + l,
                                shapeHeight: 13,
                                showTooltip: !0,
                                shapeContent: []
                            },
                            a = {
                                shape: "arrow",
                                shapeGroupClass: "secStrPathGrp" + l,
                                shapeClass: "arrowPath secStrPath" + l + " secStrPath" + l,
                                shapeHeight: 1,
                                showTooltip: !0,
                                shapeContent: []
                            };
                        return angular.forEach(e, function(e, i) {
                            e.entity_id == t && angular.forEach(e.chains, function(e, t) {
                                e.struct_asym_id == n && angular.forEach(e.secondary_structure, function(t, n) {
                                    "undefined" != typeof t && t && angular.forEach(t, function(t, i) {
                                        var s = {
                                            pathData: {
                                                chain_id: e.chain_id,
                                                struct_asym_id: e.struct_asym_id,
                                                start: t.start,
                                                end: t.end
                                            },
                                            pathRange: [
                                                [t.start.residue_number - 1, 0],
                                                [t.end.residue_number - 1, 0]
                                            ],
                                            tooltipMsg: "",
                                            elementType: n.slice(0, -1)
                                        };
                                        "helices" === n ? (s.tooltipMsg = "A helix in chain " + e.chain_id, s.elementColor = r.specificColors.brass, s.color = r.specificColors.brass, o.shapeContent.push(s)) : "strands" === n && (s.tooltipMsg = "A strand in a sheet in chain " + e.chain_id, s.elementColor = r.specificColors.airForceBlue, s.color = r.specificColors.airForceBlue, a.shapeContent.push(s))
                                    })
                                })
                            })
                        }), o.shapeContent.length > 0 && i.push(o), a.shapeContent.length > 0 && i.push(a), i
                    },
                    g = function(e, t, n, i) {
                        var o = t[0].pathData.chain_id,
                            a = t[0].pathData.struct_asym_id,
                            s = [{
                                shape: "path",
                                shapeGroupClass: "quality" + o + "PathGrp" + i,
                                shapeClass: "quality" + o + "Path" + i + " quality" + o + "Path" + i,
                                shapeHeight: 15,
                                showTooltip: !0,
                                shapeContent: []
                            }];
                        return angular.forEach(t, function(e, t) {
                            var n = {
                                pathData: e.pathData,
                                pathRange: [
                                    [e.pathRange[0][0], 0],
                                    [e.pathRange[1][0], 0]
                                ],
                                tooltipMsg: "No validation issue reported for",
                                tooltipPosition: "prefix",
                                elementType: "quality",
                                color: r.specificColors.qualityGreen
                            };
                            s[0].shapeContent.push(n)
                        }), angular.forEach(e, function(e, t) {
                            e.entity_id == n && angular.forEach(e.chains, function(e, t) {
                                e.chain_id == o && angular.forEach(e.models, function(e, t) {
                                    angular.forEach(e.residues, function(e, t) {
                                        var n = {
                                                shape: "path",
                                                shapeGroupClass: "quality" + o + "PathGrp" + i,
                                                shapeClass: "qualityOverlay" + o + "Path" + i + " qualityOverlay" + o + "Path" + i,
                                                shapeHeight: 15,
                                                showTooltip: !0,
                                                shapeContent: [{
                                                    pathData: e,
                                                    pathRange: [
                                                        [e.residue_number - 1.5, 0],
                                                        [e.residue_number - .5, 0]
                                                    ],
                                                    tooltipMsg: "",
                                                    tooltipPosition: "prefix",
                                                    elementType: "quality_outlier",
                                                    color: r.specificColors.qualityYellow
                                                }]
                                            },
                                            u = "issue";
                                        n.shapeContent[0].pathData.chain_id = o, n.shapeContent[0].pathData.struct_asym_id = a, 1 === e.outlier_types.length && "RSRZ" === e.outlier_types[0] ? (n.shapeContent[0].color = r.specificColors.qualityRed, n.shape = "circle", n.shapeClass = "qualityCircle" + o + i + t, n.marginTop = -13, n.shapeContent[0].residue_number = e.residue_number, n.shapeContent[0].marginTop = -13) : 1 === e.outlier_types.length ? n.shapeContent[0].color = r.specificColors.qualityYellow : 2 === e.outlier_types.length ? (n.shapeContent[0].color = r.specificColors.burntOrangeBright, u = "issues") : (n.shapeContent[0].color = r.specificColors.qualityRed, u = "issues"), n.shapeContent[0].tooltipMsg = "Validation " + u + ": " + e.outlier_types.join(", ") + "<br>", s.push(n)
                                    })
                                })
                            })
                        }), s[0].shapeContent.length > 0 ? s : []
                    },
                    y = function(e, t, n, i, o) {
                        var a = [];
                        return angular.forEach(e, function(e, s) {
                            if (e.entity_id == t) {
                                var u = 0;
                                "other" === i && (u = 1), angular.forEach(e.chains, function(e, s) {
                                    if ("other" !== i || e.struct_asym_id != o) {
                                        for (var l = {
                                                shape: "path",
                                                shapeGroupClass: "chain" + e.chain_id + "PathGrp" + n,
                                                shapeClass: "seqPath chain" + e.chain_id + "Path" + n + " chain" + e.chain_id + "Path" + n,
                                                shapeHeight: 15,
                                                showTooltip: !0,
                                                shapeContent: []
                                            }, c = e.observed.length, h = 0; c > h; h++) l.shapeContent.push({
                                            pathRange: [
                                                [e.observed[h].start.residue_number - 1, 0],
                                                [e.observed[h].end.residue_number - 1, 0]
                                            ],
                                            pathData: {
                                                chain_id: e.chain_id,
                                                struct_asym_id: e.struct_asym_id,
                                                entity_id: t,
                                                chain_range: e.observed[h].start.residue_number + "-" + e.observed[h].end.residue_number
                                            },
                                            elementType: "chain",
                                            color: r.colorGradients.darkStack[u]
                                        });
                                        u++, u === r.colorGradients.darkStack.length && (u = 0), a.push(l)
                                    }
                                })
                            }
                        }), a
                    },
                    b = function(e, t, n, i) {
                        for (var o = {
                                shape: "path",
                                shapeGroupClass: t,
                                shapeClass: "nonSeqPath " + n + "nonSeqPath" + i + " " + n + "nonSeqPath" + i,
                                shapeHeight: 6,
                                showTooltip: !0,
                                shapeContent: []
                            }, a = e.length, s = 0; a > s; s++) "undefined" != typeof e[s + 1] && o.shapeContent.push({
                            pathRange: [
                                [e[s].pathRange[1][0], 0],
                                [e[s + 1].pathRange[0][0], 0]
                            ],
                            pathData: "",
                            elementType: "unobserved residues",
                            color: r.specificColors.lightGray
                        });
                        return o.shapeContent.length > 0 ? o : {}
                    },
                    x = function(e, t, n, i) {
                        var o = {},
                            a = [];
                        angular.forEach(e, function(e, r) {
                            if ("undefined" != typeof e.site_residues && "undefined" != typeof e.ligand_residues) {
                                var n = e.ligand_residues,
                                    i = e.site_residues,
                                    a = [];
                                angular.forEach(n, function(e, t) {
                                    var r = [];
                                    null !== e.chem_comp_id && r.push(e.chem_comp_id), null !== e.chain_id && r.push(e.chain_id), null !== e.author_residue_number && r.push(e.author_residue_number), null !== e.author_insertion_code && r.push(e.author_insertion_code), r.length > 0 && a.push(r.join("-"))
                                }), "undefined" == typeof o[e.site_id] && (o[e.site_id] = {}), "undefined" == typeof o[e.site_id].desc && (o[e.site_id].desc = ""), o[e.site_id].desc = a.join(" :: "), angular.forEach(i, function(r, n) {
                                    r.struct_asym_id == t && ("undefined" == typeof o[e.site_id].ranges && (o[e.site_id].ranges = []), o[e.site_id].ranges.push({
                                        residue_number: r.residue_number,
                                        tooltipMsg: "",
                                        tooltipPosition: "postfix",
                                        marginTop: -13,
                                        elementType: "binding site",
                                        pathData: r,
                                        color: ""
                                    }))
                                })
                            }
                        });
                        var s = {},
                            u = 0,
                            l = r.colorGradients.greenStack.length;
                        return angular.forEach(o, function(e, n) {
                            if ("undefined" != typeof e.ranges && e.ranges.length > 0) {
                                var o = {
                                    shape: "triangle-up",
                                    shapeGroupClass: "bindingSite" + t + "PathGrp" + i,
                                    shapeClass: "bindingSite" + t + "Path" + i,
                                    shapeHeight: 15,
                                    showTooltip: !0,
                                    marginTop: -13,
                                    shapeContent: []
                                };
                                angular.forEach(e.ranges, function(t, n) {
                                    t.tooltipMsg = "is in binding site", "" !== e.desc && (t.tooltipMsg += " of " + e.desc), "" === e.desc ? "undefined" != typeof s["null"] ? t.color = s["null"] : (t.color = r.colorGradients.greenStack[u], s["null"] = t.color, u++) : "undefined" != typeof s[e.desc] ? t.color = s[e.desc] : (t.color = r.colorGradients.greenStack[u], s[e.desc] = t.color, u++), u === l && (u = 0), o.shapeContent.push(t)
                                }), a.push(o)
                            }
                        }), a
                    },
                    _ = function(e, t, n, i, o, a, s) {
                        var u = [],
                            l = {
                                shape: "path",
                                shapeGroupClass: n,
                                shapeClass: "hetConformer" + t + "Path" + o,
                                shapeHeight: 15,
                                marginTop: 0,
                                showTooltip: !0,
                                shapeContent: []
                            },
                            c = {
                                shape: "path",
                                shapeGroupClass: n,
                                shapeClass: "altConformer" + t + "Path" + o,
                                shapeHeight: 15,
                                marginTop: 0,
                                showTooltip: !0,
                                shapeContent: []
                            },
                            h = {
                                shape: "text",
                                shapeGroupClass: n,
                                shapeClass: "showTextOnZoom singleTextEle altConformer_text_" + t + "Path" + o,
                                shapeHeight: 15,
                                marginTop: 2,
                                showTooltip: !0,
                                shapeContent: []
                            };
                        return angular.forEach(e, function(e, n) {
                            e.entity_id == i && angular.forEach(e.chains, function(e, n) {
                                e.chain_id == t && angular.forEach(e.residues, function(e, n) {
                                    if ("undefined" != typeof e.multiple_conformers) {
                                        var i = {};
                                        angular.forEach(e.multiple_conformers, function(e, t) {
                                            "undefined" == typeof i[e.chem_comp_id] && (i[e.chem_comp_id] = {}), i[e.chem_comp_id][e.alt_code] = 1
                                        });
                                        var o = "";
                                        e.struct_asym_id = s, e.chain_id = t, Object.keys(i).length > 1 ? (o = " has microheterogeneity.", l.shapeContent.push({
                                            pathRange: [
                                                [e.residue_number - 1 - .5, 0],
                                                [e.residue_number - 1 + .5, 0]
                                            ],
                                            tooltipMsg: o,
                                            tooltipPosition: "postfix",
                                            elementType: "Het Conformer",
                                            pathData: e,
                                            color: r.specificColors.airForceBlue
                                        })) : (o = " has alternate conformers.", c.shapeContent.push({
                                            pathRange: [
                                                [e.residue_number - 1 - .5, 0],
                                                [e.residue_number - 1 + .5, 0]
                                            ],
                                            tooltipMsg: o,
                                            tooltipPosition: "postfix",
                                            elementType: "alternate conformer",
                                            pathData: e,
                                            color: r.specificColors.airForceBlue
                                        })), h.shapeContent.push({
                                            textRange: [
                                                [e.residue_number - 1, 0],
                                                [4, 0]
                                            ],
                                            tooltipMsg: o,
                                            tooltipPosition: "postfix",
                                            textString: a[e.residue_number - 1],
                                            pathData: e
                                        })
                                    }
                                })
                            })
                        }), l.shapeContent.length > 0 && u.push(l), c.shapeContent.length > 0 && u.push(c), h.shapeContent.length > 0 && u.push(h), u
                    },
                    w = {
                        groups: [],
                        shapes: [],
                        pathLeftLabels: []
                    },
                    C = 0,
                    E = 0;
                if ("undefined" != typeof n[l].entities) {
                    w = {
                        options: {
                            seqId: l,
                            seqStr: ""
                        },
                        groups: [{
                            label: "",
                            "class": "moleculeGrp",
                            parentGroup: "",
                            marginTop: 8
                        }, {
                            label: "",
                            "class": "molPathGrp",
                            parentGroup: "moleculeGrp",
                            marginTop: 1
                        }, {
                            label: "",
                            "class": "molSeqGrp",
                            parentGroup: "moleculeGrp",
                            marginTop: 14
                        }],
                        shapes: [{
                            shape: "path",
                            shapeGroupClass: "molPathGrp",
                            shapeClass: "seqPath molPath",
                            shapeHeight: 15,
                            marginTop: 0,
                            showTooltip: !0,
                            shapeContent: [{
                                pathRange: [
                                    [0, 0],
                                    [0, 0]
                                ],
                                pathData: {
                                    pdbId: l,
                                    pdbSeq: ""
                                },
                                elementType: "molecule",
                                color: r.specificColors.lightGray
                            }]
                        }, {
                            shape: "sequence",
                            shapeGroupClass: "molSeqGrp",
                            shapeClass: "molSeq"
                        }],
                        pdbIdArr: [],
                        pathLeftLabels: []
                    };
                    var S = f(n[l].entities, c);
                    w.options.seqStr = w.shapes[0].shapeContent[0].pathData.pdbSeq = S.sequence, w.shapes[0].shapeContent[0].pathRange[1][0] = S.sequence.length
                }
                if ("undefined" != typeof n[l].mappings) {
                    var T = ["UniProt", "Pfam"];
                    angular.forEach(T, function(e, t) {
                        var i = e.toLowerCase();
                        if ("undefined" != typeof n[l].mappings[e] && n[l].mappings[e]) {
                            var o = m(n[l].mappings[e], c, i, r.colorBox3[E], d),
                                a = o.unpShapeObj;
                            "undefined" != typeof a.shapeContent && a.shapeContent.length > 0 && (w.groups.push({
                                label: l,
                                "class": i + "PathGrp" + l,
                                parentGroup: "",
                                marginTop: C + 20
                            }), w.shapes.push(a), w.shapes.push(o.mappingTextObj), C += 30, E++, w.pathLeftLabels.push(e)), o.idArr.length > 0 && "UniProt" === e && (w.options.uniprotIdArr = o.idArr)
                        }
                    })
                }
                var M = "",
                    A = "other";
                if ("undefined" != typeof n[l].polymerCoveragePerChain) M = n[l].polymerCoveragePerChain, A = "best";
                else if ("undefined" != typeof n[l].polymerCoverage) {
                    M = n[l].polymerCoverage;
                    for (var P = ["scopPathGrp" + l, "cathPathGrp" + l, "secStrPathGrp" + l, "quality" + p + "PathGrp" + l], R = 0; 3 > R; R++) {
                        var k = h.select("." + P[R]);
                        if (null !== k[0][0]) {
                            var I = k.attr("transform"),
                                D = parseInt(I.substring(I.lastIndexOf(",") + 1, I.lastIndexOf(")"))) - (20 - u);
                            D > C && (C = D)
                        }
                    }
                }
                if ("undefined" != typeof M && "" !== M) {
                    var B = y(M.molecules, c, l, A, d);
                    B.length > 0 && angular.forEach(B, function(e, t) {
                        var r = e.shapeContent[0].pathData.chain_id,
                            u = e.shapeGroupClass;
                        "other" === A && (u = e.shapeGroupClass + " otherChainPaths"), w.groups.push({
                            label: l,
                            "class": u,
                            parentGroup: "",
                            marginTop: C + 20
                        }), w.shapes.push(e), w.shapes.push({
                            shape: "sequence",
                            marginTop: 13,
                            shapeGroupClass: B[0].shapeGroupClass,
                            shapeClass: "chain" + r,
                            shapeColour: airForceBlue
                        });
                        var h = b(e.shapeContent, e.shapeGroupClass, r, l);
                        h && w.shapes.push(h), C += 30, E++, w.pathLeftLabels.push("Chain " + r);
                        var p = "",
                            d = "quality" + r + "PathGrp" + l;
                        if ("undefined" != typeof n[l].outliers ? p = n[l].outliers : "undefined" != typeof i && "" !== i && (p = i, d = "quality" + r + "PathGrp" + l + " otherChainPaths"), "undefined" != typeof p) {
                            var f = g(p.molecules, e.shapeContent, c, l);
                            f && (w.groups.push({
                                label: l,
                                "class": d,
                                parentGroup: "",
                                marginTop: C + 20
                            }), w.shapes = w.shapes.concat(f), C += 30, E++, w.pathLeftLabels.push("Quality"))
                        }
                        var m = "",
                            v = e.shapeContent[0].pathData.struct_asym_id,
                            y = "bindingSite" + v + "PathGrp" + l;
                        if ("undefined" != typeof n[l].bindingSites ? m = n[l].bindingSites : "undefined" != typeof o && "" !== o && (m = o), "undefined" != typeof m) {
                            var S = x(m, v, c, l);
                            S.length > 0 && (w.groups.push({
                                label: l,
                                "class": y,
                                parentGroup: e.shapeGroupClass,
                                marginTop: 0
                            }), w.shapes = w.shapes.concat(S))
                        }
                        var T = "";
                        if ("undefined" != typeof n[l].residueListing ? T = n[l].residueListing : "undefined" != typeof a && "" !== a && (T = a), "undefined" != typeof T) {
                            var M = [];
                            "undefined" != typeof w.options && "undefined" != typeof w.options.seqStr && "" !== w.options.seqStr ? M = w.options.seqStr.split("") : "undefined" != typeof s && s && (M = s);
                            var P = _(T.molecules, r, e.shapeGroupClass, c, l, M, v);
                            P.length > 0 && (w.groups.push({
                                label: l,
                                "class": e.shapeGroupClass,
                                parentGroup: "",
                                marginTop: 0
                            }), w.shapes = w.shapes.concat(P))
                        }
                    })
                }
                if ("undefined" != typeof n[l].secStrutures && "undefined" != typeof n[l].secStrutures.molecules && n[l].secStrutures.molecules) {
                    var L = v(n[l].secStrutures.molecules, c, d);
                    L && (w.groups.push({
                        label: l,
                        "class": "secStrPathGrp" + l,
                        parentGroup: "",
                        marginTop: C + 20
                    }), w.shapes = w.shapes.concat(L), C += 30, w.pathLeftLabels.push("Sec. Str."))
                }
                if ("undefined" != typeof n[l].mappings) {
                    var V = ["CATH", "SCOP"];
                    angular.forEach(V, function(e, t) {
                        var i = e.toLowerCase();
                        if ("undefined" != typeof n[l].mappings[e] && n[l].mappings[e]) {
                            var o = m(n[l].mappings[e], c, i, r.colorBox3[E], d),
                                a = o.unpShapeObj;
                            "undefined" != typeof a.shapeContent && a.shapeContent.length > 0 && (w.groups.push({
                                label: l,
                                "class": i + "PathGrp" + l,
                                parentGroup: "",
                                marginTop: C + 20
                            }), w.shapes.push(a), w.shapes.push(o.mappingTextObj), C += 30, E++, w.pathLeftLabels.push(e))
                        }
                    })
                }
                if ("undefined" != typeof n[l].mutatedResidues) {
                    var N = e("modifiedResFilter")(n[l].mutatedResidues, {
                        entityId: c
                    }, l, 15, 1, 5, "mutatedResidues", "pdbeSeq");
                    N.length > 0 && (w.groups.push({
                        label: "",
                        "class": "mutationGrp mutationGrp_" + l,
                        parentGroup: "moleculeGrp",
                        marginTop: 8
                    }), w.shapes = w.shapes.concat(N))
                }
                if ("undefined" != typeof n[l].modifiedResidues) {
                    var N = e("modifiedResFilter")(n[l].modifiedResidues, {
                        entityId: c
                    }, l, 15, 1, 5, "modifiedResidues", "pdbeSeq");
                    N.length > 0 && (w.groups.push({
                        label: "",
                        "class": "mutationGrp mutationGrp_" + l,
                        parentGroup: "moleculeGrp",
                        marginTop: 8
                    }), w.shapes = w.shapes.concat(N))
                }
                return t.setPathColorIndex(E), w
            }
        }])
    }(),
    function() {
        "use strict";
        angular.module("pdb.sequence.view.services", []).service("seqViewerService", ["$http", "$q", "$filter", function(e, t, r) {
            this.pathColorIndex = 0, this.setPathColorIndex = function(e) {
                this.pathColorIndex = e
            }, this.getPathColorIndex = function() {
                return this.pathColorIndex
            }, this.apiUrls = {
                summary: "//www.ebi.ac.uk/pdbe/api/pdb/entry/summary/",
                entities: "//www.ebi.ac.uk/pdbe/api/pdb/entry/entities/",
                modifiedResidues: "//www.ebi.ac.uk/pdbe/api/pdb/entry/modified_AA_or_NA/",
                mutatedResidues: "//www.ebi.ac.uk/pdbe/api/pdb/entry/mutated_AA_or_NA/",
                polymerCoverage: "//www.ebi.ac.uk/pdbe/api/pdb/entry/polymer_coverage/",
                polymerCoveragePerChain: "//www.ebi.ac.uk/pdbe/api/pdb/entry/polymer_coverage/",
                bindingSites: "//www.ebi.ac.uk/pdbe/api/pdb/entry/binding_sites/",
                mappings: "//www.ebi.ac.uk/pdbe/api/mappings/",
                residueListing: "//www.ebi.ac.uk/pdbe/api/pdb/entry/residue_listing/",
                secStrutures: "//www.ebi.ac.uk/pdbe/api/pdb/entry/secondary_structure/",
                outliers: "//www.ebi.ac.uk/pdbe/api/validation/residuewise_outlier_summary/entry/",
                topology: "//www.ebi.ac.uk/pdbe/api/topology/entry/",
                molecules: "//www.ebi.ac.uk/pdbe/api/pdb/entry/molecules/",
                uniProtToPfam: "//www.ebi.ac.uk/pdbe/api/mappings/uniprot_to_pfam/",
                observedResidueRatio: "//www.ebi.ac.uk/pdbe/api/pdb/entry/observed_residues_ratio/",
                residueListingPerChain: "//www.ebi.ac.uk/pdbe/api/pdb/entry/residue_listing/"
            }, this.createPromise = function(t, r, n) {
                var i = this.apiUrls,
                    o = r.map(function(r) {
                        return "mappings" === r || "uniProtToPfam" === r ? e.get(i[r] + "" + t[0]) : "polymerCoveragePerChain" === r || "topology" === r || "residueListingPerChain" === r ? e.get(i[r] + "" + t[0] + "/chain/" + n) : e({
                            method: "POST",
                            url: i[r],
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            data: t.join(",")
                        })
                    });
                return o
            }, this.combinedDataGrabber = function(e, t, r) {
                var n = e.map(function(e) {
                    return e.then(function(e) {
                        return {
                            resolve: !0,
                            result: e
                        }
                    }, function(e) {
                        return {
                            resolve: !1,
                            result: e
                        }
                    })
                });
                return Promise.all(n).then(function(e) {
                    var t = [],
                        n = [],
                        i = !0;
                    if (e.forEach(function(e) {
                            e.resolve && (i = !1), t.push(e.resolve ? e.result : null), n.push(e.resolve ? null : e.result)
                        }), i) throw n;
                    var o = {};
                    return angular.forEach(t, function(e, t) {
                        null !== e && "undefined" != typeof e && "undefined" != typeof e.data && e.data && angular.forEach(e.data, function(e, n) {
                            var i = "";
                            "undefined" != typeof e && e && (i = e), "undefined" == typeof o[n] && (o[n] = {});
                            var a = r[t];
                            o[n][a] = i
                        })
                    }), o
                })
            }, this.getUnipdbData = function(n) {
                var i = "//www.uniprot.org/uniprot/?query=accession:" + n + "&columns=id,sequence,entry name,protein names,organism,genes&format=tab&limit=1",
                    o = "//www.ebi.ac.uk/pdbe/api/mappings/" + n,
                    a = "//www.ebi.ac.uk/pdbe/api/mappings/best_structures/" + n,
                    s = {
                        uniprotId: n,
                        unipdbHeading: "",
                        uniprotSeq: "",
                        pdbMappings: {},
                        bestStrMappings: void 0
                    },
                    u = t.defer();
                return e.get(i).then(function(t) {
                    var i = t.data.split("\n"),
                        l = (i.length, i[1].split("	"));
                    s.uniprotSeq = l[1].trim(), s.unipdbHeading = l[3].replace(/\(.*\)/g, "").replace(/\[.*\]/g, "") + "<br><strong>" + l[0] + "</strong> " + l[2] + " <i>" + l[4].replace(/\(.*\)/g, "") + " </i> " + l[5].split(" ")[0], e.get(o).then(function(t) {
                        s.pdbMappings = t.data[n].PDB, e.get(a).then(function(e) {
                            s.bestStrMappings = e.data[n];
                            var t = r("uniProtMappingFilter")(s);
                            u.resolve(t)
                        }, function(e) {
                            var t = r("uniProtMappingFilter")(s);
                            u.resolve(t)
                        })
                    }, function(e) {
                        window.console && console.log("Error : SIFTS Mappings API service request failed!"), u.reject("fail response")
                    })
                }, function(e) {
                    window.console && console.log("Error : Uniprot API service request failed!"), u.reject("fail response")
                }), u.promise
            }, this.getUnipdbPfamData = function(r) {
                var n = "//www.ebi.ac.uk/pdbe/api/mappings/uniprot_to_pfam/" + r,
                    i = t.defer();
                return e.get(n).then(function(e) {
                    i.resolve(e)
                }, function(e) {
                    window.console && console.log("Error : PFAM Mappings API service request failed!"), i.reject("fail response")
                }), i.promise
            }
        }])
    }(), angular.module("template/sequenceView/pdb.html", []).run(["$templateCache", function(e) {
        e.put("template/sequenceView/pdb.html", '<div class="button-group" ng-show="showViewBtn" ng-style="styles.btnGrp"><ul style="float:right"><li><a ng-click="activeViewBtn = \'compact\'" ng-class="{\'active\' : activeViewBtn == \'compact\'}" title="Compact View" href="javascript:void(0);">Compact</a></li><li><a ng-click="activeViewBtn = \'expanded\'" ng-class="{\'active\' : activeViewBtn == \'expanded\'}" title="Expanded View" href="javascript:void(0);">Expanded</a></li></ul></div><div class="seqViewerWrapper" style="clear:both;" ng-style="styles.wrapper"><div class="seqViewLoader" ng-style="styles.wrapper" ng-show="showLoader"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/loading.gif" border="0" ng-style="styles.loaderImg" /></div><div class="seqViewLoader" ng-style="styles.wrapper" ng-show="showError"><div class="seqViewErrorMsg">Sorry, Something went wrong!</div></div><div ng-style="styles.loadSecBackground">&nbsp;</div><div class="loadMoreChainCl" ng-style="styles.loadMoreStyle" ng-show="showLoadMoreLink"><a href="javascript:void(0);" class="loadMoreBtn" ng-click="loadMoreChains()">load more chains</a></div><div class="loadMoreChainCl chainHideShowBtnCl" ng-style="styles.loadMoreStyle" ng-show="chiansHideShowBtn"><a href="javascript:void(0);" class="loadMoreBtn" ng-click="hideShowChainsFn()">Show {{chainsViewStatus}} chains</a></div><div class="topSection" ng-style="styles.topSection"><div class="topLeftSection" ng-style="styles.leftSecStyle" style="height:100%" ng-show="showLabels"><div class="pdbPathLeftLabel" style="margin-top:42px">Molecule</div></div><a class="SeqScrollArrow" ng-style="styles.scrollArrowLeft" href="javascript:void(0);" title="Scroll Left"><span ng-mouseup="stopMovingPan()" ng-mousemove="stopMovingPan()" ng-mousedown="movePan(50)" class="icon-black" data-icon="&lt;"></span></a><div class="topRightSection"><svg class="topSvg" ng-style="styles.topSvg"><g class="scaleGrp" transform="translate(10,25)"><g class="x axis"></g></g></svn></div><a class="SeqScrollArrow" ng-style="styles.scrollArrowRight" href="javascript:void(0);" title="Scroll Right"><span ng-mouseup="stopMovingPan()" ng-mousemove="stopMovingPan()" ng-mousedown="movePan(-50)" class="icon-black" data-icon="&gt;"></span></a></div><div class="bottomSection" ng-style="styles.bottomSection"><div class="bottomLeftSection" ng-style="styles.leftSecStyle" ng-show="showLabels"><div class="pdbPathLeftLabel" ng-repeat="leftLabel in pathLeftLabels track by $index" ng-style="{\'margin-top\': $index == 0 ? \'9px\' : \'20px\', \'height\': \'10px\', \'line-height\': \'10px\'}">{{leftLabel}}</div><div class="pdbPathLeftLabel moreChainLabels" ng-repeat="moreChainLabel in pathMoreLeftLabels track by $index" ng-style="{\'margin-top\': \'20px\', \'height\': \'10px\', \'line-height\': \'10px\'}">{{moreChainLabel}}</div></div><div class="bottomRightSection"><svg class="bottomSvg" ng-style="styles.bottomSvg" ><g class="shapesGrp" transform="translate(10,-21)"><rect class="seqSvgBg" x="0" y="0" fill="white" stroke="none" ng-style="styles.bottomSvg" ></rect></g></svg></div></div></div>');
    }]), angular.module("template/sequenceView/uniPdb.html", []).run(["$templateCache", function(e) {
        e.put("template/sequenceView/uniPdb.html", '<div class="seqViewerWrapper" ng-style="styles.wrapper"><div class="seqViewLoader" ng-style="styles.wrapper" ng-show="showLoader"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/loading.gif" border="0" ng-style="styles.loaderImg" /></div><div class="seqViewLoader" ng-style="styles.wrapper" ng-show="showError"><div class="seqViewErrorMsg">Sorry, Something went wrong!</div></div><div class="unipdbHeader"><div class="headingTxt" ng-show="wrapperSize.width > 300"></div><div class="button-group" ng-show="showViewBtn"><ul><li><a ng-click="activeViewBtn = \'compact\'" ng-class="{\'active\' : activeViewBtn == \'compact\'}" title="Compact View" href="javascript:void(0);">Compact</a></li><li><a ng-click="activeViewBtn = \'expanded\'" ng-class="{\'active\' : activeViewBtn == \'expanded\'}" title="Expanded View" href="javascript:void(0);">Expanded</a></li></ul></div></div><div class="topSection" ng-style="styles.topSection"><div class="topLeftSection" ng-style="styles.leftSecStyle"><div class="unipdbMappingDesc">{{modelOptions.totalChains}} chains in {{modelOptions.totalEntries}} PDB entries map to this Uniprot accession.</div><div class="topLeftIconSection"><div ng-class="{\'uniprotHeadId\': wrapperSize.width > 300, \'leftPdbIdLabel\': wrapperSize.width < 301}"><a title="Click to go to the UniProt page for this sequence" target="_blank" href="//www.uniprot.org/uniprot/{{modelOptions.seqId}}">{{modelOptions.seqId}}</a></div><div class="infoIconWarpper" ng-show="wrapperSize.width > 300"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/PinupIcons/Button-Details-icon.png" border="0" ng-mousemove="showTooltip(pfamTooltip, \'ng\', $event)" ng-mouseleave="hideTooltip()" /><a href="//www.uniprot.org/uniprot/{{modelOptions.seqId}}.txt" title="See the entry text file" target="_blank" style="margin-left:5px;"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/PinupIcons/Button-Download-icon.png" /></a></div></div></div><a class="SeqScrollArrow" ng-style="styles.scrollArrowLeft" href="javascript:void(0);" title="Scroll Left"><span ng-mouseup="stopMovingPan()" ng-mousemove="stopMovingPan()" ng-mousedown="movePan(50)" class="icon-black" data-icon="&lt;"></span></a><div class="topRightSection"><svg class="topSvg" ng-style="styles.topSvg"><g class="scaleGrp" transform="translate(10,25)"><g class="x axis"></g></g></svn></div><a class="SeqScrollArrow" ng-style="styles.scrollArrowRight" href="javascript:void(0);" title="Scroll Right"><span ng-mouseup="stopMovingPan()" ng-mousemove="stopMovingPan()" ng-mousedown="movePan(-50)" class="icon-black" data-icon="&gt;"></span></a></div><div class="bottomSection" ng-style="styles.bottomSection"><div class="bottomLeftSection" ng-style="styles.leftSecStyle"><div ng-repeat="msgPdbId in pdbIdArr" ng-style="{\'width\':\'100%\', \'text-align\':\'right\', \'margin-top\': $index == 0 ? printsMarginTop+\'px\' : \'6px\', \'height\': \'24px\', \'line-height\': \'24px\'}"><div class="leftPdbIdLabel"><a href="//www.ebi.ac.uk/pdbe/entry/pdb/{{msgPdbId}}/" target="_blank"  title="For more information about key features of entry {{msgPdbId}}, click on the individual icons.">{{msgPdbId}}</a></div><div class="pdbprints_{{msgPdbId}}"></div><div class="infoIconWarpper"> <img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/PinupIcons/Button-Details-icon.png" border="0" ng-mousemove="showTooltip(infoIconMsg[msgPdbId], \'ng\', $event)" ng-mouseleave="hideTooltip()" ng-show="wrapperSize.width > 300" /><a href="//www.ebi.ac.uk/pdbe-srv/view/files/{{msgPdbId}}.ent" title="See the entry text file" target="_blank" style="margin-left:5px;"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/PinupIcons/Button-Download-icon.png" border="0" /></a></div></div></div><div class="bottomRightSection"><svg class="bottomSvg" ng-style="styles.bottomSvg" ><g class="shapesGrp" transform="translate(10,-21)"><rect class="seqSvgBg" x="0" y="0" fill="none" stroke="none" ng-style="styles.bottomSvg" ></rect></g></svg></div></div></div>')
    }]),
    function() {
        "use strict";
        angular.module("pdb.topology.viewer", ["d3Core", "pdb.sequence.view.services", "pdb.common.services"]).directive("pdbTopologyViewer", ["d3", "seqViewerService", "$filter", "commonServices", "$document", function(e, t, r, n, i) {
            return {
                restrict: "EAC",
                scope: {
                    entryId: "@",
                    entityId: "@",
                    height: "@",
                    width: "@",
                    subscribeEvents: "@"
                },
                templateUrl: "template/topologyViewer/topologyViewer.html",
                link: function(r, o, a) {
                    r.showLoader = !0, r.showErrorMessage = !1, r.errorMessage = "Sorry, Something went wrong!", "undefined" == typeof r.subscribeEvents && (r.subscribeEvents = "true"), r.config = {
                        wrapperWidth: "100%",
                        wrapperHeigth: "100%",
                        margin: 10,
                        wrapperBorder: 2,
                        bottomMenuHeight: 27
                    }, r.pdbevents = n.createNewEvent(["PDB.topologyViewer.click", "PDB.topologyViewer.mouseover", "PDB.topologyViewer.mouseout"]), "undefined" != typeof r.height && (r.config.wrapperHeigth = r.height + "px"), "undefined" != typeof r.width && (r.config.wrapperWidth = r.width + "px"), r.config.svgHeigth = "90%", r.config.svgWidth = "100%", r.styles = {
                        wrapper: {
                            width: r.config.wrapperWidth,
                            height: r.config.wrapperHeigth,
                            "webkit-box-sizing": "content-box",
                            "-moz-box-sizing": "content-box",
                            "box-sizing": "content-box",
                            position: "relative",
                            overflow: "hidden"
                        },
                        loader: {
                            width: r.config.wrapperWidth,
                            height: r.config.wrapperHeigth,
                            "webkit-box-sizing": "content-box",
                            "-moz-box-sizing": "content-box",
                            "box-sizing": "content-box",
                            position: "absolute"
                        },
                        topoSvgWrapper: {
                            position: "relative",
                            "webkit-box-sizing": "content-box",
                            "-moz-box-sizing": "content-box",
                            "box-sizing": "content-box",
                            width: "96%",
                            height: "86%",
                            margin: "2%"
                        },
                        topoSvg: {
                            width: "100%",
                            height: "100%",
                            display: "inline-block",
                            position: "absolute",
                            top: 0,
                            left: 0
                        },
                        bottomMenu: {
                            "border-top": "1px solid #999",
                            background: "#DCECD7 none repeat scroll 0% 0%",
                            height: "4%",
                            padding: "3% 0 3% 10px",
                            "font-weight": "bold",
                            "border-radius": "0px 0px 2px 2px",
                            "webkit-box-sizing": "content-box",
                            "-moz-box-sizing": "content-box",
                            "box-sizing": "content-box",
                            position: "absolute",
                            bottom: 0,
                            width: "100%"
                        },
                        bottomMenuSelectBox: {
                            "font-weight": "normal"
                        },
                        loaderImg: {
                            "margin-top": "40%"
                        },
                        errorMsg: {
                            width: r.config.wrapperWidth,
                            height: r.config.wrapperHeigth,
                            "text-align": "center",
                            position: "absolute"
                        },
                        errorMsgSpan: {
                            display: "inline-block",
                            "margin-top": "40%",
                            "font-weight": "bold"
                        }
                    }, r.domainTypes = [{
                        label: "Annotation",
                        data: null
                    }];
                    var s = e.select(o[0]),
                        u = s.select(".topoSvg");
                    u.attr("preserveAspectRatio", "xMidYMid meet").attr("viewBox", "0 0 100 90");
                    var l = e.select(".pdbTopologyTooltip");
                    null == l[0][0] && (l = e.select("body").append("div").attr("class", "pdbTopologyTooltip"));
                    var c = function() {
                            function i() {
                                var t = {
                                    green: n.specificColors.qualityGreen,
                                    red: n.specificColors.qualityRed,
                                    yellow: n.specificColors.qualityYellow,
                                    orange: n.specificColors.burntOrangeBright,
                                    lightGray: n.specificColors.lightGray
                                };
                                this.defaultColours = {
                                    domainSelection: e.rgb(255, 0, 0),
                                    mouseOver: e.rgb(t.lightGray[0], t.lightGray[1], t.lightGray[2]).brighter().brighter(),
                                    borderColor: e.rgb(0, 0, 0),
                                    qualityGreen: e.rgb(t.green[0], t.green[1], t.green[2]).brighter(),
                                    qualityRed: e.rgb(t.red[0], t.red[1], t.red[2]).brighter(),
                                    qualityYellow: e.rgb(t.yellow[0], t.yellow[1], t.yellow[2]).brighter(),
                                    qualityOrange: e.rgb(t.orange[0], t.orange[1], t.orange[2]).brighter()
                                }, this.getTopologyApiData()
                            }
                            return i.prototype.getPDBSequenceArray = function(e) {
                                for (var t = e.length, n = 0; t > n; n++) e[n].entity_id == r.entityId && (this.sequenceArr = e[n].sequence.split(""))
                            }, i.prototype.getTopologyApiData = function() {
                                var e = this;
                                this.apiResult = {};
                                var n = t.createPromise([r.entryId], ["observedResidueRatio"]);
                                t.combinedDataGrabber(n, r.entryId, ["observedResidueRatio"]).then(function(n) {
                                    if ("undefined" != typeof n[r.entryId].observedResidueRatio[r.entityId]) {
                                        r.bestChainId = n[r.entryId].observedResidueRatio[r.entityId][0].chain_id, r.bestStructAsymId = n[r.entryId].observedResidueRatio[r.entityId][0].struct_asym_id;
                                        var i = ["entities", "mappings", "topology", "outliers", "polymerCoveragePerChain"],
                                            o = t.createPromise([r.entryId], i, r.bestChainId);
                                        t.combinedDataGrabber(o, r.entryId, i).then(function(t) {
                                            var n = !1;
                                            return "undefined" == typeof t[r.entryId].topology || null == t[r.entryId].topology ? n = !0 : ("undefined" == typeof t[r.entryId].topology[r.entityId] || "undefined" == typeof t[r.entryId].topology[r.entityId][r.bestChainId]) && (n = !0), n ? (e.apiResult = {
                                                status: "error",
                                                data: "Combined api call failed"
                                            }, r.showErrorMessage = !0, r.errorMessage = "Topology Data Not Available!", r.showLoader = !1, r.$apply(), !1) : (e.apiResult = {
                                                status: "data",
                                                data: t
                                            }, e.getPDBSequenceArray(t[r.entryId].entities), e.drawTopologyStructures(), void e.createDomainDropdown())
                                        }, function() {
                                            e.apiResult = {
                                                status: "error",
                                                data: "Combined api call failed"
                                            }, r.showErrorMessage = !0, r.showLoader = !1
                                        })
                                    } else e.apiResult = {
                                        status: "error",
                                        data: "Entity not found"
                                    }, r.showErrorMessage = !0, r.errorMessage = "Entity not found", r.showLoader = !1
                                }, function() {
                                    this.apiResult = {
                                        status: "error",
                                        data: "Observed residue ratio api failed"
                                    }, r.showErrorMessage = !0, r.errorMessage = "Observed residue ratio api failed"
                                })
                            }, i.prototype.chunkArray = function(e, t) {
                                for (var r = [], n = 0, i = e.length; i > n;) r.push(e.slice(n, n += t));
                                return r
                            }, i.prototype.getDomainRange = function() {
                                var t = this,
                                    n = [];
                                angular.forEach(this.apiResult.data[r.entryId].topology[r.entityId][r.bestChainId], function(e, r) {
                                    angular.forEach(e, function(e, r) {
                                        "undefined" != typeof e.path && e.path.length > 0 && (n = n.concat(t.chunkArray(e.path, 2)))
                                    })
                                }), this.xScale = e.scale.linear().domain([e.min(n, function(e) {
                                    return e[0]
                                }), e.max(n, function(e) {
                                    return e[0]
                                })]).range([1, parseInt(r.config.svgWidth) - 1]), this.yScale = e.scale.linear().domain([e.min(n, function(e) {
                                    return e[1]
                                }), e.max(n, function(e) {
                                    return e[1]
                                })]).range([1, parseInt(r.config.svgHeigth) - 1]), this.zoom = e.behavior.zoom().on("zoom", function() {
                                    t.zoomDraw(t)
                                }).x(this.xScale).y(this.yScale)
                            }, i.prototype.drawStrandSubpaths = function(e, t, r) {
                                for (var n = this, i = t - e + 1, o = (n.scaledPointsArr[7] - n.scaledPointsArr[1]) / i, a = [], s = 0; i > s; s++) {
                                    var l = {
                                        type: "strands",
                                        elementIndex: r
                                    };
                                    0 === s ? (l.residue_number = e, l.pathData = [n.scaledPointsArr[4], n.scaledPointsArr[1], n.scaledPointsArr[4], n.scaledPointsArr[1] + o, n.scaledPointsArr[8], n.scaledPointsArr[1] + o, n.scaledPointsArr[8], n.scaledPointsArr[13]]) : (l.residue_number = e + s, l.pathData = [a[s - 1].pathData[2], a[s - 1].pathData[3], a[s - 1].pathData[2], a[s - 1].pathData[3] + o, a[s - 1].pathData[4], a[s - 1].pathData[5] + o, a[s - 1].pathData[4], a[s - 1].pathData[5]]), a.push(l)
                                }
                                u.selectAll(".subpath-strands" + r).remove(), u.selectAll(".subpath-strands" + r).data(a).enter().append("path").attr("class", function(e, t) {
                                    return "strandsSubPath subpath-strands" + r + " topo_res_" + e.residue_number
                                }).attr("d", function(e, t) {
                                    return "M " + e.pathData.join(" ") + " Z"
                                }).attr("stroke", "#111").attr("stroke-width", "0").attr("fill", "white").attr("fill-opacity", "0").on("mouseover", function(e) {
                                    n.mouseoverAction(this, e)
                                }).on("mousemove", function(e) {
                                    n.mouseoverAction(this, e)
                                }).on("mouseout", function(e) {
                                    n.mouseoutAction(this, e)
                                }).on("click", function(e) {
                                    n.clickAction(e)
                                })
                            }, i.prototype.drawHelicesSubpaths = function(e, t, r, n) {
                                var i = this;
                                n = 0;
                                var o = 5,
                                    a = n - o;
                                i.scaledPointsArr[3] > i.scaledPointsArr[9] && (a = n + o);
                                var s = t - e + 1;
                                0 === n && (a = 0);
                                var l = (i.scaledPointsArr[9] - a - i.scaledPointsArr[3]) / s;
                                if (0 === n) {
                                    var c = u.select(".helices" + r).node().getBBox().height,
                                        h = c / s;
                                    l = (c - h / 2) / s;
                                    var p = l - h / 10;
                                    i.scaledPointsArr[3] > i.scaledPointsArr[9] && (p = -(c + h / 3))
                                }
                                var d = [],
                                    f = {};
                                if (0 === n)
                                    for (var m = 0; s > m; m++) f = {
                                        type: "helices"
                                    }, 0 === m ? (i.scaledPointsArr[3] > i.scaledPointsArr[9] ? f.residue_number = t : f.residue_number = e, f.pathData = [i.scaledPointsArr[0], i.scaledPointsArr[3] + p, i.scaledPointsArr[4], i.scaledPointsArr[3] + p, i.scaledPointsArr[4], i.scaledPointsArr[3] + p + l, i.scaledPointsArr[0], i.scaledPointsArr[3] + p + l]) : (i.scaledPointsArr[3] > i.scaledPointsArr[9] ? f.residue_number = t - m : f.residue_number = e + m, f.pathData = [d[m - 1].pathData[6], d[m - 1].pathData[7], d[m - 1].pathData[4], d[m - 1].pathData[5], d[m - 1].pathData[4], d[m - 1].pathData[5] + l, d[m - 1].pathData[6], d[m - 1].pathData[5] + l]), d.push(f);
                                else
                                    for (var m = 0; s > m; m++) f = {
                                        type: "helices",
                                        elementIndex: r
                                    }, 0 === m ? (f.residue_number = e, f.pathData = [i.scaledPointsArr[0], i.scaledPointsArr[3] + a / 2, i.scaledPointsArr[4], i.scaledPointsArr[3] + a / 2, i.scaledPointsArr[4], i.scaledPointsArr[3] + l + a / 2, i.scaledPointsArr[0], i.scaledPointsArr[3] + l + a / 2]) : (f.residue_number = e + m, f.pathData = [d[m - 1].pathData[6], d[m - 1].pathData[7], d[m - 1].pathData[4], d[m - 1].pathData[5], d[m - 1].pathData[4], d[m - 1].pathData[5] + l, d[m - 1].pathData[6], d[m - 1].pathData[5] + l]), d.push(f);
                                u.selectAll(".subpath-helices" + r).remove(), u.selectAll(".subpath-helices" + r).data(d).enter().append("path").attr("class", function(e, t) {
                                    return "helicesSubPath subpath-helices" + r + " topo_res_" + e.residue_number
                                }).attr("d", function(e, t) {
                                    return "M" + e.pathData.join(" ") + " Z"
                                }).attr("stroke", "#111").attr("stroke-width", "0").attr("fill", "white").attr("fill-opacity", "0").on("mouseover", function(e) {
                                    i.mouseoverAction(this, e)
                                }).on("mousemove", function(e) {
                                    i.mouseoverAction(this, e)
                                }).on("mouseout", function(e) {
                                    i.mouseoutAction(this, e)
                                }).on("click", function(e) {
                                    i.clickAction(e)
                                })
                            }, i.prototype.drawCoilsSubpaths = function(t, n, i) {
                                var o = this,
                                    a = e.select(".coils" + i),
                                    s = n - t + 1,
                                    l = a.node().getTotalLength(),
                                    c = l / s,
                                    h = [],
                                    p = void 0,
                                    d = void 0,
                                    f = {};
                                if (1 === s) f = {
                                    residue_number: t,
                                    type: "coils",
                                    pathData: o.scaledPointsArr,
                                    elementIndex: i
                                }, h.push(f);
                                else
                                    for (var m = 0; s > m; m++) {
                                        var v = c * (m + 1),
                                            g = a.node().getPointAtLength(v),
                                            y = a.node().getPathSegAtLength(v);
                                        f = {
                                            residue_number: t + m,
                                            type: "coils",
                                            elementIndex: i
                                        }, 1 === y ? f.pathData = o.scaledPointsArr.slice(0, 2) : (void 0 === d ? f.pathData = o.scaledPointsArr.slice(0, 2 * y) : (f.pathData = o.scaledPointsArr.slice(2 * d, 2 * y), f.pathData.unshift(p.x, p.y)), p = g, d = y), f.pathData = f.pathData.concat([g.x, g.y]), h.push(f)
                                    } - 1 !== t && -1 !== n && (u.selectAll(".subpath-coils" + i).remove(), u.selectAll(".subpath-coils" + i).data(h).enter().append("path").attr("class", function(e, t) {
                                        return "coilsSubPath subpath-coils" + i + " topo_res_" + e.residue_number
                                    }).attr("d", function(e, t) {
                                        return "M " + e.pathData.join(" ")
                                    }).attr("stroke", o.defaultColours.borderColor).attr("stroke-width", .3).attr("fill", "none").attr("stroke-opacity", "1").on("mouseover", function(e) {
                                        o.mouseoverAction(this, e)
                                    }).on("mousemove", function(e) {
                                        o.mouseoverAction(this, e)
                                    }).on("mouseout", function(e) {
                                        o.mouseoutAction(this, e)
                                    }).on("click", function(e) {
                                        o.clickAction(e)
                                    }), u.selectAll(".coils" + i).attr("stroke-opacity", 0));
                                var b = this.apiResult.data[r.entryId].topology[r.entityId][r.bestChainId].terms,
                                    x = this.apiResult.data[r.entryId].topology[r.entityId][r.bestChainId].coils.length;
                                if (0 === i) u.selectAll(".terminal_N").remove(), u.selectAll(".terminal_N").data([b[0]]).enter().append("text").attr("class", "terminals terminal_N").attr("text-anchor", "middle").text("N").attr("x", h[0].pathData[0]).attr("y", h[0].pathData[1]).attr("stroke", "#0000ff").attr("stroke-width", "0.3").attr("font-size", 3 * o.zoom.scale() + "px").attr("style", "-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; line-height: normal; font-family: Arial;");
                                else if (i === x - 1) {
                                    var _ = h[s - 1].pathData.length,
                                        w = -2;
                                    h[s - 1].pathData[_ - 1] > h[s - 1].pathData[_ - 3] && (w = 2), u.selectAll(".terminal_C").remove(), u.selectAll(".terminal_C").data([b[1]]).enter().append("text").attr("class", "terminals terminal_N").attr("text-anchor", "middle").text("C").attr("x", h[s - 1].pathData[_ - 2]).attr("y", h[s - 1].pathData[_ - 1] + w).attr("stroke", "#ff0000").attr("stroke-width", "0.3").attr("font-size", 3 * o.zoom.scale() + "px").attr("style", "-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: middle; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; line-height: normal; font-family: Arial;")
                                }
                            }, i.prototype.drawStrandMaskShape = function(e) {
                                var t = this,
                                    r = t.scaledPointsArr,
                                    n = .3,
                                    i = [7, 8, 10, 12],
                                    o = [0, 1, 2, 3, 4, 5, 9, 11, 13];
                                r[0] > r[6] && (i = [0, 1, 2, 3, 4, 5, 9, 11, 13], o = [7, 8, 10, 12]);
                                for (var a = i.length, s = 0; a > s; s++) r[i[s]] = r[i[s]] + n;
                                for (var l = o.length, c = 0; l > c; c++) r[o[c]] = r[o[c]] - n;
                                r[14] = r[8], r[15] = r[13], r[16] = r[8], r[17] = r[7], r[18] = r[4], r[19] = r[7], r[20] = r[4], r[21] = r[1], u.selectAll(".maskpath-strands" + e).remove(), u.selectAll(".maskpath-strands" + e).data([r]).enter().append("path").attr("class", function(t, r) {
                                    return "strandMaskPath maskpath-strands" + e
                                }).attr("d", function(e, t) {
                                    return "M" + r.join(" ") + "Z"
                                }).attr("stroke", "#111").attr("stroke-width", .3).attr("fill", "white").attr("stroke-opacity", 0)
                            }, i.prototype.drawHelicesMaskShape = function(e) {
                                var t = .3,
                                    r = [
                                        [this.scaledPointsArr[0] - t, this.scaledPointsArr[1], this.scaledPointsArr[2], this.scaledPointsArr[3] - t, this.scaledPointsArr[4] + t, this.scaledPointsArr[5], this.scaledPointsArr[4] + t, this.scaledPointsArr[3], this.scaledPointsArr[0] - t, this.scaledPointsArr[3]],
                                        [this.scaledPointsArr[6] + t, this.scaledPointsArr[7], this.scaledPointsArr[8], this.scaledPointsArr[9] + t, this.scaledPointsArr[10] - t, this.scaledPointsArr[11], this.scaledPointsArr[10] - t, this.scaledPointsArr[9], this.scaledPointsArr[6] + t, this.scaledPointsArr[9]]
                                    ];
                                this.scaledPointsArr[3] > this.scaledPointsArr[9] && (r = [
                                    [this.scaledPointsArr[0] - t, this.scaledPointsArr[1], this.scaledPointsArr[2], this.scaledPointsArr[3] + 2, this.scaledPointsArr[4] + t, this.scaledPointsArr[5], this.scaledPointsArr[4] + t, this.scaledPointsArr[3], this.scaledPointsArr[0] - t, this.scaledPointsArr[3]],
                                    [this.scaledPointsArr[6] + t, this.scaledPointsArr[7], this.scaledPointsArr[8], this.scaledPointsArr[9] - t, this.scaledPointsArr[10] - t, this.scaledPointsArr[11], this.scaledPointsArr[10] - t, this.scaledPointsArr[9], this.scaledPointsArr[6] + t, this.scaledPointsArr[9]]
                                ]), u.selectAll(".maskpath-helices" + e).remove(), u.selectAll(".maskpath-helices" + e).data(r).enter().append("path").attr("class", function(t, r) {
                                    return "helicesMaskPath maskpath-helices" + e
                                }).attr("d", function(e, t) {
                                    return "M" + e[0] + " " + e[1] + " Q" + e[2] + " " + e[3] + " " + e[4] + " " + e[5] + " L" + e[6] + " " + e[7] + " " + e[8] + " " + e[9] + " Z"
                                }).attr("stroke", "#111").attr("stroke-width", .3).attr("fill", "white").attr("stroke-opacity", 0)
                            }, i.prototype.renderTooltip = function(t, r) {
                                if ("show" === r) {
                                    var n = e.event.pageX,
                                        i = e.event.pageY,
                                        o = "Residue " + t.residue_number + " (" + this.sequenceArr[t.residue_number - 1] + ")";
                                    "undefined" != typeof t.tooltipMsg && (o = "undefined" != typeof t.tooltipPosition && "postfix" === t.tooltipPosition ? o + " " + t.tooltipMsg : t.tooltipMsg + " " + o), l.html(o).style("display", "block").style("top", i + 15 + "px").style("left", n + 10 + "px")
                                } else l.style("display", "none")
                            }, i.prototype.dispatchEvent = function(e, t, n) {
                                var i = o[0];
                                "undefined" != typeof n && (i = n), "undefined" != typeof t && (r.pdbevents[e].eventData = t), i.dispatchEvent(r.pdbevents[e])
                            }, i.prototype.clickAction = function(e) {
                                this.dispatchEvent("PDB.topologyViewer.click", {
                                    residueNumber: e.residue_number,
                                    type: e.type,
                                    entryId: r.entryId,
                                    entityId: r.entityId,
                                    chainId: r.bestChainId,
                                    structAsymId: r.bestStructAsymId
                                })
                            }, i.prototype.mouseoverAction = function(t, n) {
                                var i = e.select(t);
                                this.renderTooltip(n, "show"), ("strands" === n.type || "helices" === n.type) && i.attr("fill", this.defaultColours.mouseOver).attr("fill-opacity", "0.3"), "coils" === n.type && i.attr("stroke", this.defaultColours.mouseOver).attr("stroke-width", 1), this.dispatchEvent("PDB.topologyViewer.mouseover", {
                                    residueNumber: n.residue_number,
                                    type: n.type,
                                    entryId: r.entryId,
                                    entityId: r.entityId,
                                    chainId: r.bestChainId,
                                    structAsymId: r.bestStructAsymId
                                })
                            }, i.prototype.mouseoutAction = function(t, n) {
                                var i = "none",
                                    o = 0,
                                    a = .3,
                                    s = e.select(t);
                                this.renderTooltip("", "hide"), s.classed("coloured") ? (i = s.attr("data-color"), o = 1, a = 1) : "coils" === n.type && (i = this.defaultColours.borderColor), ("strands" === n.type || "helices" === n.type) && s.attr("fill", i).attr("fill-opacity", o), "coils" === n.type && s.attr("stroke", i).attr("stroke-width", a), this.dispatchEvent("PDB.topologyViewer.mouseout", {
                                    entryId: r.entryId,
                                    entityId: r.entityId,
                                    chainId: r.bestChainId,
                                    structAsymId: r.bestStructAsymId
                                })
                            }, i.prototype.drawTopologyStructures = function() {
                                var t = this;
                                this.getDomainRange(), this.scaledPointsArr = [], u.call(t.zoom), angular.forEach(this.apiResult.data[r.entryId].topology[r.entityId][r.bestChainId], function(e, r) {
                                    angular.forEach(e, function(e, n) {
                                        if ("undefined" != typeof e.path && e.path.length > 0)
                                            if ("terms" === r);
                                            else {
                                                var i = 0;
                                                if ("helices" === r) {
                                                    var a = e.path[0] + (e.path[2] - e.path[0]) / 2;
                                                    i = 2 * (1.3 * e.minoraxis), e.path[1] > e.path[3] && (i = -2 * (1.3 * e.minoraxis));
                                                    var s = [e.path[0], e.path[1], a, e.path[1] - i, e.path[2], e.path[1], e.path[2], e.path[3], a, e.path[3] + i, e.path[0], e.path[3]];
                                                    e.path = s
                                                }
                                                e.secStrType = r, e.pathIndex = n;
                                                var l = u.selectAll("path." + r + n).data([e]).enter().append("path").attr("class", function() {
                                                    return -1 === e.start && -1 === e.stop && "terms" !== r ? "dashedEle topologyEle " + r + " " + r + n + " topoEleRange_" + e.start + "-" + e.stop : "topologyEle " + r + " " + r + n + " topoEleRange_" + e.start + "-" + e.stop
                                                }).attr("d", function(n) {
                                                    for (var i = "M", o = e.path.length, a = !0, s = 0; o > s; s++) {
                                                        if ("helices" !== r || 2 !== s && 8 !== s || (i += " Q"), ("helices" === r && 6 === s || "coils" === r && e.path.length < 12 && 8 === s) && (i += " L"), a) {
                                                            var u = t.xScale(e.path[s]);
                                                            i += " " + u, t.scaledPointsArr.push(u)
                                                        } else {
                                                            var l = t.yScale(e.path[s]);
                                                            i += " " + l, t.scaledPointsArr.push(l)
                                                        }
                                                        a = !a
                                                    }
                                                    return ("strands" === r || "helices" === r) && (i += " Z"), i
                                                }).attr("fill", "none").attr("stroke-width", .3).attr("stroke", t.defaultColours.borderColor); - 1 === e.start && -1 === e.stop && l.attr("stroke-dasharray", "0.9"), "strands" === r && (t.drawStrandSubpaths(e.start, e.stop, n), t.drawStrandMaskShape(n), angular.element(o[0].querySelector(".topoSvg")).append(l.node())), "helices" === r && (t.drawHelicesSubpaths(e.start, e.stop, n, i), t.drawHelicesMaskShape(n), angular.element(o[0].querySelector(".topoSvg")).append(l.node())), "coils" === r && t.drawCoilsSubpaths(e.start, e.stop, n), t.scaledPointsArr = []
                                            }
                                    })
                                }), angular.element(o[0].querySelector(".topoSvg")).append(e.selectAll(".validationResidue").node())
                            }, i.prototype.zoomDraw = function(t) {
                                var r = this;
                                r.scaledPointsArr = [];
                                var n = u.selectAll(".topologyEle"),
                                    i = 0,
                                    a = 0,
                                    s = 0,
                                    l = 0;
                                n.each(function(t) {
                                    e.select(e.select(this).node()).attr("d", function(e) {
                                        i = e.pathIndex, a = e.start, s = e.stop;
                                        for (var t = "M", n = e.path.length, o = !0, u = 0; n > u; u++) {
                                            if ("helices" !== e.secStrType || 2 !== u && 8 !== u || (t += " Q"), ("helices" === e.secStrType && 6 === u || "coils" === e.secStrType && e.path.length < 12 && 8 === u) && (t += " L"), o) {
                                                var l = r.xScale(e.path[u]);
                                                t += " " + l, r.scaledPointsArr.push(l)
                                            } else {
                                                var c = r.yScale(e.path[u]);
                                                t += " " + c, r.scaledPointsArr.push(c)
                                            }
                                            o = !o
                                        }
                                        return ("strands" === e.secStrType || "helices" === e.secStrType) && (t += " Z"), t
                                    }), "helices" === t.secStrType ? (r.drawHelicesSubpaths(a, s, i, l), r.drawHelicesMaskShape(i), angular.element(o[0].querySelector(".topoSvg")).append(e.select(this).node())) : "strands" === t.secStrType ? (r.drawStrandSubpaths(a, s, i), r.drawStrandMaskShape(i), angular.element(o[0].querySelector(".topoSvg")).append(e.select(this).node())) : "coils" === t.secStrType && r.drawCoilsSubpaths(a, s, i), r.scaledPointsArr = []
                                });
                                var c = 0;
                                u.selectAll(".validationResidue").attr("transform", function(e) {
                                    var t = u.select(".topo_res_" + e.residue_number),
                                        r = t.node().getBBox(),
                                        n = t.data(),
                                        i = {
                                            x: 0,
                                            y: 0
                                        };
                                    if ("strands" === n[0].type || "helices" === n[0].type) i = {
                                        x: r.x + r.width / 2,
                                        y: r.y + r.height / 2
                                    };
                                    else {
                                        var o = t.node().getPointAtLength(t.node().getTotalLength() / 2);
                                        i = {
                                            x: o.x,
                                            y: o.y
                                        }
                                    }
                                    return c = r.height / 2, "translate(" + i.x + "," + i.y + ")"
                                }).attr("d", e.svg.symbol().type("circle").size(c)), u.selectAll(".residueSelection").attr("d", function(t) {
                                    return u.select(".topo_res_" + e.select(this).data()[0].residueNumber).attr("d")
                                }), angular.element(o[0].querySelector(".topoSvg")).append(angular.element(o[0].querySelectorAll(".coilsSubPath"))), angular.element(o[0].querySelector(".topoSvg")).append(angular.element(o[0].querySelectorAll(".dashedEle"))), this.highlightDomain("zoom"), angular.element(o[0].querySelector(".topoSvg")).append(angular.element(o[0].querySelectorAll(".validationResidue"))), angular.element(o[0].querySelector(".topoSvg")).append(angular.element(o[0].querySelectorAll(".residueSelection")))
                            }, i.prototype.changeResidueColor = function(e, t, r, n) {
                                "undefined" == typeof t && (t = this.defaultColours.domainSelection);
                                var i = u.select(".topo_res_" + e);
                                null != i[0][0] && (i.data()[0].tooltipMsg = r, i.data()[0].tooltipPosition = n, i.attr("stroke", function(e) {
                                    return "coils" === e.type ? t : "#111"
                                }).attr("stroke-width", function(e) {
                                    return "coils" === e.type ? 1 : 0
                                }).attr("fill", function(e) {
                                    return "coils" === e.type ? "none" : t
                                }).attr("fill-opacity", function(e) {
                                    return "coils" === e.type ? 0 : 1
                                }).classed("coloured", !0).attr("data-color", t))
                            }, i.prototype.showSelectionArea = function(t, r, n, i) {
                                var o = this,
                                    a = "#000000",
                                    s = "#000000",
                                    l = "residueSelection";
                                "mouseover" == i && (a = "#000000", s = "#000000", l = "residueHighlight");
                                var c = .3,
                                    h = 0;
                                "undefined" != typeof r && r !== !0 && u.selectAll("." + l).remove();
                                var p = u.select(".topo_res_" + t);
                                if (null != p[0][0]) {
                                    var d = p.node(),
                                        f = p.data();
                                    "strands" === f[0].type || "helices" === f[0].type ? "undefined" != typeof n && (s = a = e.rgb(n[0], n[1], n[2])) : ("undefined" != typeof n && (s = e.rgb(n[0], n[1], n[2])), a = "none", c = 2, h = .5), u.append("path").data([{
                                        residueNumber: t
                                    }]).attr("class", function(e) {
                                        return "mouseover" == i ? "residueHighlight highlightResidue_" + t : "residueSelection seletectedResidue_" + t
                                    }).attr("d", p.attr("d")).attr("fill", a).attr("fill-opacity", .5).attr("stroke", s).attr("stroke-opacity", h).attr("stroke-width", c).on("mouseover", function(e) {
                                        o.mouseoverAction(d, f[0])
                                    }).on("mousemove", function(e) {
                                        o.mouseoverAction(d, f[0])
                                    }).on("mouseout", function(e) {
                                        o.mouseoutAction(d, f[0])
                                    }).on("click", function(e) {
                                        o.clickAction(f[0])
                                    })
                                }
                            }, i.prototype.drawValidationShape = function(t, r, n) {
                                var i = this,
                                    o = u.select(".topo_res_" + t);
                                if (null != o[0][0]) {
                                    var a = o.node().getBBox(),
                                        s = o.data(),
                                        l = {
                                            x: 0,
                                            y: 0
                                        };
                                    if ("strands" === s[0].type || "helices" === s[0].type) l = {
                                        x: a.x + a.width / 2,
                                        y: a.y + a.height / 2
                                    };
                                    else {
                                        var c = o.node().getPointAtLength(o.node().getTotalLength() / 2);
                                        l = {
                                            x: c.x,
                                            y: c.y
                                        }
                                    }
                                    var h = {
                                        residue_number: t,
                                        tooltipMsg: "Validation issue: RSRZ <br>",
                                        tooltipPosition: "prefix"
                                    };
                                    u.append("path").attr("class", "validationResidue rsrz_" + t).data([h]).attr("fill", n).attr("stroke", "#000").attr("stroke-width", .3).attr("transform", function(e) {
                                        return "translate(" + l.x + "," + l.y + ")"
                                    }).attr("d", e.svg.symbol().type(r).size(a.height / 2)).style("display", "none").on("mouseover", function(e) {
                                        i.mouseoverAction(this, e)
                                    }).on("mousemove", function(e) {
                                        i.mouseoverAction(this, e)
                                    }).on("mouseout", function(e) {
                                        i.mouseoutAction(this, e)
                                    }).on("click", function(e) {
                                        i.clickAction(e)
                                    })
                                }
                            }, i.prototype.highlightResidues = function(e) {
                                var t = this;
                                angular.forEach(e, function(e, r) {
                                    for (var n = e.start; n <= e.end; n++) t.changeResidueColor(n, e.color, e.tooltipMsg, e.tooltipPosition)
                                })
                            }, i.prototype.getAnnotationFromMappings = function() {
                                for (var e = this.apiResult.data[r.entryId].mappings, t = ["UniProt", "CATH", "Pfam", "SCOP"], n = 0; 3 > n; n++)
                                    if ("undefined" != typeof e[t[n]] && !angular.equals({}, e[t[n]])) {
                                        var i = [];
                                        angular.forEach(e[t[n]], function(e, t) {
                                            angular.forEach(e.mappings, function(e, t) {
                                                e.entity_id == r.entityId && e.chain_id == r.bestChainId && i.push({
                                                    start: e.start.residue_number,
                                                    end: e.end.residue_number,
                                                    color: void 0
                                                })
                                            })
                                        }), i.length > 0 && r.domainTypes.push({
                                            label: t[n],
                                            data: i
                                        })
                                    }
                            }, i.prototype.getChainStartAndEnd = function() {
                                for (var e = this.apiResult.data[r.entryId].polymerCoveragePerChain.molecules[0].chains, t = {
                                        start: 0,
                                        end: 0
                                    }, n = e.length, i = 0; n > i; i++)
                                    if (e[i].chain_id == r.bestChainId) {
                                        angular.forEach(e[i].observed, function(e, r) {
                                            0 == r ? (t.start = e.start.residue_number, t.end = e.end.residue_number) : (e.start.residue_number < t.start && (t.start = e.start.residue_number), e.end.residue_number > t.end && (t.end = e.end.residue_number))
                                        });
                                        break
                                    }
                                return t
                            }, i.prototype.getAnnotationFromOutliers = function() {
                                var e = this,
                                    t = this.getChainStartAndEnd(),
                                    n = [{
                                        start: t.start,
                                        end: t.end,
                                        color: e.defaultColours.qualityGreen,
                                        tooltipMsg: "No validation issue reported for "
                                    }],
                                    i = [],
                                    o = [0],
                                    a = this.apiResult.data[r.entryId].outliers;
                                "undefined" != typeof a && "undefined" != typeof a.molecules && a.molecules.length > 0 && (angular.forEach(a.molecules, function(t, a) {
                                    t.entity_id == r.entityId && angular.forEach(t.chains, function(t, a) {
                                        t.chain_id == r.bestChainId && angular.forEach(t.models, function(t, r) {
                                            angular.forEach(t.residues, function(t, r) {
                                                var a = e.defaultColours.qualityYellow,
                                                    s = "issue";
                                                if (1 === t.outlier_types.length && "RSRZ" === t.outlier_types[0]) {
                                                    a = e.defaultColours.qualityRed, e.drawValidationShape(t.residue_number, "circle", a), i.push(t.residue_number);
                                                    var u = o.indexOf(t.residue_number);
                                                    return void(u > -1 ? n[u].tooltipMsg = n[u].tooltipMsg.replace("<br>", ", RSRZ<br>") : (n.push({
                                                        start: parseInt(t.residue_number),
                                                        end: parseInt(t.residue_number),
                                                        color: e.defaultColours.qualityGreen,
                                                        tooltipMsg: "Validation issue: RSRZ <br>",
                                                        tooltipPosition: "prefix"
                                                    }), o.push(t.residue_number)))
                                                }
                                                1 === t.outlier_types.length ? a = e.defaultColours.qualityYellow : 2 === t.outlier_types.length ? (a = e.defaultColours.qualityOrange, s = "issues") : (a = e.defaultColours.qualityRed, s = "issues"), o.push(t.residue_number);
                                                var l = "Validation " + s + ": " + t.outlier_types.join(", ") + "<br>",
                                                    c = i.indexOf(t.residue_number);
                                                c > -1 && (l = "Validation issues: " + t.outlier_types.join(", ") + ", RSRZ<br>"), n.push({
                                                    start: parseInt(t.residue_number),
                                                    end: parseInt(t.residue_number),
                                                    color: a,
                                                    tooltipMsg: l,
                                                    tooltipPosition: "prefix"
                                                })
                                            })
                                        })
                                    })
                                }), n.length > 0 && r.domainTypes.push({
                                    label: "Quality",
                                    data: n
                                }))
                            }, i.prototype.clearHighlight = function(t) {
                                var r = this;
                                u.selectAll(".coloured").each(function(t) {
                                    var n = e.select(this),
                                        i = n.node();
                                    n.data()[0].tooltipMsg = void 0, n.data()[0].tooltipPosition = void 0;
                                    var o = e.select(i).classed("coloured", !1),
                                        a = o.attr("class").split(" ");
                                    a.indexOf("strandsSubPath") > -1 || a.indexOf("helicesSubPath") > -1 ? o.attr("fill", "none").attr("fill-opacity", 0) : o.attr("stroke", r.defaultColours.borderColor).attr("stroke-width", .3)
                                }), u.selectAll(".validationResidue").style("display", "none")
                            }, i.prototype.highlightDomain = function(e) {
                                null !== r.selectedDomain.data ? (this.clearHighlight(), this.highlightResidues(r.selectedDomain.data), "Quality" === r.selectedDomain.label && u.selectAll(".validationResidue").style("display", "block")) : "zoom" !== e && this.clearHighlight()
                            }, i.prototype.createDomainDropdown = function() {
                                this.getAnnotationFromMappings(), this.getAnnotationFromOutliers(), r.selectedDomain = r.domainTypes[0], r.showLoader = !1, r.$apply()
                            }, i
                        }(),
                        h = new c;
                    if (r.highlightDomain = function() {
                            h.highlightDomain()
                        }, r.clearSelectionAndHighlight = function() {
                            s.selectAll(".residueHighlight").remove(), s.selectAll(".residueSelection").remove()
                        }, "true" == r.subscribeEvents) {
                        var p = ["uniprot", "pfam", "cath", "scop", "strand", "helice"],
                            d = ["chain", "quality", "quality_outlier", "binding site", "alternate conformer"];
                        i.on("PDB.seqViewer.click", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != r.entryId || e.eventData.entityId != r.entityId || "unipdbViewer" == e.eventData.viewerType) return;
                                if ("undefined" != typeof e.eventData.elementData && d.indexOf(e.eventData.elementData[0].elementType) > -1) {
                                    if (e.eventData.elementData[0].pathData.chain_id != r.bestChainId) return;
                                    h.showSelectionArea(e.eventData.residueNumber, !1, void 0, "click")
                                } else if ("undefined" != typeof e.eventData.elementData && p.indexOf(e.eventData.elementData[0].elementType) > -1)
                                    for (var t = e.eventData.elementData[0].pathData.start.residue_number, n = e.eventData.elementData[0].pathData.end.residue_number, i = t; n >= i; i++) {
                                        var o = !0;
                                        i == t && (o = !1), h.showSelectionArea(i, o, e.eventData.elementData[0].color, "click")
                                    }
                            }
                        }), i.on("PDB.seqViewer.mouseover", function(e) {
                            if ("undefined" != typeof e.eventData) {
                                if (e.eventData.entryId != r.entryId || e.eventData.entityId != r.entityId || "unipdbViewer" == e.eventData.viewerType) return;
                                if ("undefined" != typeof e.eventData.elementData && d.indexOf(e.eventData.elementData[0].elementType) > -1) {
                                    if (e.eventData.elementData[0].pathData.chain_id != r.bestChainId) return;
                                    h.showSelectionArea(e.eventData.residueNumber, !1, void 0, "mouseover")
                                } else if ("undefined" != typeof e.eventData.elementData && p.indexOf(e.eventData.elementData[0].elementType) > -1)
                                    for (var t = e.eventData.elementData[0].pathData.start.residue_number, n = e.eventData.elementData[0].pathData.end.residue_number, i = t; n >= i; i++) {
                                        var o = !0;
                                        i == t && (o = !1), h.showSelectionArea(i, o, e.eventData.elementData[0].color, "mouseover")
                                    }
                            }
                        }), i.on("PDB.seqViewer.mouseout", function(e) {
                            u.selectAll(".residueHighlight").remove()
                        }), i.on("PDB.litemol.mouseover", function(e) {
                            if (s.selectAll(".residueHighlight").remove(), "undefined" != typeof e.eventData && !angular.equals({}, e.eventData)) {
                                if (e.eventData.entryId.toLowerCase() != r.entryId.toLowerCase() || e.eventData.entityId != r.entityId) return;
                                if (e.eventData.chainId.toLowerCase() != r.bestChainId.toLowerCase()) return;
                                h.showSelectionArea(e.eventData.residueNumber, !1, void 0, "mouseover")
                            }
                        }), i.on("PDB.litemol.click", function(e) {
                            if (s.selectAll(".residueSelection").remove(), "undefined" != typeof e.eventData && !angular.equals({}, e.eventData)) {
                                if (e.eventData.entryId.toLowerCase() != r.entryId.toLowerCase() || e.eventData.entityId != r.entityId) return;
                                if (e.eventData.chainId.toLowerCase() != r.bestChainId.toLowerCase()) return;
                                h.showSelectionArea(e.eventData.residueNumber, !1, void 0, "click")
                            }
                        })
                    }
                }
            }
        }])
    }(), angular.module("template/topologyViewer/topologyViewer.html", []).run(["$templateCache", function(e) {
        e.put("template/topologyViewer/topologyViewer.html", '<div class="topologyViewerWrapper" ng-style="styles.wrapper" ><div class="topologyViewLoader" ng-style="styles.loader" ng-show="showLoader"><img ng-src="//www.ebi.ac.uk/pdbe/widgets/html/loading.gif" border="0" ng-style="styles.loaderImg" /></div><div class="topologyViewLoader" ng-style="styles.errorMsg" ng-show="showErrorMessage"><span ng-style="styles.errorMsgSpan">{{errorMessage}}</span></div><div ng-style="styles.topoSvgWrapper"><svg class="topoSvg" ng-style="styles.topoSvg" ></svg></div><div ng-style="styles.bottomMenu">{{entryId}}:{{bestChainId}}&nbsp;<select ng-style="styles.bottomMenuSelectBox" ng-model="selectedDomain" ng-options="domainType as domainType.label for domainType in domainTypes" ng-change="highlightDomain()"></select><span ng-click="clearSelectionAndHighlight()" class="topologyRefreshIcon icon-black" data-icon="R" title="Clear Highlight / Selection"></span></div></div>')
    }]), angular.module("pdb.component.library.tpls", ["template/prints/pdbLogos.html", "template/sequenceView/pdb.html", "template/sequenceView/uniPdb.html", "template/pdbRedo/pdbRedo.html", "template/topologyViewer/topologyViewer.html", "template/pdbResidueInteractions/pdbResidueInteractions.html", "template/pdb3dComplex/pdb3dComplex.html"]), angular.module("pdb.component.library", ["pdb.component.library.tpls", "pdb.litemol", "pdb.prints", "pdb.sequence.view", "pdb.redo", "pdb.topology.viewer", "pdb.residue.interactions", "pdb.links", "pdb.3dComplex"]);
